Search.setIndex({"docnames": ["a-coop-coding-bootcamp", "airflow-python-etl", "all_files", "alternatives-to-pandas-python-polars", "basic-command-line-skills-to-rock-your-development-world", "beautiful-documentation-with-jupyterbook", "benchmarking-python-and-rust-async-web-server-performance", "boolean-expressions-python", "building-a-docker-golang-container", "career-paths-for-python-programmers", "category-c-and-cplusplus", "category-docker", "category-jupyter", "category-learn-to-code", "category-math", "category-math-and-math-software", "category-miscellaneous", "category-newsletter", "category-pandas", "category-python", "category-python-for-beginners-posts", "category-python-functions", "category-python-math-and-science", "category-python-practice", "category-python-tools", "chemists-strongly-addicted-to-python", "cmake-starter-project", "code-pride-is-the-best-medicine", "codesolid-newsletter-11-29-2022", "codesolid-newsletter-12-13-2022", "codesolid-newsletter-november-1-2022", "codesolid-newsletter-october-25-2022", "codesolid-python-newsletter-december-28-2022", "cognitive_science/OnReadingConsciousnessExplained", "cognitive_science/Resources", "cognitive_science/SynapsesNeuronsAndBrainsNotes", "cognitive_science/SynapseseNeuronsAndBrainsReviewNotes", "cognitive_science/TheSecretLifeOfTheMind", "cognitive_science/index", "conda-vs-pip", "cpp-dev-containers", "creating-a-python-interactive-plot", "data-cleaning-in-pandas", "debugging-python-in-vs-code", "directoryinfo-example", "dunder-methods-in-python-the-ugliest-awesome-sauce", "exploring-python-objects-with-the-dir-and-type-functions", "featured", "finding-duplicates-in-a-list-in-python", "getting-started-with-python-classes", "getting-things-done-with-dendron-and-vs-code-first-look", "getting-things-done-with-github-markdown-and-visual-studio-code", "google-sheets-in-python-and-pandas", "how-do-i-profile-python-code", "how-to-compare-python-dictionaries", "how-to-convert-a-string-to-datetime-in-python", "how-to-install-pip-and-conda-on-the-same-machine", "how-to-learn-to-program", "how-to-practice-python", "how-to-practice-python-data-science-and-pandas", "how-to-separate-tests-and-source-for-python-tests", "how-to-use-docker-with-python", "how-to-visualize-data-using-pandas", "index", "installing-a-python-and-git-development-environment-on-windows-part-2", "installing-a-python-development-environment-on-windows", "installing-pyenv-on-a-mac", "introducing-sage-math-python-based-mathematics", "is-python-free-with-list-of-tools", "is-python-slow", "julia-vs-python-now-for-something-completely-different", "jupyter-lite-python-in-the-browser-with-serverless-jupyter", "jupyter-notebook-a-complete-introduction", "jupyter-password", "kaggle-datasets", "large-data-sets-in-python-pandas-and-the-alternatives", "learn-python", "learning-c-and-python-the-perfect-duo-for-success", "learning-git-what-to-know-when-youre-a-beginner", "mastering-the-take-home-coding-exercise-final-steps", "math/Journal", "math/conics-review-with-sympy", "math/exploring_basic_number_theory_in_python", "math/matplotlib_basics", "math/scratch/scratch", "math/sympy_geometry", "math/taking-calculus-in-your-sixties", "matplotlib-coordinates-toward-a-python-graphing-calculator", "matplotlib-vs-seaborn", "middle-way-of-software-development", "mystnb-template", "new-for-2022-python-git-github-bootcamp-course", "newsletter-11-15-2022", "newsletter-january-17-2023", "node-starter-projects", "notes-on-using-postgres-python-and-docker", "numpy-practice-questions-to-make-you-an-expert", "optimizing-aws-s3-uploads-with-golang-and-goroutines", "pandas-groupby", "pandas-practice-examples", "pip-vs-conda-two-top-tools-for-managing-python-packages", "pip-vs-pipenv-which-is-better-and-which-to-learn-first", "programming-and-math-a-brief-translation-guide", "pycharm-vs-vs-code", "pypy-first-look-a-faster-version-of-python", "python-and-aws-getting-started-with-the-cloud-development-kit-cdk", "python-and-aws-lambda-functions", "python-and-react-running-python-online-in-a-react-app", "python-boot-camp-a-co-operative-approach", "python-chemistry", "python-configuration", "python-data-analysis-starter-project", "python-dataclasses", "python-date-tutorial", "python-dictionaries-with-exercises", "python-docker-examples-sagemath-in-a-container", "python-errors", "python-files-from-beginner-to-expert", "python-for-loop-a-complete-tutorial-with-exercises", "python-format-strings", "python-function-arguments-and-parameters-examples", "python-function-best-practices", "python-function-exercises", "python-functions", "python-generators-questions-and-answers", "python-hobbyist-to-professional", "python-indexing-slicing-exercises", "python-json-easily-work-with-dictionaries-files-and-custom-objects", "python-lists", "python-lists-vs-arrays", "python-matrix-multiplication", "python-newsletter-february-22-2023", "python-newsletter-january-31-2023", "python-on-docker-practice-ideas", "python-operators", "python-package-example-setuptools", "python-postgres-and-docker-running-fast-meaningful-unit-tests", "python-practice-projects", "python-pyarrow-and-parquet", "python-shell-programming", "python-string-examples-tutorial-and-practice-exercises", "python-virtual-environments-video-tutorial", "python-vs-matlab", "python-with-using-and-writing-context-managers-in-python", "random-python-secrets-and-random-values-made-easy", "recovery/CharlotteSecularSobriety", "recovery/JudgementsInSobriety", "recovery/OutlineForProgramOrFellowship", "recovery/index", "run-python-online-with-jupyterlite", "running-the-cmake-tutorial-in-a-vs-code-dev-container", "scipy-vs-sympy-for-symbolic-math-let-us-never-speak-of-this-again", "selecting-data-in-pandas", "simplicity-is-your-friend-python-vs-vs-code-for-teaching-software", "socialmedia/FirstPrinciplesOfProductiveMinimalism", "socialmedia/GivingUpSocialMediaReviewOne", "socialmedia/MindfulnessVersusTechnology", "socialmedia/SocialMediaWithdrawal", "socialmedia/TopMistakesInGivingUpSocialMedia", "socialmedia/index", "sql-with-pandas", "sqlalchemy-dataclass-example", "sympy-solving-math-equations-in-python", "teach-yourself-math", "test-dir", "the-function-in-python-introductory-tutorial", "the-marketing-genius-of-100-days-of-code", "thonny-the-most-beginner-friendly-python-ide", "understanding-python-types-and-type-hints", "useful-collection-classes-in-python-you-may-not-know", "using-latex-in-python", "using-pyspark-and-parquet", "using-testng-with-spring", "vagrant-ansible-local", "what-are-those-pyc-files-in-a-python-project", "what-is-a-python-package", "wherein-i-make-an-account-of-my-whereabouts", "why-is-python-popular", "worlds-oldest-math-major", "writing-a-python-custom-exception", "your-first-development-job", "your-first-programming-language-should-be-python-not-javascript", "zen-of-100-days-of-python"], "filenames": ["a-coop-coding-bootcamp.md", "airflow-python-etl.md", "all_files.rst", "alternatives-to-pandas-python-polars.md", "basic-command-line-skills-to-rock-your-development-world.md", "beautiful-documentation-with-jupyterbook.md", "benchmarking-python-and-rust-async-web-server-performance.md", "boolean-expressions-python.md", "building-a-docker-golang-container.md", "career-paths-for-python-programmers.md", "category-c-and-cplusplus.rst", "category-docker.rst", "category-jupyter.rst", "category-learn-to-code.rst", "category-math.rst", "category-math-and-math-software.rst", "category-miscellaneous.rst", "category-newsletter.rst", "category-pandas.rst", "category-python.rst", "category-python-for-beginners-posts.rst", "category-python-functions.rst", "category-python-math-and-science.rst", "category-python-practice.rst", "category-python-tools.rst", "chemists-strongly-addicted-to-python.md", "cmake-starter-project.md", "code-pride-is-the-best-medicine.md", "codesolid-newsletter-11-29-2022.md", "codesolid-newsletter-12-13-2022.md", "codesolid-newsletter-november-1-2022.md", "codesolid-newsletter-october-25-2022.md", "codesolid-python-newsletter-december-28-2022.md", "cognitive_science/OnReadingConsciousnessExplained.md", "cognitive_science/Resources.md", "cognitive_science/SynapsesNeuronsAndBrainsNotes.md", "cognitive_science/SynapseseNeuronsAndBrainsReviewNotes.md", "cognitive_science/TheSecretLifeOfTheMind.md", "cognitive_science/index.rst", "conda-vs-pip.md", "cpp-dev-containers.md", "creating-a-python-interactive-plot.md", "data-cleaning-in-pandas.md", "debugging-python-in-vs-code.md", "directoryinfo-example.md", "dunder-methods-in-python-the-ugliest-awesome-sauce.md", "exploring-python-objects-with-the-dir-and-type-functions.md", "featured.rst", "finding-duplicates-in-a-list-in-python.md", "getting-started-with-python-classes.md", "getting-things-done-with-dendron-and-vs-code-first-look.md", "getting-things-done-with-github-markdown-and-visual-studio-code.md", "google-sheets-in-python-and-pandas.md", "how-do-i-profile-python-code.md", "how-to-compare-python-dictionaries.md", "how-to-convert-a-string-to-datetime-in-python.md", "how-to-install-pip-and-conda-on-the-same-machine.md", "how-to-learn-to-program.md", "how-to-practice-python.md", "how-to-practice-python-data-science-and-pandas.md", "how-to-separate-tests-and-source-for-python-tests.md", "how-to-use-docker-with-python.md", "how-to-visualize-data-using-pandas.md", "index.rst", "installing-a-python-and-git-development-environment-on-windows-part-2.md", "installing-a-python-development-environment-on-windows.md", "installing-pyenv-on-a-mac.md", "introducing-sage-math-python-based-mathematics.md", "is-python-free-with-list-of-tools.md", "is-python-slow.md", "julia-vs-python-now-for-something-completely-different.md", "jupyter-lite-python-in-the-browser-with-serverless-jupyter.md", "jupyter-notebook-a-complete-introduction.md", "jupyter-password.md", "kaggle-datasets.md", "large-data-sets-in-python-pandas-and-the-alternatives.md", "learn-python.md", "learning-c-and-python-the-perfect-duo-for-success.md", "learning-git-what-to-know-when-youre-a-beginner.md", "mastering-the-take-home-coding-exercise-final-steps.md", "math/Journal.md", "math/conics-review-with-sympy.md", "math/exploring_basic_number_theory_in_python.md", "math/matplotlib_basics.ipynb", "math/scratch/scratch.ipynb", "math/sympy_geometry.md", "math/taking-calculus-in-your-sixties.md", "matplotlib-coordinates-toward-a-python-graphing-calculator.md", "matplotlib-vs-seaborn.md", "middle-way-of-software-development.md", "mystnb-template.md", "new-for-2022-python-git-github-bootcamp-course.md", "newsletter-11-15-2022.md", "newsletter-january-17-2023.md", "node-starter-projects.md", "notes-on-using-postgres-python-and-docker.md", "numpy-practice-questions-to-make-you-an-expert.md", "optimizing-aws-s3-uploads-with-golang-and-goroutines.md", "pandas-groupby.md", "pandas-practice-examples.md", "pip-vs-conda-two-top-tools-for-managing-python-packages.md", "pip-vs-pipenv-which-is-better-and-which-to-learn-first.md", "programming-and-math-a-brief-translation-guide.md", "pycharm-vs-vs-code.md", "pypy-first-look-a-faster-version-of-python.md", "python-and-aws-getting-started-with-the-cloud-development-kit-cdk.md", "python-and-aws-lambda-functions.md", "python-and-react-running-python-online-in-a-react-app.md", "python-boot-camp-a-co-operative-approach.md", "python-chemistry.md", "python-configuration.md", "python-data-analysis-starter-project.md", "python-dataclasses.md", "python-date-tutorial.md", "python-dictionaries-with-exercises.md", "python-docker-examples-sagemath-in-a-container.md", "python-errors.md", "python-files-from-beginner-to-expert.md", "python-for-loop-a-complete-tutorial-with-exercises.md", "python-format-strings.md", "python-function-arguments-and-parameters-examples.md", "python-function-best-practices.md", "python-function-exercises.md", "python-functions.md", "python-generators-questions-and-answers.md", "python-hobbyist-to-professional.md", "python-indexing-slicing-exercises.md", "python-json-easily-work-with-dictionaries-files-and-custom-objects.md", "python-lists.md", "python-lists-vs-arrays.md", "python-matrix-multiplication.md", "python-newsletter-february-22-2023.md", "python-newsletter-january-31-2023.md", "python-on-docker-practice-ideas.md", "python-operators.md", "python-package-example-setuptools.md", "python-postgres-and-docker-running-fast-meaningful-unit-tests.md", "python-practice-projects.md", "python-pyarrow-and-parquet.md", "python-shell-programming.md", "python-string-examples-tutorial-and-practice-exercises.md", "python-virtual-environments-video-tutorial.md", "python-vs-matlab.md", "python-with-using-and-writing-context-managers-in-python.md", "random-python-secrets-and-random-values-made-easy.md", "recovery/CharlotteSecularSobriety.rst", "recovery/JudgementsInSobriety.md", "recovery/OutlineForProgramOrFellowship.md", "recovery/index.rst", "run-python-online-with-jupyterlite.md", "running-the-cmake-tutorial-in-a-vs-code-dev-container.md", "scipy-vs-sympy-for-symbolic-math-let-us-never-speak-of-this-again.md", "selecting-data-in-pandas.md", "simplicity-is-your-friend-python-vs-vs-code-for-teaching-software.md", "socialmedia/FirstPrinciplesOfProductiveMinimalism.md", "socialmedia/GivingUpSocialMediaReviewOne.md", "socialmedia/MindfulnessVersusTechnology.md", "socialmedia/SocialMediaWithdrawal.md", "socialmedia/TopMistakesInGivingUpSocialMedia.md", "socialmedia/index.rst", "sql-with-pandas.md", "sqlalchemy-dataclass-example.md", "sympy-solving-math-equations-in-python.md", "teach-yourself-math.md", "test-dir.md", "the-function-in-python-introductory-tutorial.md", "the-marketing-genius-of-100-days-of-code.md", "thonny-the-most-beginner-friendly-python-ide.md", "understanding-python-types-and-type-hints.md", "useful-collection-classes-in-python-you-may-not-know.md", "using-latex-in-python.md", "using-pyspark-and-parquet.md", "using-testng-with-spring.md", "vagrant-ansible-local.md", "what-are-those-pyc-files-in-a-python-project.md", "what-is-a-python-package.md", "wherein-i-make-an-account-of-my-whereabouts.md", "why-is-python-popular.md", "worlds-oldest-math-major.md", "writing-a-python-custom-exception.md", "your-first-development-job.md", "your-first-programming-language-should-be-python-not-javascript.md", "zen-of-100-days-of-python.md"], "titles": ["A Coop Coding Bootcamp", "Apache Airflow:  Python ETL and Scheduling Made Easy", "Site Index", "Alternatives to Pandas:  Python Polars", "Learn Basic Command Line Skills and Rock Your Workflow", "My Journey to Beautiful Documentation With JupyterBook", "Benchmarking Python and Rust Async Web Server Performance", "Boolean Expressions in Python: Beginner to Expert", "Building a Docker Golang Container", "Best Python Careers: New Research Reveals Top Fields", "C and C++", "Docker", "Jupyter", "Learn to Code", "Math", "Math and Math Software", "Other", "Newsletter", "Pandas", "Python (General)", "Python for Beginners", "Python Functions", "Python Math and Science", "Python Practice", "Python Tools", "Chemists Strongly Addicted to Python!", "A CMake Starter Project", "Code Pride is the Best Medicine", "CodeSolid Newsletter, 11/29/2022", "CodeSolid Newsletter 12/13/2022", "CodeSolid Python Newsletter:  November 1, 2022", "CodeSolid Newsletter:  October 25, 2022", "CodeSolid Python Newsletter:  December 28, 2022", "On Reading Dennett\u2019s <em>Consciousness Explained</em>", "Cognitive Science Resources", "Notes on Synapses, Neurons, and Brains", "Review Notes for Synapses, Neurons, and Brains", "The Secret Life of the Mind", "Cognitive Science", "Conda vs. Pip, Venv, and Pyenv \u2013 Simplicity Wins", "C++ Dev Containers:  Custom Environments for VS Code", "Creating a Python Interactive Plot Using Matplotlib in Jupyter", "Data cleaning in Pandas", "Debugging Python in VS Code", "DirectoryInfo Example", "Python Dunder Methods:  The Ugliest Awesome Sauce", "Exploring Python Objects with the dir and type functions", "Featured Articles", "How to Find Duplicates In a List in Python", "Python Classes Zero to Expert: A Tutorial with Exercises", "Getting Things Done With Dendron and VS Code \u2013 First Look", "Getting Things Done with GitHub, Markdown, and Visual Studio Code", "How to Work With Google Sheets In Python and Pandas", "How To Profile Python Code", "How To Compare Python Dictionaries", "How to Convert a String to Datetime in Python?", "How To Install Pip and Conda on the Same Machine", "How to Learn To Program", "How To Practice Python", "How to Practice Python: Data Science and Pandas", "How To Separate Source and Tests in Python", "How To Use Docker Python Images and Docker Compose With Python", "How to Visualize Data Using Pandas", "Math \u2229 Programming", "Installing a Python and Git Development Environment on Windows, Part 2", "Installing a Python and Git Development Environment on Windows", "Installing Pyenv on a Mac (A Setup Guide With Usage Tips)", "Introducing Sage Math:  Symbolic Math Software In Python", "Is Python Free?  Yes!  We List the Best Free Tools", "Is Python Slow?  Separating the Myths from the Facts", "Is Julia Easy to Learn for Python Developers?", "Jupyter Lite:  Python in the Browser with Serverless Jupyter", "Jupyter Notebook: A Complete Introduction", "Jupyter Password: Easy Notebook and Lab Configuration", "Using the Kaggle Datasets API in Python", "Large Data Sets in Python:  Pandas And The Alternatives", "Learn Python: Tutorials from Beginner to Expert", "Learning C++ and Python: The Perfect Duo for Success", "Learning Git: What To Know When You\u2019re a Beginner", "Mastering The Take-Home Coding Exercise: A Simple Checklist To Make It Shine", "Math Journal", "&lt;no title&gt;", "Exploring Basic Number Theory in Python", "&lt;no title&gt;", "Circle graph by itself", "Using SymPy for Plotting Geometry", "Can You Take Calculus In Your Sixties?", "Matplotlib Coordinates:  Graphing Math Functions in Python", "Matplotlib vs. Seaborn", "The Middle Way of Software Development", "Your Header here", "New for 2022:  Python, Git, GitHub BootCamp Course", "Newsletter, 11/15/2022", "Python Newsletter, January 17, 2023", "Node Starter Projects", "Using Postgres, Python, and Docker", "NumPy Examples \u2013  Practice Questions Make You an Expert", "Fast S3 Updates with Golang and Goroutines", "How to Use the Pandas Groupby Method?", "Pandas Examples and Review Questions to Make You an Expert", "Pip vs. Conda: Two Top Tools for Managing Python Packages", "Pip vs Pipenv: Which is better and which to learn first?", "Programming and Math:  A Brief Translation Guide", "PyCharm vs. VS Code: Which Is Better and Why?", "Is PyPy a Faster Version of Python?", "Python and AWS:  Getting Started with the Cloud Development Kit (CDK)", "Python for AWS Lambda Functions: A Beginner\u2019s Guide", "Python and React:  Running Python Online in a React App", "A Coding Boot Camp Run As a Cooperative", "Python Chemistry:  SymPy and ChemPy", "Python Configuration: Top Built-In and Third-Party Libraries", "Python Data Analysis Starter Project", "Python Dataclass:  Easily Automate Class Best Practices", "Python Date and Time Functions: The Complete Tutorial", "Python Dictionaries for Beginners:  A Complete Lesson With Exercises", "Python Docker Examples:  SageMath in a Container", "Python Errors: Exception Handling from Beginner to Expert", "Find Files in Python:  Complete Cookbook for Searching Files and Folders", "The Python For Loop:  Complete Tutorial and Practice Exercises", "Python Format Strings: Beginner to Expert", "Python Function Arguments: The Complete Guide", "Python Function Best Practices", "Python Function Exercises With Solutions", "Python Functions: Introduction to the Series", "Python Generator Functions: The Complete Guide", "A Tech Career in Python:  From Hobbyist to Professional", "Python Indexing and Slicing: Complete Tutorial With Hands-On Exercises", "Python JSON: Easily Work With  Dictionaries, Files, and Custom Objects", "Python Lists for Beginners: A Complete Lesson With Exercises", "Python Lists vs. Arrays:  How to Choose Between Them", "Python Matrix Multiplication: NumPy, SymPy, and the Math Behind It", "Python Newsletter February 22, 2023", "Python Newsletter, January 31, 2023", "Python Practice:  More Python on Docker Project Ideas", "Python Operators:  The Building Blocks of Successful Code", "Python Package Example: Setuptools", "Python, Postgres, and Docker:  Running Fast, Meaningful Unit Tests", "What Are Good Projects To Practice In Python?", "Python Parquet and Arrow:  Using PyArrow with Pandas", "Python Shell Programming: Overview and Top Tools", "Python String Examples:  Tutorial and Practice Exercises", "Python Virtual Environments: Video Tutorial", "Python vs. MATLAB: Price, Performance, Features", "Python With: Using and Writing Context Managers in Python", "Random Python:  Secrets and Random Values Made Easy", "Charlotte Secular Sobriety", "Judgements in Sobriety", "What Works: Program or Fellowship?", "Recovery", "Run Python Online: Watch the Video to Learn How", "Running the CMake Tutorial in a VS Code Dev Container", "SciPy vs. SymPy for Symbolic Math:  Let Us Never Speak of This Again", "Selecting Data in Pandas", "Simplicity is your Friend:  PyCharm vs. VS Code for Teaching Programming", "First Principles of Productive Minimalism", "Giving Up Social Media, One Month Later", "Mindfulness vs. Technology", "Social Media Withdrawal", "The Top Mistakes People Make When Quitting Social Media", "Social Media", "Using SQL With Pandas:  PandasSQL and IPython-SQL", "SQLAlchemy DataClass Example", "SymPy:  Solving Math Equations in Python and Jupyter", "Teach Yourself Math: Resources, Techniques, and Approach", "Test Dir", "The Function In Python: An Introductory Tutorial", "The Marketing Genius of 100 Days of Code", "Thonny: The Most Beginner Friendly Python IDE", "Understanding Python Types and Type Hints", "Useful Collection Classes in Python You May Not Know", "Using LaTeX In Python", "PySpark and Parquet: Elegant Python DataFrames and SQL", "Using TestNG With Spring", "Simple Vagrant Ansible Local Example", "What Are pyc Files and <strong>pycache</strong> folders In Python ?", "What Is a Python Package?", "Wherein I Make an Account of My Whereabouts", "Why Is Python Popular?# Why Is Python Popular", "On Being The World\u2019s Oldest Math Major", "Writing a Python Custom Exception", "Stop Being a Junior Developer.  No, Seriously, Cut It Out.", "Your First Programming Language Should be Python, Not JavaScript", "The Strange Zen of 100 Days of Python"], "terms": {"my": [0, 1, 2, 3, 4, 6, 8, 9, 10, 12, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 43, 45, 46, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 65, 67, 68, 69, 70, 71, 72, 75, 77, 78, 80, 82, 86, 89, 92, 93, 94, 96, 97, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 115, 117, 121, 125, 128, 130, 131, 132, 133, 135, 136, 137, 139, 140, 150, 151, 153, 154, 155, 156, 157, 158, 162, 163, 167, 172, 173, 174, 175, 177, 178, 180, 181], "wife": [0, 57, 58, 59, 157, 158, 163], "attend": [0, 9, 80, 176], "data": [0, 1, 2, 6, 16, 18, 23, 25, 28, 29, 30, 35, 39, 45, 48, 49, 53, 54, 55, 56, 58, 61, 67, 69, 72, 74, 77, 78, 88, 89, 93, 95, 96, 100, 104, 106, 109, 110, 113, 118, 119, 121, 124, 127, 128, 129, 131, 132, 134, 136, 137, 138, 139, 140, 142, 144, 160, 162, 163, 168, 169, 171, 173, 177, 179, 181], "scienc": [0, 2, 9, 23, 25, 33, 35, 39, 41, 45, 53, 56, 58, 67, 69, 70, 72, 74, 77, 87, 88, 89, 96, 99, 100, 104, 106, 109, 110, 111, 138, 139, 142, 144, 155, 156, 162, 163, 170, 176, 177, 178, 181], "boot": [0, 2, 9, 13, 78, 89, 153, 163], "camp": [0, 2, 9, 13, 78, 89, 153, 163], "2019": [0, 2, 18, 55, 99], "2020": [0, 3, 29, 55, 70, 100], "love": [0, 5, 9, 25, 30, 33, 39, 40, 45, 56, 57, 58, 59, 65, 68, 69, 72, 76, 77, 85, 87, 88, 92, 103, 109, 121, 122, 128, 131, 134, 135, 137, 139, 162, 163, 176, 179], "did": [0, 1, 5, 6, 8, 9, 26, 29, 31, 33, 39, 41, 43, 45, 49, 53, 55, 56, 58, 60, 61, 63, 64, 66, 67, 68, 70, 72, 75, 76, 80, 85, 86, 87, 88, 89, 93, 97, 99, 101, 102, 103, 104, 106, 107, 112, 113, 115, 117, 118, 122, 126, 128, 130, 140, 142, 143, 144, 150, 158, 160, 161, 162, 163, 166, 167, 168, 169, 171, 172, 175, 178], "well": [0, 1, 3, 4, 5, 6, 8, 9, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 91, 92, 93, 96, 99, 100, 101, 103, 104, 105, 109, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 150, 151, 152, 153, 155, 156, 157, 158, 160, 162, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181], "thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 15, 17, 19, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "wa": [0, 1, 3, 4, 5, 6, 7, 8, 9, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 85, 86, 87, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181], "associ": [0, 4, 35, 43, 49, 52, 61, 66, 69, 71, 80, 99, 100, 113, 114, 139, 150, 166, 169, 170], "univers": [0, 26, 31, 34, 35, 58, 82, 85, 86, 113, 138, 144, 153, 162, 163, 170, 176, 178], "north": [0, 31, 58, 59, 113], "carolina": [0, 31, 58, 59, 113], "our": [0, 1, 3, 4, 5, 6, 7, 8, 9, 25, 28, 29, 32, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 82, 85, 87, 88, 89, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 136, 138, 139, 140, 142, 143, 144, 146, 147, 149, 150, 151, 154, 157, 158, 160, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 179], "state": [0, 1, 3, 25, 28, 39, 41, 53, 57, 59, 65, 68, 70, 72, 78, 81, 86, 88, 94, 109, 113, 114, 120, 122, 124, 127, 128, 136, 163, 169, 174, 175], "system": [0, 8, 9, 25, 26, 29, 32, 33, 34, 35, 39, 40, 43, 44, 48, 49, 50, 51, 53, 59, 61, 62, 65, 66, 67, 68, 70, 71, 75, 77, 78, 88, 106, 109, 110, 115, 116, 117, 130, 133, 134, 135, 139, 144, 150, 151, 153, 156, 160, 162, 168, 170, 171, 174, 175, 177, 179], "The": [0, 2, 3, 7, 8, 13, 14, 16, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 38, 39, 40, 42, 43, 44, 48, 49, 51, 54, 55, 59, 60, 62, 63, 64, 65, 66, 69, 70, 71, 72, 74, 80, 82, 85, 87, 88, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 116, 121, 122, 123, 128, 129, 131, 132, 133, 138, 140, 142, 147, 150, 153, 154, 155, 157, 160, 162, 163, 170, 173, 174, 176, 180], "interest": [0, 1, 4, 9, 25, 26, 28, 29, 31, 32, 35, 37, 39, 46, 48, 53, 57, 58, 59, 61, 67, 68, 69, 70, 75, 76, 77, 78, 82, 89, 91, 93, 97, 101, 102, 104, 106, 109, 113, 117, 123, 131, 133, 137, 138, 142, 143, 154, 155, 156, 158, 160, 163, 167, 168, 169, 170, 171, 172, 175, 176, 177, 179], "result": [0, 1, 3, 7, 8, 9, 25, 29, 34, 35, 39, 41, 43, 45, 46, 48, 49, 53, 55, 58, 61, 66, 68, 69, 70, 71, 72, 74, 75, 80, 82, 85, 87, 88, 96, 98, 99, 104, 106, 107, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 124, 127, 129, 130, 131, 134, 135, 136, 138, 139, 140, 142, 143, 144, 151, 152, 155, 158, 160, 162, 163, 165, 168, 169, 170, 171, 175, 176, 178, 181], "her": [0, 48, 112, 158, 163], "she": [0, 93, 108, 163], "abl": [0, 4, 6, 7, 8, 25, 31, 32, 34, 35, 39, 41, 43, 45, 49, 51, 53, 56, 59, 60, 61, 64, 66, 67, 69, 70, 71, 72, 75, 76, 80, 85, 86, 88, 89, 91, 95, 96, 99, 100, 102, 104, 107, 111, 112, 113, 114, 115, 116, 117, 124, 125, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 143, 150, 158, 160, 161, 162, 163, 165, 166, 169, 179], "secur": [0, 8, 52, 61, 81, 100, 112, 115, 135, 175], "veri": [0, 3, 4, 5, 6, 9, 25, 26, 28, 29, 30, 35, 39, 41, 42, 43, 49, 51, 53, 56, 58, 59, 60, 61, 62, 64, 65, 67, 68, 70, 71, 72, 76, 77, 80, 85, 86, 87, 88, 91, 92, 95, 96, 99, 102, 103, 104, 106, 108, 109, 110, 113, 114, 115, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 142, 143, 144, 150, 160, 162, 163, 165, 167, 168, 170, 171, 172, 175, 177, 179], "substanti": [0, 6, 9, 30, 58, 61, 75, 104, 139, 163], "rais": [0, 9, 35, 45, 48, 49, 61, 96, 114, 119, 121, 122, 124, 126, 127, 129, 130, 132, 134, 138, 139, 140, 143, 144, 165], "from": [0, 1, 2, 5, 6, 7, 9, 16, 19, 20, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 39, 40, 41, 43, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 113, 114, 115, 118, 119, 120, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 149, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 181], "employ": [0, 78, 158], "left": [0, 3, 7, 25, 26, 35, 41, 42, 59, 63, 69, 70, 71, 72, 79, 80, 82, 85, 87, 88, 99, 100, 106, 108, 109, 110, 113, 119, 123, 134, 148, 150, 155, 161, 167, 168, 169, 177, 179], "return": [0, 1, 3, 6, 7, 25, 26, 39, 40, 41, 42, 43, 45, 46, 48, 49, 52, 53, 54, 55, 60, 61, 67, 68, 70, 71, 72, 74, 77, 79, 81, 82, 83, 84, 85, 87, 96, 97, 98, 99, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 134, 135, 140, 142, 143, 144, 151, 152, 155, 157, 160, 161, 162, 163, 168, 169, 171, 179], "work": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 18, 19, 20, 25, 26, 27, 28, 29, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 101, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 150, 151, 152, 153, 154, 158, 160, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181], "them": [0, 1, 2, 3, 4, 5, 7, 9, 19, 26, 29, 31, 32, 34, 35, 37, 39, 40, 41, 42, 43, 45, 48, 49, 50, 52, 53, 55, 57, 58, 59, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 86, 88, 89, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 126, 127, 130, 131, 134, 135, 137, 138, 139, 140, 141, 143, 144, 151, 158, 161, 162, 163, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 179, 180, 182], "even": [0, 1, 3, 4, 6, 7, 8, 9, 26, 32, 33, 34, 35, 39, 40, 41, 42, 43, 45, 48, 49, 52, 53, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 91, 97, 99, 101, 103, 104, 106, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 126, 127, 128, 129, 130, 134, 135, 137, 138, 139, 140, 142, 143, 144, 147, 150, 151, 153, 155, 158, 160, 161, 162, 163, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180], "though": [0, 1, 3, 4, 5, 9, 26, 28, 32, 33, 34, 35, 39, 40, 41, 45, 48, 49, 52, 53, 57, 58, 61, 66, 67, 68, 69, 70, 71, 72, 75, 76, 79, 80, 86, 87, 89, 101, 103, 104, 106, 110, 112, 114, 121, 124, 125, 126, 129, 130, 135, 136, 137, 139, 142, 143, 144, 150, 153, 160, 161, 163, 169, 173, 174, 175, 176, 177, 178], "field": [0, 2, 3, 13, 20, 25, 27, 33, 34, 35, 41, 43, 45, 48, 52, 58, 59, 68, 78, 102, 106, 109, 113, 119, 121, 125, 127, 138, 142, 144, 161, 163, 168, 169, 172, 181], "quit": [0, 3, 4, 8, 25, 26, 31, 33, 34, 35, 39, 40, 43, 50, 51, 53, 57, 58, 61, 65, 67, 69, 70, 71, 76, 77, 80, 82, 85, 86, 87, 94, 103, 106, 109, 113, 116, 119, 121, 127, 129, 131, 132, 134, 138, 143, 144, 150, 151, 155, 156, 160, 161, 162, 163, 165, 169, 170, 171, 172, 173, 179, 180], "unrel": [0, 42, 58, 125, 176, 177], "mention": [0, 1, 3, 4, 5, 9, 26, 27, 28, 33, 35, 39, 41, 49, 50, 55, 58, 59, 60, 61, 68, 70, 73, 78, 80, 82, 86, 89, 103, 107, 112, 113, 121, 126, 129, 130, 132, 134, 139, 142, 143, 144, 150, 155, 162, 163, 167, 170, 171, 176], "howev": [0, 1, 3, 4, 5, 6, 7, 9, 26, 28, 29, 33, 35, 39, 40, 41, 42, 43, 45, 48, 49, 50, 52, 53, 55, 57, 58, 59, 60, 61, 62, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 127, 128, 129, 130, 133, 134, 135, 138, 139, 140, 142, 143, 144, 146, 150, 151, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 174, 175, 177, 179], "instructor": [0, 86, 102], "all": [0, 1, 3, 5, 6, 7, 8, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 82, 85, 86, 87, 88, 89, 92, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 150, 152, 153, 154, 155, 157, 158, 160, 161, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181], "senior": [0, 9, 43, 57, 78, 112, 116, 123], "instead": [0, 1, 3, 4, 5, 6, 7, 25, 39, 40, 41, 43, 45, 48, 49, 51, 53, 54, 60, 61, 65, 66, 67, 68, 69, 70, 73, 75, 77, 78, 80, 82, 86, 92, 97, 100, 101, 102, 104, 106, 109, 110, 112, 113, 114, 116, 119, 121, 124, 125, 126, 127, 129, 130, 133, 135, 138, 139, 140, 143, 150, 151, 154, 157, 162, 163, 168, 169, 171, 174, 175], "fairli": [0, 6, 25, 40, 45, 50, 57, 60, 64, 65, 70, 75, 79, 93, 94, 99, 100, 107, 109, 120, 122, 125, 137, 150, 153, 156, 160, 161, 162, 172], "limit": [0, 25, 26, 35, 40, 41, 53, 56, 69, 74, 75, 80, 81, 83, 85, 87, 104, 109, 112, 113, 114, 119, 133, 138, 142, 143, 156, 158, 160, 169, 170, 171, 172, 173, 177], "sometim": [0, 4, 9, 35, 39, 42, 45, 49, 53, 54, 55, 57, 61, 62, 63, 67, 69, 72, 74, 76, 85, 89, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 127, 130, 132, 134, 136, 138, 157, 160, 162, 163, 168, 170, 174, 175, 177, 179], "liter": [0, 7, 49, 55, 60, 67, 76, 78, 114, 119, 120, 129, 134, 137, 140, 167], "read": [0, 1, 3, 4, 5, 7, 9, 28, 29, 37, 38, 40, 45, 49, 50, 51, 52, 57, 58, 59, 60, 61, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 86, 97, 98, 102, 103, 110, 111, 113, 114, 116, 117, 119, 121, 124, 129, 134, 135, 136, 138, 139, 143, 155, 158, 160, 161, 163, 169, 170, 172, 175, 177, 179], "can": [0, 1, 3, 4, 5, 6, 7, 8, 9, 14, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 146, 149, 150, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "curriculum": 0, "learn": [0, 1, 2, 3, 5, 7, 9, 12, 16, 19, 20, 23, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 39, 40, 42, 43, 45, 49, 53, 55, 56, 58, 59, 61, 62, 67, 69, 72, 74, 75, 79, 80, 82, 85, 86, 87, 88, 89, 92, 93, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 150, 152, 158, 160, 161, 165, 166, 167, 168, 169, 171, 175, 176, 177, 178, 181], "lot": [0, 3, 4, 5, 6, 7, 9, 25, 26, 28, 29, 31, 32, 34, 35, 37, 39, 41, 42, 43, 45, 48, 49, 51, 53, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 77, 78, 80, 85, 86, 87, 89, 97, 102, 103, 104, 106, 109, 112, 116, 119, 120, 121, 127, 128, 129, 132, 135, 137, 139, 143, 144, 150, 151, 153, 158, 161, 162, 163, 165, 167, 168, 172, 175, 177, 179, 181], "togeth": [0, 1, 5, 26, 29, 32, 35, 39, 41, 45, 49, 52, 57, 65, 68, 70, 77, 84, 87, 89, 93, 94, 95, 101, 103, 112, 116, 117, 121, 125, 138, 139, 142, 143, 158, 160, 169, 173, 177, 179], "peer": [0, 27, 78], "good": [0, 2, 4, 5, 7, 8, 9, 23, 25, 26, 28, 29, 31, 32, 34, 35, 36, 39, 40, 43, 49, 52, 53, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 70, 71, 73, 75, 76, 78, 79, 80, 82, 85, 86, 96, 97, 102, 103, 106, 108, 109, 112, 114, 116, 118, 119, 121, 124, 126, 127, 131, 133, 135, 140, 143, 144, 150, 151, 153, 156, 158, 162, 165, 166, 167, 169, 170, 171, 174, 175, 176, 177, 178, 179], "case": [0, 1, 3, 4, 5, 6, 8, 9, 26, 30, 34, 35, 39, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 61, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 82, 85, 86, 87, 88, 89, 92, 94, 96, 97, 98, 99, 100, 102, 103, 105, 106, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 146, 151, 152, 158, 161, 162, 163, 165, 168, 169, 170, 171, 172, 174, 179], "i": [0, 1, 2, 3, 6, 7, 8, 9, 10, 13, 16, 17, 19, 20, 24, 25, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 46, 48, 50, 51, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 71, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 99, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 131, 132, 133, 135, 138, 140, 141, 142, 143, 144, 145, 146, 147, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 169, 170, 172, 173, 174, 178, 179, 180, 181, 182], "must": [0, 1, 3, 4, 7, 25, 26, 27, 30, 35, 39, 41, 45, 49, 53, 55, 59, 61, 62, 70, 74, 80, 93, 97, 98, 103, 106, 109, 111, 113, 114, 116, 118, 119, 120, 122, 126, 129, 130, 134, 139, 140, 143, 161, 162, 163, 165, 168, 169, 170, 171, 175], "admit": [0, 3, 28, 32, 40, 72, 86, 101, 107, 121, 137, 163], "have": [0, 1, 3, 4, 5, 6, 7, 8, 9, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "great": [0, 1, 3, 5, 9, 25, 26, 31, 32, 34, 35, 37, 39, 43, 49, 50, 52, 54, 57, 58, 59, 61, 68, 70, 72, 73, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 93, 100, 103, 108, 109, 111, 113, 120, 121, 128, 132, 133, 134, 135, 137, 138, 139, 141, 142, 155, 162, 163, 167, 168, 170, 177], "deal": [0, 1, 7, 25, 35, 42, 45, 48, 49, 50, 52, 53, 55, 57, 69, 72, 74, 75, 76, 77, 78, 82, 87, 89, 96, 100, 106, 109, 110, 112, 113, 116, 117, 120, 121, 128, 129, 130, 133, 138, 142, 143, 144, 153, 158, 160, 161, 163, 165, 169, 170, 171, 175, 181], "skeptic": 0, "gener": [0, 1, 2, 4, 5, 6, 7, 9, 25, 26, 28, 30, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 49, 53, 57, 58, 61, 62, 65, 66, 67, 69, 70, 71, 72, 73, 77, 80, 82, 87, 88, 89, 93, 98, 100, 101, 102, 104, 105, 106, 109, 111, 112, 114, 116, 117, 118, 120, 121, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 143, 151, 161, 162, 163, 165, 167, 168, 169, 170, 172, 174, 175, 177, 179], "about": [0, 1, 4, 5, 7, 8, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 53, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 92, 96, 97, 98, 99, 100, 101, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 147, 148, 149, 150, 151, 152, 156, 157, 158, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181], "profit": [0, 57], "same": [0, 1, 2, 3, 4, 5, 6, 7, 9, 24, 25, 26, 27, 35, 39, 41, 42, 43, 45, 48, 49, 51, 52, 53, 54, 55, 57, 58, 61, 62, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 79, 80, 82, 85, 86, 88, 91, 95, 96, 97, 98, 99, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 150, 151, 153, 155, 158, 160, 162, 163, 165, 167, 168, 169, 170, 171, 173, 174, 175, 177, 178, 179], "reason": [0, 3, 4, 5, 7, 9, 26, 31, 35, 37, 39, 45, 48, 49, 52, 54, 56, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 73, 75, 77, 78, 82, 85, 86, 87, 88, 94, 95, 101, 102, 103, 104, 105, 106, 107, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 132, 133, 134, 138, 142, 143, 144, 158, 159, 162, 163, 167, 169, 171, 175, 177, 179, 181], "m": [0, 1, 3, 4, 5, 6, 7, 8, 9, 26, 28, 30, 31, 32, 34, 35, 38, 39, 40, 43, 45, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 96, 97, 99, 101, 103, 105, 106, 107, 108, 111, 112, 113, 115, 116, 119, 120, 121, 124, 125, 127, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 145, 150, 151, 154, 155, 156, 158, 161, 162, 166, 169, 171, 175, 176, 178, 179], "especi": [0, 1, 3, 4, 5, 6, 9, 26, 30, 33, 35, 40, 52, 53, 56, 58, 60, 61, 62, 63, 65, 68, 74, 75, 76, 77, 78, 79, 80, 86, 88, 101, 103, 106, 112, 113, 114, 116, 117, 119, 120, 126, 127, 130, 132, 135, 137, 138, 139, 143, 144, 146, 150, 158, 162, 163, 168, 170, 172, 177], "softwar": [0, 2, 4, 8, 9, 13, 19, 27, 33, 39, 41, 48, 49, 53, 59, 61, 63, 64, 65, 68, 70, 72, 73, 77, 78, 79, 91, 100, 106, 115, 116, 121, 125, 133, 136, 153, 155, 162, 166, 169, 178, 179, 180], "which": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 86, 87, 88, 89, 92, 93, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181], "pai": [0, 9, 33, 41, 43, 57, 60, 61, 68, 69, 86, 89, 101, 103, 106, 115, 125, 154, 166], "season": [0, 32], "practition": [0, 9], "suspect": [0, 45, 49, 69, 133], "model": [0, 1, 25, 33, 34, 39, 42, 45, 49, 54, 61, 69, 74, 76, 88, 102, 109, 110, 116, 144, 161, 163, 168, 169, 179], "encourag": [0, 35, 61, 68, 100, 120, 125, 151, 155, 156, 163], "cost": [0, 3, 9, 52, 55, 57, 59, 68, 75, 91, 101, 105, 106, 122, 139, 150], "cut": [0, 2, 3, 13, 35, 45, 49, 65, 85, 106, 116, 142, 150], "area": [0, 3, 9, 25, 35, 37, 39, 42, 53, 59, 68, 77, 78, 80, 92, 102, 103, 106, 109, 112, 121, 133, 136, 138, 142, 153, 163, 167, 181], "develop": [0, 1, 2, 4, 5, 6, 8, 13, 16, 19, 24, 25, 26, 27, 29, 31, 35, 39, 40, 41, 45, 49, 50, 51, 53, 56, 57, 58, 59, 60, 66, 67, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 91, 92, 95, 99, 100, 101, 102, 106, 107, 109, 110, 112, 115, 116, 119, 121, 122, 124, 125, 126, 129, 132, 134, 136, 138, 139, 142, 153, 157, 161, 163, 165, 166, 167, 168, 169, 171, 174, 175, 178, 179, 181], "teacher": [0, 36, 58, 80, 86, 119, 130, 155, 163, 167, 178], "salari": [0, 9], "job": [0, 1, 5, 7, 8, 9, 26, 29, 32, 39, 53, 55, 57, 58, 59, 69, 72, 75, 77, 78, 79, 86, 89, 93, 103, 108, 113, 125, 135, 136, 147, 153, 154, 156, 160, 163, 166, 172, 177, 180, 181], "placement": [0, 35], "quick": [0, 3, 7, 30, 32, 39, 45, 48, 59, 61, 65, 67, 68, 72, 73, 85, 86, 87, 103, 113, 117, 118, 119, 135, 138, 144, 150, 153, 165, 167, 168, 169, 177], "busi": [0, 6, 9, 27, 28, 42, 43, 53, 57, 58, 101, 106, 110, 112, 122, 130, 135, 158, 160, 170, 177, 178], "insid": [0, 25, 35, 39, 40, 49, 60, 61, 70, 74, 88, 98, 100, 109, 112, 118, 119, 120, 124, 128, 133, 134, 139, 143, 161, 175], "led": [0, 1, 35, 39, 51, 60, 76, 106, 121, 163, 176, 177], "me": [0, 1, 3, 4, 6, 8, 9, 27, 28, 31, 32, 33, 34, 35, 39, 40, 45, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 78, 79, 82, 85, 86, 89, 92, 96, 99, 101, 102, 103, 108, 112, 113, 115, 122, 127, 129, 130, 131, 132, 133, 135, 137, 142, 143, 144, 150, 151, 153, 155, 156, 157, 158, 163, 166, 167, 172, 176, 177, 178, 179, 180], "sever": [0, 3, 5, 9, 25, 26, 28, 29, 31, 32, 33, 35, 39, 40, 41, 43, 48, 49, 50, 53, 56, 58, 59, 61, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 88, 89, 92, 94, 96, 98, 99, 101, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 116, 118, 119, 121, 124, 126, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 151, 152, 153, 155, 158, 160, 161, 162, 163, 168, 169, 170, 175, 177, 178, 179, 181], "articl": [0, 1, 3, 5, 6, 7, 8, 9, 25, 26, 27, 28, 29, 30, 31, 32, 35, 39, 40, 42, 43, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 86, 87, 88, 92, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 147, 148, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179], "valid": [0, 45, 49, 53, 58, 59, 61, 69, 70, 86, 102, 106, 112, 113, 116, 118, 121, 127, 128, 134, 144, 153, 163, 168, 169], "concern": [0, 1, 7, 26, 35, 53, 71, 75, 82, 86, 96, 97, 110, 124, 150, 171, 176], "unfortun": [0, 45, 53, 68, 133, 142, 179], "most": [0, 2, 3, 5, 6, 7, 9, 13, 20, 24, 26, 28, 32, 35, 39, 41, 43, 45, 48, 49, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 95, 96, 99, 100, 101, 102, 103, 104, 106, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 133, 134, 137, 139, 140, 142, 143, 144, 150, 152, 153, 154, 156, 158, 160, 161, 162, 163, 165, 168, 170, 172, 174, 175, 177, 181], "those": [0, 1, 4, 5, 7, 9, 25, 26, 32, 33, 35, 39, 40, 41, 42, 43, 45, 48, 49, 51, 52, 53, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 82, 85, 86, 87, 89, 91, 92, 93, 96, 99, 100, 101, 102, 103, 109, 110, 111, 112, 113, 115, 117, 119, 120, 121, 124, 126, 128, 129, 130, 133, 134, 135, 137, 139, 142, 143, 144, 150, 153, 154, 155, 158, 160, 162, 163, 165, 168, 169, 172, 174, 175, 176, 179], "ar": [0, 2, 3, 4, 5, 8, 9, 19, 23, 25, 26, 27, 28, 29, 31, 32, 34, 37, 38, 39, 40, 41, 42, 43, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 65, 66, 68, 69, 71, 73, 74, 75, 76, 78, 79, 80, 82, 85, 86, 87, 88, 89, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 138, 139, 141, 142, 143, 146, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 165, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182], "behind": [0, 2, 4, 5, 9, 22, 25, 40, 53, 54, 56, 69, 76, 103, 104, 109, 112, 113, 115, 116, 124, 125, 142, 143, 153, 160, 163, 171, 178], "paywal": 0, "handbook": [0, 59], "also": [0, 1, 3, 4, 5, 6, 8, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 66, 67, 68, 71, 73, 74, 76, 77, 78, 80, 82, 85, 86, 89, 91, 92, 93, 96, 99, 100, 101, 102, 103, 105, 109, 110, 111, 112, 115, 116, 119, 126, 129, 130, 132, 133, 135, 136, 138, 139, 142, 149, 150, 151, 152, 155, 158, 160, 161, 162, 163, 168, 170, 171, 175, 181], "detail": [0, 1, 4, 6, 7, 25, 26, 35, 39, 40, 42, 49, 61, 65, 68, 69, 70, 71, 75, 86, 91, 104, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 124, 127, 134, 135, 137, 139, 140, 142, 143, 150, 161, 162, 163, 165, 167, 168, 170, 175, 179], "some": [0, 1, 3, 4, 5, 6, 7, 8, 9, 17, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 38, 40, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 143, 144, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "caution": [0, 1, 40, 61, 66, 68, 120, 142], "around": [0, 3, 5, 6, 9, 26, 30, 33, 35, 40, 45, 49, 51, 53, 58, 59, 65, 66, 68, 69, 71, 75, 76, 78, 80, 82, 85, 87, 88, 96, 100, 103, 106, 107, 108, 112, 113, 121, 129, 130, 135, 142, 143, 144, 150, 153, 155, 156, 163, 177], "wonder": [0, 9, 29, 35, 41, 45, 69, 70, 74, 86, 102, 103, 108, 113, 132, 133, 135, 139, 142, 150, 154, 174, 175], "co": [0, 41, 60, 84, 85, 88, 96, 114, 162, 174], "op": [0, 97], "where": [0, 3, 6, 7, 9, 25, 26, 28, 29, 35, 39, 41, 42, 43, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 80, 82, 85, 86, 87, 88, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 128, 129, 130, 133, 134, 135, 137, 138, 139, 142, 143, 144, 150, 151, 152, 153, 158, 159, 161, 163, 165, 166, 167, 168, 171, 174, 179, 181, 182], "student": [0, 7, 9, 30, 34, 35, 75, 76, 78, 85, 89, 91, 103, 114, 119, 134, 142, 153, 162, 163, 167, 178], "commun": [0, 1, 5, 8, 9, 35, 41, 58, 59, 61, 67, 69, 72, 76, 77, 78, 86, 91, 97, 102, 103, 111, 121, 131, 137, 139, 142, 143, 153, 161, 169, 175, 178, 179, 182], "share": [0, 3, 4, 9, 26, 30, 32, 33, 35, 40, 41, 45, 49, 50, 52, 53, 59, 60, 61, 65, 66, 67, 68, 69, 72, 75, 76, 78, 82, 86, 91, 93, 97, 99, 103, 106, 107, 113, 115, 121, 127, 132, 135, 142, 143, 144, 146, 158, 162, 163, 166, 169, 172, 173, 177, 179, 181], "might": [0, 1, 3, 5, 6, 7, 8, 9, 26, 27, 34, 39, 40, 43, 45, 48, 49, 52, 53, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 73, 75, 77, 78, 79, 82, 85, 87, 93, 94, 96, 99, 100, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 142, 143, 144, 150, 151, 153, 158, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 174, 175, 176, 177, 179, 180, 181], "better": [0, 2, 3, 6, 8, 9, 24, 27, 35, 42, 43, 45, 49, 51, 53, 55, 58, 61, 65, 66, 68, 69, 72, 75, 76, 79, 82, 88, 89, 94, 112, 114, 116, 118, 120, 121, 123, 124, 126, 127, 129, 132, 134, 135, 138, 139, 142, 143, 153, 154, 157, 158, 163, 167, 168, 169, 172, 181], "wai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 25, 26, 27, 29, 33, 35, 38, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 85, 86, 87, 88, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 150, 151, 152, 153, 154, 155, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 174, 176, 177, 178, 179], "go": [0, 1, 3, 4, 5, 6, 7, 8, 9, 26, 27, 32, 34, 35, 39, 40, 41, 43, 45, 48, 49, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 101, 106, 107, 108, 110, 113, 115, 116, 117, 118, 119, 120, 121, 124, 125, 129, 130, 133, 135, 136, 138, 139, 140, 143, 146, 150, 151, 153, 155, 156, 158, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 177, 179, 181], "In": [0, 1, 2, 4, 5, 6, 8, 9, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 53, 54, 55, 57, 59, 60, 61, 62, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 85, 87, 88, 89, 91, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 114, 115, 119, 120, 121, 124, 125, 127, 128, 129, 130, 132, 135, 136, 138, 140, 142, 144, 146, 150, 151, 152, 158, 160, 161, 162, 167, 168, 169, 171, 175, 176, 177], "best": [0, 2, 6, 7, 13, 19, 20, 21, 24, 26, 29, 30, 31, 32, 40, 45, 48, 49, 50, 52, 53, 56, 58, 60, 61, 66, 70, 74, 75, 76, 78, 82, 86, 92, 102, 103, 106, 107, 113, 116, 117, 120, 123, 125, 126, 127, 128, 131, 133, 134, 137, 138, 139, 142, 143, 154, 161, 162, 163, 165, 167, 168, 169, 171, 172, 177], "fund": [0, 91], "school": [0, 9, 68, 82, 86, 87, 89, 102, 163, 178], "entir": [0, 1, 3, 7, 8, 39, 53, 61, 68, 74, 89, 98, 99, 107, 112, 138, 140, 143, 152, 162, 171, 176, 177, 180], "half": [0, 9, 35, 71, 75, 80, 82, 86, 96, 113, 130, 163], "heart": [0, 7, 9, 35, 75, 95, 132, 181], "socialist": 0, "enjoi": [0, 3, 9, 29, 31, 58, 59, 67, 68, 69, 77, 80, 86, 89, 99, 106, 112, 119, 125, 146, 154, 156, 158, 159, 163, 166, 177], "mac": [0, 1, 2, 24, 25, 26, 40, 43, 56, 61, 64, 65, 67, 68, 72, 75, 100, 101, 105, 109, 111, 113, 115, 116, 139, 144, 150, 168, 171, 174, 175, 176], "mini": [0, 4, 8, 30, 43, 67, 100, 105, 119, 125, 167], "5": [0, 1, 3, 6, 7, 9, 25, 32, 35, 40, 41, 45, 48, 49, 53, 61, 67, 69, 70, 75, 80, 81, 82, 83, 85, 87, 88, 96, 98, 99, 101, 102, 104, 106, 109, 110, 112, 113, 114, 115, 118, 120, 122, 124, 126, 128, 129, 130, 134, 138, 140, 142, 144, 152, 157, 160, 162, 165, 167, 168, 169, 170, 175, 181], "latt": 0, "much": [0, 1, 3, 4, 5, 6, 8, 9, 25, 26, 27, 30, 31, 32, 35, 37, 39, 40, 41, 43, 45, 46, 48, 49, 52, 53, 54, 55, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 91, 92, 94, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 147, 150, 151, 153, 155, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 177, 180, 181, 182], "next": [0, 1, 4, 5, 6, 8, 25, 33, 35, 39, 40, 41, 42, 43, 45, 48, 49, 50, 52, 53, 56, 57, 58, 59, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 82, 87, 93, 96, 97, 100, 102, 104, 105, 106, 109, 112, 113, 114, 116, 117, 119, 121, 122, 124, 126, 127, 129, 134, 135, 136, 137, 139, 142, 143, 144, 150, 151, 160, 163, 165, 168, 169, 170, 171, 172, 175, 179], "person": [0, 5, 6, 39, 48, 49, 51, 52, 58, 59, 68, 72, 77, 80, 86, 89, 97, 101, 102, 103, 112, 114, 116, 118, 120, 121, 137, 144, 145, 146, 147, 163, 169, 176, 177], "capit": [0, 7, 49, 58, 61, 96, 119, 130, 140], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 25, 26, 27, 29, 30, 32, 34, 35, 39, 40, 41, 42, 43, 45, 46, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 82, 85, 86, 87, 88, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 150, 151, 153, 154, 157, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 174, 175, 177, 179, 180, 181], "you": [0, 1, 2, 3, 4, 5, 6, 8, 13, 14, 18, 19, 23, 25, 28, 29, 30, 31, 34, 35, 37, 39, 40, 41, 42, 43, 50, 51, 52, 54, 55, 56, 58, 61, 62, 63, 64, 65, 67, 68, 71, 74, 76, 77, 80, 82, 85, 87, 89, 91, 92, 93, 95, 103, 105, 107, 108, 109, 110, 112, 115, 116, 119, 122, 123, 125, 126, 129, 130, 131, 132, 135, 136, 138, 139, 141, 142, 149, 150, 151, 152, 155, 156, 157, 158, 160, 161, 162, 166, 168, 170, 171, 172, 175, 176, 178, 180, 181, 182], "re": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 26, 27, 29, 31, 35, 37, 40, 41, 42, 43, 45, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 82, 85, 87, 88, 89, 91, 92, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 150, 151, 153, 154, 155, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 182], "bui": [0, 59, 118, 126, 137, 142, 158, 163], "bag": [0, 43, 139], "tube": [0, 35], "sock": [0, 143], "american": [0, 69], "let": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 19, 25, 26, 28, 39, 40, 41, 42, 43, 45, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 74, 75, 76, 78, 79, 80, 82, 85, 86, 87, 88, 89, 95, 96, 97, 98, 99, 100, 101, 103, 106, 107, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 143, 144, 150, 152, 157, 158, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 179, 180], "creep": [0, 35, 156], "too": [0, 3, 4, 5, 8, 9, 26, 32, 35, 39, 41, 43, 49, 50, 52, 53, 54, 57, 58, 60, 61, 66, 67, 68, 70, 71, 75, 76, 78, 79, 80, 85, 86, 87, 89, 93, 102, 106, 110, 112, 113, 118, 119, 125, 129, 130, 131, 133, 135, 137, 139, 142, 147, 150, 151, 156, 158, 162, 163, 165, 167, 169, 172, 178, 179, 180, 181, 182], "mani": [0, 1, 3, 4, 6, 7, 9, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 42, 43, 45, 48, 49, 52, 53, 55, 56, 57, 58, 59, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 85, 86, 88, 89, 91, 93, 96, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 142, 143, 144, 146, 150, 151, 152, 156, 160, 162, 163, 165, 167, 168, 169, 170, 171, 172, 175, 177, 179, 180, 181], "like": [0, 1, 3, 4, 5, 8, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 39, 40, 41, 43, 45, 48, 49, 50, 52, 53, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 78, 79, 80, 85, 86, 87, 89, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 109, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 173, 175, 176, 178, 179, 180, 181], "health": [0, 35], "care": [0, 4, 8, 9, 26, 35, 48, 50, 53, 60, 61, 69, 86, 87, 101, 106, 112, 113, 127, 143, 158, 163], "educ": [0, 9, 35, 72, 102, 151, 162, 163], "public": [0, 3, 5, 26, 28, 35, 40, 59, 61, 68, 71, 80, 85, 97, 102, 115, 125, 153, 172, 173, 175], "mean": [0, 3, 4, 6, 7, 8, 9, 25, 26, 35, 39, 40, 41, 42, 43, 45, 49, 50, 53, 55, 57, 58, 61, 66, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 86, 87, 88, 89, 95, 96, 98, 99, 102, 103, 104, 106, 109, 111, 113, 114, 115, 116, 117, 121, 125, 126, 128, 129, 130, 134, 137, 138, 139, 140, 142, 143, 144, 151, 152, 156, 158, 160, 161, 163, 168, 169, 170, 171, 175, 177, 178, 180], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 43, 45, 46, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 93, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 160, 161, 162, 165, 167, 168, 169, 170, 172, 173, 174, 176, 177, 179, 180], "should": [0, 1, 2, 3, 4, 5, 6, 8, 9, 13, 25, 26, 27, 34, 35, 39, 40, 42, 43, 45, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 82, 85, 86, 92, 96, 99, 102, 103, 104, 106, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 129, 130, 131, 133, 134, 135, 136, 138, 139, 143, 144, 150, 151, 152, 153, 157, 158, 163, 165, 167, 168, 169, 170, 171, 174, 175, 176, 177, 179], "consid": [0, 4, 6, 9, 25, 26, 32, 39, 45, 48, 49, 53, 54, 57, 58, 62, 66, 69, 75, 78, 82, 86, 89, 96, 100, 103, 109, 112, 113, 116, 121, 124, 125, 128, 129, 130, 134, 137, 138, 139, 140, 142, 143, 153, 160, 162, 163, 168, 169, 170, 171, 172, 174, 178, 179], "less": [0, 3, 5, 7, 26, 35, 39, 41, 43, 45, 49, 53, 54, 57, 58, 59, 68, 69, 70, 72, 75, 76, 85, 86, 88, 89, 94, 99, 101, 103, 108, 112, 113, 116, 117, 119, 121, 122, 124, 125, 126, 130, 134, 139, 142, 144, 150, 152, 154, 162, 163, 167, 168, 169, 171, 175, 176, 177, 179], "mercenari": 0, "approach": [0, 1, 2, 3, 9, 15, 25, 35, 39, 41, 45, 48, 49, 52, 53, 56, 57, 60, 61, 67, 70, 76, 77, 78, 82, 85, 86, 87, 94, 95, 97, 100, 101, 103, 104, 106, 108, 109, 110, 113, 114, 117, 119, 121, 122, 127, 128, 130, 132, 133, 138, 139, 142, 144, 145, 162, 167, 168, 170, 179], "": [1, 2, 3, 6, 7, 9, 14, 19, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 114, 115, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 143, 144, 147, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 169, 170, 172, 173, 174, 176, 177, 179, 180, 181, 182], "project": [1, 2, 4, 6, 10, 11, 16, 18, 23, 27, 29, 34, 39, 40, 41, 43, 50, 51, 56, 57, 58, 59, 60, 61, 62, 66, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 91, 93, 97, 100, 101, 103, 104, 106, 107, 108, 110, 115, 119, 128, 131, 136, 138, 139, 150, 153, 162, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177], "popular": [1, 2, 3, 4, 5, 6, 8, 9, 19, 20, 26, 28, 32, 37, 39, 42, 51, 53, 59, 60, 61, 68, 69, 70, 72, 74, 75, 76, 77, 78, 80, 86, 99, 105, 106, 107, 110, 111, 113, 114, 118, 119, 121, 122, 126, 127, 129, 130, 134, 137, 138, 139, 150, 160, 161, 162, 163, 169, 170, 172, 181], "tool": [1, 2, 3, 5, 6, 7, 8, 9, 13, 19, 25, 26, 28, 30, 32, 35, 40, 41, 43, 45, 49, 50, 51, 56, 57, 58, 61, 62, 64, 65, 66, 67, 69, 71, 72, 74, 75, 77, 78, 79, 80, 82, 86, 87, 88, 92, 93, 94, 97, 98, 99, 103, 104, 105, 106, 107, 109, 112, 114, 115, 116, 117, 120, 121, 124, 133, 135, 137, 138, 142, 150, 151, 152, 153, 160, 161, 162, 163, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177], "pipelin": [1, 8, 93], "us": [1, 2, 3, 8, 9, 11, 14, 15, 16, 18, 19, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 39, 42, 43, 44, 46, 48, 50, 51, 57, 58, 59, 60, 67, 68, 69, 70, 71, 73, 75, 76, 78, 79, 80, 82, 86, 87, 88, 89, 92, 93, 94, 97, 102, 103, 104, 110, 116, 117, 122, 123, 125, 126, 128, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 145, 147, 151, 153, 154, 155, 156, 157, 158, 161, 163, 165, 166, 173, 174, 176, 179, 180], "e": [1, 3, 4, 6, 7, 9, 26, 29, 35, 40, 49, 53, 60, 61, 68, 70, 74, 79, 80, 82, 85, 88, 96, 100, 101, 103, 106, 112, 113, 115, 117, 119, 121, 122, 126, 127, 128, 129, 139, 140, 144, 150, 151, 162, 170, 171, 172, 174, 175, 179, 180], "extract": [1, 55, 70, 74, 75, 88, 126, 139, 152], "transform": [1, 25, 35, 59, 68, 109, 118, 146, 152], "load": [1, 4, 6, 25, 29, 34, 42, 49, 53, 59, 61, 62, 66, 68, 70, 74, 80, 86, 88, 94, 96, 100, 103, 109, 110, 121, 124, 127, 137, 138, 152, 160, 168, 169, 171, 174, 175, 177], "build": [1, 2, 3, 5, 6, 7, 9, 11, 19, 20, 29, 34, 35, 39, 40, 44, 45, 46, 49, 52, 64, 67, 70, 74, 75, 76, 77, 79, 80, 86, 91, 95, 97, 99, 101, 104, 106, 110, 113, 114, 117, 121, 125, 128, 129, 130, 132, 137, 139, 143, 153, 162, 165, 166, 167, 170, 173, 175, 176, 177], "machin": [1, 2, 4, 6, 9, 24, 26, 33, 34, 39, 40, 45, 49, 52, 58, 59, 61, 65, 66, 69, 70, 72, 74, 75, 76, 77, 78, 95, 99, 100, 104, 106, 111, 113, 115, 130, 133, 136, 138, 139, 142, 144, 150, 160, 171, 173, 174, 175, 177], "updat": [1, 2, 5, 16, 29, 30, 40, 41, 50, 52, 61, 66, 67, 70, 78, 96, 100, 106, 115, 140, 143, 150, 169, 170], "warehous": [1, 9, 116, 171], "other": [1, 3, 4, 7, 8, 9, 25, 26, 27, 28, 29, 30, 33, 35, 37, 40, 42, 43, 48, 49, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 86, 87, 88, 89, 91, 92, 96, 97, 98, 99, 100, 101, 102, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 139, 140, 142, 144, 145, 146, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 165, 167, 168, 169, 171, 174, 175, 176, 178, 179, 180, 181], "excel": [1, 3, 4, 5, 9, 29, 30, 32, 34, 35, 38, 39, 43, 45, 53, 61, 66, 67, 68, 69, 72, 75, 82, 88, 93, 95, 96, 100, 101, 103, 110, 112, 113, 117, 132, 133, 138, 139, 142, 151, 158, 160, 162, 163, 167, 168, 169, 171, 176, 177, 181], "choic": [1, 6, 9, 35, 37, 39, 43, 53, 58, 59, 60, 61, 67, 68, 69, 71, 72, 75, 76, 77, 79, 82, 86, 88, 101, 103, 110, 116, 124, 129, 130, 133, 137, 138, 142, 150, 151, 160, 163, 165, 167, 172, 175, 177, 181], "unlik": [1, 3, 7, 9, 30, 39, 43, 48, 49, 52, 53, 56, 58, 62, 68, 70, 71, 72, 75, 77, 85, 86, 102, 103, 110, 113, 114, 117, 119, 120, 124, 127, 129, 130, 134, 137, 142, 150, 152, 162, 168, 169, 171, 173, 175], "solut": [1, 2, 5, 7, 8, 9, 21, 25, 26, 28, 30, 31, 35, 41, 43, 45, 48, 51, 59, 61, 66, 67, 69, 72, 73, 75, 76, 86, 88, 93, 99, 103, 104, 105, 109, 113, 114, 118, 121, 123, 124, 126, 128, 130, 133, 134, 136, 137, 143, 150, 151, 162, 163, 168, 170, 174, 175], "space": [1, 4, 7, 8, 25, 35, 41, 42, 48, 49, 57, 59, 61, 67, 68, 72, 82, 87, 100, 103, 108, 109, 116, 118, 119, 120, 129, 134, 137, 138, 142, 153, 162, 163, 167, 170, 171, 173, 175], "aw": [1, 2, 4, 16, 19, 52, 59, 61, 68, 69, 71, 76, 80, 92, 97, 103, 116, 117, 132, 133, 163, 169, 175, 177], "step": [1, 4, 5, 8, 9, 25, 30, 32, 39, 40, 42, 43, 45, 52, 53, 56, 57, 58, 59, 60, 62, 65, 68, 70, 71, 72, 74, 75, 78, 79, 82, 87, 88, 96, 98, 99, 103, 106, 107, 109, 113, 116, 124, 126, 128, 130, 135, 138, 139, 142, 144, 146, 147, 160, 161, 163, 165, 168, 175, 182], "function": [1, 2, 3, 7, 9, 17, 19, 20, 22, 25, 26, 27, 30, 31, 32, 34, 36, 41, 42, 43, 48, 49, 52, 54, 55, 57, 59, 60, 61, 62, 66, 67, 68, 69, 70, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 88, 93, 97, 99, 100, 101, 104, 105, 107, 109, 110, 112, 114, 116, 117, 119, 126, 127, 128, 129, 130, 133, 134, 135, 137, 138, 139, 142, 143, 144, 150, 151, 152, 160, 161, 163, 167, 169, 170, 171, 174, 175, 177, 179], "defin": [1, 6, 25, 35, 42, 45, 46, 48, 49, 61, 66, 67, 69, 70, 72, 76, 77, 87, 88, 96, 98, 106, 109, 112, 113, 119, 120, 122, 124, 128, 129, 130, 135, 140, 143, 144, 151, 161, 162, 165, 168, 175, 177], "just": [1, 3, 4, 5, 7, 8, 9, 25, 26, 28, 29, 30, 31, 34, 35, 39, 40, 42, 43, 45, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 82, 85, 87, 88, 89, 97, 98, 99, 101, 102, 103, 108, 109, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 127, 128, 129, 130, 131, 135, 137, 138, 139, 142, 143, 150, 151, 153, 156, 157, 158, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182], "code": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 16, 19, 20, 24, 25, 29, 30, 31, 32, 35, 39, 41, 44, 45, 46, 48, 49, 52, 54, 56, 57, 58, 59, 61, 62, 65, 66, 67, 68, 69, 72, 74, 75, 77, 81, 82, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 144, 151, 152, 160, 161, 162, 163, 165, 167, 169, 171, 172, 173, 177, 179, 180, 181, 182], "conveni": [1, 4, 39, 41, 43, 55, 56, 59, 61, 69, 78, 99, 101, 103, 110, 112, 113, 114, 115, 117, 119, 121, 122, 126, 127, 139, 142, 150, 168, 169], "integr": [1, 4, 5, 9, 25, 26, 29, 35, 39, 40, 41, 49, 50, 52, 53, 61, 65, 68, 71, 72, 74, 80, 86, 88, 93, 100, 101, 103, 104, 109, 124, 127, 133, 139, 142, 151, 153, 161, 163, 167, 168, 169, 170, 177], "bash": [1, 4, 26, 39, 43, 59, 61, 66, 68, 76, 115, 117, 150, 174, 177], "script": [1, 4, 5, 6, 9, 26, 39, 40, 43, 49, 53, 59, 69, 70, 72, 76, 101, 105, 110, 111, 113, 115, 116, 117, 135, 141, 142, 150, 165, 167, 168, 171, 175, 177, 179, 181], "easili": [1, 2, 3, 4, 13, 19, 20, 25, 26, 29, 39, 40, 41, 42, 43, 45, 48, 49, 52, 56, 59, 61, 65, 66, 69, 74, 75, 76, 82, 87, 88, 98, 100, 103, 105, 106, 109, 110, 111, 113, 114, 115, 117, 118, 121, 129, 138, 139, 142, 143, 144, 150, 153, 156, 158, 160, 161, 162, 163, 165, 168, 169, 170, 175, 177], "through": [1, 3, 4, 5, 9, 25, 26, 27, 29, 31, 34, 35, 38, 39, 40, 41, 43, 49, 52, 53, 57, 58, 59, 61, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 78, 80, 82, 85, 87, 88, 89, 91, 93, 100, 104, 105, 106, 107, 109, 113, 114, 115, 117, 121, 122, 124, 125, 126, 128, 129, 130, 132, 133, 137, 139, 142, 144, 150, 155, 158, 160, 163, 165, 166, 167, 168, 172, 173, 179], "oper": [1, 2, 3, 4, 9, 19, 20, 25, 35, 39, 41, 43, 44, 46, 49, 53, 54, 59, 61, 67, 68, 70, 71, 75, 76, 79, 80, 82, 88, 98, 101, 104, 106, 109, 112, 113, 114, 117, 118, 120, 121, 124, 127, 128, 129, 130, 132, 138, 139, 142, 143, 150, 151, 160, 162, 163, 165, 168, 171, 174, 177], "plugin": [1, 5, 26, 39, 40, 43, 51, 66, 68, 72, 103, 107, 150, 153, 155, 157, 158], "open": [1, 5, 6, 7, 9, 26, 35, 39, 40, 41, 43, 52, 53, 57, 58, 59, 61, 62, 64, 65, 67, 68, 72, 73, 74, 75, 76, 82, 88, 93, 95, 97, 98, 99, 100, 103, 106, 108, 110, 115, 116, 117, 119, 121, 127, 129, 130, 133, 135, 139, 142, 143, 147, 150, 157, 160, 161, 162, 167, 177, 181], "sourc": [1, 2, 4, 5, 6, 8, 9, 19, 26, 27, 28, 35, 39, 41, 43, 45, 51, 52, 53, 58, 59, 62, 66, 67, 68, 70, 71, 72, 75, 76, 78, 80, 81, 88, 93, 95, 97, 99, 100, 101, 103, 105, 106, 108, 111, 115, 116, 117, 121, 128, 131, 134, 135, 138, 139, 141, 142, 143, 144, 151, 160, 167, 168, 171, 172, 174, 177, 179], "ha": [1, 3, 4, 5, 6, 7, 8, 9, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 142, 143, 144, 150, 151, 153, 155, 158, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 174, 175, 176, 177, 179, 181], "wide": [1, 3, 25, 35, 39, 41, 53, 61, 68, 72, 74, 75, 76, 77, 78, 87, 99, 100, 101, 104, 109, 110, 114, 119, 121, 122, 128, 129, 130, 134, 135, 142, 144, 150, 152, 177, 181], "industri": [1, 9, 29, 35, 57, 68, 69, 74, 77, 93, 108, 135, 166], "support": [1, 3, 4, 5, 6, 8, 26, 28, 29, 32, 35, 39, 40, 41, 43, 45, 49, 50, 52, 53, 58, 59, 61, 66, 68, 70, 71, 75, 76, 77, 78, 85, 88, 93, 94, 96, 100, 101, 104, 105, 107, 109, 110, 111, 112, 113, 115, 116, 117, 120, 121, 124, 129, 130, 131, 133, 137, 138, 139, 140, 142, 144, 147, 150, 151, 155, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 175, 177, 179, 181], "two": [1, 2, 3, 4, 5, 6, 8, 9, 24, 25, 28, 29, 30, 32, 33, 39, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 70, 71, 73, 74, 75, 76, 77, 79, 80, 82, 85, 86, 87, 88, 89, 92, 93, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 150, 151, 152, 153, 155, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179], "major": [1, 7, 9, 14, 30, 35, 45, 58, 59, 61, 63, 68, 69, 70, 80, 85, 86, 96, 99, 104, 105, 119, 133, 139, 162, 163, 170, 177], "cloud": [1, 2, 16, 59, 61, 77, 92, 97, 103, 106, 107, 139, 142, 177], "provid": [1, 5, 9, 25, 26, 32, 35, 39, 40, 41, 42, 45, 52, 53, 55, 58, 59, 61, 67, 68, 71, 72, 74, 76, 77, 78, 79, 86, 88, 99, 100, 103, 104, 105, 106, 109, 110, 111, 112, 113, 116, 117, 118, 124, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 152, 160, 161, 163, 167, 168, 169, 170, 177, 179], "googl": [1, 2, 4, 9, 18, 19, 34, 45, 51, 59, 60, 61, 64, 65, 69, 72, 78, 80, 89, 96, 113, 133, 142, 157, 168, 177], "manag": [1, 2, 4, 5, 7, 19, 24, 26, 27, 29, 39, 40, 41, 50, 51, 52, 53, 55, 56, 61, 66, 69, 72, 75, 77, 78, 85, 89, 93, 101, 102, 105, 111, 115, 119, 121, 132, 135, 139, 142, 150, 151, 155, 160, 161, 162, 166, 173, 175, 180], "product": [1, 3, 5, 8, 9, 25, 28, 29, 39, 40, 41, 43, 45, 51, 52, 56, 61, 69, 77, 78, 79, 80, 95, 98, 101, 103, 109, 115, 116, 118, 121, 130, 131, 133, 138, 142, 143, 158, 160, 163, 169, 171, 174, 175, 177, 179], "built": [1, 2, 3, 4, 8, 24, 26, 29, 32, 35, 37, 39, 40, 43, 45, 48, 49, 53, 54, 55, 59, 61, 67, 68, 69, 70, 71, 76, 88, 99, 100, 101, 103, 105, 106, 111, 112, 113, 114, 117, 118, 123, 127, 129, 130, 133, 135, 137, 138, 139, 142, 149, 150, 152, 156, 161, 162, 168, 169, 174], "amazon": [1, 66, 97, 105, 106, 117, 132, 163, 173, 177, 179], "workflow": [1, 2, 5, 13, 50, 53, 65, 71, 74, 76, 78, 100, 133, 153], "mwaa": 1, "compos": [1, 2, 11, 19, 25, 35, 54, 72, 76, 95, 106, 109, 115, 127, 133, 173], "respect": [1, 3, 6, 7, 9, 33, 34, 35, 39, 45, 49, 60, 61, 62, 66, 68, 69, 70, 76, 82, 88, 100, 108, 110, 114, 117, 121, 122, 126, 134, 139, 142, 144, 152, 163, 170], "although": [1, 3, 4, 6, 9, 29, 37, 39, 41, 43, 45, 49, 53, 54, 57, 58, 62, 68, 69, 70, 72, 78, 86, 95, 97, 100, 103, 106, 110, 112, 114, 117, 119, 120, 124, 127, 129, 132, 138, 139, 142, 143, 144, 151, 160, 162, 163, 168, 169, 170, 172, 177, 178], "compar": [1, 2, 3, 6, 7, 19, 31, 35, 40, 48, 53, 57, 62, 67, 68, 69, 70, 75, 86, 96, 97, 99, 100, 101, 103, 104, 112, 113, 114, 118, 119, 120, 124, 129, 132, 133, 134, 138, 139, 140, 143, 150, 151, 162, 163, 168, 169, 171, 172, 176, 177], "azur": [1, 9, 59], "quickstart": [1, 61, 135], "templat": [1, 29, 40, 49, 61, 71, 102, 107, 111, 143, 174], "deploi": [1, 5, 61, 71, 105, 106, 133, 173], "docker": [1, 2, 4, 9, 15, 16, 19, 23, 39, 40, 43, 63, 66, 67, 68, 72, 76, 103, 106, 127, 162, 173, 177], "base": [1, 3, 4, 5, 6, 7, 8, 9, 25, 30, 34, 35, 39, 41, 42, 43, 45, 53, 56, 57, 58, 59, 62, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 91, 96, 97, 99, 100, 104, 106, 107, 109, 112, 113, 114, 115, 117, 118, 119, 121, 122, 124, 126, 127, 128, 130, 133, 134, 137, 138, 139, 142, 143, 144, 150, 151, 152, 160, 161, 162, 163, 165, 167, 168, 171, 173, 174, 176, 177, 179, 181], "postgresql": [1, 61, 76, 95, 173], "get": [1, 2, 5, 6, 7, 8, 9, 16, 25, 27, 28, 29, 33, 35, 37, 40, 41, 43, 45, 46, 48, 49, 52, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 92, 96, 97, 102, 103, 104, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 149, 150, 151, 152, 153, 155, 156, 158, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181], "start": [1, 2, 3, 5, 6, 7, 8, 16, 25, 26, 27, 29, 35, 41, 43, 45, 46, 48, 49, 50, 52, 53, 54, 56, 59, 60, 61, 62, 65, 68, 70, 71, 72, 73, 76, 77, 79, 80, 81, 82, 85, 86, 87, 89, 94, 96, 97, 98, 100, 102, 103, 104, 108, 109, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 142, 143, 144, 150, 151, 152, 157, 158, 160, 161, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 181], "your": [1, 2, 5, 6, 7, 8, 9, 13, 14, 24, 26, 27, 29, 30, 32, 34, 35, 37, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 56, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 85, 87, 88, 89, 92, 93, 95, 96, 97, 98, 99, 102, 103, 106, 107, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 132, 134, 135, 136, 137, 139, 140, 142, 144, 150, 158, 160, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 178, 179, 180, 182], "local": [1, 2, 5, 8, 16, 35, 40, 43, 51, 52, 55, 56, 59, 61, 66, 68, 70, 76, 78, 81, 86, 95, 97, 99, 100, 101, 104, 106, 111, 113, 115, 119, 121, 135, 155, 160, 171, 174, 175, 178], "straightforward": [1, 5, 6, 8, 26, 31, 39, 48, 52, 53, 54, 61, 64, 68, 71, 72, 101, 109, 112, 116, 119, 124, 127, 128, 130, 131, 133, 134, 139, 142, 144, 160, 161, 162, 167, 169, 173], "still": [1, 3, 5, 8, 9, 25, 26, 28, 29, 33, 35, 39, 40, 43, 45, 48, 49, 50, 52, 53, 58, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 80, 85, 86, 88, 91, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 109, 112, 116, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 133, 135, 138, 139, 142, 143, 144, 146, 150, 151, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 168, 169, 170, 171, 173, 174, 175, 177, 179, 181], "mai": [1, 2, 3, 4, 5, 6, 8, 19, 25, 26, 28, 29, 31, 32, 34, 35, 39, 40, 41, 42, 43, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 66, 67, 68, 71, 72, 73, 76, 77, 78, 80, 82, 85, 86, 87, 88, 92, 93, 95, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 115, 116, 119, 125, 126, 131, 132, 133, 135, 136, 138, 139, 142, 146, 150, 151, 158, 160, 162, 163, 166, 168, 170, 172, 175, 178, 179, 180, 182], "encount": [1, 6, 29, 45, 49, 61, 65, 68, 71, 76, 86, 102, 106, 115, 116, 126, 139, 142, 143, 161, 163, 169, 170, 175, 176, 179], "question": [1, 2, 3, 4, 18, 23, 25, 26, 31, 32, 35, 45, 48, 49, 53, 57, 58, 59, 68, 75, 76, 77, 78, 80, 84, 98, 100, 102, 109, 110, 112, 113, 114, 116, 121, 122, 124, 126, 134, 135, 137, 138, 142, 143, 160, 174, 175, 177, 178, 179], "behavior": [1, 7, 29, 35, 37, 45, 48, 53, 54, 55, 61, 65, 70, 99, 101, 112, 113, 121, 128, 134, 136, 143, 144, 146, 159, 168, 169], "along": [1, 3, 4, 5, 8, 27, 30, 35, 39, 41, 42, 43, 45, 53, 57, 61, 62, 65, 66, 67, 68, 70, 72, 74, 75, 76, 78, 80, 85, 87, 88, 92, 99, 115, 116, 118, 121, 135, 137, 138, 140, 143, 144, 150, 151, 160, 161, 162, 163, 166, 168, 169, 170, 175, 176, 179], "walk": [1, 5, 26, 40, 41, 52, 58, 61, 65, 66, 68, 70, 75, 76, 77, 78, 85, 92, 97, 105, 106, 115, 139, 155, 156, 157, 158, 161, 167, 172, 173], "involv": [1, 9, 26, 33, 35, 39, 41, 45, 52, 53, 54, 66, 69, 70, 75, 76, 79, 80, 100, 103, 106, 110, 111, 116, 119, 127, 129, 133, 134, 135, 137, 142, 143, 167, 177], "answer": [1, 4, 9, 25, 27, 29, 35, 45, 46, 53, 54, 58, 61, 75, 77, 79, 80, 82, 85, 86, 96, 99, 102, 103, 109, 112, 113, 124, 126, 130, 134, 137, 138, 140, 142, 150, 151, 162, 163, 165, 168, 171, 175], "had": [1, 5, 9, 26, 27, 28, 32, 35, 37, 39, 41, 45, 49, 50, 52, 57, 58, 60, 66, 67, 68, 69, 72, 75, 76, 78, 82, 94, 95, 96, 102, 103, 104, 107, 108, 110, 112, 113, 114, 115, 118, 120, 121, 124, 125, 126, 128, 132, 133, 134, 135, 136, 137, 142, 151, 153, 155, 158, 160, 162, 163, 168, 169, 172, 173, 175, 177, 178], "first": [1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 16, 24, 25, 30, 31, 32, 34, 35, 37, 39, 40, 42, 43, 45, 48, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 91, 93, 96, 97, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 151, 152, 153, 156, 158, 160, 161, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "tri": [1, 3, 6, 33, 35, 50, 53, 67, 70, 71, 75, 80, 82, 85, 92, 96, 104, 113, 115, 117, 120, 130, 142, 151, 167, 168, 170], "exercis": [1, 2, 3, 5, 7, 13, 19, 20, 21, 23, 26, 27, 30, 31, 34, 42, 43, 48, 57, 58, 61, 72, 75, 77, 78, 80, 82, 86, 93, 96, 107, 123, 127, 130, 133, 134, 143, 155, 162, 165, 167, 168, 172], "myself": [1, 4, 5, 8, 9, 27, 29, 45, 58, 68, 72, 82, 86, 89, 112, 125, 135, 137, 157, 163, 172, 178], "hope": [1, 5, 6, 28, 29, 31, 32, 35, 41, 52, 58, 68, 78, 79, 86, 89, 92, 113, 120, 131, 143, 144, 154, 158, 163, 166, 175, 179], "slightli": [1, 3, 5, 6, 35, 39, 45, 65, 106, 129, 139, 143, 144, 151, 168, 170, 171, 172], "differ": [1, 3, 4, 6, 7, 8, 9, 25, 26, 28, 29, 30, 34, 35, 39, 40, 43, 45, 48, 49, 53, 54, 56, 57, 61, 62, 65, 66, 68, 69, 73, 74, 75, 76, 77, 86, 88, 89, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 150, 151, 152, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 177, 179, 180], "order": [1, 3, 7, 9, 25, 26, 46, 49, 53, 58, 68, 70, 75, 82, 92, 99, 100, 102, 106, 109, 116, 119, 120, 122, 124, 126, 129, 130, 133, 139, 142, 143, 150, 152, 160, 161, 165, 169, 171, 176, 178], "than": [1, 3, 4, 6, 8, 9, 26, 27, 28, 29, 30, 33, 34, 35, 39, 41, 42, 43, 45, 48, 49, 50, 51, 54, 56, 57, 58, 59, 61, 62, 65, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 82, 85, 86, 87, 88, 89, 94, 96, 97, 98, 99, 100, 101, 102, 104, 106, 108, 110, 112, 113, 115, 116, 117, 118, 119, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 146, 147, 150, 151, 152, 154, 157, 158, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 175, 176, 177, 178, 179, 180], "help": [1, 7, 9, 25, 26, 32, 35, 36, 39, 40, 42, 43, 45, 49, 53, 55, 57, 58, 59, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 76, 77, 78, 79, 82, 85, 86, 88, 89, 99, 100, 101, 103, 105, 106, 109, 110, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 128, 130, 134, 137, 139, 143, 146, 150, 155, 158, 160, 162, 163, 167, 169, 170, 171, 175, 179], "address": [1, 26, 49, 52, 72, 86, 112, 114, 121, 135, 144, 168, 173, 179], "issu": [1, 3, 7, 8, 9, 26, 29, 30, 35, 41, 43, 48, 51, 52, 53, 60, 61, 67, 69, 71, 75, 78, 79, 80, 87, 88, 101, 110, 111, 112, 113, 115, 121, 124, 129, 132, 134, 139, 142, 143, 150, 158, 161, 163, 170, 173, 175, 179], "went": [1, 61, 66, 68, 70, 75, 78, 86, 92, 107, 125, 135, 157, 158, 179], "run": [1, 2, 5, 6, 7, 8, 9, 10, 12, 13, 16, 28, 29, 32, 39, 40, 41, 43, 45, 49, 52, 54, 56, 57, 59, 64, 66, 70, 71, 73, 74, 75, 76, 77, 79, 80, 82, 85, 86, 87, 88, 91, 93, 95, 96, 97, 99, 101, 103, 104, 105, 106, 109, 112, 113, 114, 116, 117, 118, 120, 121, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 137, 138, 140, 142, 143, 144, 151, 153, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "linux": [1, 8, 9, 25, 26, 39, 40, 43, 61, 67, 68, 72, 74, 97, 100, 101, 105, 109, 111, 113, 115, 117, 139, 150, 158, 162, 171, 174, 175], "For": [1, 2, 3, 4, 5, 6, 9, 17, 19, 20, 26, 27, 29, 35, 39, 40, 42, 43, 45, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 82, 85, 86, 87, 88, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 122, 125, 127, 128, 130, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 150, 151, 152, 153, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181], "window": [1, 2, 5, 9, 24, 25, 26, 39, 40, 43, 50, 52, 56, 58, 61, 67, 68, 70, 72, 73, 74, 78, 101, 103, 105, 106, 109, 110, 111, 116, 117, 135, 137, 139, 150, 158, 162, 163, 167, 170, 171, 174, 175, 176], "need": [1, 3, 4, 5, 6, 7, 8, 9, 25, 26, 28, 29, 31, 34, 35, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 91, 92, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 144, 147, 150, 151, 152, 153, 157, 158, 160, 161, 162, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 182], "wsl2": 1, "contain": [1, 2, 3, 4, 7, 9, 10, 11, 15, 19, 25, 26, 29, 34, 35, 39, 41, 42, 43, 45, 48, 49, 53, 54, 55, 60, 62, 67, 68, 69, 71, 72, 74, 75, 76, 78, 88, 93, 95, 96, 97, 98, 99, 100, 101, 103, 106, 107, 109, 111, 113, 114, 117, 118, 121, 122, 127, 129, 134, 135, 138, 139, 140, 142, 143, 144, 152, 161, 168, 169, 170, 173, 175, 177], "default": [1, 3, 4, 5, 6, 26, 39, 41, 42, 43, 45, 46, 48, 49, 52, 53, 55, 56, 59, 61, 62, 64, 67, 68, 70, 72, 73, 83, 85, 87, 88, 97, 98, 99, 100, 101, 106, 107, 110, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 127, 128, 130, 132, 134, 138, 139, 150, 157, 161, 162, 167, 168, 169, 170, 171, 172, 175, 179], "databas": [1, 3, 6, 8, 29, 35, 53, 61, 68, 79, 92, 95, 102, 113, 116, 118, 121, 124, 127, 131, 133, 134, 138, 143, 144, 161, 168, 171], "test": [1, 2, 7, 8, 16, 19, 27, 28, 29, 30, 34, 35, 40, 41, 43, 45, 48, 49, 52, 53, 54, 56, 61, 64, 65, 66, 69, 70, 71, 75, 76, 78, 79, 80, 82, 86, 89, 94, 95, 97, 99, 100, 103, 106, 110, 112, 113, 114, 116, 117, 119, 121, 122, 124, 127, 129, 130, 134, 138, 139, 142, 143, 144, 150, 153, 155, 162, 163, 169, 173, 175, 177, 178, 179, 180, 181], "sqlite": [1, 61, 136, 160, 161], "3": [1, 2, 3, 5, 6, 7, 22, 25, 26, 31, 32, 35, 39, 40, 41, 43, 45, 48, 49, 50, 53, 54, 55, 56, 59, 61, 62, 64, 65, 66, 67, 69, 70, 72, 75, 80, 81, 82, 85, 87, 88, 92, 96, 97, 98, 99, 101, 102, 104, 105, 106, 108, 110, 111, 112, 113, 115, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 138, 139, 140, 142, 143, 144, 150, 151, 152, 157, 160, 161, 162, 163, 167, 168, 169, 170, 171, 176, 179, 181], "15": [1, 2, 6, 9, 17, 25, 35, 45, 55, 59, 61, 80, 82, 88, 96, 99, 102, 109, 115, 119, 122, 130, 138, 140, 144, 162, 168], "so": [1, 3, 4, 6, 7, 8, 9, 25, 26, 27, 28, 29, 30, 31, 32, 35, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181], "binari": [1, 6, 61, 67, 69, 89, 100, 106, 110, 115, 134, 135, 137, 162, 165, 171, 174, 175, 177], "befor": [1, 6, 7, 8, 9, 26, 27, 31, 35, 39, 40, 41, 43, 45, 48, 49, 50, 52, 55, 58, 61, 62, 66, 67, 68, 69, 70, 72, 73, 75, 77, 79, 85, 86, 87, 88, 89, 97, 98, 99, 100, 101, 102, 104, 106, 107, 110, 112, 114, 116, 117, 118, 119, 120, 121, 122, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 139, 140, 142, 143, 144, 146, 150, 156, 158, 160, 161, 163, 165, 168, 169, 170, 171, 175, 177, 178, 179], "begin": [1, 3, 4, 5, 9, 26, 35, 36, 38, 40, 41, 43, 45, 48, 49, 51, 53, 54, 58, 61, 62, 64, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 82, 85, 86, 87, 91, 94, 96, 97, 99, 100, 101, 103, 106, 110, 113, 115, 116, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 132, 134, 135, 137, 138, 139, 140, 142, 143, 146, 147, 150, 154, 160, 161, 163, 165, 167, 168, 170, 172, 175, 177, 178, 179, 182], "As": [1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 26, 28, 30, 32, 35, 39, 40, 41, 42, 43, 45, 48, 49, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 82, 85, 86, 87, 88, 89, 91, 92, 93, 96, 99, 100, 101, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 146, 150, 152, 155, 156, 157, 158, 161, 162, 163, 165, 167, 168, 169, 170, 171, 173, 174, 175, 177, 178, 179], "time": [1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 19, 20, 25, 26, 27, 28, 29, 30, 33, 39, 40, 41, 42, 43, 45, 48, 49, 50, 52, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 91, 92, 94, 96, 97, 100, 101, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 179, 181], "write": [1, 2, 4, 5, 6, 7, 8, 9, 19, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 40, 41, 43, 45, 48, 49, 50, 53, 57, 58, 60, 65, 66, 68, 69, 70, 71, 73, 75, 77, 79, 80, 81, 82, 86, 87, 89, 92, 96, 97, 99, 101, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 116, 117, 118, 120, 122, 123, 126, 128, 133, 134, 137, 138, 139, 142, 154, 155, 158, 160, 161, 162, 163, 165, 166, 168, 169, 172, 173, 175, 176, 177, 178], "7": [1, 3, 7, 9, 25, 39, 42, 43, 49, 59, 61, 66, 67, 69, 70, 75, 80, 82, 83, 85, 96, 98, 99, 100, 101, 104, 110, 112, 113, 114, 115, 122, 124, 126, 128, 129, 130, 134, 138, 140, 142, 143, 151, 161, 169, 171, 173], "10": [1, 2, 3, 4, 5, 7, 9, 18, 25, 26, 34, 35, 39, 40, 41, 42, 43, 45, 49, 53, 56, 59, 61, 62, 65, 66, 69, 70, 73, 75, 80, 81, 82, 83, 84, 85, 87, 88, 96, 99, 106, 109, 112, 113, 114, 115, 118, 119, 122, 124, 126, 128, 129, 134, 139, 140, 142, 144, 151, 156, 161, 162, 165, 168, 169, 171, 173, 175, 176, 182], "miniconda": [1, 39, 67, 72, 111], "set": [1, 2, 3, 5, 6, 7, 8, 18, 25, 26, 28, 29, 31, 35, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 61, 62, 65, 68, 70, 71, 72, 76, 78, 80, 83, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 147, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 170, 171, 173, 174, 176, 177, 179, 180, 181], "up": [1, 3, 4, 5, 6, 7, 8, 9, 25, 26, 28, 29, 31, 32, 35, 39, 40, 41, 43, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 91, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 109, 112, 113, 114, 115, 116, 118, 119, 122, 123, 124, 126, 127, 129, 130, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 150, 151, 153, 154, 157, 158, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 174, 176, 178], "environ": [1, 2, 3, 5, 6, 8, 10, 11, 19, 24, 26, 28, 31, 35, 41, 43, 52, 56, 59, 60, 61, 66, 67, 69, 71, 72, 76, 99, 100, 103, 104, 106, 110, 111, 115, 117, 121, 131, 132, 136, 138, 139, 142, 150, 153, 158, 160, 161, 162, 167, 168, 169, 170, 171, 181], "pyenv": [1, 2, 4, 24, 68, 104, 117, 139, 141, 175], "version": [1, 2, 3, 4, 5, 6, 8, 19, 24, 26, 28, 31, 32, 35, 39, 40, 43, 45, 48, 52, 53, 54, 56, 57, 58, 59, 61, 62, 65, 67, 69, 70, 71, 72, 73, 74, 78, 87, 88, 96, 98, 100, 101, 105, 106, 110, 111, 112, 114, 117, 119, 120, 121, 127, 130, 134, 135, 137, 139, 142, 144, 150, 153, 160, 162, 163, 167, 168, 170, 171, 177, 179, 182], "see": [1, 3, 4, 6, 7, 8, 9, 25, 26, 27, 29, 30, 32, 33, 34, 35, 39, 40, 41, 42, 43, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 84, 85, 87, 88, 89, 92, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 158, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181], "conda": [1, 2, 3, 4, 6, 24, 28, 29, 31, 62, 66, 72, 75, 110, 131, 139, 141, 142, 162, 168, 170], "v": [1, 2, 3, 7, 9, 10, 11, 15, 16, 19, 22, 24, 25, 26, 27, 28, 30, 31, 35, 48, 51, 66, 68, 70, 72, 73, 76, 77, 78, 79, 80, 93, 96, 97, 102, 104, 109, 115, 116, 123, 127, 131, 133, 141, 160, 161, 167, 174, 181], "tradeoff": [1, 39, 79, 100, 113, 124, 127, 139], "here": [1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 26, 30, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 89, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181], "creat": [1, 2, 6, 7, 8, 22, 25, 26, 30, 31, 32, 34, 35, 42, 43, 45, 48, 49, 50, 51, 53, 55, 56, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 77, 78, 80, 84, 85, 86, 87, 94, 100, 102, 103, 104, 105, 107, 109, 111, 112, 116, 118, 120, 121, 122, 124, 125, 127, 129, 130, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 152, 154, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 174, 177], "isol": [1, 35, 39, 56, 61, 66, 68, 69, 70, 100, 101, 121, 136, 147, 175], "airflowb": 1, "n": [1, 3, 6, 25, 35, 39, 45, 53, 55, 68, 69, 75, 80, 81, 96, 97, 99, 100, 105, 106, 109, 113, 117, 119, 126, 127, 129, 130, 134, 139, 140, 142, 143, 144, 151, 160, 162, 170, 171, 177], "activ": [1, 3, 5, 6, 17, 25, 34, 39, 40, 43, 51, 52, 56, 57, 58, 59, 66, 70, 72, 75, 78, 100, 101, 104, 105, 109, 111, 131, 135, 138, 141, 146, 158, 160, 162, 163, 169, 171, 177], "onc": [1, 3, 4, 6, 7, 8, 9, 25, 26, 28, 30, 33, 39, 40, 41, 42, 43, 49, 50, 52, 53, 57, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 85, 86, 87, 88, 91, 92, 93, 96, 97, 98, 100, 103, 104, 106, 109, 110, 112, 118, 119, 121, 122, 126, 127, 128, 130, 132, 134, 135, 136, 137, 139, 143, 144, 146, 160, 161, 162, 163, 165, 167, 168, 169, 170, 173, 174, 178, 179], "done": [1, 2, 6, 8, 16, 26, 30, 31, 35, 39, 40, 41, 42, 43, 45, 46, 48, 52, 54, 56, 58, 61, 64, 65, 66, 68, 69, 71, 72, 73, 75, 76, 79, 80, 85, 86, 88, 91, 92, 93, 96, 97, 100, 104, 106, 107, 108, 112, 114, 118, 119, 120, 121, 127, 128, 129, 135, 137, 138, 140, 150, 151, 153, 158, 161, 162, 166, 168, 170, 171, 175, 179], "pip": [1, 2, 3, 4, 5, 6, 24, 28, 29, 40, 41, 43, 52, 53, 55, 59, 61, 62, 65, 67, 68, 70, 72, 74, 75, 81, 88, 105, 106, 109, 110, 112, 113, 115, 139, 141, 142, 161, 162, 168, 170, 174], "point": [1, 3, 4, 5, 6, 8, 9, 25, 26, 30, 34, 35, 36, 39, 40, 41, 43, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 91, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 150, 151, 152, 153, 154, 157, 158, 160, 161, 162, 163, 165, 167, 168, 169, 170, 173, 174, 175, 176, 178, 179, 180], "explor": [1, 2, 3, 5, 6, 14, 19, 25, 26, 32, 34, 39, 40, 41, 43, 45, 53, 58, 59, 61, 64, 65, 66, 67, 70, 72, 74, 75, 80, 88, 93, 99, 103, 109, 120, 133, 134, 140, 142, 150, 152, 175], "tutori": [1, 2, 10, 19, 20, 21, 23, 30, 48, 52, 55, 58, 61, 65, 71, 72, 74, 75, 77, 78, 79, 80, 88, 92, 94, 98, 106, 110, 114, 117, 120, 127, 128, 131, 134, 135, 137, 138, 139, 143, 160, 163, 168, 170, 172, 175, 176], "main": [1, 3, 5, 6, 8, 26, 34, 35, 40, 44, 53, 57, 58, 60, 61, 65, 67, 69, 70, 71, 74, 77, 78, 86, 97, 99, 103, 111, 113, 114, 119, 120, 122, 123, 124, 126, 128, 129, 139, 142, 143, 144, 150, 162, 165, 167, 168, 169, 171, 172, 177], "document": [1, 2, 4, 7, 9, 12, 26, 27, 30, 39, 40, 45, 50, 52, 53, 54, 60, 61, 66, 67, 68, 69, 70, 71, 72, 75, 79, 81, 82, 85, 98, 100, 101, 103, 106, 110, 113, 114, 115, 119, 120, 123, 127, 129, 133, 134, 135, 138, 139, 143, 160, 161, 162, 167, 169, 170, 171, 173, 179], "page": [1, 3, 4, 26, 31, 34, 38, 40, 50, 52, 56, 57, 58, 59, 61, 65, 67, 72, 74, 75, 78, 84, 89, 99, 103, 106, 111, 143, 149, 163, 167, 171, 177], "recommend": [1, 3, 4, 5, 7, 9, 37, 39, 40, 43, 53, 57, 58, 59, 60, 61, 66, 68, 69, 71, 76, 77, 78, 88, 101, 113, 114, 115, 119, 120, 121, 122, 123, 133, 139, 144, 160, 162, 163, 167, 172, 175], "spend": [1, 9, 29, 39, 41, 48, 50, 53, 57, 58, 66, 67, 69, 72, 75, 76, 77, 79, 82, 86, 103, 106, 112, 113, 116, 119, 125, 134, 139, 142, 144, 151, 154, 158, 159, 162, 163, 175, 176], "addit": [1, 3, 4, 5, 6, 8, 9, 35, 38, 39, 40, 43, 50, 52, 53, 55, 58, 59, 65, 66, 67, 68, 69, 71, 72, 74, 75, 77, 78, 82, 86, 87, 88, 91, 99, 100, 101, 103, 104, 105, 106, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 133, 134, 138, 139, 141, 143, 144, 150, 151, 160, 162, 165, 167, 169, 171, 174, 175, 176, 177, 179], "gloss": [1, 124, 163], "over": [1, 4, 5, 6, 9, 25, 26, 29, 30, 32, 35, 36, 39, 42, 43, 53, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 75, 80, 82, 86, 87, 88, 89, 93, 94, 96, 97, 98, 103, 106, 109, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 127, 128, 129, 134, 138, 139, 140, 142, 143, 150, 151, 153, 156, 157, 160, 162, 163, 165, 166, 168, 169, 171, 172, 173, 174, 178, 179, 180, 181], "somewhat": [1, 3, 4, 6, 8, 26, 35, 39, 40, 41, 43, 45, 49, 53, 58, 61, 68, 70, 75, 87, 91, 103, 107, 110, 113, 114, 116, 117, 119, 121, 124, 127, 131, 133, 139, 142, 143, 144, 150, 160, 161, 165, 167, 168, 169, 171, 175, 177], "rush": 1, "hand": [1, 2, 3, 6, 7, 9, 19, 20, 25, 33, 35, 39, 45, 48, 49, 53, 57, 58, 59, 67, 68, 69, 70, 71, 72, 75, 76, 77, 80, 85, 86, 87, 88, 89, 96, 99, 102, 103, 106, 109, 112, 116, 117, 118, 119, 121, 124, 125, 128, 133, 134, 135, 136, 139, 140, 142, 143, 144, 150, 151, 152, 161, 162, 163, 179], "dirti": [1, 72, 165, 168], "With": [1, 2, 9, 11, 12, 13, 16, 18, 19, 20, 21, 23, 24, 28, 30, 32, 35, 40, 43, 49, 56, 57, 74, 76, 79, 80, 86, 88, 93, 100, 101, 103, 106, 107, 110, 117, 119, 120, 129, 139, 142, 155, 161, 165, 168, 170, 175, 179], "abov": [1, 4, 6, 7, 25, 26, 33, 35, 39, 40, 41, 42, 43, 45, 48, 49, 50, 52, 53, 55, 56, 58, 59, 61, 62, 66, 68, 69, 70, 71, 72, 73, 74, 76, 82, 85, 87, 88, 96, 98, 99, 100, 101, 106, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 122, 124, 126, 127, 128, 129, 130, 134, 139, 142, 143, 144, 150, 156, 160, 163, 165, 167, 168, 169, 171, 175, 179, 180], "import": [1, 3, 4, 6, 7, 8, 9, 25, 26, 35, 41, 42, 43, 45, 46, 48, 49, 52, 53, 54, 55, 58, 59, 60, 62, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 101, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 129, 130, 134, 135, 137, 138, 139, 142, 143, 144, 151, 152, 158, 160, 161, 162, 163, 166, 168, 169, 171, 172, 173, 174, 179], "shortcut": [1, 35, 43, 54, 72, 134], "follow": [1, 3, 4, 6, 7, 8, 9, 25, 26, 29, 35, 39, 40, 41, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 80, 82, 85, 87, 88, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 132, 134, 135, 136, 137, 138, 139, 140, 143, 144, 150, 151, 152, 156, 158, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 174, 175, 177, 179], "standalon": [1, 32, 41, 77, 78, 174], "initi": [1, 4, 5, 8, 25, 26, 35, 41, 45, 50, 62, 67, 71, 75, 88, 92, 96, 101, 109, 112, 123, 129, 140, 151, 153, 167, 169], "user": [1, 3, 5, 6, 25, 39, 42, 43, 45, 48, 49, 50, 52, 53, 56, 60, 61, 66, 68, 71, 72, 73, 74, 75, 76, 77, 79, 81, 88, 92, 100, 101, 106, 109, 111, 112, 113, 115, 119, 121, 124, 125, 128, 129, 130, 132, 133, 135, 138, 139, 140, 142, 150, 153, 160, 163, 167, 168, 169, 172, 174, 175], "both": [1, 3, 4, 6, 7, 9, 25, 26, 29, 30, 32, 33, 35, 39, 40, 41, 42, 43, 45, 46, 48, 49, 52, 53, 55, 57, 58, 59, 61, 66, 67, 68, 69, 70, 71, 73, 75, 76, 78, 82, 85, 86, 87, 88, 93, 95, 96, 97, 98, 99, 100, 101, 103, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 142, 143, 144, 146, 150, 151, 152, 155, 158, 161, 162, 163, 165, 167, 168, 169, 170, 171, 174, 175, 177, 179, 181], "server": [1, 2, 8, 19, 29, 41, 59, 61, 68, 71, 72, 78, 95, 100, 106, 115, 116, 118, 137, 138, 173, 177], "If": [1, 3, 4, 5, 6, 8, 9, 25, 26, 27, 28, 29, 31, 35, 39, 40, 41, 42, 43, 45, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 82, 85, 86, 87, 88, 89, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 147, 150, 151, 152, 154, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 174, 175, 177, 179, 180, 182], "navig": [1, 39, 40, 43, 50, 61, 71, 72, 103, 106, 121, 123, 168], "browser": [1, 2, 8, 12, 30, 40, 41, 53, 61, 68, 72, 73, 103, 106, 107, 115, 119, 149, 170, 173], "command": [1, 2, 6, 8, 13, 26, 36, 39, 40, 41, 43, 50, 56, 58, 62, 64, 65, 67, 68, 72, 73, 74, 75, 76, 78, 81, 88, 97, 100, 101, 103, 105, 107, 110, 111, 115, 117, 135, 137, 142, 150, 160, 162, 168, 169, 174, 175, 177], "It": [1, 2, 3, 4, 5, 6, 7, 9, 13, 22, 25, 26, 27, 29, 31, 32, 33, 35, 37, 39, 40, 41, 42, 43, 45, 49, 51, 53, 54, 55, 56, 58, 59, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 82, 87, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 122, 124, 126, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 151, 152, 158, 160, 161, 162, 163, 167, 168, 170, 171, 173, 175, 176, 177, 178, 181], "http": [1, 3, 5, 6, 7, 8, 25, 26, 29, 34, 35, 40, 41, 43, 48, 52, 54, 59, 60, 61, 68, 70, 71, 72, 80, 81, 84, 86, 97, 98, 99, 100, 106, 108, 110, 115, 116, 127, 135, 141, 143, 145, 149, 150, 152, 161, 168, 169, 173, 175, 179], "localhost": [1, 6, 8, 61, 72, 110, 173], "8080": [1, 8, 61, 173], "land": [1, 4, 9, 102, 150, 163], "view": [1, 3, 4, 28, 33, 35, 39, 41, 43, 45, 50, 52, 53, 65, 67, 70, 73, 77, 80, 89, 93, 96, 99, 103, 106, 110, 120, 125, 126, 127, 128, 129, 133, 135, 142, 150, 155, 162, 163, 167, 170, 171, 175], "portion": [1, 43, 53, 62, 71, 75, 80, 113, 117, 139, 142, 151, 153, 163, 177, 178], "shown": [1, 4, 26, 35, 39, 40, 42, 43, 48, 56, 59, 62, 67, 68, 70, 71, 72, 73, 82, 85, 87, 88, 96, 98, 99, 100, 103, 106, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 134, 139, 142, 143, 144, 150, 151, 160, 162, 167, 168, 170, 171, 174, 175, 179], "A": [1, 2, 3, 4, 5, 10, 12, 13, 15, 16, 19, 20, 23, 24, 25, 30, 31, 34, 35, 42, 45, 48, 52, 55, 58, 60, 62, 68, 69, 73, 76, 77, 78, 80, 83, 84, 85, 86, 88, 96, 98, 101, 105, 109, 112, 119, 120, 122, 124, 126, 129, 130, 131, 133, 135, 139, 140, 142, 144, 151, 155, 160, 161, 163, 165, 167, 169, 170, 172, 173, 174, 175, 177, 179, 182], "direct": [1, 4, 35, 39, 41, 45, 77, 94, 102, 116, 122, 124, 130, 133, 139, 153, 163, 170, 181], "acycl": 1, "graph": [1, 2, 22, 25, 30, 31, 35, 41, 53, 62, 68, 74, 80, 82, 83, 86, 101, 109, 163, 178], "word": [1, 5, 7, 9, 25, 43, 45, 48, 53, 58, 62, 65, 66, 67, 68, 82, 85, 86, 102, 114, 118, 120, 121, 124, 126, 128, 130, 131, 138, 140, 143, 152, 163, 169], "node": [1, 2, 4, 9, 16, 35, 60, 105, 106, 107, 144, 177], "don": [1, 3, 4, 5, 6, 7, 8, 9, 26, 27, 29, 30, 33, 34, 35, 39, 40, 41, 42, 43, 45, 48, 49, 50, 52, 53, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 85, 86, 87, 88, 89, 92, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 124, 126, 127, 128, 133, 135, 137, 138, 139, 141, 142, 143, 144, 150, 151, 153, 155, 156, 158, 159, 160, 161, 163, 165, 166, 167, 168, 170, 172, 174, 175, 176, 178, 179, 180, 181], "t": [1, 3, 4, 5, 6, 7, 8, 9, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 45, 49, 50, 52, 53, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181], "lead": [1, 6, 9, 25, 35, 41, 42, 45, 49, 53, 88, 106, 109, 110, 127, 133, 146, 163, 166, 169, 170, 177], "path": [1, 5, 7, 9, 35, 39, 40, 60, 61, 65, 66, 67, 70, 71, 74, 77, 97, 101, 106, 115, 116, 119, 121, 135, 139, 143, 160, 171], "loop": [1, 2, 6, 7, 19, 20, 33, 35, 43, 45, 53, 55, 57, 69, 70, 74, 76, 87, 88, 96, 98, 114, 116, 117, 122, 124, 134, 140, 142, 151, 167, 169], "back": [1, 4, 6, 7, 9, 29, 30, 35, 41, 43, 45, 48, 49, 50, 52, 56, 57, 58, 61, 64, 65, 66, 69, 70, 71, 72, 73, 75, 77, 78, 79, 86, 87, 88, 89, 92, 93, 96, 97, 99, 103, 106, 113, 116, 119, 121, 127, 130, 131, 132, 135, 137, 138, 139, 142, 143, 147, 153, 155, 158, 161, 162, 163, 166, 167, 173, 175, 177, 179, 180, 181], "thei": [1, 3, 4, 5, 6, 7, 8, 9, 25, 27, 28, 33, 35, 37, 39, 40, 41, 43, 45, 48, 49, 50, 52, 53, 57, 58, 59, 61, 62, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 82, 85, 86, 87, 88, 89, 92, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 134, 136, 137, 138, 139, 142, 143, 152, 153, 154, 155, 156, 160, 161, 162, 163, 165, 167, 168, 169, 170, 174, 175, 176, 178, 179, 180, 181], "branch": [1, 5, 7, 26, 35, 50, 57, 65, 67, 71, 76, 78, 80, 135], "individu": [1, 5, 9, 33, 35, 54, 55, 62, 82, 89, 91, 100, 103, 105, 114, 129, 130, 138, 139, 140, 147, 175, 180], "cours": [1, 2, 3, 4, 5, 7, 8, 13, 25, 26, 27, 33, 35, 36, 38, 40, 41, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 61, 65, 66, 67, 68, 70, 71, 72, 73, 75, 77, 78, 80, 82, 85, 89, 96, 97, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 117, 119, 120, 126, 127, 129, 130, 133, 135, 137, 138, 139, 142, 143, 144, 150, 151, 153, 155, 158, 160, 161, 162, 166, 169, 171, 172, 176, 177, 179, 181], "think": [1, 5, 6, 9, 28, 30, 32, 33, 35, 37, 39, 40, 41, 45, 46, 48, 49, 50, 53, 58, 60, 61, 64, 68, 69, 70, 75, 76, 77, 79, 85, 86, 89, 94, 95, 96, 97, 99, 101, 102, 103, 104, 106, 110, 112, 114, 118, 119, 121, 122, 124, 125, 127, 129, 131, 132, 133, 137, 142, 144, 150, 151, 153, 154, 156, 158, 160, 167, 168, 169, 175, 177, 179, 180, 181], "won": [1, 3, 4, 5, 6, 7, 9, 25, 26, 27, 39, 40, 41, 43, 45, 49, 52, 53, 58, 61, 66, 70, 72, 73, 74, 75, 76, 77, 79, 82, 85, 86, 87, 89, 99, 103, 104, 106, 109, 112, 113, 115, 116, 119, 120, 121, 124, 129, 133, 134, 135, 136, 139, 142, 144, 161, 162, 163, 169, 173, 174, 176, 177, 179], "ship": [1, 8, 61, 68, 77, 137, 171, 174, 179], "paus": [1, 65, 71], "try": [1, 4, 5, 7, 9, 26, 27, 28, 30, 31, 32, 33, 35, 39, 40, 42, 43, 45, 48, 49, 51, 52, 53, 54, 56, 58, 59, 60, 61, 65, 66, 67, 68, 70, 73, 75, 76, 78, 79, 80, 82, 85, 87, 92, 94, 96, 98, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 133, 135, 137, 138, 139, 140, 142, 143, 144, 150, 151, 153, 155, 156, 157, 158, 161, 162, 163, 167, 168, 170, 171, 173, 175, 176, 177, 179], "one": [1, 3, 4, 5, 6, 7, 9, 25, 26, 27, 28, 30, 31, 32, 33, 35, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181], "tab": [1, 4, 7, 40, 43, 71, 72, 73, 106, 116, 128], "scroll": [1, 43, 73, 74, 106, 137, 150, 154, 157, 163], "down": [1, 3, 4, 6, 7, 8, 9, 26, 27, 29, 31, 35, 45, 48, 50, 53, 55, 56, 57, 58, 60, 61, 65, 66, 68, 69, 70, 71, 74, 77, 78, 80, 81, 85, 86, 87, 91, 92, 100, 101, 103, 105, 106, 108, 113, 114, 115, 119, 120, 121, 122, 123, 127, 133, 134, 138, 139, 142, 143, 151, 157, 160, 163, 167, 168, 172, 175, 176, 177, 179, 180], "name": [1, 3, 4, 5, 6, 7, 8, 25, 26, 27, 35, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 65, 68, 70, 71, 72, 74, 75, 76, 78, 79, 86, 88, 96, 97, 99, 100, 101, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 126, 127, 128, 129, 134, 138, 139, 140, 142, 150, 152, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 174, 175, 177, 179, 181], "look": [1, 2, 3, 4, 5, 6, 7, 9, 16, 25, 26, 28, 30, 31, 32, 35, 39, 40, 41, 43, 45, 48, 49, 52, 53, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 92, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 137, 138, 139, 140, 142, 143, 144, 150, 151, 156, 157, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180], "right": [1, 4, 6, 7, 9, 25, 26, 29, 35, 39, 41, 43, 48, 49, 52, 54, 57, 58, 60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 87, 89, 92, 93, 96, 101, 103, 106, 109, 113, 115, 116, 117, 119, 124, 127, 129, 130, 132, 134, 135, 136, 139, 143, 144, 150, 151, 155, 162, 163, 167, 168, 169, 170, 171, 173, 174, 179, 180], "ll": [1, 3, 4, 5, 6, 7, 8, 9, 25, 27, 28, 30, 32, 35, 39, 40, 41, 43, 45, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 85, 86, 87, 88, 89, 91, 92, 96, 97, 99, 100, 101, 102, 103, 105, 106, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 150, 153, 154, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 173, 174, 175, 179], "button": [1, 35, 40, 43, 52, 71, 72, 74, 80, 103, 106, 150, 153, 167], "promis": [1, 7, 31, 41, 48, 69, 101, 102, 106, 121, 134, 168], "click": [1, 4, 5, 40, 43, 52, 57, 61, 64, 65, 68, 71, 72, 74, 100, 103, 106, 110, 115, 121, 150, 154, 155, 167, 168, 170], "show": [1, 4, 6, 7, 9, 25, 26, 27, 28, 29, 35, 39, 40, 41, 42, 43, 45, 49, 52, 53, 55, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 78, 79, 81, 82, 84, 85, 86, 87, 88, 92, 93, 96, 97, 98, 99, 101, 106, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 141, 142, 143, 144, 150, 151, 152, 156, 158, 162, 165, 167, 168, 169, 170, 171, 173, 175, 177, 179], "popup": 1, "sinc": [1, 3, 4, 5, 6, 7, 8, 9, 26, 28, 32, 34, 35, 39, 40, 41, 43, 45, 48, 50, 52, 53, 54, 57, 58, 59, 61, 66, 67, 68, 69, 70, 72, 73, 75, 76, 78, 80, 82, 86, 87, 88, 89, 91, 96, 97, 99, 101, 102, 103, 104, 106, 107, 108, 110, 112, 113, 114, 116, 117, 119, 120, 121, 122, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 142, 143, 144, 150, 151, 152, 154, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 181], "modifi": [1, 4, 8, 26, 41, 43, 45, 49, 52, 53, 59, 61, 96, 99, 106, 107, 110, 112, 115, 121, 124, 138, 139, 143, 144, 165, 172, 175], "config": [1, 4, 40, 43, 52, 61, 97, 110, 160, 171, 172, 173], "trigger": [1, 35], "now": [1, 3, 4, 5, 6, 7, 8, 25, 26, 27, 30, 31, 32, 34, 35, 39, 40, 42, 43, 45, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 85, 86, 87, 88, 94, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 128, 129, 130, 132, 134, 135, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 175, 176, 177, 179, 180, 181], "appear": [1, 5, 6, 7, 9, 25, 35, 41, 43, 49, 53, 59, 61, 71, 75, 85, 87, 96, 102, 104, 106, 107, 109, 110, 112, 114, 116, 117, 119, 120, 123, 124, 128, 133, 134, 135, 136, 142, 143, 144, 163, 165, 167, 168, 169, 170, 175, 179], "itself": [1, 4, 6, 26, 27, 34, 35, 41, 45, 50, 52, 53, 56, 59, 60, 64, 68, 69, 70, 72, 75, 76, 77, 78, 95, 96, 98, 100, 101, 105, 106, 110, 112, 113, 115, 117, 118, 119, 120, 121, 124, 127, 129, 133, 139, 140, 142, 143, 152, 160, 163, 167, 170, 171], "wealth": [1, 45, 103, 139, 142], "inform": [1, 4, 6, 7, 34, 39, 40, 42, 43, 45, 46, 48, 50, 53, 55, 56, 58, 66, 68, 69, 74, 75, 76, 78, 88, 89, 101, 106, 110, 111, 113, 116, 117, 120, 121, 122, 135, 139, 143, 144, 146, 147, 150, 152, 161, 162, 168, 169, 171, 173, 179], "avail": [1, 3, 4, 5, 7, 9, 25, 29, 31, 34, 39, 40, 41, 42, 43, 49, 53, 59, 61, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 91, 93, 97, 99, 101, 103, 104, 105, 106, 109, 110, 112, 113, 114, 115, 117, 119, 120, 121, 123, 124, 126, 129, 133, 135, 138, 139, 142, 143, 144, 150, 153, 160, 162, 163, 170, 171, 175, 179], "navbar": 1, "grid": [1, 25, 41, 62, 83, 87, 109], "u": [1, 2, 4, 5, 6, 7, 8, 9, 15, 19, 25, 26, 27, 28, 29, 30, 32, 34, 35, 39, 40, 41, 42, 43, 45, 48, 49, 52, 53, 55, 57, 58, 59, 61, 62, 65, 66, 67, 70, 72, 74, 75, 76, 82, 85, 86, 87, 88, 89, 96, 97, 98, 99, 101, 102, 103, 105, 106, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 139, 140, 143, 144, 146, 150, 152, 154, 158, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175], "each": [1, 3, 4, 6, 7, 9, 25, 26, 35, 39, 41, 42, 43, 45, 48, 49, 53, 54, 55, 57, 58, 61, 62, 69, 70, 71, 72, 73, 74, 79, 85, 87, 88, 94, 96, 97, 98, 99, 100, 102, 103, 109, 110, 112, 113, 114, 116, 118, 120, 122, 124, 127, 128, 129, 130, 134, 137, 138, 139, 140, 144, 151, 152, 160, 161, 162, 166, 167, 168, 169, 170, 176, 177, 179], "green": [1, 35, 62, 78, 88, 102, 103, 138, 167], "success": [1, 2, 4, 5, 7, 9, 13, 19, 20, 35, 41, 44, 46, 49, 59, 68, 69, 70, 72, 73, 75, 76, 79, 86, 88, 100, 103, 104, 106, 107, 113, 114, 116, 117, 118, 121, 128, 139, 143, 150, 156, 158, 162, 163, 165, 167, 177], "box": [1, 4, 41, 60, 61, 65, 67, 76, 80, 82, 83, 87, 101, 119, 122, 171, 173], "below": [1, 4, 6, 9, 25, 26, 35, 40, 41, 42, 43, 45, 48, 49, 52, 53, 55, 56, 59, 62, 65, 66, 67, 68, 71, 72, 73, 75, 76, 80, 82, 88, 91, 96, 98, 99, 103, 106, 109, 110, 112, 113, 116, 117, 118, 119, 120, 122, 126, 128, 129, 134, 138, 139, 140, 141, 142, 150, 151, 152, 160, 161, 162, 163, 167, 168, 169, 170, 171, 174, 175, 179], "repres": [1, 4, 6, 7, 9, 25, 35, 39, 43, 45, 49, 53, 55, 61, 62, 65, 67, 69, 70, 73, 74, 75, 80, 85, 88, 89, 96, 98, 99, 103, 106, 109, 113, 114, 119, 120, 121, 126, 128, 129, 131, 138, 140, 142, 143, 144, 152, 162, 165, 168, 169, 170, 176], "statu": [1, 42, 70, 98, 106, 113, 139, 143, 179], "under": [1, 4, 5, 6, 25, 27, 35, 39, 40, 43, 48, 53, 58, 62, 71, 100, 105, 106, 109, 110, 113, 115, 116, 124, 129, 138, 141, 143, 165, 166, 169], "graphic": [1, 4, 30, 62, 68, 72, 78, 88, 103, 139, 142], "represent": [1, 25, 35, 45, 55, 62, 88, 109, 113, 119, 129, 134, 144, 170], "anoth": [1, 3, 4, 7, 9, 25, 26, 28, 29, 30, 34, 35, 39, 42, 43, 45, 49, 52, 53, 55, 56, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 85, 87, 88, 89, 91, 92, 96, 99, 101, 103, 104, 105, 109, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 126, 127, 128, 129, 131, 133, 134, 136, 139, 140, 142, 143, 146, 151, 152, 158, 162, 163, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177], "after": [1, 3, 4, 5, 7, 9, 25, 26, 30, 35, 39, 40, 41, 42, 43, 45, 49, 50, 52, 53, 55, 58, 59, 61, 66, 67, 68, 70, 72, 73, 74, 75, 79, 82, 89, 93, 97, 98, 100, 101, 106, 108, 109, 112, 113, 116, 117, 119, 120, 124, 125, 126, 128, 130, 133, 134, 139, 140, 143, 147, 150, 151, 154, 158, 160, 163, 165, 166, 167, 168, 169, 171, 172, 175, 176, 177, 179, 180], "print_dat": 1, "label": [1, 3, 7, 26, 41, 43, 52, 62, 70, 72, 78, 85, 88, 99, 114, 143, 150, 152, 169, 180], "sleep": [1, 6, 49, 58, 61, 79, 96, 99, 113, 118, 124, 143, 169, 179], "call": [1, 3, 4, 5, 6, 7, 8, 9, 25, 26, 27, 35, 41, 43, 45, 46, 49, 52, 54, 56, 57, 59, 61, 65, 66, 67, 68, 69, 70, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 94, 96, 97, 98, 99, 101, 102, 104, 105, 107, 109, 110, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 142, 143, 144, 150, 152, 154, 157, 160, 161, 162, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179], "To": [1, 2, 3, 4, 7, 9, 11, 13, 19, 23, 24, 25, 26, 39, 40, 41, 43, 45, 48, 52, 55, 59, 62, 65, 66, 68, 69, 71, 72, 74, 75, 76, 80, 82, 86, 87, 88, 89, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 128, 129, 130, 134, 135, 138, 139, 140, 142, 143, 144, 150, 151, 154, 156, 160, 161, 162, 165, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181], "accomplish": [1, 39, 45, 48, 53, 57, 58, 61, 66, 71, 75, 76, 86, 87, 113, 115, 117, 119, 120, 128, 139, 142, 143, 161, 169, 174, 175], "three": [1, 3, 6, 7, 25, 39, 43, 48, 49, 52, 54, 55, 58, 60, 62, 69, 74, 75, 77, 78, 82, 85, 88, 96, 99, 100, 101, 102, 106, 109, 110, 111, 113, 118, 119, 120, 122, 125, 128, 130, 134, 136, 142, 143, 150, 152, 154, 155, 158, 161, 162, 163, 165, 166, 167, 169, 176, 178, 179], "cryptic": [1, 43], "t1": [1, 25, 109, 142], "t2": [1, 25, 109], "t3": 1, "respectfulli": 1, "bashoper": 1, "task_id": 1, "bash_command": 1, "date": [1, 2, 4, 9, 19, 20, 29, 33, 42, 50, 70, 72, 74, 76, 91, 94, 99, 110, 112, 114, 119, 128, 150, 168, 170], "asid": [1, 7, 41, 50, 75, 85, 89, 97, 103, 118, 129, 135, 139, 143, 157, 161, 174, 176], "review": [1, 2, 3, 5, 9, 18, 23, 25, 27, 28, 29, 34, 35, 49, 50, 60, 75, 76, 78, 79, 80, 86, 96, 98, 109, 111, 116, 117, 128, 130, 132, 133, 134, 135, 142, 151, 161, 162, 163, 167, 171, 175, 177, 180], "d": [1, 3, 4, 5, 6, 7, 8, 9, 27, 29, 30, 31, 32, 35, 40, 41, 45, 48, 50, 54, 55, 58, 59, 60, 61, 69, 70, 72, 73, 74, 75, 77, 78, 80, 82, 85, 89, 91, 93, 94, 96, 97, 102, 103, 104, 106, 108, 112, 113, 114, 117, 118, 119, 125, 126, 128, 129, 130, 133, 134, 135, 137, 139, 140, 142, 143, 144, 150, 151, 155, 162, 163, 167, 169, 170, 172, 174, 175], "make": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 18, 23, 25, 26, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 82, 83, 85, 86, 87, 88, 89, 92, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 150, 151, 152, 153, 154, 160, 161, 162, 163, 165, 166, 167, 170, 171, 173, 174, 177, 179, 180, 181], "variabl": [1, 5, 7, 8, 25, 35, 39, 41, 43, 45, 46, 49, 55, 60, 61, 62, 67, 68, 72, 74, 76, 79, 82, 88, 96, 99, 100, 101, 106, 109, 110, 112, 115, 116, 118, 119, 121, 123, 126, 128, 129, 130, 134, 139, 140, 142, 143, 150, 151, 160, 161, 162, 165, 167, 169, 175, 177], "consist": [1, 6, 7, 8, 25, 26, 35, 40, 45, 51, 53, 58, 59, 61, 65, 69, 76, 79, 89, 95, 96, 99, 106, 112, 113, 119, 121, 127, 128, 129, 130, 133, 134, 135, 138, 139, 142, 143, 144, 150, 158, 163, 166, 167, 169, 170, 171, 173, 175, 177], "would": [1, 3, 4, 6, 7, 9, 25, 26, 29, 32, 35, 39, 40, 41, 45, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 86, 87, 89, 94, 96, 97, 99, 100, 101, 103, 104, 106, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 130, 133, 134, 135, 138, 139, 142, 143, 144, 146, 150, 151, 152, 154, 155, 156, 158, 160, 162, 163, 165, 167, 168, 169, 171, 173, 174, 175, 176, 179, 181], "more": [1, 2, 3, 4, 5, 6, 8, 9, 11, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 39, 40, 41, 42, 43, 45, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 62, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 86, 87, 88, 89, 91, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 149, 150, 151, 152, 153, 154, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181], "clear": [1, 5, 25, 27, 35, 41, 42, 45, 49, 58, 59, 68, 76, 78, 103, 106, 109, 110, 115, 116, 117, 118, 120, 121, 123, 124, 127, 129, 130, 134, 135, 139, 142, 143, 144, 151, 160, 161, 168, 175, 176, 177], "instanti": [1, 49, 112, 144, 172], "give": [1, 3, 6, 8, 9, 25, 26, 27, 35, 39, 41, 42, 43, 45, 48, 52, 53, 56, 57, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 79, 80, 82, 87, 88, 89, 93, 96, 97, 98, 100, 101, 103, 106, 107, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 124, 127, 129, 134, 135, 137, 139, 140, 142, 143, 144, 151, 154, 157, 160, 162, 163, 167, 168, 169, 170, 171, 173, 175, 177, 178, 179, 180], "id": [1, 2, 8, 9, 13, 20, 24, 40, 43, 58, 59, 61, 62, 74, 75, 76, 99, 106, 108, 112, 114, 115, 121, 123, 126, 133, 139, 142, 144, 150, 153, 161, 168, 177, 181], "someth": [1, 4, 5, 6, 7, 8, 26, 27, 28, 32, 35, 40, 43, 45, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 85, 86, 89, 92, 102, 106, 111, 112, 113, 114, 116, 117, 118, 119, 121, 124, 125, 127, 128, 130, 131, 133, 135, 137, 138, 139, 143, 144, 147, 150, 154, 156, 158, 161, 162, 163, 167, 168, 169, 170, 171, 172, 174, 175, 176, 179, 180, 182], "do": [1, 3, 4, 5, 6, 7, 8, 25, 26, 27, 29, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 181, 182], "print": [1, 3, 4, 7, 25, 26, 42, 43, 45, 46, 48, 49, 52, 53, 54, 55, 57, 62, 70, 72, 74, 75, 76, 78, 81, 82, 83, 85, 87, 88, 96, 98, 99, 106, 107, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 134, 138, 139, 140, 142, 143, 144, 150, 151, 152, 160, 161, 162, 165, 167, 168, 169, 170, 171, 175, 179], "note": [1, 3, 4, 6, 7, 25, 26, 34, 38, 39, 40, 41, 43, 45, 49, 50, 52, 53, 56, 57, 58, 61, 62, 65, 66, 67, 71, 72, 73, 75, 79, 80, 86, 87, 92, 96, 99, 100, 101, 103, 105, 107, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 129, 130, 134, 135, 138, 139, 140, 141, 143, 150, 151, 152, 155, 160, 162, 168, 169, 170, 171, 173, 175], "wire": [1, 34, 35, 57, 86, 139, 172], "what": [1, 2, 3, 4, 5, 6, 9, 13, 19, 23, 25, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 43, 46, 48, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 79, 80, 82, 85, 86, 87, 89, 92, 94, 96, 97, 99, 101, 102, 103, 104, 105, 106, 109, 110, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 129, 130, 131, 133, 135, 138, 139, 141, 142, 143, 144, 150, 151, 153, 155, 157, 158, 160, 161, 162, 167, 168, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182], "find": [1, 2, 4, 6, 7, 8, 9, 19, 26, 28, 29, 35, 37, 39, 40, 41, 43, 45, 52, 53, 55, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 82, 86, 89, 92, 99, 100, 103, 104, 106, 107, 111, 112, 114, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 137, 138, 139, 140, 142, 143, 144, 146, 150, 151, 152, 155, 158, 160, 161, 162, 163, 167, 169, 170, 171, 174, 179], "pretti": [1, 6, 8, 9, 25, 26, 32, 34, 39, 40, 41, 43, 45, 46, 50, 52, 53, 54, 57, 58, 60, 61, 63, 65, 66, 70, 73, 80, 85, 88, 92, 93, 96, 102, 112, 113, 115, 116, 117, 119, 120, 126, 130, 131, 133, 135, 139, 142, 144, 150, 151, 162, 163, 167, 168, 171, 172, 173, 175, 180, 181], "concis": [1, 32, 42, 76, 110, 113, 114, 118, 119, 124, 126, 128, 129, 134, 143, 162, 165, 168], "strang": [1, 2, 4, 19, 23, 25, 33, 35, 49, 60, 109, 124, 129], "remind": [1, 33, 35, 58, 60, 66, 68, 96, 99, 138, 157, 167, 179], "magic": [1, 5, 45, 49, 54, 68, 76, 80, 103, 112, 113, 114, 116, 121, 124, 139, 142, 143, 160, 168], "happen": [1, 4, 26, 27, 33, 35, 39, 40, 45, 53, 54, 58, 60, 61, 71, 72, 87, 89, 92, 93, 96, 100, 112, 113, 114, 116, 120, 124, 142, 143, 147, 165, 167, 168, 169, 175, 177, 179], "overload": [1, 54, 70, 113, 117, 130, 162], "bit": [1, 4, 9, 26, 28, 29, 31, 34, 35, 41, 43, 48, 49, 50, 52, 53, 54, 56, 58, 59, 60, 61, 62, 66, 67, 68, 70, 71, 72, 75, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 96, 99, 102, 104, 110, 112, 113, 114, 117, 119, 121, 126, 129, 130, 131, 132, 134, 135, 139, 142, 144, 153, 158, 160, 161, 162, 163, 165, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180], "shift": [1, 3, 4, 35, 40, 43, 58, 66, 72, 134, 147, 150, 168, 177], "certain": [1, 5, 26, 35, 39, 40, 43, 49, 53, 56, 57, 69, 74, 75, 78, 86, 99, 102, 103, 112, 113, 114, 121, 122, 129, 134, 138, 139, 140, 153, 156, 171, 172, 174, 176, 179], "object": [1, 2, 3, 7, 8, 13, 19, 20, 27, 29, 35, 41, 42, 45, 53, 54, 59, 61, 62, 68, 69, 70, 74, 75, 76, 77, 85, 86, 88, 92, 96, 97, 98, 99, 102, 106, 110, 112, 114, 117, 118, 121, 122, 123, 124, 126, 128, 129, 130, 132, 134, 138, 139, 140, 143, 152, 160, 161, 165, 169, 170, 171, 172, 177, 178, 179, 181], "__lshift__": 1, "__rshift__": 1, "special": [1, 7, 9, 32, 35, 42, 48, 49, 54, 67, 68, 70, 72, 76, 86, 103, 112, 113, 117, 119, 120, 129, 130, 134, 142, 144, 153, 158, 160, 162, 165, 168, 169, 175], "method": [1, 2, 3, 6, 18, 19, 25, 26, 29, 32, 35, 39, 41, 42, 48, 49, 54, 55, 59, 61, 62, 68, 70, 74, 75, 76, 80, 88, 96, 97, 99, 109, 110, 112, 113, 117, 118, 120, 121, 123, 124, 126, 127, 129, 130, 132, 134, 138, 139, 143, 144, 150, 151, 160, 161, 163, 165, 168, 169, 170, 172, 176, 177, 179], "right_shift": 1, "set_downstream": 1, "list": [1, 2, 3, 6, 7, 9, 19, 20, 23, 24, 26, 27, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 52, 53, 54, 55, 56, 58, 59, 61, 64, 65, 66, 67, 69, 72, 74, 76, 77, 80, 82, 85, 86, 87, 88, 92, 96, 97, 99, 100, 101, 102, 103, 104, 106, 110, 112, 113, 116, 119, 121, 122, 126, 130, 131, 133, 134, 137, 139, 140, 141, 143, 144, 150, 155, 160, 161, 162, 163, 165, 167, 169, 170, 171, 173, 175], "given": [1, 3, 4, 5, 8, 9, 25, 26, 27, 35, 39, 40, 41, 42, 43, 45, 49, 53, 56, 58, 60, 61, 68, 70, 75, 77, 80, 82, 86, 96, 97, 98, 99, 103, 106, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 133, 134, 138, 140, 142, 143, 144, 152, 157, 160, 161, 163, 165, 166, 167, 168, 169, 172, 174, 175, 177], "clarifi": [1, 45, 110, 122, 142, 165], "further": [1, 6, 26, 35, 40, 41, 45, 51, 53, 57, 61, 68, 72, 74, 75, 80, 91, 99, 101, 112, 117, 118, 119, 139, 153, 167, 177], "equival": [1, 4, 43, 55, 58, 61, 77, 78, 82, 106, 113, 119, 120, 129, 130, 139, 142, 143, 160, 162, 163, 179], "worri": [1, 3, 5, 8, 27, 39, 49, 61, 65, 66, 69, 70, 71, 79, 85, 86, 113, 115, 117, 126, 161, 180, 181], "leftshift": 1, "rightshift": 1, "eventu": [1, 25, 35, 71, 86, 91, 96, 106, 109, 142, 150, 167], "grow": [1, 26, 34, 35, 41, 67, 82, 102, 126, 129, 147, 160, 163, 171], "haven": [1, 4, 5, 26, 40, 41, 43, 49, 50, 58, 61, 64, 68, 69, 70, 72, 75, 78, 79, 88, 89, 95, 112, 113, 114, 119, 128, 132, 133, 137, 142, 143, 151, 158, 162, 163, 168, 177, 178, 179, 181], "yet": [1, 4, 5, 7, 8, 9, 26, 27, 33, 34, 35, 39, 40, 41, 42, 45, 48, 49, 50, 58, 61, 64, 65, 66, 68, 69, 70, 75, 78, 79, 80, 82, 88, 91, 104, 106, 111, 112, 113, 115, 121, 125, 128, 130, 132, 135, 136, 137, 138, 143, 151, 155, 158, 162, 168, 169, 171, 177, 181], "consol": [1, 43, 44, 61, 67, 68, 71, 72, 81, 89, 115, 116, 117, 130], "alon": [1, 3, 9, 61, 66, 77, 89, 99, 111, 142, 166, 170], "again": [1, 2, 3, 4, 6, 9, 15, 19, 26, 28, 29, 35, 39, 42, 43, 45, 48, 49, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 69, 70, 73, 75, 76, 79, 80, 85, 86, 87, 88, 93, 96, 102, 103, 106, 108, 113, 114, 115, 119, 120, 121, 122, 126, 127, 128, 129, 130, 132, 135, 142, 143, 144, 150, 154, 155, 158, 160, 161, 162, 166, 169, 170, 171, 175, 181], "new": [1, 2, 4, 5, 6, 8, 13, 20, 25, 26, 27, 30, 31, 34, 35, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 80, 87, 94, 96, 97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 134, 135, 137, 138, 139, 140, 141, 142, 144, 149, 150, 152, 154, 155, 156, 157, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 175, 176, 178], "easier": [1, 3, 7, 25, 29, 39, 41, 43, 48, 51, 52, 55, 58, 59, 64, 65, 68, 69, 70, 74, 75, 76, 77, 86, 87, 88, 103, 109, 112, 113, 118, 121, 122, 127, 142, 143, 150, 168, 169, 175, 179, 182], "regular": [1, 26, 35, 53, 56, 78, 80, 112, 129, 130, 169, 172], "One": [1, 3, 4, 5, 6, 8, 9, 25, 26, 27, 28, 29, 32, 33, 34, 39, 41, 42, 45, 48, 49, 53, 56, 58, 59, 61, 62, 68, 70, 74, 75, 77, 78, 80, 82, 86, 88, 93, 95, 102, 103, 106, 107, 108, 109, 110, 112, 113, 115, 118, 120, 121, 122, 124, 127, 128, 129, 132, 134, 137, 138, 139, 142, 143, 144, 150, 152, 160, 161, 163, 168, 169, 170, 171, 174, 175, 176, 177, 180, 181], "thing": [1, 2, 3, 4, 5, 6, 7, 9, 16, 25, 26, 28, 29, 32, 34, 38, 39, 40, 41, 43, 44, 45, 48, 49, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 82, 86, 87, 89, 93, 96, 99, 101, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 150, 151, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "design": [1, 6, 7, 25, 31, 35, 43, 49, 68, 69, 72, 76, 77, 91, 103, 104, 109, 110, 113, 114, 115, 116, 120, 134, 138, 144, 165, 168, 172, 177], "pass": [1, 4, 6, 26, 35, 39, 41, 42, 43, 45, 46, 48, 49, 53, 55, 58, 68, 70, 77, 82, 85, 87, 96, 97, 99, 102, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 127, 129, 134, 137, 138, 139, 144, 150, 151, 152, 158, 161, 163, 165, 166, 168, 170, 179], "pre": [1, 29, 35, 39, 40, 51, 52, 75, 86, 100, 129, 133, 137, 140, 150, 163, 168, 174, 178], "rather": [1, 3, 4, 25, 29, 34, 35, 39, 41, 42, 45, 49, 53, 58, 60, 61, 62, 64, 70, 73, 74, 75, 82, 85, 87, 89, 94, 96, 97, 100, 101, 103, 109, 110, 112, 113, 116, 118, 119, 121, 122, 124, 125, 128, 129, 130, 131, 139, 144, 146, 147, 150, 152, 155, 158, 160, 161, 163, 168, 169, 171, 172, 175], "kei": [1, 4, 7, 25, 35, 36, 40, 41, 43, 45, 48, 53, 54, 61, 72, 74, 75, 96, 97, 99, 100, 109, 110, 112, 113, 114, 116, 118, 122, 127, 128, 134, 135, 143, 144, 146, 152, 161, 163, 165, 168, 169, 172], "valu": [1, 2, 3, 4, 5, 6, 7, 9, 19, 25, 35, 41, 43, 45, 48, 49, 52, 53, 54, 55, 59, 61, 62, 67, 68, 70, 71, 73, 75, 76, 77, 80, 82, 85, 86, 87, 88, 96, 98, 99, 102, 106, 109, 110, 113, 114, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 140, 143, 151, 152, 154, 158, 161, 162, 163, 168, 172, 179], "pair": [1, 4, 89, 99, 114, 127, 143, 161, 170], "end": [1, 3, 4, 5, 8, 25, 26, 29, 35, 41, 42, 43, 45, 48, 49, 52, 54, 55, 58, 61, 64, 65, 66, 67, 68, 70, 71, 75, 79, 82, 85, 87, 88, 96, 97, 98, 103, 104, 106, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 126, 127, 128, 129, 130, 136, 139, 140, 142, 143, 153, 154, 156, 158, 160, 162, 167, 168, 170, 173, 175, 177, 179, 181], "retriev": [1, 48, 49, 61, 75, 106, 113, 114, 117, 120, 126, 128, 136, 143, 169], "subsequ": [1, 35, 58, 75, 124, 126, 150], "simpli": [1, 3, 4, 6, 7, 8, 9, 25, 26, 39, 40, 41, 43, 45, 48, 50, 53, 54, 56, 60, 61, 66, 67, 68, 69, 70, 72, 73, 77, 85, 87, 96, 97, 100, 101, 104, 110, 112, 113, 114, 117, 118, 119, 120, 121, 124, 126, 127, 129, 130, 133, 134, 135, 137, 139, 142, 143, 146, 150, 151, 154, 165, 168, 170, 171, 173, 174, 175], "chang": [1, 4, 5, 6, 7, 25, 26, 30, 35, 39, 41, 43, 45, 48, 49, 50, 52, 54, 60, 61, 62, 65, 69, 72, 73, 78, 80, 88, 95, 97, 98, 100, 104, 107, 109, 110, 112, 114, 115, 116, 117, 119, 120, 121, 122, 126, 127, 128, 129, 130, 132, 135, 136, 139, 142, 150, 152, 153, 165, 167, 168, 169, 170, 171, 172, 174, 181], "simpl": [1, 2, 3, 4, 6, 13, 16, 25, 26, 29, 30, 31, 35, 39, 40, 41, 44, 45, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 62, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 82, 85, 87, 88, 89, 94, 97, 99, 101, 103, 105, 106, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 135, 137, 138, 139, 142, 143, 150, 151, 152, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 174, 175, 177, 179], "flow": [1, 7, 35, 68, 76, 116, 133], "process": [1, 3, 5, 6, 8, 25, 26, 34, 40, 41, 48, 52, 53, 55, 58, 61, 68, 69, 70, 71, 72, 75, 76, 77, 98, 99, 100, 103, 106, 109, 114, 115, 119, 124, 128, 129, 130, 131, 134, 136, 139, 144, 146, 147, 160, 161, 163, 168, 169, 176, 177], "main_flow": 1, "order_data": 1, "order_summari": 1, "total_order_valu": 1, "nice": [1, 6, 9, 25, 26, 35, 39, 40, 60, 65, 67, 73, 78, 80, 86, 88, 93, 100, 101, 109, 112, 113, 116, 119, 120, 131, 137, 139, 150, 151, 162, 167, 168, 170], "fall": [1, 35, 58, 68, 96, 113, 116, 121, 122, 139, 143, 168], "out": [1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 25, 26, 27, 30, 31, 32, 34, 39, 40, 41, 43, 45, 46, 49, 50, 51, 52, 53, 56, 57, 58, 59, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 91, 94, 96, 99, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 142, 143, 146, 147, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 176, 177, 178, 179, 181], "match": [1, 6, 29, 35, 39, 41, 48, 49, 51, 53, 55, 61, 74, 75, 82, 86, 96, 97, 116, 119, 124, 126, 127, 128, 129, 130, 139, 152, 173], "mismatch": [1, 35], "quibbl": 1, "earlier": [1, 3, 4, 6, 7, 8, 25, 26, 32, 35, 39, 40, 41, 42, 48, 49, 52, 53, 58, 61, 65, 66, 67, 70, 71, 80, 86, 87, 97, 101, 104, 106, 109, 112, 113, 114, 115, 116, 119, 127, 129, 130, 139, 142, 143, 150, 151, 158, 160, 162, 163, 167, 168, 170, 171, 175, 177, 179], "goe": [1, 7, 8, 25, 26, 27, 30, 35, 36, 40, 68, 69, 82, 84, 85, 92, 96, 99, 101, 109, 115, 116, 121, 132, 135, 139, 143, 144, 165, 167, 179], "awai": [1, 3, 6, 35, 40, 41, 43, 45, 49, 76, 78, 88, 92, 113, 114, 116, 150, 158, 163, 165, 166, 167, 171, 176], "last": [1, 4, 5, 7, 26, 31, 32, 34, 35, 39, 41, 43, 49, 50, 52, 54, 58, 60, 64, 65, 67, 68, 69, 70, 73, 75, 78, 79, 80, 81, 93, 94, 96, 97, 98, 99, 101, 103, 104, 108, 110, 112, 113, 114, 115, 116, 117, 118, 120, 122, 124, 126, 128, 129, 130, 133, 134, 135, 139, 140, 144, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 165, 167, 168, 169, 171, 175, 177, 181], "snippet": [1, 43, 53, 68, 113, 167, 177], "That": [1, 3, 4, 7, 8, 9, 25, 26, 31, 35, 39, 40, 43, 45, 49, 52, 53, 58, 59, 60, 61, 64, 65, 66, 68, 69, 71, 72, 73, 75, 78, 79, 80, 82, 85, 86, 87, 93, 96, 98, 101, 103, 106, 109, 110, 112, 113, 115, 117, 118, 119, 120, 123, 124, 125, 126, 130, 133, 135, 136, 137, 138, 140, 142, 143, 150, 151, 154, 158, 160, 161, 162, 163, 168, 169, 170, 171, 174, 177, 178, 179, 182], "becaus": [1, 3, 4, 5, 6, 7, 8, 9, 25, 26, 27, 32, 35, 39, 40, 41, 42, 43, 45, 46, 48, 49, 52, 53, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 82, 85, 86, 88, 89, 91, 93, 95, 96, 99, 102, 103, 104, 106, 108, 109, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 142, 143, 144, 147, 152, 154, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179], "plain": [1, 26, 68, 73, 75, 87, 110, 112, 120, 142, 150, 165, 170, 177], "annot": [1, 41, 53, 112, 143, 161, 168, 172], "ad": [1, 5, 6, 29, 31, 35, 39, 40, 42, 43, 45, 48, 50, 51, 53, 55, 58, 59, 60, 61, 62, 66, 67, 68, 69, 72, 75, 77, 79, 82, 88, 96, 101, 110, 112, 116, 119, 120, 121, 126, 127, 129, 130, 133, 134, 139, 142, 152, 160, 161, 162, 167, 168, 169, 172, 175, 177, 179], "def": [1, 6, 41, 42, 43, 45, 48, 49, 53, 54, 60, 61, 68, 70, 75, 80, 82, 83, 84, 85, 87, 98, 106, 110, 112, 113, 114, 116, 120, 121, 122, 124, 127, 129, 130, 135, 139, 142, 143, 151, 161, 165, 168, 169, 179], "readi": [1, 5, 6, 7, 8, 35, 39, 41, 43, 52, 57, 58, 59, 61, 64, 65, 72, 76, 86, 87, 93, 104, 106, 111, 127, 128, 131, 133, 135, 150, 160, 161, 167, 169, 171], "rest": [1, 29, 40, 43, 49, 52, 54, 58, 61, 62, 65, 66, 68, 69, 77, 79, 85, 89, 97, 105, 106, 118, 119, 121, 132, 134, 138, 143, 150, 170, 175, 180], "simul": [1, 6, 25, 34, 68, 109, 124, 144], "hardcod": [1, 107], "json": [1, 2, 6, 13, 20, 40, 41, 43, 49, 52, 68, 69, 73, 74, 76, 105, 106, 117, 150, 161, 169, 175, 177], "string": [1, 2, 3, 7, 19, 20, 25, 29, 41, 43, 44, 45, 48, 49, 53, 54, 59, 70, 76, 97, 99, 102, 107, 109, 110, 112, 113, 114, 116, 117, 118, 120, 121, 122, 124, 126, 127, 128, 129, 134, 137, 138, 139, 143, 152, 160, 161, 162, 165, 168, 169, 170, 177, 179], "data_str": 1, "1001": [1, 28], "301": [1, 124, 176], "27": [1, 2, 6, 18, 25, 53, 55, 80, 82, 97, 99, 110, 113, 124, 140, 150, 161, 175], "1002": 1, "433": 1, "21": [1, 2, 3, 6, 18, 35, 45, 55, 59, 80, 99, 101, 113, 118, 119, 140, 158], "1003": 1, "502": 1, "22": [1, 2, 3, 17, 25, 41, 80, 96, 99, 101, 106, 113, 114, 122, 138, 155, 168], "order_data_dict": 1, "caveat": [1, 9, 43, 67, 75, 103, 106, 113, 129, 138, 139, 143, 158, 161], "seem": [1, 6, 25, 29, 35, 37, 39, 49, 50, 56, 57, 58, 59, 69, 70, 72, 80, 82, 89, 94, 99, 103, 104, 108, 109, 112, 113, 126, 127, 128, 129, 133, 135, 142, 151, 160, 163, 166, 176, 177, 182], "hood": [1, 53, 124, 143], "mechan": [1, 25, 39, 61, 76, 106, 109, 114, 116, 128, 129, 133, 137, 140, 143, 179], "dai": [1, 2, 5, 8, 9, 16, 19, 23, 27, 33, 35, 50, 53, 55, 57, 58, 59, 61, 66, 69, 71, 72, 76, 80, 82, 86, 92, 94, 96, 99, 103, 106, 108, 110, 116, 119, 120, 131, 142, 144, 153, 154, 155, 157, 158, 163, 168, 175, 176, 178, 179], "were": [1, 3, 4, 5, 6, 9, 25, 28, 33, 35, 39, 40, 41, 43, 45, 49, 51, 53, 57, 58, 59, 61, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 81, 86, 88, 92, 93, 94, 99, 101, 102, 106, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 122, 124, 125, 130, 134, 135, 136, 138, 139, 142, 144, 150, 151, 154, 156, 158, 160, 162, 163, 168, 169, 173, 175, 177, 180], "xcom": 1, "cross": [1, 26, 35, 68, 93, 100, 119, 176, 177, 179], "small": [1, 3, 6, 7, 8, 9, 25, 29, 35, 39, 41, 51, 52, 53, 59, 61, 62, 68, 69, 70, 75, 85, 93, 96, 99, 100, 103, 106, 112, 119, 121, 122, 124, 128, 129, 138, 142, 144, 151, 163, 166, 167, 169, 170, 179], "amount": [1, 5, 6, 9, 26, 35, 39, 52, 53, 58, 59, 70, 75, 98, 101, 106, 121, 129, 134, 163, 169, 176], "onli": [1, 3, 4, 5, 6, 7, 8, 9, 25, 26, 30, 31, 35, 39, 40, 41, 42, 43, 45, 48, 49, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 72, 73, 75, 76, 77, 78, 80, 86, 87, 88, 89, 91, 92, 96, 97, 98, 99, 100, 102, 103, 104, 106, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 134, 136, 138, 139, 142, 143, 150, 151, 152, 153, 155, 158, 160, 161, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181], "realist": [1, 143], "perhap": [1, 3, 4, 6, 7, 8, 9, 26, 27, 40, 41, 45, 48, 49, 52, 53, 54, 58, 61, 66, 68, 72, 74, 76, 77, 86, 87, 91, 102, 104, 112, 113, 114, 116, 117, 119, 121, 122, 127, 129, 130, 133, 137, 139, 142, 144, 158, 161, 162, 163, 168, 169, 170, 171, 176, 177], "save": [1, 4, 5, 8, 25, 40, 41, 48, 49, 52, 53, 54, 57, 65, 70, 71, 74, 75, 76, 79, 82, 85, 86, 96, 99, 100, 106, 109, 111, 115, 118, 121, 127, 129, 134, 135, 138, 139, 156, 158, 160, 161, 162, 163, 165, 167, 168, 171, 175], "temporari": [1, 139, 143, 171, 175, 179], "tabl": [1, 3, 6, 9, 28, 53, 59, 68, 70, 82, 86, 88, 92, 98, 99, 100, 102, 113, 114, 116, 130, 136, 137, 140, 142, 143, 150, 160, 170], "parquet": [1, 2, 18, 19, 75, 93], "file": [1, 2, 5, 6, 8, 13, 19, 20, 26, 29, 30, 32, 39, 40, 44, 45, 49, 50, 52, 53, 60, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 92, 93, 97, 99, 101, 103, 105, 106, 110, 111, 112, 115, 116, 120, 121, 124, 129, 135, 137, 138, 139, 143, 150, 152, 153, 160, 161, 162, 167, 168, 169, 172, 173, 175, 177], "filenam": [1, 4, 39, 45, 50, 53, 61, 68, 97, 106, 116, 120, 129, 139, 143, 174, 177], "few": [1, 3, 4, 6, 8, 9, 28, 30, 32, 33, 35, 39, 40, 43, 50, 52, 53, 54, 57, 58, 59, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 80, 82, 87, 89, 91, 94, 96, 99, 100, 101, 103, 104, 106, 107, 112, 113, 117, 119, 121, 124, 129, 130, 131, 135, 137, 138, 139, 140, 142, 143, 144, 150, 153, 155, 156, 158, 160, 161, 162, 163, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 181], "occur": [1, 25, 35, 42, 48, 55, 70, 82, 103, 109, 113, 116, 143, 156, 158, 169, 175, 179, 182], "began": [1, 3, 9, 40, 41, 45, 61, 68, 75, 76, 78, 80, 82, 85, 102, 115, 119, 125, 142, 151, 162, 163, 169, 177], "proof": [1, 75, 80, 85, 102, 173, 178], "concept": [1, 7, 25, 27, 33, 34, 53, 55, 68, 76, 77, 82, 109, 117, 169, 173], "want": [1, 3, 4, 5, 6, 7, 8, 9, 25, 26, 28, 29, 33, 35, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 85, 86, 87, 88, 89, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 150, 151, 152, 153, 156, 158, 160, 161, 162, 163, 165, 168, 169, 170, 171, 173, 174, 175, 176, 179, 180, 181], "far": [1, 4, 7, 8, 9, 26, 31, 35, 39, 42, 45, 48, 49, 50, 51, 53, 57, 61, 65, 67, 68, 69, 70, 72, 75, 78, 80, 82, 83, 85, 86, 87, 89, 94, 99, 101, 103, 104, 106, 112, 113, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128, 130, 134, 135, 143, 150, 151, 153, 154, 156, 157, 158, 161, 162, 163, 168, 171, 172, 176, 181], "been": [1, 3, 4, 5, 7, 9, 25, 26, 27, 28, 29, 31, 32, 34, 35, 39, 40, 42, 43, 45, 48, 50, 51, 53, 54, 58, 59, 62, 67, 68, 69, 70, 72, 73, 75, 76, 77, 79, 82, 86, 88, 89, 93, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 137, 138, 139, 142, 143, 144, 150, 151, 153, 155, 157, 158, 160, 161, 162, 163, 168, 170, 172, 175, 176, 177, 179], "invok": [1, 45, 106], "line": [1, 2, 3, 5, 7, 8, 9, 13, 26, 29, 35, 39, 41, 43, 45, 49, 52, 54, 55, 57, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 96, 97, 99, 100, 101, 102, 105, 107, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 134, 135, 137, 140, 142, 143, 144, 150, 160, 161, 162, 165, 167, 168, 169, 170, 171, 173, 174, 175, 177, 179], "handi": [1, 3, 4, 39, 40, 53, 64, 66, 67, 74, 86, 97, 101, 117, 126, 169], "cli": [1, 4, 5, 40, 65, 78, 97, 105], "worth": [1, 3, 26, 29, 30, 32, 35, 39, 45, 49, 53, 58, 59, 66, 70, 72, 75, 77, 88, 104, 112, 113, 121, 124, 126, 131, 132, 133, 135, 142, 143, 150, 158, 163, 169, 175, 179], "dag_nam": 1, "singl": [1, 3, 4, 6, 7, 9, 29, 30, 33, 34, 39, 41, 42, 49, 59, 61, 62, 69, 75, 78, 86, 87, 88, 94, 96, 98, 99, 100, 101, 102, 112, 114, 119, 120, 122, 123, 127, 128, 129, 130, 131, 134, 135, 137, 140, 143, 151, 152, 153, 161, 167, 168, 169, 170, 171, 173, 174, 175, 177, 179, 182], "task_nam": 1, "describ": [1, 3, 7, 9, 35, 42, 45, 50, 68, 75, 98, 99, 101, 113, 118, 119, 121, 135, 138, 144, 155, 161, 171], "pick": [1, 4, 7, 9, 35, 58, 61, 65, 68, 70, 82, 85, 89, 99, 104, 116, 132, 133, 137, 150, 163, 167, 171, 172], "interv": [1, 80, 99, 113], "aggress": [1, 6], "unrealist": 1, "specifi": [1, 25, 39, 42, 45, 53, 55, 58, 61, 62, 66, 74, 75, 88, 89, 98, 99, 106, 107, 109, 113, 114, 115, 117, 120, 127, 128, 129, 130, 134, 139, 140, 143, 151, 152, 161, 165, 168, 169, 170, 173, 175], "option": [1, 3, 4, 6, 7, 25, 26, 39, 40, 41, 43, 49, 52, 53, 57, 59, 61, 62, 64, 65, 67, 68, 70, 74, 77, 93, 103, 106, 109, 112, 113, 114, 115, 119, 120, 128, 129, 133, 135, 138, 139, 142, 143, 153, 162, 165, 168, 170, 171, 175, 179], "schedule_interv": 1, "deprec": [1, 3, 89, 119, 132, 139, 168], "start_dat": 1, "pendulum": 1, "datetim": [1, 2, 19, 76, 99, 110, 119, 129, 168], "2023": [1, 2, 17, 26, 35, 80, 150, 171], "1": [1, 2, 3, 5, 6, 7, 8, 17, 25, 26, 34, 35, 39, 41, 42, 43, 44, 45, 48, 49, 52, 53, 54, 55, 56, 58, 59, 61, 62, 64, 66, 67, 69, 70, 71, 72, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 96, 97, 98, 99, 101, 102, 106, 107, 110, 112, 113, 114, 115, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 140, 142, 143, 144, 150, 151, 152, 162, 163, 167, 168, 169, 170, 171, 172, 177, 178, 180], "tz": 1, "utc": [1, 55, 113], "catchup": 1, "fals": [1, 7, 25, 42, 45, 49, 52, 54, 59, 62, 67, 68, 74, 75, 76, 81, 82, 88, 96, 98, 107, 109, 110, 112, 113, 120, 122, 127, 134, 139, 140, 143, 150, 152, 160, 161, 162, 169, 170], "tag": [1, 8, 26, 40, 49, 50, 61, 67, 115, 135, 150], "codesolid": [1, 2, 5, 17, 25, 26, 40, 43, 54, 63, 70, 71, 72, 80, 91, 97, 99, 106, 110, 116, 117, 118, 125, 126, 127, 133, 135, 139, 143, 150, 159, 161, 168, 172, 175], "leverag": [1, 48, 138], "fact": [1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 27, 35, 39, 45, 48, 53, 57, 59, 61, 62, 72, 75, 85, 86, 88, 96, 100, 103, 105, 110, 112, 113, 115, 120, 128, 130, 136, 138, 143, 144, 163, 165, 166, 168, 169, 171, 172, 176, 177], "cron": 1, "specif": [1, 9, 25, 27, 35, 39, 42, 43, 45, 53, 55, 58, 59, 62, 65, 68, 70, 74, 75, 76, 86, 87, 88, 100, 101, 103, 104, 106, 109, 112, 116, 117, 118, 119, 133, 134, 136, 137, 139, 142, 143, 144, 152, 162, 167, 168, 169, 172, 174, 175], "five": [1, 3, 9, 28, 36, 58, 75, 76, 82, 86, 96, 99, 102, 112, 113, 122, 128, 138, 142, 144, 152, 160, 163, 169, 171], "asterisk": [1, 96, 119, 120, 130], "sai": [1, 3, 4, 5, 7, 9, 26, 27, 33, 35, 39, 42, 43, 49, 53, 56, 57, 60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 78, 79, 82, 85, 86, 87, 96, 100, 101, 102, 103, 112, 113, 114, 116, 119, 120, 125, 126, 128, 129, 130, 134, 135, 139, 143, 144, 147, 157, 158, 160, 162, 163, 165, 168, 169, 171, 174, 175, 177, 178, 180], "everi": [1, 3, 4, 5, 6, 28, 29, 30, 39, 43, 49, 57, 58, 60, 68, 69, 70, 73, 75, 77, 78, 80, 86, 92, 96, 99, 101, 106, 112, 113, 114, 116, 119, 120, 126, 131, 137, 139, 144, 145, 160, 163, 167, 169, 170, 174, 177, 179, 181], "minut": [1, 25, 35, 48, 53, 55, 58, 70, 71, 75, 78, 79, 80, 82, 91, 109, 112, 113, 116, 121, 135, 150, 156, 158, 162, 163, 173, 176, 179, 181], "second": [1, 4, 5, 6, 7, 8, 9, 25, 26, 29, 32, 34, 35, 39, 40, 43, 48, 50, 52, 53, 55, 57, 58, 60, 61, 62, 64, 68, 69, 70, 71, 73, 75, 82, 86, 87, 88, 96, 99, 103, 106, 109, 110, 112, 113, 114, 118, 119, 121, 122, 124, 126, 128, 129, 130, 134, 135, 139, 142, 143, 144, 152, 158, 160, 162, 165, 167, 168, 170, 171, 174, 175, 178, 179], "notic": [1, 4, 6, 9, 26, 29, 33, 39, 40, 41, 42, 43, 53, 61, 62, 66, 67, 70, 71, 75, 85, 87, 98, 99, 100, 101, 102, 106, 107, 112, 113, 115, 117, 119, 121, 127, 128, 130, 132, 138, 139, 143, 152, 156, 158, 160, 163, 170, 171, 173, 175, 176], "output": [1, 3, 4, 7, 8, 26, 29, 39, 42, 43, 45, 46, 48, 49, 52, 53, 54, 55, 59, 61, 62, 70, 71, 74, 75, 87, 88, 96, 97, 99, 100, 101, 106, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 134, 137, 138, 139, 140, 142, 143, 144, 146, 150, 151, 152, 153, 160, 162, 165, 167, 168, 169, 171, 175, 176, 179], "rel": [1, 3, 4, 6, 9, 26, 35, 41, 45, 52, 53, 54, 72, 76, 77, 86, 88, 97, 100, 104, 106, 112, 115, 116, 117, 119, 120, 122, 124, 127, 133, 139, 150, 161, 162, 163, 175], "spars": [1, 116, 173], "includ": [1, 4, 5, 6, 7, 8, 9, 25, 26, 29, 30, 33, 35, 39, 40, 41, 42, 43, 45, 53, 54, 56, 59, 61, 63, 67, 68, 70, 72, 74, 76, 77, 78, 79, 86, 88, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 116, 117, 118, 119, 122, 126, 127, 128, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 150, 151, 152, 161, 162, 163, 167, 170, 171, 174, 175, 177, 178, 179, 181], "ani": [1, 3, 4, 6, 7, 8, 25, 26, 33, 35, 39, 40, 41, 42, 43, 45, 48, 49, 50, 52, 53, 55, 56, 59, 60, 61, 62, 65, 66, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 88, 94, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 129, 130, 134, 135, 137, 139, 140, 142, 143, 144, 146, 149, 151, 155, 157, 158, 160, 162, 165, 166, 168, 169, 170, 171, 175, 177, 179, 181], "statement": [1, 3, 7, 26, 43, 53, 61, 68, 74, 76, 96, 106, 112, 115, 116, 118, 121, 124, 126, 128, 135, 136, 139, 151, 152, 160, 165, 177], "echo": [1, 4, 5, 53, 66, 135, 139, 140, 150, 161], "decid": [1, 5, 7, 30, 35, 37, 41, 48, 57, 60, 66, 70, 71, 73, 75, 78, 82, 86, 94, 103, 104, 107, 112, 119, 123, 142, 150, 154, 155, 158, 163, 165, 173, 176, 179], "add": [1, 4, 5, 6, 8, 25, 26, 27, 29, 35, 39, 40, 41, 43, 45, 48, 49, 50, 52, 54, 55, 58, 60, 61, 64, 65, 68, 70, 75, 79, 82, 85, 87, 88, 91, 93, 96, 97, 99, 100, 101, 103, 104, 106, 107, 109, 110, 112, 114, 115, 116, 117, 118, 120, 121, 123, 127, 128, 129, 130, 132, 133, 134, 135, 139, 140, 142, 144, 150, 156, 158, 161, 162, 165, 168, 169, 170, 172, 174, 175, 179], "custom": [1, 2, 5, 10, 11, 13, 19, 20, 30, 31, 41, 45, 48, 49, 59, 61, 67, 70, 76, 77, 88, 92, 99, 103, 106, 110, 113, 114, 116, 133, 137, 143, 169], "logger": 1, "turn": [1, 4, 5, 6, 9, 32, 35, 39, 40, 41, 45, 49, 55, 56, 61, 66, 68, 70, 73, 75, 77, 82, 86, 87, 94, 97, 99, 101, 102, 103, 112, 113, 114, 117, 120, 124, 125, 127, 129, 130, 131, 133, 138, 139, 142, 144, 146, 151, 154, 161, 172, 176, 177, 181], "simpler": [1, 4, 25, 46, 48, 49, 57, 68, 69, 70, 76, 88, 96, 97, 101, 109, 124, 129, 142, 143, 151, 160], "later": [1, 3, 4, 6, 8, 9, 25, 26, 33, 34, 35, 39, 41, 42, 43, 51, 55, 56, 57, 59, 60, 61, 64, 65, 66, 68, 69, 70, 72, 75, 80, 86, 96, 98, 99, 103, 109, 110, 111, 112, 113, 115, 119, 120, 124, 134, 137, 142, 153, 154, 163, 165, 167, 168, 169, 175, 177, 179, 180], "final": [1, 3, 4, 6, 7, 8, 9, 25, 26, 27, 35, 40, 45, 49, 53, 61, 62, 64, 65, 70, 71, 72, 74, 75, 76, 78, 80, 82, 85, 86, 95, 96, 97, 98, 100, 107, 109, 112, 113, 115, 120, 121, 122, 126, 128, 129, 132, 134, 136, 142, 143, 144, 149, 150, 153, 161, 162, 163, 168, 169, 171, 173, 176, 177, 178, 179], "compat": [1, 26, 53, 61, 65, 66, 71, 76, 104, 113, 160, 162, 168, 170], "essenti": [1, 4, 7, 26, 35, 40, 52, 53, 59, 61, 62, 65, 72, 88, 105, 116, 119, 124, 130, 134, 136, 142, 143, 144, 152, 160, 163, 165, 169], "migrat": [1, 29, 61, 68, 133, 172, 176, 177], "forward": [1, 4, 5, 25, 39, 57, 58, 63, 66, 68, 69, 70, 71, 93, 108, 119, 120, 124, 170, 173, 174], "motiv": [1, 57, 58, 86, 163, 166], "mind": [1, 4, 6, 7, 8, 9, 26, 32, 33, 34, 40, 41, 53, 56, 57, 69, 99, 102, 103, 108, 112, 119, 126, 128, 133, 135, 142, 143, 144, 150, 155, 158, 160, 167, 168, 170, 172, 175, 177, 181], "py": [1, 6, 43, 45, 53, 60, 61, 68, 75, 80, 81, 106, 110, 116, 117, 121, 134, 135, 139, 161, 167, 168, 170, 174, 175, 177], "decor": [1, 49, 53, 54, 143, 161, 169], "pathlib": [1, 139], "get_log_info": 1, "logfil": 1, "airflow_hom": 1, "home": [1, 2, 3, 5, 6, 7, 13, 27, 39, 59, 61, 66, 67, 73, 74, 78, 80, 86, 97, 99, 101, 130, 139, 142, 147, 156, 158, 167], "joinpath": 1, "log_dir": 1, "task_log": 1, "log_fil": 1, "scheduled_task": 1, "record": [1, 35, 58, 64, 71, 91, 113, 127, 136, 163], "combin": [1, 7, 9, 32, 34, 53, 57, 58, 61, 62, 67, 68, 72, 85, 86, 88, 94, 96, 98, 100, 101, 110, 113, 114, 117, 118, 119, 120, 121, 126, 128, 142, 144, 152, 161, 167, 169, 175], "setup": [1, 2, 5, 6, 24, 53, 61, 70, 72, 76, 111, 129, 131, 135, 138, 143, 150, 160, 170], "doesn": [1, 3, 4, 6, 9, 26, 32, 35, 39, 41, 43, 45, 49, 52, 58, 60, 61, 65, 66, 67, 69, 71, 73, 75, 77, 78, 85, 87, 89, 93, 97, 106, 112, 115, 116, 117, 119, 120, 126, 127, 129, 131, 137, 140, 142, 143, 150, 151, 156, 158, 160, 162, 163, 165, 171, 175, 181], "exist": [1, 3, 4, 5, 26, 31, 32, 35, 39, 43, 45, 50, 51, 52, 53, 61, 62, 66, 70, 78, 99, 100, 106, 114, 115, 116, 120, 121, 126, 127, 134, 135, 138, 140, 143, 150, 168, 169, 171, 175, 176, 179], "manual": [1, 4, 5, 9, 26, 40, 55, 57, 66, 72, 74, 75, 87, 100, 101, 103, 112, 113, 120, 131, 139, 150], "overkil": [1, 115], "wrong": [1, 5, 7, 34, 35, 39, 53, 57, 66, 82, 85, 86, 97, 114, 116, 117, 125, 129, 132, 140, 143, 151, 162, 179, 181, 182], "captur": [1, 34, 35, 39, 89, 112, 116, 139, 160, 165, 168, 171, 177], "illustr": [1, 3, 25, 26, 36, 70, 109, 120, 124, 130, 143, 168, 169, 175], "leav": [1, 3, 7, 26, 27, 30, 35, 39, 41, 45, 49, 56, 58, 64, 65, 66, 70, 72, 73, 77, 80, 82, 86, 87, 91, 94, 97, 99, 101, 106, 110, 116, 119, 122, 128, 134, 144, 150, 156, 158, 165, 167, 169, 170], "com": [1, 3, 7, 8, 25, 26, 34, 35, 40, 41, 43, 45, 49, 52, 54, 61, 71, 74, 77, 80, 84, 86, 91, 97, 98, 99, 106, 110, 112, 126, 127, 135, 137, 143, 145, 150, 152, 159, 160, 161, 168, 172, 175], "_": [1, 3, 35, 53, 70, 83, 85, 97, 112, 119, 124, 140, 144, 170, 171], "mkdir": [1, 4, 26, 56, 72, 117, 135, 150, 175], "prove_python_task": 1, "sure": [1, 3, 4, 9, 26, 30, 32, 39, 40, 41, 43, 45, 49, 52, 53, 54, 57, 58, 61, 62, 64, 65, 66, 68, 70, 71, 73, 75, 79, 81, 82, 85, 86, 87, 89, 99, 100, 101, 102, 103, 105, 106, 112, 113, 114, 115, 116, 121, 124, 127, 135, 140, 142, 143, 151, 154, 162, 163, 166, 168, 169, 174, 181], "f": [1, 34, 35, 41, 45, 48, 49, 53, 55, 60, 61, 67, 70, 75, 76, 81, 85, 87, 96, 97, 100, 106, 110, 111, 112, 113, 114, 116, 117, 118, 120, 122, 124, 126, 127, 128, 129, 130, 133, 137, 139, 143, 144, 151, 160, 161, 162, 163, 165, 168, 169, 170, 171, 174, 177, 179], "ok": [1, 4, 5, 6, 7, 8, 32, 35, 39, 40, 58, 60, 66, 69, 75, 78, 79, 80, 82, 85, 87, 89, 96, 97, 100, 106, 110, 112, 113, 116, 119, 120, 126, 135, 136, 142, 143, 151, 158, 171, 175, 181], "echo_d": 1, "log_dat": 1, "properti": [1, 3, 26, 35, 40, 41, 49, 54, 74, 82, 96, 98, 112, 113, 127, 130, 142, 169, 172], "tell": [1, 4, 5, 7, 8, 25, 34, 35, 37, 39, 41, 45, 49, 50, 52, 53, 58, 60, 66, 68, 69, 78, 79, 97, 101, 106, 109, 112, 113, 116, 117, 119, 121, 127, 128, 130, 134, 135, 139, 143, 156, 160, 163, 166, 167, 170, 173, 175, 176, 177, 178, 179, 180], "catch": [1, 31, 35, 45, 52, 70, 79, 80, 116], "arbitrari": [1, 41, 61, 70, 83, 84, 87, 124, 165, 169, 175], "place": [1, 3, 4, 5, 6, 9, 25, 26, 30, 35, 37, 39, 41, 43, 52, 53, 58, 59, 66, 68, 70, 72, 73, 74, 75, 76, 78, 87, 89, 91, 96, 101, 103, 104, 106, 112, 113, 114, 116, 119, 121, 124, 126, 129, 130, 134, 135, 139, 144, 147, 150, 153, 156, 165, 168, 169, 173, 175, 176, 177, 179], "demonstr": [1, 25, 26, 35, 42, 49, 52, 53, 54, 62, 75, 78, 85, 100, 106, 109, 112, 113, 117, 118, 119, 120, 122, 124, 127, 128, 129, 133, 134, 138, 139, 143, 144, 150, 151, 160], "old": [1, 4, 8, 9, 40, 43, 56, 70, 73, 75, 76, 78, 86, 110, 112, 113, 134, 140, 155, 158, 161, 163, 168, 171, 172, 178, 179], "select": [1, 2, 4, 5, 6, 9, 18, 26, 29, 30, 35, 39, 40, 41, 42, 43, 50, 52, 57, 59, 65, 66, 68, 70, 71, 72, 74, 75, 87, 96, 98, 100, 106, 113, 114, 116, 119, 126, 128, 132, 137, 138, 139, 143, 144, 150, 153, 160, 161, 168, 171, 173, 174, 177], "type": [1, 2, 3, 4, 7, 19, 25, 30, 32, 40, 42, 43, 45, 48, 49, 50, 53, 55, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 81, 83, 88, 96, 97, 98, 99, 100, 103, 104, 105, 106, 109, 110, 113, 114, 117, 118, 119, 122, 123, 124, 126, 127, 129, 134, 135, 136, 138, 139, 140, 143, 144, 150, 152, 160, 161, 165, 167, 169, 170, 171, 174, 177, 179], "conjunct": [1, 53, 126], "There": [1, 4, 5, 7, 8, 9, 25, 26, 31, 33, 34, 35, 39, 41, 42, 43, 45, 49, 57, 58, 59, 61, 62, 65, 67, 68, 69, 70, 71, 72, 75, 77, 78, 85, 86, 88, 92, 93, 94, 99, 101, 102, 103, 104, 106, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 125, 126, 127, 128, 129, 133, 134, 135, 136, 140, 144, 146, 157, 158, 160, 162, 163, 165, 167, 168, 169, 170, 171, 174, 175, 177, 179, 181], "doubt": [1, 41, 53, 70, 71, 76, 85, 103, 119, 121, 134, 146, 165], "structur": [1, 3, 26, 29, 30, 37, 39, 48, 50, 57, 58, 60, 61, 68, 76, 85, 86, 89, 102, 116, 118, 124, 127, 128, 129, 137, 160, 167, 169, 171, 175, 177, 179, 181], "importantli": [1, 35, 86, 106, 153], "bare": [1, 4, 25, 35, 109, 120, 179], "xcomarg": 1, "set_upstream": 1, "trick": [1, 26, 35, 48, 58, 65, 77, 86, 116, 119, 142, 150, 170, 171], "reli": [1, 3, 7, 26, 35, 40, 41, 45, 48, 50, 52, 53, 54, 61, 68, 75, 76, 78, 97, 101, 103, 104, 112, 116, 119, 124, 133, 139, 142, 143, 144, 162, 163, 168, 170, 171, 173, 175], "take": [1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 25, 26, 27, 30, 32, 35, 37, 39, 40, 41, 43, 45, 49, 50, 52, 53, 55, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 72, 74, 75, 78, 80, 85, 87, 89, 91, 93, 94, 96, 98, 99, 101, 103, 104, 106, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 150, 151, 152, 153, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 182], "moment": [1, 6, 7, 37, 39, 40, 45, 50, 82, 101, 102, 113, 140, 142, 161, 168, 169, 171, 174], "obviou": [1, 6, 25, 26, 29, 43, 45, 49, 54, 58, 60, 70, 72, 82, 87, 109, 110, 116, 117, 119, 120, 127, 143, 170], "materi": [1, 5, 25, 31, 33, 35, 36, 49, 51, 55, 57, 58, 72, 76, 77, 80, 91, 96, 108, 109, 123, 139, 170], "instruct": [1, 3, 27, 29, 35, 40, 43, 52, 56, 61, 66, 68, 70, 72, 78, 79, 100, 101, 111, 119, 122, 130, 132, 139], "thu": [1, 4, 25, 35, 67, 70, 82, 103, 116, 119, 126, 138, 150], "cd": [1, 4, 5, 9, 26, 29, 43, 56, 66, 71, 72, 106, 135, 150, 175], "toggl": [1, 43], "switch": [1, 4, 6, 35, 39, 43, 53, 56, 61, 66, 69, 72, 75, 77, 96, 100, 101, 112, 116, 121, 131, 150, 153, 175], "unpaus": 1, "drop": [1, 3, 27, 30, 35, 39, 57, 62, 68, 70, 88, 99, 110, 122, 137, 139, 150, 160, 175], "edit": [1, 4, 5, 6, 25, 34, 35, 43, 52, 58, 64, 65, 68, 71, 72, 73, 76, 80, 86, 109, 110, 132, 133, 135, 142, 150, 153, 163, 167, 170, 177], "dags_are_paused_at_cr": 1, "cfg": [1, 135], "locat": [1, 4, 35, 39, 41, 42, 43, 59, 61, 64, 65, 70, 73, 74, 75, 81, 88, 99, 100, 106, 115, 117, 121, 126, 128, 129, 139, 145, 150, 167, 175], "wherev": [1, 27, 39, 52, 117, 163], "fair": [1, 3, 6, 9, 26, 33, 39, 52, 58, 59, 67, 69, 70, 75, 78, 86, 101, 103, 104, 106, 112, 125, 142, 151, 161, 162, 163, 177, 181], "warn": [1, 5, 7, 25, 29, 72, 75, 81, 92, 101, 109, 113, 116, 121, 138, 143, 161, 171, 179], "surpris": [1, 5, 6, 9, 35, 53, 67, 86, 96, 102, 113, 117, 119, 129, 139, 142, 144, 160, 162, 163, 170, 171], "curv": [1, 3, 25, 30, 35, 77, 80, 86, 87, 102, 109, 144, 150, 166, 178], "either": [1, 3, 4, 5, 6, 7, 9, 26, 28, 29, 30, 35, 39, 40, 42, 43, 45, 46, 48, 50, 52, 53, 55, 56, 57, 58, 61, 62, 67, 68, 69, 72, 75, 76, 77, 78, 82, 85, 86, 88, 89, 93, 96, 97, 99, 100, 103, 104, 105, 110, 113, 114, 115, 116, 117, 119, 120, 124, 128, 129, 130, 134, 138, 139, 142, 143, 144, 150, 158, 160, 162, 163, 165, 167, 168, 169, 170, 171, 173, 177, 179], "iter": [1, 27, 42, 49, 51, 53, 70, 76, 95, 96, 97, 112, 117, 120, 121, 122, 126, 129, 142, 143, 150, 167], "outsid": [1, 4, 6, 7, 26, 35, 41, 49, 58, 60, 61, 62, 66, 72, 103, 112, 113, 118, 126, 133, 136, 140, 143, 156, 158, 161, 162, 165, 174], "copi": [1, 8, 26, 35, 39, 40, 42, 43, 45, 48, 49, 52, 53, 54, 57, 58, 61, 68, 72, 78, 82, 85, 96, 99, 100, 104, 106, 120, 122, 126, 128, 129, 138, 139, 150, 163, 168, 173, 175], "move": [1, 3, 5, 9, 26, 35, 41, 43, 49, 52, 53, 56, 58, 59, 60, 64, 65, 70, 73, 74, 75, 76, 78, 79, 96, 97, 104, 110, 112, 113, 119, 121, 124, 128, 134, 135, 139, 150, 158, 160, 162, 167, 168, 180], "clearli": [1, 34, 62, 68, 69, 82, 121, 126, 129, 174, 175], "watch": [1, 2, 12, 35, 43, 65, 80, 150, 163, 167], "folder": [1, 2, 5, 19, 26, 39, 40, 50, 51, 60, 64, 66, 69, 70, 100, 103, 135, 139, 150, 167, 171], "beg": [1, 26, 75, 112, 142], "whether": [1, 5, 6, 7, 9, 27, 28, 35, 40, 43, 45, 49, 53, 57, 58, 62, 65, 66, 67, 68, 70, 72, 76, 77, 82, 86, 88, 91, 96, 106, 112, 113, 114, 116, 117, 119, 120, 121, 124, 130, 134, 138, 139, 140, 143, 147, 160, 163, 165, 169, 175, 179, 180], "ourselv": [1, 7, 8, 35, 59, 110, 113, 120, 130, 143, 146, 154, 161, 163, 171], "ye": [1, 2, 8, 9, 24, 35, 39, 40, 42, 45, 49, 54, 57, 58, 64, 69, 70, 81, 86, 96, 103, 105, 106, 112, 113, 121, 126, 135, 138, 143, 153, 163, 166, 176, 181], "purpos": [1, 9, 26, 28, 35, 40, 41, 42, 43, 45, 48, 49, 52, 53, 65, 71, 74, 75, 76, 77, 79, 87, 97, 98, 101, 103, 112, 113, 117, 118, 121, 138, 139, 142, 143, 144, 158, 160, 163, 165, 168, 169, 170, 177], "murkier": 1, "conclud": [1, 35, 39], "suffici": [1, 26, 68, 78, 101, 106, 113, 117, 121, 128, 153, 171, 179], "refresh": [1, 59, 73, 99, 114, 118, 119, 127, 150, 162], "ui": [1, 26, 41, 43, 92, 142, 181], "control": [1, 4, 7, 33, 43, 56, 58, 76, 77, 78, 88, 96, 100, 112, 113, 116, 118, 119, 122, 127, 130, 134, 143, 153, 161, 162, 170, 172, 177, 179], "often": [1, 6, 7, 9, 29, 35, 39, 41, 48, 50, 52, 53, 57, 58, 59, 61, 66, 67, 68, 69, 71, 72, 75, 85, 86, 87, 88, 89, 95, 100, 101, 105, 106, 110, 112, 113, 116, 118, 119, 121, 124, 126, 127, 129, 130, 131, 132, 133, 134, 138, 139, 144, 155, 158, 162, 163, 165, 166, 168, 169, 170, 172, 175, 177, 179], "scan": [1, 35, 68, 75, 80, 168], "dag_dir_list_interv": 1, "300": [1, 6, 25, 52, 72, 87, 109, 126, 163], "lower": [1, 7, 9, 53, 71, 88, 114, 126, 130, 134, 168, 175], "number": [1, 3, 4, 7, 9, 14, 25, 26, 35, 39, 40, 41, 42, 43, 45, 48, 49, 53, 54, 55, 60, 61, 62, 67, 69, 70, 74, 76, 77, 80, 87, 88, 96, 98, 99, 100, 101, 102, 104, 106, 109, 112, 113, 114, 115, 116, 118, 120, 121, 122, 124, 126, 127, 128, 129, 130, 134, 135, 139, 140, 142, 143, 150, 151, 152, 158, 162, 163, 165, 167, 168, 169, 170, 177, 179], "allow": [1, 5, 6, 7, 8, 25, 30, 35, 39, 40, 41, 42, 45, 48, 49, 51, 52, 53, 54, 59, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 88, 95, 97, 98, 99, 100, 103, 105, 106, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 126, 127, 129, 133, 134, 135, 136, 138, 139, 142, 143, 144, 147, 150, 152, 155, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 175, 177], "quickli": [1, 5, 7, 9, 33, 35, 39, 41, 43, 48, 53, 65, 68, 69, 75, 77, 78, 82, 85, 92, 93, 95, 97, 100, 101, 103, 106, 111, 112, 114, 116, 123, 127, 130, 135, 136, 137, 139, 142, 143, 144, 151, 161, 162, 163, 165, 167, 168, 170, 172], "unnecessari": [1, 45, 56, 121, 180], "arrang": [1, 3, 51, 94, 114, 144], "heirarch": 1, "dag_id": 1, "run_id": 1, "altough": 1, "tree": [1, 6, 35, 40, 49, 61, 70, 78, 89, 97, 119, 135, 167], "sesns": 1, "scheduled__2023": 1, "03": [1, 2, 18, 42, 55, 61, 70, 75, 99, 106, 119, 168], "09t17": 1, "39": [1, 6, 124, 161], "00": [1, 6, 55, 75, 82, 88, 99, 106, 110, 113, 122, 138, 165], "event": [1, 30, 33, 35, 41, 53, 58, 69, 76, 79, 106], "dropdown": [1, 41, 43, 52, 74, 96, 106, 174], "middl": [1, 2, 13, 53, 62, 96], "screen": [1, 4, 35, 39, 41, 43, 45, 49, 52, 61, 72, 78, 106, 119, 137, 139, 163, 165, 167], "bring": [1, 4, 35, 40, 43, 50, 52, 61, 65, 70, 72, 75, 76, 103, 106, 125, 137, 142, 150, 158, 163, 167, 168, 169, 170, 173, 179], "top": [1, 2, 4, 13, 19, 20, 24, 26, 29, 32, 35, 39, 43, 53, 58, 59, 60, 62, 65, 69, 71, 72, 74, 76, 84, 88, 96, 99, 101, 103, 104, 105, 106, 124, 126, 137, 142, 160, 162, 163, 165, 170, 171, 174, 177, 180], "drill": [1, 6, 139, 151], "verbos": [1, 4, 26, 48, 53, 68, 69, 96, 110, 139, 142, 167, 168, 169], "toward": [1, 26, 35, 39, 49, 52, 53, 83, 86, 110, 147, 156, 160, 178], "bottom": [1, 41, 52, 53, 57, 62, 72, 84, 85, 88, 106, 150], "18": [1, 3, 35, 61, 80, 82, 96, 99, 106, 113, 115, 122, 138, 143], "32": [1, 41, 75, 82, 97, 110, 118, 131, 139, 144, 161], "05": [1, 8, 35, 42, 55, 106, 110, 113, 142], "subprocess": 1, "75": [1, 7, 138], "info": [1, 4, 25, 35, 39, 40, 42, 80, 97, 106, 109, 113, 116, 165, 169], "bin": [1, 5, 6, 39, 43, 59, 61, 62, 66, 67, 70, 72, 75, 88, 100, 101, 105, 111, 115, 135, 138, 139, 141, 150, 165, 171, 175], "c": [1, 2, 4, 7, 9, 11, 13, 19, 25, 26, 32, 34, 35, 41, 43, 44, 45, 53, 54, 58, 61, 62, 63, 68, 69, 70, 72, 74, 78, 80, 85, 88, 93, 96, 99, 100, 102, 104, 106, 109, 113, 114, 116, 117, 118, 119, 121, 126, 128, 129, 130, 132, 134, 137, 138, 139, 140, 142, 143, 144, 160, 162, 167, 168, 174, 175, 176, 177, 181], "86": [1, 52], "93": [1, 80, 112, 114, 144], "fri": 1, "mar": [1, 66], "13": [1, 2, 8, 9, 17, 18, 49, 55, 61, 80, 82, 96, 99, 106, 113, 115, 116, 125, 128, 129, 134, 140, 163, 167, 170], "est": 1, "97": [1, 114], "exit": [1, 61, 65, 70, 97, 118, 139, 143, 150, 165, 175], "taskinst": 1, "1318": 1, "mark": [1, 4, 7, 26, 29, 34, 35, 45, 48, 53, 56, 86, 87, 91, 97, 102, 104, 140, 158, 168, 179], "execution_d": 1, "20230310t183100": 1, "20230310t183205": 1, "end_dat": 1, "grant": [1, 52, 121], "long": [1, 4, 5, 6, 9, 26, 35, 40, 43, 49, 53, 57, 58, 60, 61, 65, 70, 75, 77, 78, 79, 101, 102, 103, 106, 108, 112, 113, 116, 120, 121, 128, 129, 131, 143, 150, 158, 163, 166, 167, 168, 169, 170, 175, 177], "beat": [1, 142, 163], "ve": [1, 3, 4, 5, 6, 7, 8, 9, 26, 27, 28, 29, 30, 32, 34, 35, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 82, 85, 86, 87, 88, 89, 94, 96, 98, 99, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179], "seen": [1, 5, 7, 9, 26, 32, 49, 53, 61, 62, 66, 68, 69, 70, 88, 101, 103, 109, 112, 113, 114, 116, 117, 118, 121, 124, 127, 128, 129, 134, 138, 142, 143, 144, 152, 177, 179], "occasion": [1, 58, 113, 117, 125, 155, 158, 163], "quirki": [1, 3, 139, 151, 153], "On": [1, 2, 4, 6, 7, 14, 19, 20, 30, 31, 34, 35, 39, 43, 45, 48, 49, 53, 57, 58, 61, 65, 70, 71, 72, 75, 76, 77, 80, 86, 88, 89, 101, 104, 106, 113, 115, 118, 125, 133, 134, 135, 139, 140, 142, 143, 144, 150, 152, 155, 158, 161, 162, 163, 166, 168, 171, 174, 175, 177, 179], "balanc": [1, 5, 9, 25, 35, 39, 53, 57, 68, 89, 101, 109, 138, 146, 169], "power": [1, 4, 25, 30, 35, 49, 61, 62, 74, 76, 77, 88, 98, 99, 100, 103, 105, 109, 112, 113, 119, 122, 126, 134, 139, 152, 162, 177], "engin": [1, 25, 35, 45, 48, 49, 61, 62, 63, 68, 69, 75, 77, 78, 86, 89, 91, 106, 109, 110, 116, 123, 125, 131, 138, 152, 155, 160, 161, 163, 171, 176, 177, 180, 181], "past": [1, 5, 45, 49, 52, 57, 58, 60, 61, 69, 70, 72, 75, 76, 96, 103, 106, 110, 126, 137, 143, 158, 162, 163, 167, 170], "cover": [1, 3, 4, 25, 26, 29, 30, 35, 42, 43, 49, 53, 59, 62, 64, 65, 68, 70, 72, 74, 76, 78, 82, 89, 96, 98, 105, 106, 109, 110, 114, 116, 119, 132, 133, 134, 138, 140, 142, 143, 152, 161, 162, 163, 168, 170, 174, 175], "valuabl": [1, 5, 49, 74, 79, 139, 143, 163], "toolkit": [1, 7, 34, 61, 88, 95, 169, 171], "coop": [2, 13], "bootcamp": [2, 9, 13, 57, 77, 108, 125, 166], "apach": [2, 3, 6, 9, 19, 138], "airflow": [2, 9, 19], "python": [2, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 27, 28, 29, 31, 34, 40, 42, 44, 56, 57, 63, 72, 79, 80, 81, 83, 88, 92, 96, 97, 98, 99, 101, 102, 108, 150, 151, 152, 153, 160, 166, 173, 176, 180], "etl": [2, 9, 19], "schedul": [2, 19, 28, 30, 32, 50, 76, 78, 113, 176], "made": [2, 5, 9, 19, 31, 33, 34, 35, 39, 40, 49, 53, 57, 58, 65, 66, 68, 69, 72, 76, 77, 78, 79, 80, 82, 86, 89, 96, 97, 100, 102, 103, 104, 106, 107, 116, 117, 119, 121, 124, 127, 128, 132, 133, 136, 137, 151, 163, 168, 169, 177], "easi": [2, 4, 6, 9, 12, 16, 19, 25, 31, 39, 45, 48, 50, 52, 53, 55, 56, 57, 59, 61, 64, 68, 69, 71, 76, 77, 78, 79, 80, 86, 87, 88, 89, 94, 96, 102, 103, 105, 106, 108, 109, 110, 111, 113, 114, 116, 119, 120, 121, 124, 125, 127, 128, 130, 132, 133, 134, 136, 137, 138, 139, 142, 152, 158, 163, 167, 168, 170, 171, 172, 173, 174, 177, 179, 182], "altern": [2, 4, 18, 26, 28, 30, 39, 40, 43, 59, 67, 72, 73, 91, 92, 95, 96, 100, 104, 112, 119, 131, 132, 135, 138, 139, 142, 143, 151, 160, 163, 165, 167, 177, 179], "panda": [2, 5, 9, 16, 19, 23, 28, 29, 30, 31, 39, 41, 56, 61, 68, 69, 72, 74, 76, 77, 88, 92, 93, 96, 101, 102, 127, 131, 132, 133, 140, 162, 163, 171, 175, 177, 179], "polar": [2, 7, 18, 28, 30, 35, 131, 132, 150, 171, 179], "basic": [2, 5, 6, 7, 8, 9, 13, 14, 26, 29, 35, 39, 40, 41, 42, 45, 49, 52, 53, 55, 57, 58, 59, 62, 65, 68, 72, 76, 77, 78, 79, 80, 86, 91, 92, 93, 100, 101, 103, 104, 111, 114, 117, 118, 120, 122, 123, 126, 127, 128, 129, 130, 133, 134, 135, 137, 142, 150, 152, 153, 155, 162, 163, 165, 167, 169, 170, 171, 172, 175, 180], "skill": [2, 8, 9, 13, 57, 58, 59, 72, 74, 76, 77, 78, 79, 80, 89, 92, 95, 106, 114, 116, 118, 119, 122, 123, 125, 137, 144, 153, 163, 165, 180, 182], "rock": [2, 13, 27, 76, 106, 112, 125], "journei": [2, 12, 34, 76, 80, 86, 87, 102, 119, 120, 143, 146, 151, 163, 182], "beauti": [2, 7, 12, 27, 35, 36, 41, 62, 67, 80, 88, 128, 157, 163, 167, 170], "jupyterbook": [2, 12, 133], "benchmark": [2, 19, 29, 30, 69, 70, 75, 76, 104, 113, 138, 151, 162], "rust": [2, 19, 30, 32, 39, 40, 75, 92, 107, 150, 168, 176], "async": [2, 19, 69, 124, 143], "web": [2, 5, 8, 19, 30, 41, 49, 53, 58, 59, 61, 72, 76, 77, 89, 103, 105, 106, 107, 113, 116, 119, 131, 139, 142, 158, 161, 168, 173, 175, 177, 179], "perform": [2, 3, 9, 15, 19, 22, 25, 29, 31, 35, 53, 55, 68, 70, 75, 76, 77, 78, 96, 97, 109, 113, 117, 121, 124, 128, 130, 134, 138, 140, 151, 152, 168, 171, 175, 177], "boolean": [2, 3, 20, 26, 31, 35, 43, 54, 57, 76, 96, 99, 110, 114, 122, 169], "express": [2, 3, 20, 25, 26, 31, 34, 35, 37, 39, 43, 53, 57, 62, 66, 67, 68, 70, 75, 76, 96, 105, 109, 112, 117, 119, 120, 126, 128, 129, 130, 138, 139, 143, 151, 152, 161, 162, 165, 167, 168, 170, 171], "beginn": [2, 4, 5, 9, 13, 19, 23, 24, 30, 31, 39, 44, 45, 48, 49, 58, 59, 69, 70, 72, 77, 79, 82, 93, 97, 101, 105, 110, 111, 113, 117, 118, 121, 122, 123, 124, 127, 133, 134, 139, 143, 144, 153, 163, 165, 169, 175, 180], "expert": [2, 3, 9, 18, 19, 20, 23, 30, 44, 45, 58, 59, 70, 79, 97, 98, 113, 114, 117, 118, 120, 121, 124, 134, 137, 139, 140, 143, 144, 165, 168, 175], "golang": [2, 11, 16, 70, 137, 169, 173], "career": [2, 4, 13, 16, 20, 27, 57, 61, 69, 76, 77, 78, 89, 91, 119, 121, 133, 137, 150, 153, 156, 163, 166, 172, 178, 180], "research": [2, 3, 5, 13, 20, 25, 35, 37, 58, 68, 69, 74, 76, 96, 99, 100, 108, 109, 133, 151, 162, 163], "reveal": [2, 4, 13, 20, 26, 53, 88, 125, 139], "chemist": [2, 22, 32, 109], "strongli": [2, 3, 9, 22, 35, 37, 69, 76, 99, 101, 109, 122, 151, 168, 177], "addict": [2, 22, 109, 145, 146, 147, 154, 155, 156, 157], "cmake": [2, 10, 40], "starter": [2, 10, 16, 18, 29, 40, 56, 60, 62, 72, 76, 106, 114, 115, 133], "pride": [2, 13, 39], "medicin": [2, 13, 35, 163], "newslett": [2, 123], "11": [2, 6, 7, 8, 9, 17, 18, 31, 39, 42, 45, 53, 61, 75, 80, 81, 85, 96, 99, 105, 110, 113, 115, 117, 122, 124, 126, 128, 134, 139, 140, 142, 151, 160, 161, 163, 171, 175], "29": [2, 3, 6, 17, 75, 80, 138], "2022": [2, 4, 9, 13, 17, 42, 43, 52, 55, 58, 68, 71, 93, 99, 106, 108, 113, 166, 177], "12": [2, 6, 7, 17, 45, 52, 55, 70, 75, 80, 81, 82, 87, 88, 92, 96, 102, 104, 106, 113, 115, 122, 130, 134, 138, 140, 143, 144, 151, 161, 162, 168, 169, 171], "novemb": [2, 7, 17], "octob": [2, 17, 35, 113, 168], "25": [2, 7, 17, 35, 59, 61, 78, 80, 88, 99, 113, 119, 122, 129, 138, 161, 162, 171], "decemb": [2, 17, 55, 80, 91, 113, 119, 154], "28": [2, 17, 41, 80, 81, 96, 113, 143], "venv": [2, 5, 24, 28, 43, 56, 59, 67, 68, 70, 72, 75, 81, 100, 101, 105, 111, 131, 135, 138, 141, 175], "simplic": [2, 6, 7, 24, 69, 76, 77, 101, 114, 121, 126, 167], "win": [2, 24, 41, 56, 58, 69, 75, 79, 103, 107, 112, 139, 153, 177], "dev": [2, 10, 11, 61, 96, 137, 151, 174], "interact": [2, 4, 5, 22, 25, 30, 32, 34, 39, 43, 45, 46, 53, 59, 61, 66, 68, 69, 70, 71, 72, 75, 77, 87, 88, 105, 109, 110, 111, 115, 117, 130, 131, 135, 139, 146, 147, 149, 151, 162, 163, 168, 175, 177], "plot": [2, 14, 22, 25, 29, 31, 35, 59, 67, 68, 80, 81, 83, 84, 93, 99, 109, 162, 163, 177], "matplotlib": [2, 22, 25, 29, 30, 31, 39, 56, 58, 59, 67, 68, 72, 80, 81, 83, 84, 85, 93, 100, 109, 111, 144, 162, 177], "jupyt": [2, 3, 4, 5, 15, 22, 25, 31, 32, 39, 45, 49, 56, 59, 66, 67, 68, 69, 74, 75, 76, 87, 88, 96, 99, 103, 104, 107, 109, 110, 112, 114, 115, 120, 122, 124, 127, 128, 132, 137, 138, 139, 143, 144, 149, 160, 167, 171, 177, 179], "clean": [2, 8, 9, 16, 18, 26, 27, 29, 32, 43, 48, 51, 52, 61, 66, 74, 75, 79, 121, 126, 139, 150, 152, 174, 177], "debug": [2, 6, 19, 24, 26, 29, 40, 45, 65, 72, 76, 89, 103, 116, 121, 132, 150, 153, 167, 169], "directoryinfo": [2, 16], "exampl": [2, 3, 4, 5, 6, 8, 9, 15, 16, 18, 19, 20, 23, 24, 25, 26, 33, 35, 39, 40, 41, 42, 43, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 85, 86, 87, 88, 89, 93, 94, 97, 98, 100, 101, 102, 103, 105, 106, 107, 109, 110, 113, 114, 116, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 142, 144, 146, 150, 151, 152, 153, 160, 162, 163, 167, 168, 169, 170, 171, 174, 175, 176, 177, 179], "dunder": [2, 19, 32, 48, 49, 54, 76, 112, 143, 168, 179], "ugliest": [2, 19, 32, 76], "awesom": [2, 19, 28, 32, 43, 49, 50, 59, 61, 68, 76, 78, 92, 105, 131, 134, 135, 151, 157, 175, 182], "sauc": [2, 19, 32, 76], "dir": [2, 3, 4, 19, 32, 44, 45, 67, 71, 117, 162], "how": [2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 43, 45, 46, 49, 50, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 85, 87, 88, 89, 91, 92, 93, 96, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 127, 128, 131, 132, 134, 135, 137, 138, 141, 142, 143, 147, 150, 151, 152, 153, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 173, 176, 179, 180, 181], "duplic": [2, 19, 45, 92, 118, 119, 122, 128, 144], "class": [2, 19, 20, 23, 27, 35, 41, 43, 44, 45, 46, 48, 53, 54, 55, 57, 58, 60, 61, 67, 68, 69, 75, 76, 77, 79, 80, 86, 87, 88, 93, 100, 102, 110, 114, 117, 118, 119, 121, 122, 123, 126, 128, 129, 137, 138, 139, 140, 142, 144, 152, 160, 161, 163, 165, 172, 174, 175, 176, 177, 181], "zero": [2, 3, 7, 20, 23, 25, 35, 41, 42, 48, 52, 55, 58, 69, 70, 76, 79, 81, 82, 84, 87, 94, 96, 99, 109, 113, 114, 118, 120, 121, 122, 124, 126, 128, 129, 134, 138, 139, 142, 144, 151, 162, 165, 168, 169, 170], "dendron": [2, 16, 51], "github": [2, 3, 4, 8, 13, 16, 25, 26, 35, 39, 43, 58, 60, 61, 65, 66, 70, 72, 75, 76, 81, 97, 99, 103, 108, 109, 111, 115, 133, 135, 150, 153, 162, 170, 172, 173, 174], "markdown": [2, 5, 16, 50, 68, 72, 79, 80, 103, 135, 153, 162], "visual": [2, 3, 4, 5, 16, 18, 25, 28, 29, 35, 40, 42, 50, 52, 53, 58, 59, 65, 66, 68, 72, 74, 87, 88, 109, 150, 153, 177], "studio": [2, 4, 16, 40, 50, 59, 65, 66, 72, 150, 153], "sheet": [2, 18, 19, 32, 39, 72, 80, 163, 178], "profil": [2, 4, 19, 24, 35, 39, 40, 59, 65, 69, 70, 75, 76, 78, 104, 113, 120, 142, 153, 174], "dictionari": [2, 3, 13, 19, 20, 23, 25, 42, 43, 48, 53, 69, 75, 76, 102, 109, 112, 120, 122, 128, 134, 135, 139, 168, 169], "convert": [2, 5, 7, 19, 25, 35, 45, 48, 49, 53, 54, 62, 70, 76, 77, 85, 88, 98, 109, 110, 113, 119, 127, 129, 134, 138, 140, 144, 160, 161, 168, 170, 171], "instal": [2, 3, 4, 5, 6, 24, 25, 26, 29, 31, 40, 41, 43, 50, 52, 53, 55, 58, 59, 60, 62, 68, 70, 72, 74, 75, 76, 78, 79, 81, 88, 93, 99, 103, 105, 106, 107, 109, 110, 112, 113, 115, 117, 122, 131, 132, 139, 141, 142, 150, 151, 160, 161, 168, 170, 173, 174, 176], "program": [2, 5, 7, 9, 13, 15, 19, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 40, 41, 43, 45, 48, 49, 52, 58, 59, 64, 65, 67, 68, 69, 70, 72, 77, 78, 88, 89, 91, 95, 100, 103, 105, 106, 107, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 134, 137, 140, 142, 143, 144, 150, 161, 162, 163, 165, 166, 167, 168, 169, 170, 174, 175, 177, 179], "practic": [2, 3, 5, 6, 8, 11, 13, 19, 20, 21, 25, 26, 28, 29, 30, 31, 45, 52, 55, 57, 68, 70, 72, 75, 76, 78, 79, 80, 85, 86, 88, 93, 98, 99, 106, 107, 113, 114, 116, 117, 120, 122, 123, 124, 126, 127, 128, 130, 131, 134, 143, 144, 154, 155, 161, 162, 163, 165, 168, 169, 170, 175, 176, 177, 181], "separ": [2, 3, 4, 7, 19, 26, 35, 39, 43, 53, 55, 56, 58, 61, 62, 70, 71, 88, 94, 97, 98, 100, 101, 103, 105, 106, 110, 112, 113, 114, 116, 119, 121, 123, 128, 131, 135, 136, 139, 140, 150, 160, 161, 165, 169, 170, 174, 176], "imag": [2, 8, 11, 19, 26, 35, 40, 41, 59, 74, 85, 88, 106, 127, 130, 144, 150, 170, 173, 179], "git": [2, 4, 5, 9, 13, 24, 26, 39, 40, 50, 51, 61, 66, 70, 79, 101, 108, 111, 135, 139, 153, 168, 174], "part": [2, 4, 5, 7, 8, 9, 24, 25, 29, 39, 41, 42, 45, 49, 53, 54, 55, 58, 59, 61, 62, 66, 67, 68, 71, 76, 80, 85, 86, 88, 93, 98, 100, 106, 109, 110, 113, 114, 115, 116, 118, 119, 120, 121, 126, 128, 129, 130, 133, 134, 139, 143, 144, 147, 151, 155, 162, 163, 165, 166, 167, 168, 169, 175, 177, 179], "2": [2, 3, 4, 5, 6, 7, 8, 22, 24, 25, 26, 40, 41, 42, 43, 44, 45, 48, 49, 52, 53, 54, 55, 56, 59, 61, 65, 66, 67, 68, 70, 80, 81, 82, 83, 84, 85, 87, 88, 96, 97, 98, 99, 101, 102, 104, 106, 107, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 140, 142, 143, 150, 151, 152, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 176, 180, 181], "guid": [2, 3, 4, 9, 15, 19, 21, 24, 27, 28, 51, 61, 67, 68, 75, 76, 80, 86, 105, 114, 117, 119, 128, 132, 135, 137, 150], "usag": [2, 24, 26, 45, 52, 100, 103, 121, 138], "tip": [2, 9, 24, 59, 67, 76, 79, 86, 99, 127, 134, 138, 160, 171], "introduc": [2, 15, 19, 25, 26, 41, 55, 69, 76, 87, 100, 105, 112, 115, 117, 119, 120, 130, 134, 139, 149, 162, 180], "sage": [2, 15, 19, 151, 162, 163, 170, 177], "math": [2, 19, 25, 26, 31, 35, 41, 43, 45, 59, 72, 76, 82, 85, 96, 109, 110, 113, 115, 119, 123, 134, 142, 150, 175, 177], "symbol": [2, 15, 19, 25, 34, 35, 40, 42, 55, 59, 72, 73, 80, 81, 82, 85, 87, 100, 103, 109, 114, 115, 117, 119, 130, 134, 142, 150, 162, 168, 170, 177], "free": [2, 4, 9, 24, 40, 41, 43, 45, 51, 52, 53, 56, 57, 58, 65, 66, 67, 71, 72, 76, 85, 86, 87, 88, 91, 93, 103, 106, 111, 112, 113, 119, 121, 124, 129, 133, 142, 143, 150, 158, 161, 162, 171, 172, 177, 178], "slow": [2, 6, 19, 35, 58, 72, 80, 86, 94, 107, 114, 127, 129, 142, 167], "myth": [2, 19, 86, 158, 163], "julia": [2, 5, 16, 19, 59, 72, 76, 134, 142, 177, 180], "lite": [2, 12, 107, 149], "serverless": [2, 12, 68, 69, 106, 149, 160, 181], "notebook": [2, 3, 4, 5, 12, 25, 31, 32, 39, 41, 45, 49, 52, 56, 59, 66, 67, 69, 74, 75, 76, 80, 87, 88, 93, 99, 103, 104, 109, 111, 112, 114, 115, 120, 122, 124, 128, 130, 137, 139, 142, 160, 162, 170, 171, 177, 179], "complet": [2, 3, 4, 5, 7, 12, 19, 20, 21, 23, 27, 28, 35, 39, 40, 41, 45, 48, 50, 53, 56, 57, 59, 61, 65, 68, 73, 74, 75, 76, 79, 80, 85, 88, 101, 103, 104, 106, 111, 121, 122, 125, 127, 135, 136, 139, 140, 142, 143, 160, 163, 166, 167, 168, 170, 173, 175, 176, 177, 179, 180], "introduct": [2, 4, 5, 12, 17, 19, 21, 27, 34, 49, 58, 59, 68, 73, 76, 80, 82, 106, 111, 119, 124, 126, 131, 139, 170, 172], "password": [2, 12, 61, 112, 135, 140, 144, 167], "lab": [2, 3, 4, 5, 12, 35, 39, 53, 56, 59, 68, 71, 80, 96, 99, 110, 115, 127, 138, 143, 144, 154, 160, 162, 167, 171], "configur": [2, 6, 12, 24, 26, 31, 39, 40, 41, 49, 56, 66, 68, 72, 76, 78, 87, 88, 92, 97, 100, 103, 105, 116, 117, 119, 124, 133, 139, 150, 153, 157, 158, 160, 167, 171, 172, 173, 174, 177], "kaggl": [2, 9, 18, 59, 62, 75], "dataset": [2, 3, 18, 28, 29, 42, 75, 88, 92, 98, 99, 132, 138, 152, 160, 171], "api": [2, 3, 5, 8, 18, 29, 30, 52, 53, 68, 69, 77, 79, 88, 96, 97, 105, 106, 116, 117, 129, 132, 133, 160, 161, 171, 177], "larg": [2, 3, 6, 8, 9, 18, 28, 30, 33, 34, 35, 53, 54, 59, 62, 68, 72, 74, 85, 92, 93, 96, 108, 113, 119, 121, 123, 124, 127, 129, 132, 138, 142, 144, 150, 161, 169, 170, 171, 174, 177], "And": [2, 18, 25, 34, 35, 50, 53, 57, 64, 65, 69, 73, 76, 80, 86, 89, 93, 103, 107, 109, 113, 118, 120, 151, 162, 169, 171, 177, 181], "perfect": [2, 4, 13, 19, 43, 49, 57, 64, 69, 70, 87, 89, 103, 104, 114, 127, 128, 137, 157, 165, 177, 180], "duo": [2, 13, 19, 69, 70, 104, 114, 128], "know": [2, 4, 5, 6, 7, 8, 9, 13, 19, 26, 28, 29, 35, 40, 42, 43, 45, 46, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 64, 66, 67, 69, 70, 71, 72, 73, 75, 76, 79, 80, 82, 85, 86, 89, 92, 93, 96, 98, 101, 102, 103, 105, 106, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 142, 143, 144, 146, 150, 151, 152, 153, 155, 158, 163, 165, 167, 168, 171, 172, 175, 176, 177, 179, 180, 181, 182], "master": [2, 4, 5, 7, 13, 26, 27, 57, 59, 61, 65, 76, 77, 78, 80, 86, 89, 114, 116, 119, 120, 121, 122, 135, 150, 163, 165, 166], "checklist": [2, 13, 78], "shine": [2, 13, 35, 72, 78, 171], "coordin": [2, 22, 35, 41, 62, 69, 83, 113, 118, 130, 168, 169], "seaborn": [2, 3, 5, 22, 29, 30, 39, 41, 59, 62, 68, 72, 74, 93, 111, 138, 160, 171, 177], "header": [2, 26, 43, 52, 53, 58, 61, 77, 123], "januari": [2, 17, 52, 80, 113, 155, 156], "17": [2, 8, 9, 17, 18, 25, 26, 49, 55, 80, 89, 96, 99, 106, 109, 113, 128, 130, 134, 140, 143, 170], "postgr": [2, 16], "numpi": [2, 3, 5, 9, 22, 23, 30, 39, 41, 42, 52, 53, 59, 62, 68, 69, 70, 72, 75, 76, 84, 85, 87, 88, 98, 99, 100, 101, 102, 104, 106, 111, 124, 133, 142, 144, 150, 162, 163, 170, 171, 179], "an": [2, 3, 4, 5, 6, 7, 8, 9, 10, 18, 21, 23, 25, 27, 28, 30, 32, 33, 34, 37, 39, 41, 42, 43, 45, 46, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 105, 107, 109, 111, 112, 114, 115, 116, 118, 120, 121, 122, 123, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 142, 144, 145, 146, 147, 150, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 182], "fast": [2, 6, 9, 16, 26, 28, 29, 30, 35, 53, 68, 69, 76, 77, 80, 93, 100, 103, 114, 129, 132, 142, 152, 163, 169, 171, 177, 180], "s3": [2, 16, 68, 106], "goroutin": [2, 16], "groupbi": [2, 3, 18, 59, 75, 127, 140], "packag": [2, 5, 6, 8, 19, 24, 25, 26, 29, 31, 40, 41, 45, 49, 52, 55, 56, 57, 60, 61, 66, 67, 69, 74, 75, 76, 81, 82, 85, 88, 93, 96, 97, 99, 103, 104, 106, 109, 111, 115, 117, 127, 130, 132, 138, 139, 141, 142, 150, 160, 162, 163, 168, 171, 172, 174, 176, 179], "pipenv": [2, 24, 66, 68, 135], "brief": [2, 15, 35, 45, 68, 73, 119, 121, 129, 131, 139, 157, 162, 163, 167, 170, 172, 177], "translat": [2, 15, 57, 77, 82, 100, 114, 122, 174], "pycharm": [2, 4, 24, 27, 31, 43, 53, 58, 68, 76, 78, 79, 116, 133, 142, 167], "why": [2, 7, 8, 9, 19, 20, 24, 26, 29, 34, 35, 39, 41, 43, 48, 49, 53, 58, 59, 60, 61, 62, 68, 70, 73, 74, 76, 77, 79, 80, 81, 82, 85, 93, 99, 101, 102, 104, 110, 112, 119, 125, 127, 128, 130, 142, 147, 153, 154, 158, 161, 163, 178, 179], "pypi": [2, 19, 24, 39, 53, 61, 100, 160, 170, 175], "faster": [2, 6, 19, 24, 35, 43, 53, 55, 61, 69, 75, 76, 100, 129, 130, 138, 142, 150, 152, 162, 169, 171, 177], "kit": [2, 16, 92, 94, 171], "cdk": [2, 16, 92], "lambda": [2, 9, 19, 25, 42, 59, 68, 69, 98, 105, 109, 114, 116, 123, 127, 133, 152, 160, 163, 165, 175], "react": [2, 9, 16, 35, 94, 146, 155, 176, 177], "onlin": [2, 4, 5, 7, 12, 16, 31, 34, 40, 49, 57, 58, 61, 71, 76, 77, 80, 86, 87, 89, 91, 93, 99, 114, 120, 122, 128, 130, 132, 135, 137, 142, 151, 152, 160, 162, 167, 170, 176], "app": [2, 4, 6, 8, 16, 26, 34, 49, 52, 61, 65, 67, 70, 73, 94, 137, 157, 176, 177], "cooper": [2, 13, 35, 57, 78, 134], "chemistri": [2, 22, 25, 32, 92], "sympi": [2, 14, 15, 19, 22, 25, 32, 39, 63, 80, 81, 84, 86, 87, 142], "chempi": [2, 22, 25, 32], "ca": [2, 22, 25, 35, 70, 100, 114, 162], "oh": [2, 3, 8, 9, 22, 25, 28, 52, 60, 66, 102, 120, 134, 144, 160], "h3": [2, 22, 25], "po4": [2, 22, 25], "third": [2, 3, 4, 24, 26, 28, 35, 41, 52, 53, 55, 56, 58, 60, 62, 65, 68, 69, 70, 76, 79, 85, 86, 88, 96, 97, 99, 100, 101, 105, 112, 119, 120, 121, 126, 127, 128, 129, 138, 142, 144, 150, 152, 161, 163, 168, 170, 171, 175], "parti": [2, 3, 4, 24, 26, 28, 35, 41, 48, 52, 53, 55, 56, 61, 65, 68, 69, 70, 76, 79, 86, 97, 100, 101, 105, 120, 127, 142, 150, 158, 163, 168, 170, 171, 175, 178], "librari": [2, 3, 6, 8, 9, 24, 28, 30, 32, 33, 34, 39, 53, 54, 56, 59, 60, 61, 65, 66, 68, 70, 72, 74, 75, 76, 77, 80, 82, 87, 88, 93, 96, 99, 100, 102, 104, 105, 106, 107, 112, 116, 117, 127, 129, 130, 131, 132, 138, 139, 142, 143, 144, 150, 152, 155, 160, 161, 162, 163, 167, 168, 169, 170, 171, 175, 177, 179], "analysi": [2, 3, 9, 18, 29, 35, 42, 53, 59, 62, 70, 74, 75, 77, 88, 99, 103, 138, 142, 144, 152, 160, 163, 171, 177], "dataclass": [2, 19, 45, 49, 76, 117, 118, 121, 127, 131, 143, 165, 169, 177], "autom": [2, 4, 19, 26, 30, 40, 45, 49, 59, 61, 74, 76, 106, 117, 118, 121, 125, 127, 131, 137, 143, 161, 165, 168, 169, 177, 180, 181], "lesson": [2, 19, 20, 23, 35, 45, 48, 72, 76, 77, 127, 153, 157], "sagemath": [2, 15, 19, 59, 67, 68, 72, 142, 151, 163, 177], "error": [2, 4, 6, 7, 19, 20, 30, 31, 39, 41, 42, 43, 45, 48, 49, 58, 60, 61, 75, 79, 81, 82, 96, 97, 100, 110, 111, 114, 119, 120, 121, 126, 130, 134, 140, 143, 150, 161, 162, 165, 167, 168, 170, 175, 179], "except": [2, 8, 19, 20, 30, 31, 35, 39, 41, 43, 45, 49, 50, 52, 53, 69, 70, 72, 75, 77, 78, 80, 81, 88, 96, 100, 106, 110, 112, 114, 117, 119, 121, 122, 124, 126, 129, 130, 133, 134, 138, 139, 140, 144, 150, 155, 161, 165, 168], "handl": [2, 19, 20, 25, 26, 30, 31, 39, 40, 41, 43, 52, 55, 62, 65, 68, 69, 76, 77, 79, 88, 97, 106, 109, 112, 121, 122, 124, 133, 134, 142, 150, 151, 165, 170, 171, 178, 179], "cookbook": [2, 19, 116, 138, 139], "search": [2, 4, 7, 9, 19, 40, 43, 48, 52, 59, 60, 66, 69, 74, 78, 80, 86, 100, 106, 114, 126, 139, 150, 162, 166, 167, 168, 169, 170, 176, 177, 180], "format": [2, 3, 5, 7, 19, 20, 25, 40, 41, 43, 44, 45, 49, 52, 53, 58, 59, 66, 67, 68, 70, 71, 72, 74, 75, 76, 79, 82, 87, 89, 91, 92, 93, 97, 106, 109, 110, 112, 114, 116, 117, 118, 120, 121, 124, 127, 130, 134, 137, 142, 143, 144, 158, 160, 162, 163, 165, 168, 170, 171, 179], "argument": [2, 6, 21, 26, 37, 39, 41, 49, 53, 55, 62, 66, 68, 69, 70, 74, 75, 76, 77, 88, 89, 96, 110, 112, 113, 114, 115, 119, 121, 122, 123, 127, 139, 140, 150, 152, 161, 168, 169, 171], "seri": [2, 3, 6, 17, 19, 21, 25, 26, 27, 29, 32, 42, 45, 53, 59, 61, 62, 70, 76, 77, 78, 80, 82, 88, 93, 94, 98, 102, 109, 113, 118, 119, 130, 132, 134, 138, 142, 144, 150, 152, 167, 169], "tech": [2, 9, 16, 59, 166], "hobbyist": [2, 9, 16], "profession": [2, 16, 27, 31, 40, 53, 58, 68, 72, 78, 89, 103, 116, 133, 146, 163, 166, 167, 180], "slice": [2, 3, 19, 20, 31, 35, 48, 76, 99, 102, 117, 118, 121, 122, 123, 129, 138, 143, 152, 165, 169, 177], "arrai": [2, 3, 19, 25, 48, 53, 54, 59, 61, 68, 70, 72, 77, 85, 87, 88, 99, 102, 104, 107, 109, 110, 117, 124, 126, 128, 130, 134, 137, 138, 139, 142, 144, 151, 152, 169, 170, 172, 177], "choos": [2, 9, 19, 35, 39, 43, 48, 49, 50, 56, 58, 65, 77, 100, 112, 113, 117, 124, 139, 144, 150, 151, 152, 158, 163, 167], "between": [2, 3, 4, 6, 7, 9, 19, 29, 33, 35, 39, 41, 42, 43, 45, 48, 49, 53, 55, 56, 58, 61, 62, 66, 67, 69, 70, 75, 76, 77, 78, 82, 86, 87, 88, 89, 96, 98, 99, 100, 101, 102, 103, 105, 110, 114, 116, 117, 119, 120, 121, 124, 131, 134, 138, 139, 140, 142, 144, 146, 150, 153, 160, 161, 162, 165, 177, 179, 180], "matrix": [2, 22, 119, 129, 142, 162, 163, 170], "multipl": [2, 8, 22, 33, 35, 39, 42, 48, 49, 53, 56, 61, 62, 66, 68, 69, 70, 72, 80, 88, 98, 99, 100, 103, 105, 111, 119, 123, 129, 134, 142, 150, 152, 169, 170], "februari": [2, 17, 52, 55, 59, 99, 113, 155], "31": [2, 3, 6, 9, 17, 55, 59, 75, 80, 91, 99, 113, 129, 134, 138, 143, 154], "idea": [2, 4, 5, 9, 11, 23, 25, 26, 29, 33, 34, 35, 45, 49, 51, 53, 57, 58, 61, 66, 68, 69, 70, 72, 74, 76, 77, 80, 82, 86, 88, 89, 93, 96, 97, 98, 103, 104, 109, 110, 112, 113, 116, 119, 121, 128, 129, 130, 134, 135, 136, 137, 138, 139, 142, 143, 144, 151, 153, 158, 160, 163, 165, 166, 170, 172, 175, 179, 182], "block": [2, 7, 9, 19, 20, 35, 44, 46, 49, 59, 74, 75, 76, 96, 113, 114, 117, 118, 121, 128, 139, 155, 157, 158, 163, 165, 168, 169, 177, 179], "setuptool": [2, 24, 68, 100, 110, 175], "meaning": [2, 16, 59, 144], "unit": [2, 9, 16, 25, 26, 27, 29, 35, 41, 43, 53, 59, 60, 68, 70, 78, 79, 80, 85, 86, 89, 95, 96, 98, 109, 113, 114, 118, 121, 128, 133, 163, 169, 172, 180], "arrow": [2, 3, 18, 35, 41, 50, 65, 83, 93, 102, 167, 170], "pyarrow": [2, 3, 18, 75, 93, 171], "pandaspickup": [2, 18], "23": [2, 3, 18, 40, 41, 55, 59, 61, 80, 99, 113, 122, 142], "20": [2, 9, 18, 25, 35, 41, 45, 49, 80, 85, 89, 96, 97, 99, 106, 109, 118, 119, 122, 126, 134, 139, 144, 168, 169], "09": [2, 18, 70, 99, 119], "000000000": [2, 18], "04": [2, 4, 18, 42, 55, 81, 99, 113, 115], "16": [2, 3, 4, 18, 25, 31, 45, 59, 61, 66, 80, 82, 96, 99, 101, 104, 113, 115, 118, 128, 134, 142, 143, 144, 150, 161, 165], "55": [2, 9, 18, 55, 99, 113, 114], "53": [2, 3, 8, 18, 55, 75, 99, 113], "01": [2, 18, 26, 43, 55, 59, 61, 66, 99, 113, 180], "59": [2, 8, 9, 18, 55, 59, 99, 113], "30": [2, 7, 9, 18, 25, 35, 55, 75, 76, 80, 96, 99, 106, 109, 113, 122, 126, 127, 130, 142, 169], "42": [2, 18, 25, 49, 96, 99, 109, 112, 120, 126, 128, 129, 144, 161, 168, 169], "shell": [2, 6, 9, 13, 19, 39, 40, 56, 59, 61, 66, 67, 68, 70, 76, 103, 115, 135, 150, 167, 171, 175, 177], "overview": [2, 4, 13, 19, 34, 43, 56, 67, 70, 76, 80, 137, 179], "virtual": [2, 5, 19, 28, 33, 39, 43, 52, 59, 61, 66, 70, 71, 75, 76, 77, 80, 100, 104, 106, 111, 131, 132, 138, 139, 160, 161, 162, 171, 174], "video": [2, 12, 19, 35, 46, 58, 64, 69, 80, 86, 91, 129, 155, 163], "matlab": [2, 15, 22, 67, 68, 72, 88, 130, 162, 177], "price": [2, 3, 7, 15, 22, 42, 45, 59, 67, 68, 97, 99, 103, 106, 122], "featur": [2, 3, 4, 5, 6, 7, 8, 9, 15, 22, 25, 26, 29, 30, 31, 35, 39, 40, 41, 43, 45, 49, 50, 53, 59, 61, 62, 63, 66, 67, 68, 72, 74, 75, 76, 77, 78, 79, 82, 85, 86, 88, 93, 95, 96, 99, 101, 102, 104, 106, 109, 111, 112, 113, 114, 120, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 139, 141, 144, 150, 152, 153, 156, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 177, 181], "context": [2, 19, 25, 26, 39, 43, 50, 52, 53, 59, 61, 69, 70, 75, 76, 81, 102, 103, 106, 109, 112, 116, 124, 133, 134, 139, 142, 144, 161, 169, 172, 175, 177], "random": [2, 19, 26, 34, 35, 62, 68, 96, 99, 103, 106, 124, 127, 130, 137, 142, 143, 169], "secret": [2, 5, 19, 34, 35, 61, 74, 106, 124, 127, 135, 137, 143, 169, 179], "scipi": [2, 15, 19, 68, 69, 76, 77, 100, 133, 177], "never": [2, 7, 15, 19, 32, 35, 45, 53, 70, 73, 79, 92, 103, 110, 116, 121, 136, 168, 169, 179], "speak": [2, 3, 4, 8, 9, 15, 19, 28, 30, 32, 35, 45, 49, 53, 57, 58, 67, 69, 72, 77, 85, 86, 87, 88, 103, 106, 112, 113, 116, 118, 120, 121, 122, 124, 125, 127, 130, 131, 133, 139, 144, 150, 154, 163, 165, 168, 171, 175, 176], "friend": [2, 4, 7, 9, 24, 28, 29, 30, 32, 35, 45, 48, 60, 70, 80, 86, 89, 92, 93, 102, 108, 115, 116, 117, 120, 135, 137, 140, 146, 158, 162, 163, 167, 168, 177], "teach": [2, 9, 15, 24, 25, 26, 31, 35, 39, 49, 57, 58, 61, 65, 67, 71, 72, 76, 78, 89, 91, 109, 110, 117, 125, 131, 132, 133, 137, 142, 162], "sql": [2, 3, 9, 18, 19, 28, 52, 61, 68, 70, 75, 132, 136, 142, 152, 161, 168, 177], "pandassql": [2, 18, 28], "ipython": [2, 4, 18, 28, 39, 41, 59, 67, 68, 69, 72, 75, 76, 81, 99, 103, 105, 117, 132, 139, 142, 161, 170, 171, 177], "sqlalchemi": [2, 19, 131, 133, 136, 160], "solv": [2, 5, 8, 15, 22, 25, 35, 57, 58, 60, 67, 80, 86, 87, 103, 109, 112, 115, 118, 120, 121, 124, 125, 130, 140, 151, 168, 169, 170, 172, 175], "equat": [2, 15, 22, 25, 67, 80, 81, 85, 109, 130, 133, 151, 163], "yourself": [2, 9, 15, 26, 43, 49, 57, 58, 64, 66, 68, 73, 76, 78, 86, 87, 89, 103, 106, 112, 114, 116, 118, 132, 138, 139, 150, 158, 162, 172, 179, 180], "resourc": [2, 4, 15, 26, 32, 35, 38, 41, 52, 57, 58, 59, 70, 74, 76, 77, 80, 86, 106, 131, 132, 137, 141, 162, 172], "techniqu": [2, 3, 7, 15, 25, 26, 29, 35, 40, 41, 57, 58, 59, 61, 62, 70, 71, 76, 79, 86, 88, 92, 97, 106, 109, 110, 113, 117, 118, 119, 124, 127, 128, 129, 130, 134, 136, 144, 150, 152, 168, 170, 174], "introductori": [2, 21, 32, 38, 43, 76, 80, 137], "market": [2, 16, 27, 51, 59, 68, 77, 78, 103, 106, 119, 125, 172], "geniu": [2, 16, 27, 80, 86], "100": [2, 6, 16, 19, 23, 25, 27, 35, 40, 53, 58, 66, 69, 70, 74, 80, 82, 87, 88, 89, 96, 98, 109, 114, 118, 122, 126, 128, 129, 134, 138, 142, 143, 144, 150, 160, 165, 175, 178, 180], "thonni": [2, 13, 20, 24, 68, 76], "friendli": [2, 9, 13, 20, 24, 41, 58, 68, 76, 94, 107, 110, 116, 120, 142, 153, 168], "understand": [2, 3, 4, 7, 19, 25, 32, 35, 45, 49, 55, 58, 61, 62, 69, 70, 76, 77, 78, 79, 82, 87, 88, 96, 99, 101, 106, 109, 110, 113, 114, 116, 119, 121, 124, 125, 130, 132, 134, 139, 142, 143, 152, 153, 163, 165, 167, 169, 174, 177, 179], "hint": [2, 19, 32, 35, 45, 60, 96, 112, 115, 122, 123, 142, 143, 161], "collect": [2, 9, 19, 25, 35, 39, 44, 45, 48, 49, 53, 62, 69, 75, 76, 93, 109, 114, 123, 133, 142, 151, 175], "Not": [2, 4, 5, 13, 19, 29, 35, 58, 61, 76, 77, 80, 81, 86, 93, 104, 115, 117, 120, 126, 128, 143, 155, 158, 172, 178, 179], "latex": [2, 14, 15, 19, 22, 67, 72, 80, 130], "pyspark": [2, 9, 19, 75], "eleg": [2, 8, 19, 61, 128, 143, 175], "datafram": [2, 19, 28, 30, 41, 52, 55, 59, 62, 68, 72, 74, 102, 132, 152, 177], "testng": [2, 16], "spring": [2, 9, 16, 68, 91, 99, 150, 163, 177], "vagrant": [2, 16, 97], "ansibl": [2, 9, 16, 97], "pyc": [2, 19, 69], "pycach": [2, 19], "wherein": [2, 10, 33], "account": [2, 4, 5, 10, 40, 43, 49, 61, 67, 68, 69, 71, 72, 74, 78, 85, 104, 105, 115, 124, 155, 158, 160, 180], "whereabout": [2, 10], "stop": [2, 8, 13, 26, 35, 40, 43, 49, 53, 57, 61, 69, 71, 82, 85, 99, 102, 111, 118, 120, 124, 126, 128, 150, 163, 167, 169, 177], "Being": [2, 13, 14, 85, 124, 163, 165], "junior": [2, 9, 13, 27, 106], "No": [2, 7, 8, 9, 13, 33, 34, 35, 42, 51, 53, 59, 60, 63, 68, 75, 76, 80, 85, 110, 111, 112, 116, 124, 139, 150, 156, 158, 163, 168, 178], "serious": [2, 3, 13, 33, 45, 58, 68, 77, 108, 154, 156, 158, 177, 179], "languag": [2, 3, 5, 6, 7, 9, 13, 25, 27, 32, 33, 34, 35, 37, 39, 40, 42, 45, 48, 53, 57, 58, 59, 60, 65, 67, 68, 70, 77, 79, 93, 96, 99, 100, 102, 104, 105, 106, 107, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 126, 128, 129, 132, 134, 136, 137, 138, 139, 143, 144, 150, 153, 156, 162, 163, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 179], "javascript": [2, 9, 13, 40, 41, 43, 76, 100, 103, 107, 120, 126, 127, 128, 133, 168, 170, 177, 180], "zen": [2, 19, 23, 113, 117, 121, 126, 127], "modul": [3, 6, 8, 26, 27, 28, 35, 39, 40, 42, 43, 45, 46, 54, 55, 56, 57, 60, 61, 62, 68, 70, 74, 76, 85, 88, 100, 101, 106, 110, 111, 112, 116, 119, 121, 129, 135, 137, 138, 140, 143, 151, 169, 170, 171], "seriou": [3, 4, 9, 26, 33, 66, 69, 79, 89, 103, 106, 116, 175], "export": [3, 4, 26, 39, 40, 60, 66, 67, 68, 101, 104, 107, 117, 127], "dimension": [3, 41, 45, 59, 68, 69, 99, 102, 121, 129, 130, 132, 138, 142, 169, 170, 177], "spreadsheet": [3, 58, 68, 99, 102, 130, 134], "row": [3, 45, 52, 53, 59, 62, 68, 72, 96, 106, 130, 137, 138, 142, 143, 152, 160, 170, 171], "columnar": [3, 138], "column": [3, 9, 29, 52, 59, 62, 68, 75, 82, 88, 96, 119, 130, 132, 137, 138, 142, 152, 160, 161, 168, 170, 171], "element": [3, 7, 35, 41, 43, 45, 48, 54, 58, 67, 69, 70, 72, 80, 85, 88, 93, 96, 98, 102, 114, 116, 117, 118, 119, 121, 122, 124, 126, 127, 129, 130, 139, 140, 142, 144, 152, 163, 168, 169, 170], "recent": [3, 4, 5, 6, 8, 26, 28, 29, 30, 33, 37, 39, 40, 46, 53, 56, 58, 59, 60, 61, 65, 68, 70, 72, 73, 76, 78, 81, 85, 86, 93, 96, 97, 102, 103, 104, 106, 107, 108, 111, 112, 115, 116, 120, 125, 131, 132, 133, 134, 135, 137, 139, 142, 150, 151, 153, 155, 158, 163, 166, 168, 170, 171, 173, 175, 176, 177], "pro": [3, 30, 31, 76, 78, 86, 127, 142, 166, 167], "con": [3, 30, 76, 86, 142, 167], "depth": [3, 4, 9, 26, 41, 59, 68, 69, 76, 94, 99, 114, 132, 135, 142, 162, 175], "rework": [3, 26, 27, 31, 48, 80, 117, 128, 129, 168, 179], "weav": 3, "come": [3, 4, 5, 6, 7, 9, 26, 30, 32, 35, 39, 40, 41, 48, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 75, 76, 77, 78, 85, 86, 89, 95, 96, 101, 103, 104, 107, 113, 114, 116, 117, 119, 124, 128, 132, 133, 134, 135, 137, 139, 142, 143, 144, 152, 158, 160, 161, 162, 163, 165, 167, 168, 169, 174, 175, 176, 181], "consult": [3, 9, 26, 34, 38, 68, 85, 118, 120, 135, 139], "discuss": [3, 4, 7, 9, 25, 26, 28, 29, 34, 35, 39, 40, 42, 43, 45, 49, 53, 54, 59, 61, 66, 67, 68, 69, 70, 72, 74, 75, 76, 79, 82, 86, 91, 92, 95, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 128, 129, 130, 131, 132, 133, 134, 137, 139, 142, 143, 144, 151, 152, 158, 161, 162, 165, 167, 168, 169, 170, 171, 174, 175, 177, 179], "titl": [3, 5, 25, 39, 45, 52, 70, 83, 86, 88, 93, 108, 109, 110, 122, 140, 161, 162, 169], "suppos": [3, 4, 7, 29, 35, 39, 40, 45, 48, 49, 53, 56, 69, 70, 73, 110, 113, 114, 116, 118, 122, 125, 128, 165, 168, 170, 171, 174, 175], "spoiler": [3, 37, 75, 76, 124], "memori": [3, 29, 45, 58, 69, 75, 77, 88, 93, 95, 97, 99, 101, 102, 106, 114, 121, 124, 134, 136, 137, 138, 142, 150, 160, 167, 171, 177], "effici": [3, 6, 35, 48, 53, 68, 69, 74, 75, 77, 78, 88, 93, 99, 114, 124, 128, 129, 134, 138, 144, 152, 169, 177], "publish": [3, 5, 17, 26, 27, 28, 29, 30, 32, 35, 37, 39, 41, 51, 58, 65, 68, 72, 74, 78, 86, 92, 97, 103, 104, 108, 111, 113, 125, 142, 156, 165, 170, 172], "intern": [3, 4, 7, 48, 53, 80, 109, 110, 113, 114, 119, 120, 124, 127, 129, 132, 143, 144, 162, 171, 175], "found": [3, 4, 7, 8, 9, 25, 26, 29, 31, 32, 33, 35, 41, 45, 49, 50, 53, 55, 58, 59, 60, 61, 66, 68, 69, 70, 71, 75, 76, 80, 81, 82, 86, 93, 96, 100, 102, 104, 106, 107, 109, 110, 111, 112, 113, 114, 116, 119, 122, 124, 126, 127, 130, 132, 133, 137, 138, 139, 142, 143, 151, 154, 155, 157, 160, 162, 163, 172, 176, 177, 179], "author": [3, 26, 29, 30, 32, 49, 59, 61, 67, 68, 71, 72, 74, 76, 82, 89, 102, 106, 110, 111, 112, 113, 120, 134, 135, 137, 144, 172], "mckinnei": [3, 59, 177], "hi": [3, 9, 30, 33, 34, 35, 45, 49, 51, 58, 59, 67, 78, 86, 89, 119, 120, 125, 131, 132, 135, 137, 140, 153, 160, 163, 177], "hate": [3, 4, 40, 139, 179, 181], "closer": [3, 35, 74, 132, 134, 140, 142, 143, 151, 160], "metal": [3, 122], "section": [3, 4, 6, 7, 9, 25, 26, 35, 39, 40, 41, 43, 49, 52, 53, 56, 57, 59, 61, 62, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 88, 96, 98, 99, 100, 101, 103, 105, 106, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 124, 128, 133, 134, 135, 137, 139, 142, 143, 144, 150, 151, 158, 160, 162, 163, 168, 170, 172, 175, 179], "being": [3, 4, 6, 9, 25, 32, 35, 41, 45, 49, 51, 53, 54, 56, 58, 59, 61, 62, 67, 68, 69, 70, 71, 72, 75, 76, 77, 86, 88, 89, 92, 95, 96, 97, 103, 104, 108, 109, 110, 111, 114, 115, 116, 117, 120, 121, 124, 129, 130, 134, 137, 138, 139, 142, 143, 144, 146, 150, 152, 156, 158, 161, 163, 169, 172, 176, 177, 179], "believ": [3, 4, 5, 27, 35, 40, 57, 58, 68, 75, 76, 78, 80, 89, 91, 102, 103, 104, 106, 107, 111, 112, 117, 125, 136, 139, 146, 156, 163, 180], "intuit": [3, 25, 30, 35, 39, 40, 50, 69, 75, 87, 103, 109, 130, 132, 142], "its": [3, 8, 9, 25, 26, 32, 35, 39, 41, 43, 45, 49, 53, 54, 57, 58, 61, 62, 66, 67, 68, 76, 78, 82, 85, 86, 87, 88, 91, 94, 98, 99, 100, 101, 103, 106, 109, 113, 117, 118, 119, 121, 124, 127, 128, 129, 133, 134, 135, 138, 140, 142, 143, 150, 151, 152, 158, 161, 163, 165, 169, 170, 171, 173, 175, 176, 177, 181], "huge": [3, 5, 29, 39, 53, 58, 60, 68, 69, 72, 86, 99, 104, 106, 119, 142, 163, 169], "mover": 3, "2008": [3, 45, 177], "while": [3, 5, 6, 9, 25, 26, 28, 29, 30, 33, 35, 39, 40, 41, 43, 45, 48, 49, 50, 51, 52, 53, 55, 58, 61, 62, 65, 68, 70, 71, 72, 73, 75, 76, 77, 78, 82, 86, 88, 89, 92, 95, 97, 99, 100, 102, 103, 104, 108, 109, 111, 112, 113, 114, 116, 117, 119, 120, 122, 124, 126, 129, 131, 133, 134, 135, 136, 139, 142, 143, 144, 151, 153, 155, 156, 157, 161, 162, 163, 167, 168, 169, 171, 175, 176, 177, 178, 179], "twelv": [3, 7, 61, 80, 93, 96, 179], "year": [3, 9, 25, 26, 27, 32, 33, 34, 35, 39, 45, 55, 58, 59, 68, 69, 76, 78, 82, 86, 87, 89, 91, 93, 94, 98, 99, 102, 103, 104, 106, 108, 109, 113, 116, 119, 124, 125, 136, 140, 142, 150, 154, 155, 156, 157, 160, 161, 162, 163, 166, 167, 170, 175, 176, 177, 178, 179, 181, 182], "period": [3, 4, 40, 49, 58, 61, 71, 80, 166, 175], "becam": [3, 35, 68, 75, 124, 129, 155, 170], "domin": [3, 68, 78, 142, 177], "analyt": [3, 35, 72, 138, 160, 171, 179], "subject": [3, 35, 36, 53, 69, 72, 78, 85, 86, 110, 113, 134, 140, 163, 176, 178], "book": [3, 31, 33, 35, 37, 49, 54, 57, 58, 72, 76, 77, 78, 80, 82, 85, 86, 108, 113, 114, 121, 137, 155, 160, 167, 168, 169], "ask": [3, 25, 27, 33, 35, 45, 48, 54, 57, 58, 59, 60, 65, 66, 68, 72, 73, 75, 79, 89, 96, 101, 106, 109, 110, 113, 114, 117, 122, 124, 131, 132, 133, 134, 137, 139, 147, 158, 163, 167, 168, 177, 179], "todai": [3, 4, 5, 31, 35, 50, 55, 58, 66, 73, 77, 78, 80, 82, 104, 110, 112, 113, 119, 126, 142, 154, 155, 156, 157, 158, 160, 163, 166, 171, 175, 177, 178, 181], "technic": [3, 32, 35, 68, 125, 127, 139, 163, 172, 178], "perspect": [3, 9, 26, 35, 49, 115, 127, 139, 162], "hard": [3, 4, 8, 9, 27, 28, 29, 35, 39, 45, 49, 52, 57, 58, 60, 61, 70, 73, 77, 78, 86, 89, 96, 99, 121, 128, 132, 139, 142, 144, 150, 162, 175, 182], "press": [3, 9, 29, 35, 39, 43, 57, 61, 100, 150, 161, 167], "newcom": [3, 9, 32, 49, 57, 58, 68, 76, 77, 78, 89, 93, 111, 116, 118, 122, 126, 129, 131, 132, 168, 172, 180, 181], "ignor": [3, 4, 7, 9, 29, 37, 73, 78, 96, 97, 99, 101, 113, 116, 129, 144, 168, 171, 178], "longer": [3, 4, 8, 27, 32, 33, 34, 35, 42, 43, 68, 73, 84, 101, 103, 112, 119, 122, 129, 130, 136, 143, 150, 170, 172, 177], "probabl": [3, 4, 26, 28, 35, 39, 40, 41, 43, 45, 52, 53, 56, 58, 59, 60, 62, 66, 67, 69, 70, 71, 72, 77, 85, 86, 87, 88, 91, 93, 100, 101, 104, 113, 114, 115, 116, 117, 119, 121, 126, 127, 129, 130, 134, 139, 143, 144, 150, 156, 158, 160, 162, 167, 169, 171, 175, 177, 179, 180, 181], "true": [3, 6, 7, 9, 25, 26, 30, 35, 39, 40, 42, 43, 45, 48, 49, 54, 57, 58, 61, 62, 65, 67, 68, 69, 70, 74, 75, 76, 81, 82, 85, 88, 92, 96, 98, 99, 101, 103, 107, 109, 110, 112, 113, 118, 119, 120, 121, 122, 124, 127, 129, 130, 134, 138, 139, 140, 143, 144, 147, 150, 151, 152, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 175, 177, 179], "larger": [3, 8, 26, 35, 57, 69, 75, 85, 129, 130, 132, 142, 144, 168, 169], "ecosystem": [3, 68, 103, 110, 113, 142, 163, 175], "nativ": [3, 28, 57, 61, 68, 69, 70, 96, 127, 133, 137, 139, 160, 162, 163, 169, 171, 176, 177], "statist": [3, 35, 62, 67, 68, 88, 92, 99, 144, 177], "extens": [3, 4, 31, 39, 41, 43, 50, 53, 55, 61, 66, 67, 68, 69, 72, 86, 88, 103, 104, 110, 112, 113, 116, 130, 131, 133, 142, 160, 162, 168, 170, 171, 174, 175, 177], "anyth": [3, 7, 9, 33, 34, 40, 42, 43, 49, 52, 53, 57, 58, 61, 65, 66, 67, 68, 70, 79, 80, 93, 101, 103, 104, 106, 113, 116, 119, 120, 122, 139, 142, 143, 154, 158, 160, 161, 166, 167, 168, 179], "margin": [3, 59, 155], "analys": [3, 75], "linear": [3, 25, 35, 68, 77, 83, 84, 96, 102, 109, 130, 142, 151, 162, 177], "algebra": [3, 25, 67, 68, 77, 86, 87, 96, 102, 109, 113, 129, 130, 134, 142, 151, 162, 163, 170, 178], "Then": [3, 26, 35, 40, 42, 49, 55, 58, 61, 71, 74, 79, 86, 87, 100, 101, 109, 113, 118, 144, 152, 154, 155], "stress": [3, 27, 35, 53, 58, 103], "consider": [3, 9, 45, 70, 71, 75, 102, 114, 117, 121, 127, 167, 179], "steep": [3, 35, 77], "particular": [3, 4, 26, 35, 40, 53, 55, 68, 85, 98, 100, 113, 119, 133, 138, 142, 161, 168, 176], "index": [3, 19, 31, 39, 48, 59, 62, 68, 70, 71, 75, 76, 82, 88, 98, 99, 100, 102, 104, 107, 111, 117, 118, 121, 128, 129, 135, 138, 140, 142, 143, 144, 150, 165, 173, 175, 177], "common": [3, 5, 7, 25, 35, 39, 41, 45, 48, 49, 53, 58, 60, 68, 69, 75, 76, 80, 88, 89, 96, 99, 100, 101, 106, 109, 112, 116, 117, 118, 119, 120, 124, 126, 127, 128, 129, 130, 133, 139, 140, 142, 143, 144, 158, 163, 165, 167, 168, 169, 174, 175, 179], "summari": [3, 6, 34, 39, 59, 68, 78, 80, 103, 104, 127, 139, 142, 143], "moreov": [3, 9, 26, 40, 41, 42, 61, 62, 69, 70, 72, 78, 85, 87, 88, 98, 106, 112, 113, 118, 121, 126, 133, 142, 144, 150, 153, 170, 171, 177, 178, 179], "interoper": [3, 127, 171, 177], "jupyterlab": [3, 5, 39, 41, 56, 59, 71, 72, 73, 75, 138, 142, 160, 162], "launch": [3, 4, 5, 6, 40, 41, 43, 56, 61, 64, 65, 67, 70, 72, 73, 91, 92, 103, 111, 115, 117, 131, 133, 139, 142, 145, 150, 167, 173], "standard": [3, 25, 26, 27, 34, 35, 39, 40, 41, 42, 53, 54, 55, 58, 65, 68, 76, 77, 79, 88, 93, 96, 98, 100, 102, 103, 104, 109, 110, 112, 114, 119, 120, 125, 127, 128, 129, 130, 134, 135, 139, 142, 143, 144, 151, 153, 160, 168, 169, 174, 175, 179], "alias": [3, 4, 39, 59, 66, 68, 96, 106, 139, 179], "pl": [3, 75], "pd": [3, 42, 52, 55, 62, 74, 75, 88, 98, 99, 101, 152, 160], "np": [3, 25, 41, 42, 52, 53, 62, 70, 75, 84, 85, 87, 88, 96, 98, 99, 101, 109, 129, 130, 142, 170], "sn": [3, 59, 88, 138, 160], "creation": [3, 61, 68, 74, 88, 142, 143], "exactli": [3, 6, 25, 35, 40, 41, 61, 65, 70, 73, 86, 101, 104, 109, 110, 112, 113, 114, 116, 121, 125, 127, 130, 134, 143, 168, 169, 170, 171, 175], "np_arrai": [3, 129], "arang": [3, 25, 52, 53, 96, 99, 109, 170], "reshap": [3, 52, 96, 99, 130, 142, 170], "df_polars_from_numpi": 3, "df_pandas_from_numpi": 3, "By": [3, 4, 5, 9, 26, 29, 35, 39, 40, 42, 43, 45, 48, 49, 52, 53, 57, 61, 62, 66, 70, 71, 73, 76, 77, 87, 96, 97, 99, 101, 112, 113, 117, 120, 121, 126, 128, 137, 144, 146, 152, 163, 167, 168, 170, 171, 179], "maintain": [3, 26, 28, 35, 39, 49, 59, 61, 72, 75, 76, 104, 110, 112, 113, 116, 120, 121, 123, 124, 127, 128, 131, 142, 165, 169, 170, 174, 177, 178, 179], "tabular": [3, 72, 74, 93, 137, 138, 170], "similar": [3, 5, 6, 7, 8, 26, 30, 34, 35, 39, 42, 53, 58, 60, 61, 62, 67, 68, 69, 72, 75, 76, 82, 88, 94, 96, 99, 102, 103, 106, 110, 113, 114, 119, 126, 127, 129, 132, 134, 139, 144, 146, 152, 161, 168, 169, 171, 177], "put": [3, 8, 29, 32, 35, 41, 49, 52, 60, 65, 68, 70, 75, 78, 84, 87, 88, 89, 93, 94, 97, 100, 101, 102, 108, 114, 115, 117, 119, 121, 124, 125, 133, 134, 135, 142, 143, 158, 160, 168, 169], "side": [3, 6, 7, 25, 34, 35, 39, 41, 43, 45, 56, 68, 70, 71, 80, 81, 85, 88, 99, 103, 106, 109, 113, 120, 131, 133, 134, 138, 142, 162, 163, 165, 168, 169, 179], "column_": 3, "raw": [3, 5, 6, 42, 53, 69, 74, 99, 104, 129, 144, 152, 161, 162, 171, 177], "constructor": [3, 48, 49, 55, 74, 96, 102, 112, 114, 117, 128, 129, 139, 169, 170, 172, 179], "overrid": [3, 6, 45, 49, 61, 65, 68, 99, 120, 127, 143, 165, 179], "cosmet": 3, "dispens": [3, 163], "altogeth": [3, 4, 27, 69, 73, 133], "sens": [3, 7, 9, 25, 27, 35, 37, 39, 41, 42, 43, 45, 49, 52, 57, 58, 61, 67, 68, 79, 85, 86, 89, 101, 102, 104, 109, 110, 112, 113, 116, 117, 121, 126, 128, 129, 134, 139, 142, 158, 161, 163, 165, 169, 176, 177, 179], "light": [3, 26, 35, 80, 92, 100, 103, 124, 142, 168], "style": [3, 26, 27, 41, 50, 59, 60, 65, 67, 70, 79, 91, 94, 110, 112, 117, 134, 161, 169, 171, 177], "favor": [3, 135, 139, 171, 172, 177], "squar": [3, 35, 41, 45, 49, 58, 78, 80, 83, 85, 87, 98, 99, 114, 118, 122, 124, 126, 128, 130, 134, 142, 150, 151, 152, 162, 168], "bracket": [3, 42, 50, 70, 99, 114, 119, 124, 126, 128, 129, 152, 167, 168, 170], "posit": [3, 4, 5, 9, 25, 35, 41, 49, 53, 59, 66, 69, 76, 89, 96, 109, 112, 113, 119, 121, 123, 124, 128, 139, 146, 150, 152, 161, 163, 169, 177, 180], "zillow": [3, 59, 99], "remot": [3, 35, 40, 43, 45, 51, 61, 70, 72, 78, 97, 99, 110, 118, 143, 153, 173], "csv": [3, 42, 62, 68, 70, 74, 75, 96, 137, 138, 142, 152, 160, 171, 177], "url": [3, 72, 73, 99, 103, 110, 127, 135, 143, 144, 161, 168], "zillowstat": [3, 99], "public_csv": [3, 99], "zhvi": [3, 99], "metro_zhvi_uc_sfrcondo_tier_0": [3, 99], "33_0": [3, 99], "67_sm_sa_month": [3, 99], "df_homes_panda": 3, "read_csv": [3, 42, 62, 74, 75, 98, 152], "df_homes_polar": 3, "twenti": [3, 40, 86, 112, 113, 156, 167, 171], "total": [3, 9, 25, 35, 42, 53, 62, 68, 70, 79, 89, 98, 99, 109, 112, 119, 122, 124, 138, 165, 171], "ones": [3, 4, 7, 31, 33, 35, 43, 53, 79, 86, 92, 96, 98, 103, 110, 116, 117, 125, 133, 134, 135, 139, 142, 161, 168, 170, 172, 176], "read_excel": [3, 52, 74], "read_json": 3, "read_parquet": [3, 75, 138], "read_sql": [3, 160], "otherwis": [3, 4, 5, 8, 29, 35, 39, 40, 41, 43, 45, 50, 52, 53, 59, 61, 65, 68, 69, 74, 79, 82, 87, 89, 93, 96, 100, 103, 106, 112, 114, 117, 118, 119, 121, 131, 134, 138, 139, 143, 152, 156, 157, 158, 165, 168, 169, 172, 179], "unavail": [3, 139], "sampl": [3, 5, 9, 26, 41, 45, 49, 52, 53, 62, 68, 80, 96, 107, 110, 117, 126, 142, 143, 144, 151, 166, 170, 171, 172], "df_pandas_penguin": 3, "load_dataset": [3, 59, 88, 99, 138, 160], "penguin": [3, 99], "df_polars_penguin": 3, "revert": [3, 126], "to_panda": [3, 138], "still_more_pandas_penguin": 3, "ic": [3, 35, 179], "to_numpi": 3, "to_dict": 3, "discov": [3, 35, 39, 43, 45, 49, 80, 88, 97, 99, 119, 139, 150, 156, 162, 163, 168], "shape": [3, 25, 29, 35, 41, 42, 49, 61, 62, 68, 88, 96, 109, 130, 135, 138, 142], "dtype": [3, 42, 75, 96, 99, 152], "head": [3, 27, 35, 41, 42, 51, 58, 59, 60, 62, 63, 67, 74, 75, 88, 96, 99, 102, 138, 151, 152, 153, 159, 160, 171], "tail": [3, 35, 41, 132], "caus": [3, 35, 41, 68, 87, 101, 116, 120, 121, 126, 128, 135, 140, 147, 157, 158, 167], "difficulti": [3, 6, 32, 70, 76, 96, 100, 116, 163], "joi": [3, 177], "filter": [3, 41, 61, 70, 75, 99, 124, 128, 138, 152], "underscor": [3, 45, 48, 54, 119, 135, 170], "determin": [3, 7, 35, 43, 75, 86, 130, 134, 140, 146, 152], "api_panda": 3, "startswith": [3, 45], "api_polar": 3, "intersect": [3, 63, 85, 169], "len": [3, 7, 25, 42, 45, 48, 52, 53, 61, 67, 82, 88, 97, 102, 109, 118, 119, 122, 124, 126, 128, 129, 140, 144, 165], "min": [3, 25, 41, 62, 98, 109], "unstack": [3, 70, 88], "pivot": 3, "renam": [3, 4, 29, 60, 73], "transpos": [3, 96], "pipe": [3, 56, 70, 139, 170], "std": [3, 6, 26, 40, 96, 151], "quantil": 3, "explod": 3, "sum": [3, 8, 25, 27, 35, 42, 45, 62, 70, 82, 96, 97, 98, 104, 109, 118, 129, 130, 160, 163, 168], "appli": [3, 7, 9, 25, 26, 29, 41, 42, 49, 52, 53, 55, 59, 62, 78, 79, 82, 87, 102, 106, 109, 113, 116, 122, 134, 136, 137, 138, 140, 142, 144, 161, 163, 166, 168, 180], "median": [3, 42, 62, 88, 98, 99], "join": [3, 7, 70, 117, 120, 124, 136, 139, 140, 143, 144, 161, 169], "replac": [3, 6, 27, 30, 33, 39, 40, 42, 43, 72, 76, 97, 110, 114, 116, 118, 119, 124, 126, 129, 135, 139, 140, 154, 158, 168, 172, 175], "iterrow": 3, "var": [3, 25, 61, 97, 98, 109], "melt": 3, "interpol": [3, 5, 119], "max": [3, 6, 25, 35, 41, 62, 98, 106, 109], "34": [3, 9, 26, 53, 59, 65, 127, 130, 138, 142, 161, 168], "fifti": [3, 57, 70, 163], "eight": [3, 4, 9, 113, 134, 176], "thirti": [3, 76, 78, 150, 163], "four": [3, 7, 9, 26, 48, 49, 58, 59, 60, 62, 69, 70, 72, 82, 86, 89, 96, 113, 116, 119, 125, 128, 130, 133, 134, 143, 144, 163, 166, 173], "aggreg": [3, 129, 138], "etc": [3, 4, 5, 6, 7, 9, 26, 27, 29, 34, 35, 36, 39, 40, 41, 43, 46, 49, 50, 53, 54, 61, 68, 70, 71, 72, 75, 79, 80, 86, 88, 98, 99, 106, 112, 113, 115, 116, 117, 120, 122, 126, 134, 137, 138, 139, 161, 163, 167, 168, 169, 175, 181], "disagre": [3, 121], "alwai": [3, 4, 6, 7, 8, 25, 27, 31, 32, 35, 39, 41, 43, 45, 49, 56, 58, 59, 60, 61, 65, 66, 68, 69, 72, 75, 88, 92, 94, 96, 100, 101, 109, 110, 113, 114, 116, 117, 118, 119, 121, 129, 130, 133, 134, 137, 138, 139, 140, 142, 143, 144, 154, 156, 160, 163, 165, 167, 168, 169, 177, 181], "difficult": [3, 9, 26, 35, 51, 68, 70, 77, 78, 80, 86, 89, 100, 101, 103, 112, 124, 125, 127, 132, 136, 138, 153, 163, 165, 175], "rememb": [3, 4, 7, 26, 32, 35, 41, 42, 45, 57, 58, 61, 65, 66, 71, 79, 85, 86, 96, 99, 110, 113, 114, 116, 121, 127, 128, 130, 132, 134, 143, 144, 154, 162, 167, 175, 180], "loc": [3, 42, 75, 88, 99], "iloc": [3, 75], "doe": [3, 4, 7, 9, 25, 26, 27, 33, 35, 39, 40, 41, 42, 45, 48, 49, 50, 53, 55, 56, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 79, 85, 86, 87, 93, 96, 97, 101, 103, 104, 106, 109, 110, 113, 115, 116, 120, 121, 122, 126, 127, 129, 133, 138, 139, 142, 143, 147, 150, 151, 152, 153, 155, 157, 160, 162, 165, 167, 168, 169, 170, 171, 175, 176, 177, 179, 181], "without": [3, 4, 6, 7, 26, 29, 35, 39, 40, 41, 43, 48, 49, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 81, 85, 86, 88, 89, 93, 96, 97, 100, 104, 106, 107, 112, 113, 116, 117, 118, 121, 122, 124, 125, 126, 127, 129, 130, 131, 133, 134, 139, 140, 142, 143, 150, 153, 156, 158, 160, 161, 163, 165, 167, 168, 170, 171, 177, 179, 181], "scare": [3, 35, 67, 113, 163, 172], "quot": [3, 26, 35, 39, 57, 86, 112, 113, 131, 139, 140, 142], "current": [3, 4, 6, 9, 25, 26, 39, 40, 41, 43, 45, 46, 48, 49, 52, 53, 55, 58, 61, 66, 67, 68, 72, 74, 76, 86, 88, 100, 101, 103, 104, 106, 107, 109, 118, 119, 121, 123, 134, 138, 139, 142, 143, 150, 158, 160, 161, 162, 163, 167, 168, 170, 175, 176, 177, 180, 181], "diamond": [3, 80, 99], "ten": [3, 35, 86, 96, 99, 113, 114, 119, 122, 126, 134, 140, 155, 163, 165], "carat": [3, 99], "subset": [3, 68, 76, 77, 96, 98, 99, 104, 113, 117, 126, 128, 134, 138, 161, 169, 170], "0": [3, 4, 6, 7, 8, 25, 26, 31, 35, 40, 41, 42, 43, 44, 45, 48, 52, 53, 54, 55, 61, 62, 66, 70, 71, 72, 75, 81, 82, 83, 84, 85, 87, 88, 96, 97, 98, 99, 101, 102, 106, 109, 110, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 126, 128, 129, 131, 134, 135, 138, 140, 142, 143, 144, 150, 151, 152, 161, 162, 165, 168, 169, 171], "9": [3, 7, 25, 41, 45, 55, 61, 62, 65, 66, 67, 75, 80, 82, 96, 98, 100, 102, 106, 109, 114, 115, 118, 122, 124, 126, 127, 128, 138, 140, 151, 162, 163, 168, 169], "326": 3, "327": 3, "334": [3, 142], "4": [3, 6, 7, 9, 25, 35, 39, 41, 45, 48, 49, 53, 55, 59, 61, 66, 67, 68, 70, 72, 75, 80, 82, 85, 88, 96, 97, 98, 99, 102, 104, 106, 109, 111, 113, 115, 117, 118, 119, 120, 122, 124, 126, 128, 129, 130, 134, 138, 140, 142, 144, 151, 152, 162, 163, 165, 167, 168, 169, 170, 172], "335": 3, "336": 3, "24": [3, 7, 25, 26, 35, 55, 59, 80, 99, 106, 109, 113, 127, 130, 138], "6": [3, 5, 6, 7, 9, 25, 26, 41, 45, 48, 49, 53, 55, 56, 61, 62, 66, 67, 70, 74, 80, 85, 87, 88, 96, 98, 99, 102, 104, 106, 109, 112, 113, 115, 118, 119, 122, 124, 126, 128, 129, 130, 138, 140, 142, 144, 168, 169, 170, 171, 172, 181], "337": 3, "26": [3, 6, 9, 80, 97, 113, 128, 130], "8": [3, 6, 8, 9, 25, 26, 35, 39, 41, 45, 49, 52, 53, 61, 62, 65, 70, 73, 80, 82, 83, 88, 96, 98, 99, 100, 101, 104, 109, 112, 113, 116, 118, 120, 122, 124, 126, 128, 129, 130, 134, 135, 138, 139, 140, 142, 143, 144, 151, 161, 162, 163, 168, 169, 170, 171, 172], "338": 3, "isn": [3, 4, 9, 26, 28, 41, 61, 72, 82, 94, 114, 116, 119, 120, 128, 139, 142, 158, 163, 171, 175], "proper": [3, 25, 42, 109, 143], "_locationindex": 3, "access": [3, 4, 6, 8, 9, 34, 40, 49, 52, 53, 61, 67, 72, 74, 76, 77, 93, 98, 99, 100, 103, 104, 107, 110, 111, 115, 124, 126, 136, 137, 139, 152, 158, 170, 175], "gosh": [3, 158], "hurt": [3, 53, 58, 115, 146], "syntax": [3, 26, 32, 42, 45, 49, 53, 55, 57, 61, 70, 75, 76, 77, 88, 107, 110, 112, 114, 117, 119, 120, 124, 126, 128, 129, 137, 139, 143, 152, 160, 162, 165, 167, 171, 177, 179], "diamonds_polar": 3, "Of": [3, 7, 9, 25, 26, 27, 33, 35, 39, 41, 45, 48, 49, 52, 53, 54, 56, 58, 66, 67, 68, 70, 71, 72, 75, 76, 85, 89, 97, 100, 102, 103, 104, 106, 108, 109, 110, 112, 114, 117, 130, 133, 135, 138, 139, 143, 144, 150, 158, 162, 163, 171, 172, 179, 181], "condit": [3, 7, 25, 35, 41, 42, 43, 58, 86, 96, 99, 100, 109, 116, 118, 121, 128, 134, 152, 163, 165, 179], "800": [3, 142], "18800": 3, "col": [3, 52, 59, 75, 130, 152], "littl": [3, 6, 7, 8, 9, 26, 28, 35, 44, 48, 49, 50, 53, 57, 58, 60, 61, 62, 65, 67, 68, 75, 82, 86, 87, 88, 96, 102, 110, 113, 114, 117, 119, 120, 125, 127, 128, 129, 130, 136, 143, 151, 153, 156, 157, 163, 171, 172, 175, 182], "prefer": [3, 5, 35, 39, 40, 45, 49, 52, 58, 59, 61, 67, 72, 73, 77, 96, 101, 103, 111, 114, 117, 127, 129, 130, 139, 143, 150, 151, 153, 174], "chain": [3, 7, 35, 70, 80, 116, 138, 171], "plu": [3, 6, 35, 58, 61, 67, 68, 76, 80, 89, 94, 117, 119, 126, 133, 135, 142, 143, 160, 163, 165, 171, 179], "reminisc": [3, 139], "editor": [3, 7, 43, 52, 64, 65, 68, 72, 79, 106, 107, 108, 116, 127, 135, 150, 153, 167, 170, 177, 181], "queri": [3, 6, 9, 28, 56, 59, 68, 69, 74, 75, 97, 117, 134, 136, 139, 161, 168, 181], "bashir": [3, 29, 132], "alam": [3, 29, 42, 132], "count": [3, 5, 35, 42, 53, 58, 67, 69, 78, 96, 97, 98, 103, 113, 114, 118, 119, 121, 124, 126, 128, 139, 140, 143, 160, 165, 169, 171, 181], "accrual": 3, "syntact": [3, 49, 69, 142], "matter": [3, 6, 9, 25, 26, 27, 28, 53, 54, 58, 65, 67, 76, 78, 96, 103, 104, 109, 112, 113, 117, 120, 126, 129, 130, 131, 140, 142, 143, 151, 158, 163, 165, 172, 176, 180], "tast": [3, 4, 35, 43, 68, 115, 163, 177], "length": [3, 35, 42, 44, 45, 62, 85, 88, 96, 99, 102, 106, 112, 113, 116, 120, 124, 126, 128, 129, 140, 142, 144, 152, 158, 163, 165, 168], "almost": [3, 6, 8, 35, 40, 45, 49, 55, 58, 61, 65, 68, 75, 78, 80, 86, 87, 102, 103, 113, 119, 121, 126, 127, 129, 134, 137, 138, 146, 150, 151, 156, 158, 163, 167, 168, 169, 176], "exploratori": [3, 107, 113, 151, 162], "termin": [3, 6, 35, 39, 40, 43, 53, 61, 64, 66, 67, 70, 72, 73, 103, 105, 115, 116, 119, 131, 135, 139, 150, 151, 163, 167, 174, 175, 177], "parallel": [3, 6, 69, 75, 171], "lazi": [3, 112, 118, 124, 134], "eager": [3, 133], "mode": [3, 6, 8, 25, 61, 70, 109, 110, 150, 171], "optim": [3, 6, 28, 32, 35, 53, 55, 61, 68, 69, 76, 97, 100, 104, 107, 115, 121, 129, 132, 133, 134, 135, 142, 150, 151, 168, 169, 174, 175, 177], "pola": [3, 30], "r": [3, 4, 5, 6, 8, 9, 25, 30, 35, 39, 41, 43, 48, 49, 58, 59, 61, 62, 67, 72, 74, 76, 84, 85, 88, 96, 99, 100, 101, 109, 110, 111, 116, 124, 127, 129, 130, 133, 137, 140, 142, 143, 150, 160, 161, 162, 174, 177], "io": [3, 5, 26, 44, 53, 71, 72, 75, 81, 97, 99, 100, 103, 106, 129, 133, 143, 177], "howcani": 3, "selecting_data": 3, "selecting_data_intro": 3, "html": [3, 5, 9, 49, 59, 71, 72, 84, 103, 106, 113, 127, 137, 143, 169, 173], "940": [3, 109], "boast": [3, 68, 77, 78, 89, 131, 138, 142, 170], "outperform": [3, 132, 142], "term": [3, 4, 6, 7, 9, 25, 32, 35, 45, 48, 49, 53, 62, 64, 68, 69, 82, 101, 102, 106, 109, 113, 119, 120, 128, 129, 130, 138, 139, 142, 143, 144, 151, 162, 163, 166, 167, 169, 170, 175], "speed": [3, 35, 99, 104, 107, 114, 135, 138, 142, 150, 162, 171, 172, 174, 177], "anyon": [3, 8, 25, 27, 33, 37, 40, 41, 53, 68, 74, 109, 112, 113, 120, 121, 134, 142, 166], "acquaint": 3, "said": [3, 4, 7, 9, 26, 35, 45, 49, 53, 57, 58, 68, 86, 87, 96, 102, 103, 110, 113, 117, 118, 119, 121, 125, 133, 137, 142, 143, 151, 156, 163, 169, 175, 179, 182], "anywher": [3, 8, 39, 66, 101, 124, 126, 133, 135, 163], "soon": [3, 27, 31, 58, 68, 70, 71, 78, 82, 91, 97, 103, 119, 123, 133, 137, 162, 168, 175], "futur": [3, 5, 26, 30, 35, 41, 57, 61, 71, 72, 75, 76, 79, 80, 92, 120, 135, 142, 153], "firmli": [4, 58, 120], "At": [4, 5, 7, 8, 9, 26, 27, 35, 39, 40, 41, 43, 49, 52, 53, 56, 58, 61, 65, 66, 68, 70, 71, 72, 76, 78, 86, 87, 96, 99, 101, 104, 106, 108, 109, 111, 113, 115, 120, 125, 135, 144, 153, 155, 158, 167, 170, 171, 178, 179], "feel": [4, 5, 9, 27, 30, 35, 37, 41, 49, 50, 56, 58, 59, 66, 67, 68, 70, 71, 72, 76, 77, 78, 89, 93, 96, 104, 111, 112, 113, 119, 124, 129, 130, 131, 135, 138, 147, 154, 158, 163, 165, 166, 167, 169, 170, 178], "advoc": 4, "dinosaur": [4, 9, 78, 93], "born": [4, 35, 113, 118], "centuri": [4, 7, 9, 35, 55, 154, 163], "interfac": [4, 26, 41, 48, 53, 65, 67, 68, 69, 72, 74, 78, 88, 92, 104, 105, 106, 107, 113, 116, 117, 121, 129, 132, 134, 139, 142, 143, 144, 171, 177], "wasn": [4, 9, 26, 32, 34, 53, 58, 65, 66, 68, 69, 70, 79, 102, 142, 151, 154, 158, 160], "didn": [4, 5, 6, 9, 27, 35, 37, 39, 41, 43, 49, 53, 57, 58, 61, 66, 67, 68, 70, 71, 75, 78, 82, 85, 96, 102, 104, 106, 112, 114, 116, 117, 121, 124, 130, 133, 134, 135, 138, 139, 142, 143, 158, 160, 163, 167, 169, 174, 178, 181], "mous": 4, "badg": [4, 156], "honor": [4, 8, 32, 41, 61, 68, 94, 101, 179], "swipe": 4, "phone": [4, 9, 48, 57, 59, 113, 156, 158, 163, 180], "star": [4, 68, 71, 122, 124], "devic": [4, 80, 85, 86, 119, 150], "programm": [4, 5, 9, 53, 57, 58, 60, 63, 67, 68, 69, 77, 78, 82, 102, 103, 113, 114, 116, 119, 120, 121, 123, 127, 128, 134, 143, 150, 153, 156, 163, 165, 168, 172, 181], "grew": [4, 163], "maco": [4, 66, 70, 100, 117, 139, 162], "quaint": 4, "rotari": 4, "dial": 4, "met": [4, 43, 80, 118, 121, 125, 134, 166, 177], "dure": [4, 8, 33, 35, 61, 70, 71, 75, 110, 112, 116, 143, 158, 163, 169, 177], "who": [4, 5, 6, 7, 9, 25, 27, 29, 31, 33, 34, 35, 37, 39, 40, 41, 43, 45, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 63, 65, 67, 68, 69, 71, 74, 76, 78, 86, 87, 88, 89, 91, 92, 93, 95, 97, 99, 103, 109, 111, 112, 113, 114, 116, 119, 121, 122, 124, 125, 126, 132, 133, 134, 136, 139, 142, 143, 144, 146, 150, 153, 154, 156, 158, 160, 162, 163, 166, 167, 168, 172, 176, 177, 179, 180, 181], "utterli": [4, 58], "adept": [4, 9], "cmd": [4, 40, 43, 50, 61, 66, 72, 100, 115, 139, 150, 168], "plan": [4, 5, 9, 35, 68, 69, 75, 78, 80, 91, 103, 163], "powershel": [4, 26, 106, 139, 177], "certainli": [4, 26, 33, 45, 49, 58, 61, 86, 102, 112, 116, 121, 130, 138, 139, 142, 151, 160, 163, 165, 166, 168, 178], "worthi": 4, "administr": [4, 9, 49, 59, 61, 77, 106, 110, 139, 167, 177], "enough": [4, 5, 6, 8, 26, 32, 35, 41, 43, 45, 52, 53, 57, 58, 59, 60, 62, 64, 65, 68, 69, 71, 75, 77, 82, 85, 86, 87, 89, 92, 101, 102, 103, 104, 106, 108, 112, 113, 115, 116, 119, 121, 124, 135, 139, 142, 143, 144, 153, 155, 156, 158, 163, 165, 166, 167, 168, 169, 171, 175, 176, 178, 179, 180], "justic": [4, 25, 109, 163], "known": [4, 5, 25, 29, 35, 42, 45, 49, 56, 62, 73, 77, 78, 85, 86, 91, 101, 104, 109, 113, 115, 116, 117, 118, 119, 124, 129, 130, 134, 143, 144, 162, 168, 179], "repositori": [4, 6, 8, 26, 27, 30, 39, 40, 41, 51, 59, 60, 61, 64, 65, 66, 74, 75, 76, 78, 88, 94, 100, 101, 103, 104, 115, 135, 139, 150, 162, 170, 173, 175], "subfold": [4, 5, 66], "task": [4, 5, 35, 39, 41, 48, 49, 50, 51, 52, 53, 57, 58, 61, 66, 68, 69, 74, 76, 77, 78, 79, 85, 86, 97, 112, 117, 119, 121, 124, 128, 129, 130, 134, 136, 137, 138, 139, 142, 144, 150, 151, 152, 153, 158, 161, 167, 169, 175, 177], "talk": [4, 7, 8, 9, 27, 28, 35, 36, 43, 45, 57, 59, 60, 67, 69, 79, 89, 100, 103, 106, 119, 124, 127, 129, 163, 167, 169, 174, 175, 176, 178, 181], "advanc": [4, 7, 9, 25, 26, 35, 41, 43, 53, 54, 58, 59, 68, 74, 75, 76, 82, 91, 95, 96, 100, 109, 110, 111, 113, 118, 119, 120, 121, 124, 126, 128, 131, 139, 151, 152, 153, 162, 163, 169], "launcher": [4, 43, 67, 72], "could": [4, 5, 6, 7, 8, 9, 26, 28, 35, 39, 40, 41, 45, 48, 49, 52, 53, 56, 57, 58, 60, 61, 65, 66, 68, 69, 70, 71, 75, 76, 78, 79, 82, 85, 86, 88, 89, 96, 97, 99, 100, 103, 104, 106, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 150, 151, 156, 158, 161, 162, 163, 165, 168, 169, 171, 173, 175, 177, 179], "depend": [4, 5, 6, 25, 27, 30, 31, 35, 39, 40, 41, 42, 43, 48, 49, 52, 55, 58, 61, 62, 66, 67, 68, 70, 71, 73, 75, 77, 88, 98, 99, 100, 101, 102, 105, 106, 109, 110, 111, 113, 116, 117, 124, 129, 132, 134, 135, 137, 139, 143, 144, 150, 151, 157, 160, 161, 163, 167, 171, 174, 177, 180], "relev": [4, 43, 60, 61, 70, 71, 73, 74, 87, 139, 144, 152, 174], "front": [4, 5, 7, 8, 31, 35, 41, 48, 57, 67, 68, 76, 88, 103, 119, 127, 129, 131, 143, 151, 163, 168, 177, 181], "folk": [4, 8, 9, 35, 56, 58, 59, 68, 72, 86, 89, 92, 99, 112, 120, 121, 124, 125, 126, 132, 147, 154, 162, 163, 166, 168, 176, 181], "npm": [4, 40, 79, 105, 107], "yarn": 4, "agnost": 4, "gh": [4, 5], "broad": [4, 41, 72, 165], "outlin": [4, 41, 51, 64, 68, 70, 78, 79, 91, 108, 135, 153, 163, 168], "whirlwind": [4, 43], "tour": [4, 35, 37, 144], "zsh": [4, 66, 117], "subtl": [4, 113, 119, 120, 124], "level": [4, 9, 27, 34, 39, 41, 43, 45, 57, 58, 59, 60, 61, 67, 69, 70, 71, 72, 77, 87, 88, 93, 98, 101, 103, 104, 106, 110, 112, 113, 116, 118, 121, 132, 134, 137, 139, 142, 143, 144, 150, 153, 156, 161, 163, 166, 179, 180], "wsl": [4, 61, 67, 116], "subsystem": [4, 139], "complic": [4, 25, 35, 61, 76, 88, 109, 131, 179], "bar": [4, 25, 35, 41, 43, 52, 53, 71, 100, 106, 109, 113, 123, 158], "applic": [4, 8, 9, 25, 32, 33, 41, 53, 67, 68, 70, 72, 77, 81, 100, 105, 107, 109, 110, 112, 113, 116, 121, 133, 136, 137, 139, 144, 162, 163, 169, 170, 172, 177, 179], "launchpad": [4, 67, 167], "iterm": 4, "unless": [4, 5, 35, 39, 53, 61, 67, 71, 72, 82, 86, 104, 106, 110, 116, 117, 119, 121, 126, 127, 128, 139, 143, 157, 163, 179, 181], "distribut": [4, 8, 30, 33, 35, 39, 56, 61, 62, 68, 69, 72, 78, 88, 93, 96, 100, 101, 113, 115, 135, 166, 167, 170, 171, 177], "icon": [4, 40, 43, 64, 65, 72, 103, 150], "pin": [4, 9, 26, 27, 65], "taskbar": [4, 65], "keep": [4, 8, 26, 34, 39, 40, 41, 42, 48, 49, 57, 58, 60, 68, 71, 72, 73, 78, 79, 91, 96, 97, 98, 112, 113, 115, 116, 117, 118, 119, 121, 124, 127, 143, 150, 151, 160, 161, 163, 165, 169, 170, 173, 175, 177], "dock": 4, "reach": [4, 5, 25, 35, 57, 58, 61, 65, 78, 85, 109, 114, 116, 121, 129, 133, 137, 159, 177], "menu": [4, 43, 71, 72, 74, 103, 106, 113, 149, 150, 159, 167], "item": [4, 6, 25, 35, 42, 45, 48, 58, 66, 67, 68, 71, 72, 79, 80, 97, 98, 99, 101, 103, 106, 109, 110, 114, 117, 118, 119, 120, 122, 126, 129, 140, 161, 165, 169], "keyboard": [4, 43, 50, 72, 103], "ctrl": [4, 40, 43, 50, 61, 70, 72, 116, 118, 150, 167], "backtick": 4, "typic": [4, 6, 7, 35, 39, 41, 43, 48, 68, 69, 71, 74, 75, 98, 114, 116, 130, 134, 137, 142, 144, 163, 169, 174], "alt": [4, 43, 168], "f12": 4, "sequenc": [4, 35, 39, 42, 45, 72, 76, 82, 96, 118, 121, 124, 126, 128, 129, 134, 139, 140, 144, 160, 170], "via": [4, 5, 25, 35, 41, 53, 54, 76, 77, 99, 101, 105, 106, 107, 109, 120, 127, 138, 142, 143, 149, 158, 160, 162, 170, 171], "yourusernam": 4, "pwd": [4, 115, 150], "refer": [4, 8, 9, 43, 45, 49, 52, 54, 56, 61, 65, 66, 77, 79, 96, 100, 102, 104, 106, 114, 117, 118, 119, 121, 126, 128, 129, 134, 139, 140, 142, 168, 170, 171], "myfold": 4, "possibl": [4, 5, 7, 9, 25, 26, 39, 40, 41, 43, 53, 54, 55, 58, 60, 61, 65, 68, 70, 75, 76, 77, 78, 85, 87, 107, 108, 109, 113, 114, 115, 116, 120, 121, 125, 126, 128, 129, 130, 136, 138, 142, 144, 150, 151, 158, 160, 163, 166, 179], "substitut": [4, 5, 7, 25, 26, 35, 39, 49, 61, 66, 73, 77, 80, 109, 112, 119, 162], "shorter": 4, "md": [4, 35, 50, 51, 53, 61, 71, 79, 135], "parent": [4, 49, 61, 84, 116, 117, 120, 135, 161], "backslash": [4, 117, 160], "slash": [4, 117, 120], "grandpar": [4, 161], "root": [4, 6, 8, 25, 26, 39, 40, 43, 45, 53, 60, 61, 66, 71, 72, 74, 79, 85, 107, 109, 113, 115, 116, 117, 127, 135, 142, 150, 151, 162, 174, 179], "tild": 4, "charact": [4, 7, 48, 49, 59, 70, 96, 106, 113, 119, 120, 122, 126, 128, 129, 144, 156], "alia": [4, 59, 66, 68, 116, 129, 139, 144, 160, 168, 175], "drive": [4, 9, 51, 52, 59, 60, 86, 91, 97, 106, 171, 177], "letter": [4, 42, 50, 58, 60, 72, 96, 98, 114, 118, 119, 124, 125, 126, 128, 130, 140], "homepath": [4, 73], "These": [4, 5, 6, 25, 34, 35, 40, 41, 49, 51, 53, 54, 61, 66, 67, 68, 70, 72, 74, 77, 81, 88, 89, 93, 96, 105, 109, 113, 114, 116, 119, 121, 122, 125, 126, 127, 128, 129, 137, 138, 139, 144, 152, 162, 163, 169], "store": [4, 5, 7, 8, 39, 40, 48, 49, 52, 61, 65, 68, 73, 74, 89, 97, 106, 110, 113, 114, 118, 124, 128, 129, 135, 138, 143, 144, 160, 168, 169, 171, 179], "effect": [4, 35, 37, 39, 43, 49, 53, 61, 68, 69, 72, 78, 87, 88, 99, 106, 113, 115, 116, 117, 119, 126, 127, 128, 129, 133, 134, 143, 147, 152, 163, 165, 169, 180], "colon": [4, 5, 7, 45, 96, 114, 119, 126, 128, 140, 142, 168], "semi": [4, 33, 45, 142], "whole": [4, 35, 39, 41, 42, 48, 50, 52, 53, 61, 62, 68, 71, 72, 75, 88, 96, 97, 103, 106, 110, 112, 113, 114, 120, 121, 122, 128, 129, 133, 134, 135, 136, 139, 140, 143, 152, 153, 162, 163, 165, 174, 175, 180], "wield": 4, "cool": [4, 30, 32, 34, 35, 39, 40, 45, 59, 66, 67, 68, 80, 85, 107, 121, 132, 133, 135, 137, 140, 153, 157, 169, 177], "kid": [4, 66, 102, 113, 121, 135, 163, 177], "runnabl": [4, 72], "non": [4, 8, 9, 33, 35, 39, 40, 41, 43, 51, 52, 58, 61, 66, 67, 68, 69, 72, 75, 76, 79, 97, 102, 110, 112, 113, 116, 119, 120, 121, 122, 124, 127, 129, 130, 136, 139, 140, 142, 151, 153, 160, 162, 169, 170, 172, 177, 178], "badprogram": 4, "recogn": [4, 25, 35, 48, 71, 82, 109, 116, 144, 169], "extern": [4, 26, 33, 35, 61, 65, 110, 121, 161, 171, 175], "check": [4, 5, 8, 26, 27, 39, 42, 43, 45, 46, 53, 55, 59, 61, 62, 65, 69, 70, 71, 73, 85, 88, 97, 98, 100, 102, 111, 113, 114, 116, 117, 118, 120, 121, 122, 127, 130, 131, 132, 134, 135, 138, 139, 140, 142, 143, 150, 153, 158, 162, 163, 169, 171, 172, 174, 175, 179], "live": [4, 5, 29, 35, 43, 59, 60, 72, 86, 101, 113, 114, 119, 125, 128, 135, 158, 163, 169, 170, 175, 178, 182], "full": [4, 5, 6, 25, 26, 29, 30, 35, 40, 41, 43, 53, 55, 58, 61, 67, 71, 72, 76, 78, 82, 86, 96, 97, 100, 103, 108, 109, 112, 113, 114, 117, 122, 133, 134, 139, 142, 154, 160, 163, 172, 175, 177, 179, 181], "execut": [4, 6, 7, 8, 26, 32, 45, 53, 58, 61, 68, 69, 70, 74, 81, 98, 100, 103, 106, 113, 118, 137, 139, 142, 143, 150, 161, 162, 167, 171, 174, 177], "panel": [4, 100], "sysdm": 4, "cpl": 4, "underneath": [4, 26, 39, 44, 74, 118, 128, 139, 142, 170], "enter": [4, 9, 35, 39, 43, 50, 52, 53, 66, 70, 71, 72, 73, 100, 106, 116, 135, 138, 139, 140, 142, 143, 161, 162, 163, 169, 175, 177], "dialog": [4, 65], "newer": [4, 48, 68, 100, 112, 120, 142, 179], "zprofil": [4, 66, 67], "older": [4, 5, 39, 100, 110, 144, 175, 178], "bash_profil": 4, "reload": [4, 75, 96, 127], "therefor": [4, 7, 35, 41, 43, 58, 61, 82, 96, 110, 114, 117, 130, 139, 142, 144, 162, 165, 168, 175], "env": [4, 8, 39, 43, 61, 100, 111, 115, 150], "crucial": [4, 58, 76, 78, 93, 130, 139, 163, 165, 169], "util": [4, 25, 26, 88, 92, 97, 100, 107, 109, 110, 112, 117, 136, 139, 144, 170], "correctli": [4, 26, 35, 39, 41, 49, 54, 61, 65, 69, 71, 87, 100, 112, 115, 116, 120, 122, 130, 135, 142, 143, 171], "alreadi": [4, 7, 9, 26, 27, 35, 39, 40, 41, 43, 45, 49, 50, 52, 53, 55, 56, 58, 59, 61, 64, 65, 66, 67, 68, 71, 72, 76, 77, 78, 79, 80, 85, 86, 91, 93, 97, 98, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 113, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 134, 135, 139, 142, 143, 144, 150, 153, 161, 163, 165, 167, 171, 172, 174, 175, 176, 177, 182], "johnlockwood": [4, 43, 66, 81, 116, 117, 139, 150, 152, 175], "shim": [4, 39], "manipul": [4, 25, 29, 35, 42, 49, 53, 55, 62, 68, 75, 99, 109, 117, 127, 134, 138, 139, 140, 152, 161, 162, 168], "volum": [4, 25, 35, 40, 61, 69, 109, 115, 163], "serial": [4, 6], "3885": 4, "2fc1": 4, "49": [4, 138, 142], "byte": [4, 8, 44, 45, 97, 124, 129, 138, 139, 143, 144, 174], "294": 4, "031": 4, "634": 4, "432": 4, "dot": [4, 41, 43, 60, 62, 88, 110, 130, 142], "recal": [4, 25, 39, 40, 45, 53, 69, 87, 96, 99, 109, 113, 118, 120, 143], "l": [4, 8, 25, 39, 50, 53, 56, 61, 66, 96, 109, 117, 129, 139, 140, 150], "noth": [4, 8, 32, 35, 40, 45, 54, 57, 61, 70, 75, 76, 80, 98, 106, 120, 124, 125, 126, 143, 153, 155, 158, 162, 163, 172, 175, 176, 178, 179, 180, 181], "john": [4, 35, 49, 55, 57, 60, 96, 97, 112, 113, 118, 119, 120, 127, 128, 159, 163], "whatev": [4, 7, 26, 27, 37, 43, 50, 57, 58, 61, 73, 76, 79, 86, 97, 102, 106, 111, 116, 117, 118, 120, 121, 143, 150, 153, 154, 158, 161, 163, 167, 170, 175, 176, 179, 181], "redirect": [4, 101, 157, 158, 160], "everywher": [4, 26, 45, 57, 67, 70, 112, 129, 170], "greater": [4, 7, 39, 45, 59, 68, 69, 72, 96, 101, 112, 118, 119, 121, 126, 134, 150, 152, 165, 175, 179], "recreat": [4, 39, 85], "delet": [4, 29, 39, 42, 61, 73, 97, 99, 106, 135, 139, 140, 158, 174], "doubl": [4, 5, 7, 45, 48, 49, 54, 76, 80, 99, 100, 101, 112, 114, 118, 129, 134, 138, 139, 140, 143, 152, 157, 170], "append": [4, 6, 43, 60, 76, 97, 118, 120, 128, 129, 135, 169, 175], "text": [4, 41, 45, 48, 49, 52, 55, 57, 58, 68, 72, 73, 74, 77, 78, 85, 86, 88, 98, 106, 113, 114, 116, 119, 134, 135, 137, 139, 140, 142, 150, 156, 163, 167, 169, 170, 175, 177], "myfil": 4, "txt": [4, 5, 6, 26, 39, 40, 41, 43, 61, 71, 100, 104, 106, 111, 116, 117, 129, 140, 143, 150, 160, 162, 174, 177], "cat": [4, 35, 39, 40, 49, 66, 106, 139, 169, 177], "hello": [4, 7, 8, 26, 28, 29, 30, 31, 40, 45, 54, 60, 61, 64, 70, 71, 76, 92, 106, 107, 110, 116, 119, 120, 123, 126, 129, 134, 135, 140, 165, 167, 168, 172, 175], "fun": [4, 5, 6, 7, 8, 25, 28, 29, 39, 45, 52, 57, 58, 59, 61, 67, 68, 70, 72, 73, 76, 77, 79, 85, 92, 93, 99, 104, 109, 113, 120, 126, 132, 133, 135, 150, 166, 169, 170, 177], "besid": [4, 53, 100, 102, 103, 113, 119, 138, 163, 176], "log": [4, 6, 40, 61, 71, 72, 80, 89, 97, 106, 112, 113, 116, 119, 121, 124, 143, 150, 165], "examin": [4, 41, 43, 45, 49, 53, 61, 68, 112, 117, 121, 124, 146, 163, 168, 170, 171, 175], "filelist": 4, "cp": [4, 150], "newfil": 4, "wildcard": [4, 139], "myf": 4, "recurs": [4, 53, 139], "new_fold": 4, "xcopi": 4, "extend": [4, 35, 45, 49, 53, 54, 59, 60, 62, 68, 76, 81, 87, 88, 117, 126, 133, 162, 172], "spent": [4, 6, 9, 41, 53, 67, 69, 70, 75, 80, 86, 104, 154, 158, 176, 177], "wrestl": [4, 28], "taught": [4, 9, 25, 48, 57, 58, 87, 109, 117, 125, 142, 163], "h": [4, 26, 55, 64, 77, 81, 96, 114, 126, 129, 140, 150, 162], "k": [4, 25, 35, 81, 96, 109, 130, 144, 161, 162], "continu": [4, 25, 30, 35, 43, 49, 52, 56, 58, 61, 62, 65, 66, 69, 73, 76, 80, 86, 88, 91, 109, 113, 138, 143, 146, 151, 155, 160, 163, 165, 167, 175, 179], "attribut": [4, 43, 45, 46, 55, 62, 70, 88, 96, 99, 112, 113, 117, 121, 139, 150, 152, 169, 171], "hidden": [4, 26, 40, 62, 78, 112, 117, 175], "everyth": [4, 7, 9, 26, 29, 42, 43, 45, 49, 52, 58, 60, 61, 68, 71, 73, 75, 76, 79, 101, 111, 113, 115, 116, 119, 120, 122, 124, 126, 127, 128, 140, 142, 151, 160, 165, 167, 168, 171, 175], "els": [4, 5, 6, 27, 40, 43, 45, 48, 57, 60, 65, 69, 70, 78, 79, 86, 87, 97, 102, 106, 107, 113, 114, 116, 117, 118, 120, 122, 124, 133, 138, 139, 140, 143, 154, 158, 163, 169, 176, 177, 179, 180], "experi": [4, 5, 6, 9, 26, 33, 37, 39, 46, 49, 50, 58, 59, 61, 63, 65, 67, 68, 69, 72, 76, 78, 82, 86, 92, 94, 99, 100, 103, 106, 107, 112, 116, 121, 125, 128, 130, 134, 136, 142, 147, 150, 153, 154, 155, 156, 158, 161, 162, 163, 176, 177, 180], "pare": [4, 48, 66], "mv": [4, 35], "afil": 4, "whose": [4, 31, 35, 39, 41, 49, 87, 158, 163], "partial": [4, 35, 81, 99, 118], "bash_histori": 4, "zcompdump": 4, "zsh_histori": 4, "zsh_session": 4, "zshrc": [4, 66, 174], "behav": [4, 35, 40, 43, 49, 68, 95, 96, 102, 110, 117, 124, 126, 139, 143, 162, 171], "rule": [4, 6, 9, 34, 35, 49, 53, 80, 116, 120, 121, 134, 162, 165, 168], "thumb": 4, "meant": [4, 5, 7, 41, 49, 53, 66, 68, 70, 96, 101, 112, 115, 116, 121, 130, 134, 142, 174, 175, 177], "bone": [4, 35, 89, 93], "fill": [4, 9, 29, 32, 35, 42, 52, 53, 62, 80, 96, 103, 105, 119, 122, 130, 142, 163, 174], "advic": [4, 35, 49, 52, 57, 97, 116, 121, 135], "chapter": [4, 57, 69, 80, 82, 86, 150], "safe": [4, 73, 101, 113, 121, 129, 134, 142, 143, 144, 163, 169, 171], "skip": [4, 7, 40, 41, 43, 52, 53, 56, 58, 66, 72, 75, 80, 106, 111, 117, 119, 124, 128, 129, 133, 142, 150], "group": [4, 6, 35, 41, 53, 62, 64, 67, 68, 75, 78, 82, 85, 88, 99, 103, 113, 114, 115, 125, 134, 139, 145, 147, 160, 165, 169, 171, 173, 175, 177, 180], "bat": [4, 5, 43, 72, 101, 105, 111, 114, 135], "displai": [4, 25, 34, 43, 45, 49, 52, 53, 55, 59, 60, 62, 66, 67, 68, 69, 72, 74, 75, 87, 88, 96, 99, 109, 110, 112, 113, 116, 117, 118, 120, 122, 128, 129, 130, 137, 138, 139, 140, 142, 143, 153, 161, 162, 165, 169, 170], "sidetrack": 4, "he": [4, 7, 9, 35, 37, 45, 49, 58, 60, 67, 69, 80, 86, 89, 114, 125, 137, 143, 158, 163, 179], "explain": [4, 5, 34, 35, 39, 43, 45, 46, 49, 54, 73, 74, 78, 79, 87, 99, 113, 161, 175, 177], "figur": [4, 9, 26, 34, 35, 41, 50, 53, 57, 66, 69, 75, 80, 82, 84, 87, 88, 92, 113, 121, 144, 151, 180], "logpath": 4, "off": [4, 8, 26, 30, 35, 37, 39, 43, 45, 56, 57, 59, 66, 67, 68, 72, 75, 80, 85, 89, 94, 96, 99, 104, 112, 114, 115, 119, 121, 124, 127, 135, 143, 150, 151, 156, 158, 163, 165, 166, 168, 169, 172, 179, 181], "rem": 4, "disabl": [4, 6, 29, 39, 53, 158, 168], "explicitli": [4, 29, 45, 49, 61, 62, 67, 87, 99, 100, 106, 110, 113, 114, 126, 134, 143, 150, 162, 168], "twice": [4, 9, 73, 87, 124, 132], "nois": [4, 35, 43], "comment": [4, 26, 35, 39, 43, 57, 58, 60, 67, 79, 91, 106, 110, 116, 118, 121, 134, 137, 142, 150, 151, 158], "stand": [4, 5, 8, 27, 35, 45, 52, 53, 58, 61, 77, 92, 94, 103, 113, 126], "remark": 4, "insensit": [4, 7], "uppercas": [4, 60, 70, 128, 140, 168], "mainfram": 4, "dateetc": 4, "java": [4, 6, 8, 9, 39, 45, 49, 54, 60, 68, 76, 77, 94, 100, 103, 104, 106, 116, 122, 124, 126, 128, 136, 139, 142, 168, 171, 172, 174, 177, 181], "man": [4, 35, 76], "die": [4, 39], "unix": [4, 39, 65, 113, 117, 139], "insist": 4, "hear": [4, 35, 57, 58, 59, 92, 103, 118, 137, 159, 163], "resort": [4, 69, 96, 142, 175, 179], "rare": [4, 35, 49, 72, 73, 114, 116, 119, 124, 134, 150, 168], "servic": [4, 45, 53, 61, 71, 97, 105, 106, 116, 132, 179], "taskmac": 4, "linuxwindowscr": 4, "directorymkdir": 4, "namemkdir": 4, "namemd": 4, "namemov": 4, "onecd": 4, "namecd": 4, "namenavig": 4, "homedr": [4, 73], "filecat": 4, "filenametyp": 4, "filenameprint": 4, "screenecho": 4, "somethingecho": 4, "somethingprint": 4, "toa": 4, "gt": [4, 7, 61, 169], "filenameecho": 4, "filenamecopi": 4, "filecp": 4, "targetxcopi": 4, "targetcopi": 4, "anothercp": 4, "targetmov": 4, "directorymv": 4, "targetget": 4, "helpcommand": 4, "helpman": 4, "primer": [5, 78], "binder": [5, 163], "cocalc": [5, 59, 67, 72, 142], "fulli": [5, 72, 79, 142, 163, 167, 169], "am": [5, 9, 32, 33, 34, 35, 38, 49, 50, 51, 55, 58, 65, 69, 72, 73, 76, 82, 86, 91, 92, 113, 121, 133, 140, 155, 163, 169, 172, 176, 179], "focus": [5, 25, 26, 31, 35, 41, 43, 49, 53, 58, 68, 76, 77, 78, 85, 93, 109, 113, 114, 117, 122, 133, 150, 153, 158, 167], "blog": [5, 7, 8, 30, 53, 58, 70, 72, 78, 96, 97, 100, 102, 103, 108, 111, 112, 114, 131, 133, 134, 137, 150, 157, 158, 161, 163, 167, 169, 171, 176], "meantim": [5, 26, 41, 43, 58, 66, 69, 72, 78, 113, 142, 143, 167, 176], "stumbl": [5, 97], "accid": [5, 76, 158], "onto": [5, 35, 39, 41, 53, 66, 136, 138, 168], "qualiti": [5, 9, 27, 74, 98, 116, 135, 142], "content": [5, 26, 28, 35, 41, 45, 49, 59, 65, 66, 67, 68, 70, 71, 74, 91, 92, 97, 102, 106, 116, 117, 120, 126, 129, 137, 139, 143, 150, 154, 161, 162, 168, 169, 170, 171, 175, 177], "jupytext": 5, "variou": [5, 7, 25, 32, 33, 35, 42, 43, 53, 54, 55, 59, 61, 62, 66, 68, 72, 76, 77, 88, 98, 100, 106, 109, 110, 111, 112, 113, 117, 119, 124, 126, 130, 134, 137, 138, 139, 140, 143, 144, 148, 152, 162, 163, 167, 169, 177], "extrem": [5, 9, 31, 35, 50, 61, 75, 76, 80, 89, 91, 101, 106, 110, 121, 127, 129, 142, 144, 160, 169], "varieti": [5, 29, 37, 68, 72, 74, 76, 77, 86, 103, 137, 139, 150, 152, 175], "host": [5, 8, 26, 61, 67, 68, 71, 72, 74, 76, 77, 78, 106, 115, 133, 143, 158, 162, 163, 173, 176], "readthedoc": 5, "org": [5, 31, 34, 53, 61, 65, 67, 70, 81, 104, 127, 143, 156, 157, 167, 168, 169, 172, 175], "site": [5, 9, 26, 30, 35, 39, 40, 59, 63, 68, 70, 71, 72, 81, 86, 87, 97, 104, 106, 108, 110, 117, 135, 137, 142, 143, 145, 149, 155, 157, 158, 162, 170, 175, 181], "becom": [5, 6, 7, 26, 34, 35, 57, 58, 66, 68, 69, 102, 103, 107, 112, 119, 120, 121, 124, 126, 134, 139, 143, 150, 163, 165, 166, 167, 169, 177, 178], "high": [5, 9, 27, 35, 43, 45, 53, 61, 67, 68, 69, 70, 77, 86, 87, 88, 96, 110, 112, 113, 116, 122, 124, 139, 142, 143, 144, 147, 161, 162, 163, 169, 177, 178], "post": [5, 25, 26, 30, 32, 35, 38, 39, 40, 41, 46, 50, 51, 53, 57, 58, 60, 61, 65, 66, 76, 89, 100, 102, 103, 109, 111, 113, 118, 132, 133, 134, 137, 144, 145, 157, 161], "target": [5, 9, 25, 26, 35, 58, 61, 69, 71, 76, 77, 88, 96, 100, 106, 109, 110, 115, 119, 129, 139, 143, 150, 169, 171, 173, 175, 180], "per": [5, 26, 28, 35, 40, 53, 54, 58, 69, 70, 71, 73, 80, 96, 101, 103, 106, 110, 116, 120, 122, 129, 137, 144, 151, 156, 163, 168, 170, 176], "goal": [5, 8, 35, 41, 45, 51, 58, 61, 68, 69, 71, 72, 77, 78, 85, 86, 89, 92, 99, 114, 120, 121, 137, 139, 143, 165, 168, 175, 181], "felt": [5, 27, 58, 86, 142, 163, 178], "realli": [5, 6, 7, 8, 9, 25, 26, 28, 31, 33, 35, 40, 41, 43, 45, 48, 50, 56, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 75, 79, 82, 85, 87, 89, 92, 93, 94, 96, 100, 103, 104, 106, 116, 117, 120, 121, 124, 125, 129, 133, 134, 137, 139, 142, 143, 144, 150, 151, 153, 154, 157, 158, 160, 163, 165, 167, 168, 169, 170, 171, 172, 175, 176, 179, 180, 181], "somewher": [5, 27, 40, 60, 65, 66, 69, 80, 101, 106, 113, 135, 139, 179], "experienc": [5, 39, 58, 69, 77, 78, 129, 143, 168, 175], "unintend": [5, 69, 155, 168], "consequ": [5, 8, 34, 35, 69, 168], "measur": [5, 9, 35, 53, 62, 69, 70, 88, 150, 151, 162], "inde": [5, 35, 49, 61, 68, 70, 72, 78, 85, 113, 114, 119, 123, 124, 129, 144, 160, 169, 172, 180, 181], "mistak": [5, 57, 65, 85, 96, 110, 134, 155, 167, 169, 180, 181], "coupl": [5, 31, 35, 45, 57, 59, 65, 68, 70, 71, 74, 79, 80, 87, 99, 100, 101, 112, 114, 116, 121, 137, 139, 142, 150, 155, 161, 167, 169, 171, 172, 176, 178], "maxim": [5, 35, 49, 154], "goodhart": 5, "law": [5, 8, 35, 86], "campbel": 5, "perfectli": [5, 39, 41, 45, 61, 65, 86, 102, 118, 136, 158, 168, 169, 171], "taken": [5, 9, 35, 61, 68, 70, 89, 109, 138, 177, 178], "famili": [5, 9, 32, 58, 86, 144], "tweak": [5, 35], "relat": [5, 7, 9, 25, 35, 41, 45, 48, 49, 55, 56, 59, 61, 62, 63, 67, 68, 72, 74, 76, 78, 80, 82, 85, 95, 99, 100, 103, 106, 109, 114, 116, 117, 121, 128, 134, 136, 139, 144, 161, 168, 169, 175], "intend": [5, 27, 101, 158], "serv": [5, 6, 8, 9, 25, 40, 49, 53, 58, 60, 66, 68, 72, 85, 89, 92, 106, 131, 133, 143, 157, 160, 165, 169, 173, 174], "focu": [5, 7, 25, 34, 35, 43, 51, 53, 58, 75, 77, 78, 87, 109, 110, 113, 117, 118, 120, 129, 130, 138, 140, 144, 147, 150, 162, 163, 165, 172, 175], "produc": [5, 32, 35, 77, 88, 98, 110, 119, 126, 130, 134, 154, 157, 163, 169, 170, 174, 175], "link": [5, 7, 26, 29, 34, 35, 42, 43, 50, 52, 57, 58, 68, 69, 70, 71, 72, 76, 78, 91, 93, 96, 97, 102, 112, 115, 117, 128, 129, 132, 135, 137, 148, 149, 150, 154, 155, 158, 161, 163, 170, 174, 175, 176], "offer": [5, 9, 26, 37, 53, 59, 66, 69, 72, 76, 77, 79, 88, 99, 100, 102, 103, 105, 113, 119, 121, 127, 129, 138, 140, 142, 145, 163, 171, 172, 177], "avaiabl": 5, "wordpress": [5, 161], "commonmark": 5, "inevit": [5, 86], "sister": 5, "complex": [5, 26, 35, 40, 41, 52, 53, 54, 55, 70, 76, 77, 85, 87, 101, 105, 112, 113, 116, 121, 124, 126, 127, 130, 134, 137, 151, 152, 163, 165, 169, 172, 177, 179], "worthwhil": [5, 75, 82, 86, 87, 101, 146, 158], "pursu": 5, "reader": [5, 28, 29, 32, 54, 59, 61, 68, 72, 76, 85, 87, 92, 93, 111, 117, 119, 121, 125, 127, 131, 133, 134, 143, 150, 155, 157, 159], "respond": [5, 35, 41, 89, 100], "extra": [5, 25, 35, 42, 43, 48, 49, 60, 87, 100, 101, 105, 109, 112, 114, 121, 142, 167, 169, 171, 174], "restructuredtext": 5, "factor": [5, 7, 35, 61, 80, 86, 124, 130, 147, 153, 162, 177], "primarili": [5, 9, 35, 76, 78, 80, 110, 130, 165], "markup": [5, 105], "flexibl": [5, 9, 26, 53, 58, 61, 72, 76, 106, 112, 113, 119, 120, 121, 126, 127, 128, 139, 150, 160, 165, 179], "contrast": [5, 35, 39, 49, 53, 54, 68, 71, 86, 88, 101, 113, 114, 119, 130, 134, 136, 138, 139, 142, 144, 153, 162, 163, 168, 174], "myst": 5, "rst": [5, 135], "peopl": [5, 7, 27, 35, 37, 39, 41, 48, 49, 56, 57, 58, 60, 65, 69, 70, 72, 73, 77, 78, 84, 85, 86, 88, 89, 96, 99, 102, 104, 112, 114, 118, 124, 125, 128, 135, 140, 144, 154, 155, 156, 163, 166, 168, 169, 175, 177, 178, 180], "wish": [5, 58, 61, 71, 93, 100, 110, 113, 114, 137, 142, 150, 165, 174], "suitabl": [5, 9, 30, 69, 76, 78, 106, 144, 158, 162], "necessari": [5, 25, 41, 51, 58, 61, 62, 70, 103, 106, 109, 116, 134, 139, 143, 147, 160], "action": [5, 7, 40, 41, 49, 50, 53, 64, 70, 71, 92, 106, 113, 124, 128, 143, 146, 158, 171], "bake": [5, 61, 142], "platform": [5, 26, 31, 35, 61, 67, 68, 70, 71, 74, 100, 104, 106, 107, 113, 119, 129, 133, 137, 139, 144, 162, 174, 176, 177], "familiar": [5, 6, 39, 45, 53, 58, 60, 61, 62, 67, 68, 69, 71, 76, 82, 99, 103, 106, 108, 109, 110, 117, 118, 121, 126, 134, 137, 138, 139, 143, 150, 162, 163, 169], "automat": [5, 40, 43, 48, 54, 55, 58, 61, 64, 67, 69, 73, 74, 76, 88, 98, 101, 106, 112, 115, 116, 131, 139, 140, 143, 150, 153, 158, 160, 161, 162, 163, 168, 169, 170, 171, 174, 175], "static": [5, 6, 35, 41, 43, 44, 88, 113, 172, 173], "websit": [5, 30, 31, 41, 74, 77, 78, 92, 99, 103, 106, 107, 111, 121, 124, 127, 135, 142, 143, 163, 167, 172, 175], "jekyl": 5, "form": [5, 25, 34, 35, 54, 55, 56, 57, 58, 59, 62, 67, 77, 86, 87, 88, 89, 91, 98, 106, 107, 108, 109, 114, 118, 119, 124, 126, 133, 137, 151, 158, 160, 161, 162, 163, 174, 179], "organiz": [5, 51], "repo": [5, 8, 35, 64, 133, 182], "prefix": [5, 39, 61, 103, 110, 120, 126, 129, 139, 140], "clone": [5, 40, 43, 48, 121, 124, 137], "empti": [5, 6, 40, 60, 62, 96, 97, 116, 117, 118, 121, 122, 128, 135, 139, 165, 169], "toolset": [5, 139], "Or": [5, 35, 49, 50, 60, 66, 72, 77, 92, 96, 169, 174], "python3": [5, 39, 43, 56, 66, 72, 75, 81, 101, 106, 111, 117, 135, 139, 175], "gitignor": [5, 26, 39, 61, 101, 117, 174], "freez": [5, 39, 100], "requir": [5, 6, 9, 25, 26, 29, 35, 39, 40, 41, 43, 52, 53, 55, 61, 67, 71, 72, 88, 96, 100, 104, 106, 109, 111, 112, 113, 114, 120, 122, 127, 128, 132, 135, 138, 139, 142, 143, 144, 151, 152, 160, 161, 162, 163, 168, 170, 174, 175], "finish": [5, 7, 25, 26, 33, 40, 43, 52, 53, 58, 59, 64, 65, 70, 71, 79, 80, 86, 96, 106, 109, 124, 128, 135, 139, 151, 158, 162, 167, 169, 179], "prompt": [5, 33, 39, 40, 43, 56, 61, 64, 65, 66, 70, 72, 73, 100, 111, 115, 117, 135, 138, 139, 150, 161, 167, 175], "slug": 5, "assum": [5, 6, 25, 35, 40, 42, 53, 56, 61, 62, 70, 76, 80, 88, 96, 97, 99, 100, 105, 106, 109, 111, 113, 114, 115, 116, 119, 120, 127, 143, 163, 168, 169, 171, 173, 175, 178, 179], "correct": [5, 7, 9, 25, 35, 39, 41, 49, 53, 61, 69, 72, 73, 80, 87, 89, 96, 109, 115, 117, 118, 122, 130, 133, 143, 146, 150, 151, 160, 161, 163, 168, 169, 179, 181], "commit": [5, 26, 27, 43, 51, 57, 66, 70, 71, 78, 79, 101, 104, 143, 150, 161, 168, 174], "push": [5, 6, 30, 35, 39, 40, 43, 50, 58, 71, 78, 88, 97, 106, 112, 135, 138, 150, 174], "origin": [5, 8, 9, 31, 35, 39, 41, 42, 43, 45, 48, 49, 50, 54, 66, 67, 68, 69, 74, 76, 77, 78, 85, 86, 94, 96, 112, 113, 114, 117, 122, 124, 127, 129, 130, 132, 133, 135, 137, 140, 154, 161, 162, 166, 168, 169, 171, 172, 175, 177], "none": [5, 32, 35, 45, 48, 49, 52, 53, 58, 60, 72, 73, 75, 84, 106, 110, 113, 114, 116, 121, 122, 134, 143, 150, 160, 165, 168, 179], "smooth": [5, 35, 62, 70], "sail": 5, "truth": [5, 34, 80, 100, 118, 121], "ran": [5, 6, 39, 43, 53, 66, 67, 70, 101, 104, 106, 110, 115, 124, 129, 136, 138, 142, 143, 160, 162, 173, 179], "fix": [5, 7, 26, 29, 31, 35, 41, 42, 43, 49, 52, 53, 60, 62, 66, 88, 95, 99, 102, 104, 107, 112, 113, 116, 119, 120, 124, 126, 134, 136, 163, 168, 169, 170, 171], "short": [5, 7, 25, 26, 32, 35, 45, 49, 55, 59, 61, 64, 65, 67, 68, 69, 76, 79, 86, 109, 110, 113, 121, 128, 129, 135, 143, 158, 161, 163, 165, 166, 171], "plai": [5, 34, 35, 43, 57, 62, 66, 67, 70, 79, 80, 82, 86, 114, 115, 121, 142, 162, 165, 172, 177], "_config": 5, "yml": [5, 39, 71, 100, 110, 111, 173], "nest": [5, 49, 53, 66, 70, 76, 96, 110, 114, 118, 127, 138, 165], "directori": [5, 6, 8, 26, 39, 40, 41, 43, 44, 51, 56, 60, 61, 66, 68, 70, 71, 73, 74, 78, 88, 97, 100, 101, 103, 104, 115, 116, 135, 138, 139, 143, 160, 167, 171, 173, 174, 175], "_python_in_practic": 5, "booksourc": [5, 99], "docuement": 5, "background": [5, 9, 45, 60, 61, 69, 70, 72, 75, 96, 106, 107, 111, 120, 135, 176, 177], "duress": 5, "plow": [5, 106], "ahead": [5, 6, 27, 40, 48, 60, 64, 65, 66, 68, 71, 76, 80, 106, 111, 113, 124, 129, 133, 142, 151, 161, 162, 163, 175, 177], "confid": [5, 9, 98, 150, 180], "miss": [5, 9, 29, 35, 42, 53, 59, 67, 70, 75, 76, 86, 96, 99, 103, 112, 116, 118, 120, 144, 151, 158, 160, 161, 173, 176, 179], "piec": [5, 30, 32, 35, 61, 67, 72, 76, 87, 107, 113, 121, 131, 170, 173], "yaml": [5, 49, 105], "v1": [5, 25, 35, 41, 70, 106, 109, 142], "v2": [5, 25, 41, 109, 142], "reloc": 5, "repository_root": 5, "ubuntu": [5, 40], "latest": [5, 8, 31, 39, 40, 56, 61, 66, 68, 70, 72, 92, 95, 101, 104, 106, 115, 131, 142, 150, 167, 175], "checkout": [5, 66], "peaceiri": 5, "v3": 5, "github_token": 5, "publish_dir": 5, "_build": 5, "got": [5, 7, 9, 34, 35, 40, 43, 45, 52, 55, 62, 64, 65, 75, 80, 82, 86, 93, 101, 102, 113, 115, 120, 125, 131, 140, 151, 152, 162, 169, 176, 177, 182], "present": [5, 26, 35, 36, 58, 62, 78, 88, 106, 113, 114, 116, 121, 143, 158, 163, 174], "mix": [5, 6, 9, 25, 29, 36, 43, 58, 68, 99, 103, 104, 109, 113, 116, 120, 128, 129, 137, 165, 177], "decent": [5, 121, 125, 133, 142, 163, 177], "logo": [5, 170], "outset": [5, 79, 89, 103, 117, 153], "effort": [5, 30, 35, 43, 52, 53, 58, 59, 66, 67, 70, 72, 74, 75, 89, 94, 101, 108, 123, 155, 156, 158, 163, 175], "adjunct": 5, "disappoint": 5, "mybind": 5, "proven": [5, 27, 94], "problemat": [5, 45, 61, 75, 80, 112, 119, 121, 139, 162], "challeng": [5, 6, 7, 25, 29, 34, 35, 53, 57, 58, 75, 78, 89, 96, 99, 109, 112, 115, 128, 136, 163, 165], "thread": [5, 6, 34, 53, 58, 69, 92, 113, 131, 132, 137, 142, 158, 163], "tini": [5, 75, 142], "needl": [5, 126], "fine": [5, 25, 26, 35, 40, 43, 48, 49, 60, 61, 64, 65, 66, 67, 68, 69, 71, 73, 77, 85, 88, 109, 112, 113, 114, 115, 119, 120, 121, 127, 129, 135, 136, 139, 142, 144, 146, 150, 153, 158, 163, 168, 169, 171, 172, 175, 176, 180], "break": [5, 9, 31, 32, 53, 57, 58, 80, 81, 86, 94, 96, 103, 110, 113, 118, 120, 121, 124, 139, 158, 163, 166, 168, 172, 175, 179, 181], "colab": [5, 59, 99, 126, 133, 142, 177], "jupyterhub": 5, "forthcom": 5, "pitch": [5, 32], "asynchron": 6, "framework": [6, 9, 26, 28, 29, 35, 41, 43, 60, 66, 67, 68, 103, 116, 161, 168, 172, 179, 181], "breed": [6, 49, 104, 169], "chose": [6, 9, 69, 86, 97, 115, 117], "axum": 6, "tokio": 6, "blacksheep": 6, "uvicorn": [6, 131], "interpret": [6, 7, 25, 32, 35, 39, 41, 43, 45, 46, 53, 55, 92, 109, 110, 113, 116, 132, 141, 150, 167, 168], "vindic": 6, "blazingli": 6, "circl": [6, 35, 49, 80, 81, 85, 86, 96, 167, 169], "amus": [6, 102], "edg": [6, 9, 50, 75, 103, 139], "instanc": [6, 35, 48, 49, 55, 61, 67, 88, 98, 112, 115, 116, 117, 124, 131, 134, 138, 142, 144, 161, 169, 173], "async_serv": 6, "heavi": [6, 50, 53, 61, 69, 142, 143, 150], "download": [6, 7, 8, 26, 31, 39, 40, 41, 42, 43, 49, 52, 55, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 80, 98, 100, 107, 111, 115, 120, 141, 161, 162, 167, 170, 171, 173, 175], "unzip": [6, 74], "gui": [6, 34, 40, 53, 57, 60, 66, 69, 89, 163, 178], "testrun": 6, "jmx": 6, "remov": [6, 8, 35, 41, 43, 54, 61, 66, 69, 70, 79, 88, 92, 101, 106, 115, 122, 126, 128, 136, 147, 150, 155, 167, 168, 169, 172], "endpoint": [6, 85, 106, 144], "ramp": [6, 9, 153], "instant": [6, 41], "000": [6, 9, 35, 53, 57, 70, 78, 89, 100, 104, 125, 129, 142, 151, 171], "beneath": [6, 26, 128, 144, 159, 168], "request": [6, 8, 9, 43, 45, 53, 60, 61, 68, 69, 75, 78, 98, 106, 107, 139, 142, 143, 150, 175, 179], "report": [6, 35, 43, 53, 54, 66, 70, 106, 129, 155, 160, 163, 165, 167, 179], "pane": [6, 59, 72, 103], "against": [6, 9, 26, 28, 29, 30, 34, 39, 43, 46, 53, 61, 67, 69, 74, 82, 87, 95, 103, 113, 114, 121, 130, 134, 136, 138, 142, 162, 163, 171, 172, 180], "port": [6, 8, 40, 61, 71, 107, 110, 115, 119, 133, 139, 143, 173], "3000": [6, 25, 109, 142], "meet": [6, 35, 57, 63, 80, 113, 145, 147, 158, 176], "rustup": 6, "cargo": [6, 40, 176], "init": [6, 39, 49, 56, 61, 66, 161], "toml": [6, 70], "analog": [6, 35, 39, 68, 121, 124, 127], "2021": [6, 98, 101, 104, 177], "src": [6, 40, 60, 68, 135, 150, 172], "rout": [6, 8, 57, 61, 89], "router": 6, "net": [6, 8, 9, 68, 77, 97, 104, 112, 177], "socketaddr": 6, "durat": [6, 69, 106], "fn": [6, 45, 80], "i32": 6, "vec": 6, "mut": 6, "b": [6, 7, 25, 35, 55, 72, 81, 82, 83, 84, 85, 87, 88, 96, 97, 99, 100, 109, 113, 114, 118, 119, 126, 128, 129, 130, 142, 143, 144, 175], "temp": 6, "test_async": 6, "str": [6, 42, 45, 49, 52, 60, 61, 70, 106, 110, 112, 114, 120, 122, 126, 127, 129, 140, 144, 161, 165, 168, 169, 170], "w": [6, 8, 34, 35, 96, 106, 122, 127, 128, 140], "o": [6, 8, 35, 40, 41, 61, 68, 69, 80, 88, 89, 96, 97, 100, 107, 110, 114, 117, 119, 121, 139, 140, 143, 144, 150, 174], "const": [6, 126], "should_delai": 6, "bool": [6, 7, 43, 54, 110, 121, 122, 127, 139], "delay_m": 6, "u64": 6, "from_milli": 6, "await": [6, 40, 69, 143], "50": [6, 7, 25, 35, 40, 59, 62, 87, 88, 96, 97, 104, 109], "test_fibonacci": 6, "100000000": 6, "prevent": [6, 35, 41, 48, 69, 86, 88, 100, 101, 116, 118, 124, 143, 168, 174], "compil": [6, 7, 32, 40, 68, 69, 100, 104, 113, 116, 132, 133, 137, 138, 139, 150, 167, 168, 170, 172, 175, 177, 181], "flavor": [6, 61, 76, 116, 136, 142, 150, 175], "multi_thread": 6, "worker_thread": 6, "with_stat": 6, "addr": 6, "127": [6, 71, 72, 115, 144], "println": [6, 70, 97], "listen": [6, 35, 58, 61, 89, 116, 173], "bind": [6, 77, 150], "into_make_servic": 6, "unwrap": 6, "mainli": [6, 7, 26, 35, 41, 68, 75, 77, 88, 98, 162, 181], "wouldn": [6, 8, 29, 45, 49, 58, 59, 67, 69, 78, 103, 112, 114, 135, 139, 143, 163, 179, 180], "accident": [6, 66], "forget": [6, 35, 39, 60, 61, 78, 98], "releas": [6, 26, 31, 32, 35, 39, 53, 56, 61, 65, 67, 69, 70, 75, 100, 101, 103, 115, 116, 119, 122, 131, 133, 134, 143, 167, 171, 175], "multi": [6, 25, 26, 53, 59, 61, 88, 92, 102, 109, 139, 140, 171], "runtim": [6, 49, 53, 68, 70, 72, 77, 82, 106, 116, 117, 120, 121, 139, 142, 150, 167, 168, 171, 175], "worker": [6, 60], "higher": [6, 7, 9, 53, 57, 61, 62, 96, 99, 100, 125, 134, 163], "core": [6, 9, 39, 49, 51, 67, 68, 69, 71, 72, 76, 77, 78, 85, 96, 98, 99, 100, 103, 109, 112, 113, 124, 138, 143, 144, 152, 153, 156, 160, 163, 170, 171, 175, 177], "comput": [6, 25, 26, 33, 40, 41, 52, 56, 57, 58, 61, 67, 69, 74, 75, 77, 84, 85, 87, 98, 100, 102, 106, 109, 113, 121, 134, 138, 139, 142, 151, 156, 157, 158, 162, 163, 170, 175, 177, 178, 181], "counterintuit": 6, "partli": [6, 9, 30, 32, 68, 69, 72, 85, 86, 124, 178], "due": [6, 9, 35, 53, 61, 80, 101, 110, 113, 163, 169], "scenario": [6, 30, 43, 73, 133, 143, 175], "independ": [6, 33, 35, 41, 61, 78, 88, 98, 100, 104, 113, 119, 121, 138, 139, 142, 176], "millisecond": [6, 35, 53, 69, 75], "roughli": [6, 35, 53, 69, 104, 155, 165], "crud": [6, 92], "wait": [6, 35, 39, 43, 45, 53, 61, 66, 68, 71, 78, 129, 135, 139, 142, 144, 169, 171], "million": [6, 35, 53, 59, 69, 70, 86, 142], "highest": [6, 7, 9, 99, 163], "63": [6, 35], "245": 6, "986": 6, "dramat": [6, 35, 53], "calcul": [6, 7, 25, 31, 41, 45, 55, 57, 62, 76, 80, 82, 83, 86, 87, 98, 109, 112, 122, 124, 130, 131, 134, 143, 152, 160, 176, 178], "prime": [6, 8], "forth": [6, 26, 43, 58, 65, 72, 96, 118, 132, 159, 165], "written": [6, 9, 28, 30, 32, 34, 39, 52, 53, 58, 63, 65, 67, 68, 69, 75, 77, 78, 79, 80, 82, 102, 104, 105, 106, 110, 112, 118, 119, 123, 129, 133, 134, 138, 139, 142, 150, 154, 162, 168, 169, 171, 175, 177, 179], "uvircorn": 6, "saw": [6, 32, 35, 49, 54, 63, 66, 69, 71, 72, 75, 80, 101, 103, 106, 113, 119, 120, 128, 129, 135, 142, 143, 161, 162, 165, 168, 171, 178, 181], "asyncio": [6, 28, 53, 69, 104], "002": [6, 55], "actual": [6, 9, 25, 26, 29, 35, 39, 41, 43, 49, 53, 58, 62, 68, 69, 70, 72, 82, 86, 87, 99, 100, 101, 104, 109, 110, 113, 117, 119, 124, 127, 129, 135, 139, 142, 144, 155, 161, 168, 170], "within": [6, 26, 33, 35, 39, 40, 41, 68, 71, 72, 74, 96, 103, 118, 119, 130, 133, 143, 144, 150, 155, 161, 168, 169, 179], "uvicod": 6, "stdout": [6, 137, 139], "comparison": [6, 30, 35, 39, 43, 45, 54, 62, 69, 70, 75, 76, 77, 87, 88, 94, 96, 103, 104, 112, 113, 129, 140, 142, 153, 162, 168, 177], "gone": [6, 40, 52, 66, 67, 70, 97, 112, 137, 144, 162, 165, 178], "took": [6, 9, 32, 33, 50, 53, 59, 70, 75, 76, 77, 86, 87, 89, 102, 104, 113, 125, 130, 138, 142, 158, 162, 163, 166, 169, 171, 178], "warm": [6, 32, 89], "discard": [6, 98], "slight": [6, 58, 68, 120, 128], "cython": [6, 104, 132, 133], "expect": [6, 8, 9, 32, 35, 41, 43, 48, 49, 52, 53, 54, 63, 65, 66, 70, 73, 82, 91, 96, 99, 103, 104, 110, 112, 115, 116, 117, 119, 121, 124, 125, 126, 128, 129, 130, 134, 137, 143, 150, 151, 158, 162, 165, 168, 170, 171, 177, 178, 179], "pythonrust": 6, "mt": 6, "avg": [6, 70], "rpserroravg": 6, "rpserrorrun": 6, "13651": 6, "82": [6, 75, 97, 114, 144], "4753": 6, "77": [6, 53], "27910": 6, "6280": 6, "34528": 6, "6250": 6, "average5363": 6, "44": [6, 41, 122], "5761": 6, "3211": 6, "8290": 6, "8210": 6, "24301": 6, "67": [6, 59], "4930": 6, "5343": 6, "88": [6, 98, 112, 144], "2851": 6, "8170": 6, "0740": 6, "average1": 6, "0121": 6, "41": [6, 41, 124], "3800": 6, "1431": 6, "advantag": [6, 25, 39, 40, 43, 49, 52, 58, 61, 65, 68, 69, 72, 77, 78, 82, 95, 99, 109, 114, 115, 119, 121, 127, 130, 136, 138, 139, 143, 150, 151, 160, 162, 168, 171, 177], "appar": [6, 8, 34, 59, 68, 142], "interestingli": [6, 35, 48, 77, 105], "fewest": 6, "critic": [6, 25, 26, 34, 35, 53, 58, 69, 72, 78, 99, 109, 112, 116, 121, 144, 146, 151, 167, 168, 177], "partisan": 6, "intent": [6, 35, 76, 101, 110, 120, 122, 144, 151, 177], "prove": [6, 8, 35, 49, 53, 85, 96, 104, 112, 120, 130, 131, 133, 150, 161, 171], "favorit": [6, 9, 25, 32, 41, 46, 49, 52, 61, 65, 67, 68, 69, 72, 86, 106, 109, 119, 120, 121, 127, 128, 137, 142, 151, 162, 163, 167, 169, 175, 177, 179], "bug": [6, 26, 29, 41, 43, 49, 66, 69, 85, 95, 101, 124, 136, 160, 168], "fan": [6, 30, 32, 40, 50, 52, 56, 69, 73, 75, 93, 103, 119, 129, 131, 137, 139, 142, 163, 179], "came": [6, 9, 35, 40, 43, 46, 51, 52, 56, 59, 64, 66, 80, 86, 87, 102, 104, 108, 121, 127, 136, 142, 143, 151, 167, 169], "seven": [6, 7, 53, 58, 113, 134, 142, 163], "percent": [6, 9], "pure": [6, 25, 35, 67, 69, 85, 109, 117, 121, 138, 144], "hire": [6, 9, 27, 78, 137, 155, 163, 180, 181], "willing": [6, 66, 77, 87], "heavili": [6, 37, 39, 50, 59, 67, 70, 76, 121, 132, 133, 143, 163, 171], "counterpoint": 6, "envis": [6, 66], "thin": [6, 35, 41, 107], "remain": [6, 8, 39, 67, 75, 79, 88, 130, 139, 142, 143, 161, 163, 168, 169, 175], "scale": [6, 28, 30, 34, 35, 41, 45, 57, 59, 68, 72, 74, 75, 87, 102, 103, 119, 121, 125, 129, 171, 178], "increas": [6, 35, 52, 53, 62, 80, 99, 116, 124, 127, 158], "justifi": [6, 89, 108, 142], "forego": [6, 41, 70, 163], "team": [6, 9, 28, 35, 39, 45, 53, 60, 61, 68, 69, 79, 101, 105, 116, 122, 136, 163, 177], "carefulli": [6, 79], "kind": [7, 29, 34, 35, 37, 39, 41, 45, 53, 57, 62, 64, 65, 72, 87, 116, 117, 125, 137, 142, 143, 144, 151, 154, 157, 160, 162, 167, 168, 169, 177, 181], "vast": [7, 33, 49, 119], "fundament": [7, 53, 55, 70, 77, 82, 100, 118, 121, 136, 178], "least": [7, 27, 35, 39, 40, 43, 45, 53, 57, 58, 60, 68, 69, 70, 79, 80, 85, 86, 91, 93, 96, 98, 99, 101, 102, 103, 104, 106, 107, 111, 112, 113, 114, 121, 122, 125, 127, 129, 133, 135, 136, 137, 138, 142, 143, 144, 151, 156, 160, 161, 162, 163, 167, 168, 169, 171, 175, 177], "msg": [7, 45, 179], "odd": [7, 52, 128, 129, 134], "evenli": [7, 82, 87, 122], "divis": [7, 72, 80, 82, 118, 122, 134], "remaind": [7, 35, 82, 134, 160], "modulo": [7, 82, 118, 134], "divid": [7, 41, 45, 67, 82, 87, 98, 99, 118, 134], "trip": [7, 45, 53, 60, 70, 71, 89, 124], "hardwar": [7, 77, 100, 134, 150], "pack": [7, 40, 68, 70, 133, 134, 150], "defer": [7, 66], "charl": 7, "19th": [7, 35, 163], "mathematician": [7, 25, 86, 109, 130, 163], "philosoph": [7, 58], "mathemat": [7, 25, 34, 35, 39, 45, 48, 63, 67, 68, 72, 80, 82, 86, 87, 96, 102, 109, 121, 130, 134, 139, 142, 162, 165, 169, 170, 178], "principl": [7, 35, 49, 60, 68, 70, 75, 108, 121, 127, 136, 144, 150], "logic": [7, 25, 34, 35, 51, 58, 68, 80, 96, 109, 165, 167], "precis": [7, 35, 43, 45, 53, 56, 70, 72, 75, 96, 102, 112, 113, 114, 119, 120, 124, 127, 129, 143, 145, 168, 175, 177], "accept": [7, 39, 64, 65, 85, 87, 89, 110, 113, 120, 127, 140, 144, 146, 150, 165, 168], "nine": [7, 9, 60, 82, 126, 166], "sign": [7, 40, 60, 74, 80, 85, 91, 101, 106, 120, 123, 129, 132, 134, 139, 165, 170, 178, 180], "assign": [7, 25, 35, 42, 49, 62, 66, 76, 79, 80, 96, 109, 112, 113, 114, 120, 128, 129, 151, 160, 162, 169, 177], "messag": [7, 8, 40, 43, 52, 60, 61, 70, 71, 79, 115, 116, 119, 120, 121, 124, 129, 130, 134, 150, 165, 167, 168, 179], "world": [7, 8, 9, 14, 25, 26, 35, 40, 49, 55, 56, 60, 61, 63, 66, 68, 70, 72, 76, 77, 80, 85, 104, 106, 107, 109, 110, 112, 113, 116, 119, 120, 123, 133, 140, 144, 150, 158, 165, 167, 168, 172, 176], "frequent": [7, 35, 49, 61, 65, 68, 70, 72, 79, 93, 101, 103, 124, 150, 169, 171, 175], "operatorhow": 7, "itx": 7, "yx": 7, "y": [7, 25, 35, 36, 39, 40, 41, 45, 55, 59, 61, 62, 67, 69, 70, 81, 83, 84, 85, 87, 88, 96, 109, 112, 113, 115, 118, 121, 124, 134, 138, 144, 150, 152, 162, 168, 169, 170], "x": [7, 35, 41, 42, 45, 49, 53, 59, 62, 66, 67, 69, 70, 80, 81, 82, 83, 84, 85, 87, 88, 96, 97, 98, 100, 102, 104, 106, 112, 118, 119, 121, 122, 124, 126, 128, 129, 130, 134, 135, 140, 142, 144, 150, 151, 152, 162, 163, 168, 169, 170, 175], "lt": [7, 61, 169], "english": [7, 57, 110, 113, 119, 129, 163, 177], "keyword": [7, 42, 68, 69, 106, 116, 118, 119, 123, 124, 129, 134, 152, 172], "revers": [7, 35, 67, 122, 126, 128, 131, 134, 139, 169], "indent": [7, 49, 118, 128, 143, 167, 177, 181], "evalu": [7, 35, 39, 43, 53, 68, 69, 72, 75, 86, 87, 96, 103, 119, 124, 134, 139, 142, 143, 152, 162, 167, 170, 177, 179], "seamlessli": [7, 41, 45, 72, 104, 160, 169], "my_numb": 7, "condition": 7, "claus": [7, 8, 70, 116, 135, 143], "easiest": [7, 49, 54, 58, 62, 87, 101, 106, 121, 170, 171], "sort": [7, 25, 26, 33, 35, 41, 53, 58, 65, 68, 70, 72, 74, 85, 86, 87, 91, 93, 99, 104, 105, 108, 109, 112, 117, 118, 121, 126, 139, 142, 144, 160, 162, 163, 168, 169, 171, 177, 180], "height": [7, 62, 88, 112, 122, 163], "averag": [7, 35, 53, 57, 58, 69, 91, 98, 99, 114, 125, 142, 144, 156, 163, 176], "tall": [7, 112, 163, 166], "sensit": [7, 35, 61, 121, 127, 134, 163], "bodi": [7, 35, 59, 78, 99, 106, 128, 162, 167, 170], "potato": [7, 54, 120], "uncov": [7, 29], "sold": 7, "groceri": 7, "size": [7, 8, 25, 28, 41, 45, 53, 59, 61, 62, 74, 87, 88, 89, 93, 96, 97, 98, 99, 100, 106, 109, 119, 124, 126, 129, 130, 134, 138, 142, 144, 166, 171], "inch": [7, 87, 163, 166], "diamet": 7, "smallest": [7, 138], "www": [7, 35, 41, 80, 84, 143, 145], "chef": [7, 9, 173], "garden": [7, 35], "2017": [7, 55, 59, 101, 156], "insight": [7, 9, 35, 74, 88, 162, 167, 179], "sorter": 7, "potato_size_inch": 7, "unknown": [7, 49, 81, 91, 110, 142], "ident": [7, 9, 25, 33, 48, 53, 65, 68, 76, 106, 109, 110, 112, 113, 114, 129, 130], "s1": [7, 119], "s2": [7, 119], "declar": [7, 26, 41, 45, 49, 53, 61, 102, 104, 106, 113, 114, 115, 118, 143, 161, 165, 168, 170, 177, 178, 179], "absenc": [7, 85, 158], "procedur": [7, 70, 73, 77, 130, 139, 165], "some_vari": 7, "some_numb": [7, 128], "some_str": 7, "suggest": [7, 9, 25, 26, 29, 33, 35, 40, 50, 55, 58, 61, 65, 66, 70, 75, 78, 79, 82, 86, 100, 106, 109, 117, 121, 124, 132, 133, 151, 155, 156, 168, 175], "avoid": [7, 35, 61, 75, 100, 114, 116, 118, 121, 131, 132, 135, 138, 139, 142, 143, 155, 163, 165], "real": [7, 8, 25, 35, 40, 43, 49, 51, 53, 59, 65, 68, 72, 77, 78, 89, 95, 102, 103, 105, 109, 110, 121, 128, 130, 135, 137, 140, 142, 144, 151, 158, 161, 163, 169, 170, 177, 179, 180], "life": [7, 25, 27, 30, 34, 35, 58, 59, 68, 79, 86, 104, 109, 126, 128, 146, 155, 157, 158, 163, 168, 176, 177], "decis": [7, 9, 35, 37, 42, 57, 69, 72, 76, 86, 92, 155], "umbrella": 7, "rain": [7, 80], "cloudi": 7, "monei": [7, 27, 43, 57, 86, 103, 158, 163, 178], "bold": [7, 25, 45, 48, 57, 58, 77, 106, 109, 116], "paragraph": [7, 35, 40, 49, 119], "time_available_minut": 7, "120": [7, 9, 25, 109, 138, 142, 168], "money_available_dollar": 7, "time_avaialble_minut": 7, "180": [7, 41, 80], "stai": [7, 32, 102, 158, 163], "circuit": [7, 76], "construct": [7, 34, 35, 45, 53, 61, 70, 76, 82, 88, 96, 97, 99, 112, 113, 117, 118, 124, 138, 143, 144, 161, 169], "1connectorexpress": 7, "2resulttrueandtruetruefalseandtruefals": 7, "trueandfalsefalsefalseandfalsefals": 7, "trueortruetru": 7, "falseortruetruetrueorfalsetru": 7, "falseorfalsefals": 7, "compon": [7, 25, 96, 100, 105, 107, 109, 113, 117, 121, 151, 162, 163], "lowest": [7, 99, 144], "stage": [7, 9, 26, 35, 49, 51, 61, 72, 78, 106, 137, 163], "parenthes": [7, 42, 49, 124, 129, 152, 165, 167, 171], "memor": [7, 80, 119, 130], "luck": [7, 68, 75, 82, 96], "water_level": 7, "flood": 7, "gate": [7, 35, 57, 162], "normal": [7, 25, 35, 40, 42, 45, 66, 75, 88, 96, 109, 124, 135, 144, 150, 160, 166, 174, 175], "my_vari": 7, "noise_level": 7, "heat_output_perc": 7, "98": [7, 49, 75, 86, 104, 179], "95": [7, 98, 114, 138, 142], "technician": 7, "to_b": 7, "time_of_dai": 7, "pm": [7, 55, 82, 113], "heat_ouput_perc": 7, "90": [7, 35, 75, 80, 88, 96, 98, 114, 122, 124, 144, 163, 169], "gotcha": [7, 70, 123], "improv": [7, 8, 26, 31, 32, 35, 39, 40, 51, 53, 59, 70, 74, 75, 79, 85, 87, 88, 92, 93, 96, 97, 113, 116, 120, 121, 123, 124, 131, 133, 135, 137, 138, 139, 146, 161, 163, 165, 168, 179], "rebound": 7, "light_level": 7, "decibel_level": 7, "neither": [7, 25, 52, 69, 89, 101, 105, 107, 109, 112, 125, 142, 161, 162], "nor": [7, 25, 40, 89, 101, 109, 112, 168], "usual": [7, 27, 32, 33, 35, 39, 41, 50, 52, 53, 61, 62, 68, 70, 75, 80, 86, 88, 92, 93, 96, 101, 110, 113, 115, 119, 120, 126, 128, 130, 133, 134, 135, 138, 139, 143, 150, 151, 160, 162, 165, 169, 174, 175, 176], "citi": [7, 42, 55, 59, 99, 138, 169], "benefit": [8, 26, 28, 43, 54, 56, 58, 70, 74, 78, 86, 100, 101, 104, 112, 121, 123, 129, 133, 144, 154, 155, 156, 163, 172, 177, 181], "dust": 8, "opportun": [8, 9, 35, 69, 75, 78, 106, 132, 143, 158, 162, 163], "peasant": 8, "factori": [8, 26, 168, 169, 172], "trivial": [8, 58, 67, 68, 79, 82, 89, 94, 112, 121, 142, 163], "kubernet": [8, 9, 52, 61, 68, 133], "nginx": [8, 131, 173], "auth": [8, 61], "fusionauth": 8, "layer": [8, 35, 61, 68, 105, 115, 136, 162, 179], "tbd": 8, "axiom": [8, 75, 80, 85, 178], "gall": 8, "fond": [8, 26, 72, 166, 177], "invari": [8, 89, 121], "evolv": [8, 34, 57, 73], "reflect": [8, 34, 61, 72, 89, 113, 158, 163, 177], "ultim": [8, 35, 101, 119, 151], "bunch": [8, 35, 66, 78, 89, 98], "pod": 8, "simplest": [8, 26, 42, 45, 48, 88, 98, 101, 106, 110, 117, 119, 120, 124, 168], "mod": [8, 82], "gorilla": 8, "tasti": [8, 112, 123], "morsel": 8, "horror": [8, 40, 66], "rocket": [8, 89, 142], "surgeri": [8, 35], "mux": 8, "func": [8, 97, 152], "newrout": 8, "handlefunc": 8, "responsewrit": 8, "listenandserv": 8, "9000": 8, "sophist": [8, 34, 35, 58, 77, 116, 134, 139, 165], "resolv": [8, 35, 53, 61, 67, 71, 104, 117, 139, 142, 151, 162, 175, 179], "heck": [8, 57, 58], "chanc": [8, 40, 53, 57, 70, 79, 86, 97, 144, 175, 179], "dockerfil": [8, 40, 115, 150], "workdir": [8, 61, 115, 150], "entrypoint": [8, 115], "grab": [8, 40, 41, 52, 67, 126, 129, 135, 139, 175], "dockerhub": [8, 40, 61, 150], "detach": [8, 61], "map": [8, 25, 35, 61, 62, 68, 69, 74, 87, 88, 97, 106, 109, 113, 114, 115, 121, 122, 127, 131, 138, 139, 150, 161, 165, 169, 170], "p8080": 8, "curl": [8, 86, 100], "exec": [8, 53], "forest": 8, "happili": 8, "greet": [8, 60, 93, 116, 120, 126, 134, 135, 168, 175], "visitor": [8, 71], "problem": [8, 32, 35, 39, 43, 45, 48, 49, 51, 53, 55, 57, 58, 60, 61, 65, 66, 68, 69, 73, 75, 80, 85, 86, 96, 100, 103, 104, 107, 112, 115, 116, 120, 121, 122, 124, 125, 126, 128, 130, 133, 134, 137, 139, 143, 144, 147, 151, 162, 167, 168, 169, 172, 174, 175, 179, 181], "honestli": [8, 27, 45, 69, 117, 137, 153], "toi": [8, 26, 43, 74, 124], "bad": [8, 9, 26, 32, 35, 40, 49, 70, 75, 76, 80, 87, 89, 96, 112, 116, 120, 128, 132, 140, 143, 146, 151, 156, 163, 168, 175, 177, 178, 179, 180], "67edf2eee9fa": 8, "hour": [8, 25, 31, 35, 40, 55, 58, 59, 71, 80, 82, 86, 99, 109, 113, 142, 156, 163, 176], "ago": [8, 50, 59, 65, 87, 94, 99, 104, 107, 113, 122, 131, 150, 155, 163, 166, 172, 176], "782mb": 8, "wow": [8, 43, 52, 59, 70, 93, 102, 112, 132], "gigabyt": [8, 28, 75, 138], "notwithstand": [8, 85, 177, 181], "havoc": 8, "wreak": 8, "anywai": [8, 52, 86, 99, 114, 129, 142, 143, 173], "fortun": [8, 39, 41, 43, 57, 59, 66, 74, 78, 82, 87, 113, 157, 163], "smaller": [8, 35, 40, 57, 85, 100, 121, 129, 138, 171], "compact": [8, 35, 112, 129], "builder": [8, 26, 70, 135, 171, 175], "goo": [8, 97, 176], "goarch": [8, 97], "amd64": [8, 97], "cgo_en": 8, "alpin": [8, 61], "low": [8, 9, 26, 35, 59, 68, 75, 87, 91, 98, 116, 132, 136, 143, 150, 162, 169, 179], "attack": [8, 35, 142], "surfac": [8, 35, 80, 133, 139, 144, 168], "5ae087964c8d": 8, "2mb": 8, "782": 8, "mb": [8, 106], "big": [8, 28, 30, 31, 32, 34, 35, 40, 53, 57, 69, 75, 78, 80, 86, 87, 89, 113, 116, 119, 131, 137, 158, 160, 169, 171, 172, 179, 181], "attempt": [8, 35, 41, 54, 80, 82, 85, 101, 104, 140, 150, 155, 158, 181], "gorilla2": 8, "p9000": 8, "But": [8, 27, 31, 34, 35, 39, 42, 45, 48, 49, 52, 55, 56, 57, 58, 59, 62, 64, 65, 66, 68, 69, 70, 71, 72, 76, 79, 80, 87, 88, 89, 96, 99, 101, 108, 112, 114, 116, 120, 124, 126, 128, 129, 130, 135, 137, 139, 143, 156, 157, 158, 166, 167, 169, 170, 179, 180, 181], "stood": [8, 177], "rm": [8, 26, 61, 115, 150, 174], "gain": [9, 35, 53, 68, 74, 77, 96, 119, 175, 177], "foot": [9, 66], "fantast": [9, 35, 112, 134], "devop": [9, 49, 77, 105, 106, 131, 177, 179, 181], "mobil": [9, 177, 181], "descript": [9, 27, 35, 42, 43, 52, 74, 78, 79, 98, 110, 122, 135, 150, 169], "vari": [9, 39, 43, 53, 70, 96, 106, 113, 124, 130, 144, 163, 166, 169, 177, 181], "significantli": [9, 77, 88, 97, 127, 129, 135, 142, 150, 163], "vital": 9, "degre": [9, 35, 41, 57, 77, 80, 85, 89, 96, 112, 125, 137, 155, 163, 177, 178], "self": [9, 26, 33, 34, 43, 45, 48, 49, 53, 58, 68, 75, 81, 89, 112, 121, 122, 124, 125, 127, 129, 131, 143, 146, 147, 151, 153, 154, 163, 169, 179], "portfolio": [9, 27, 78, 91, 93, 153, 166], "certif": [9, 59, 71], "entri": [9, 50, 53, 61, 74, 80, 92, 114, 117, 124, 143, 166, 175], "barrier": 9, "prepar": [9, 35, 42, 62, 65, 72, 106, 111, 114, 119, 123, 129, 144, 162], "promin": [9, 69, 71, 103], "oppos": [9, 35, 72, 76, 102, 125, 138, 160, 168], "train": [9, 75, 89, 98, 162], "troubl": [9, 41, 49, 52, 66, 72, 80, 82, 135, 137, 158, 163], "elabor": [9, 177], "laid": 9, "simultan": [9, 35, 61, 69, 72, 77, 125, 128, 131, 134], "regard": [9, 40, 53, 77, 113, 130, 138, 139], "snapshot": [9, 99, 106, 138, 181], "nationwid": 9, "own": [9, 26, 27, 28, 32, 34, 35, 40, 41, 42, 43, 54, 57, 58, 61, 66, 68, 69, 70, 71, 72, 76, 77, 78, 86, 89, 98, 100, 103, 104, 107, 112, 115, 118, 125, 128, 129, 136, 143, 144, 146, 150, 153, 158, 161, 163, 167, 168, 172, 176, 177, 182], "fit": [9, 25, 28, 30, 35, 40, 41, 75, 93, 97, 109, 113, 114, 127, 129, 142, 151, 153, 163, 165, 177, 179, 180], "blogger": [9, 30, 112, 137, 150, 154, 163, 167, 176], "django": [9, 43, 58, 68, 76, 110, 116, 161, 163, 177], "flask": [9, 29, 41, 43, 68, 76, 103, 116, 137, 177], "everyon": [9, 29, 67, 78, 86, 95, 114, 137, 142, 147, 151, 160], "studi": [9, 25, 35, 38, 57, 58, 76, 80, 86, 89, 102, 109, 118, 121, 134, 142, 162, 178], "told": [9, 27, 39, 43, 58, 70, 86, 99, 101, 137, 163, 167], "broke": [9, 39, 107, 125], "necess": 9, "glare": 9, "skew": [9, 62, 88], "772": 9, "spark": [9, 28, 75], "606": 9, "79": [9, 138], "graduat": [9, 163, 178], "competit": [9, 59, 68, 74], "tensorflow": [9, 68, 69, 77, 100, 130, 142, 177], "kera": [9, 68], "scikit": [9, 59, 68, 74, 77, 100, 111, 133, 142], "pytorch": [9, 68, 100, 177], "997": 9, "46": [9, 35, 41, 113], "cloudform": [9, 92, 105, 106], "terraform": [9, 72, 92, 103, 105, 106], "medium": [9, 25, 35, 98, 109, 142], "596": 9, "72": [9, 25, 119, 129], "redshift": [9, 28], "034": 9, "54": [9, 169], "network": [9, 34, 61, 95, 130, 138, 143, 144, 154, 173], "jenkin": 9, "ci": [9, 29, 93, 106], "puppet": [9, 173], "974": 9, "nosql": [9, 144, 160], "backend": [9, 25, 30, 41, 53, 61, 68, 84, 109, 116, 135, 153, 177], "fastapi": [9, 29, 131], "37381": 9, "36": [9, 53, 96, 130, 138, 144], "968": 9, "g": [9, 29, 35, 40, 41, 62, 64, 74, 79, 80, 81, 88, 96, 105, 112, 113, 114, 115, 119, 122, 128, 139, 144, 162, 174, 175, 179], "304": 9, "38": [9, 81, 96, 99, 138], "tester": 9, "pytest": [9, 60, 68, 135], "unittest": [9, 68], "robot": [9, 35, 68], "selenium": [9, 30], "jira": 9, "925": 9, "compani": [9, 68, 79, 103, 106, 108, 175], "2012": [9, 55, 106], "harvard": [9, 35], "sexiest": 9, "21st": [9, 35], "agre": [9, 35, 66, 82, 101, 103, 116, 121, 162, 163, 167], "salaci": 9, "assess": [9, 103, 163], "ow": [9, 58, 100], "thank": [9, 65, 68, 116, 132, 155, 162, 166, 168, 177, 179], "sa": 9, "statistician": 9, "signific": [9, 39, 53, 55, 61, 75, 86, 101, 106, 133, 138, 144, 151, 163, 177, 178], "inroad": [9, 177], "demand": [9, 69, 77, 91, 163], "definit": [9, 26, 27, 39, 43, 45, 49, 58, 61, 66, 67, 73, 85, 89, 103, 113, 114, 115, 116, 118, 119, 120, 121, 129, 130, 133, 136, 137, 139, 143, 144, 161, 162, 163, 165, 168, 169, 174, 177], "central": [9, 32, 33, 35, 37, 49, 51, 78, 98, 130], "specialti": [9, 153], "sap": [9, 154], "tableau": 9, "tend": [9, 35, 39, 41, 49, 53, 57, 61, 64, 75, 89, 113, 119, 127, 143, 167, 174, 177], "domain": [9, 41, 71, 85, 116, 136, 162, 177], "emploi": [9, 49, 88, 119], "rank": [9, 102, 142], "894": 9, "healthi": [9, 35, 146], "broader": [9, 30, 35, 130, 139, 165], "scientif": [9, 69, 77, 89, 170, 181], "algorithm": [9, 30, 34, 35, 45, 58, 61, 67, 68, 77, 82, 89, 144, 151, 162], "fortran": [9, 77, 100, 162], "tl": [9, 71], "dr": [9, 34], "252": 9, "percentag": [9, 53, 62, 99, 160], "technologi": [9, 35, 59, 68, 95, 110, 172], "massag": [9, 45], "heurist": 9, "80": [9, 61, 91, 96, 114, 129, 143, 144, 173], "opinion": [9, 26, 30, 39, 41, 43, 57, 58, 60, 61, 68, 92, 101, 103, 119, 134, 146, 163], "absolut": [9, 50, 57, 76, 96, 98, 137, 142], "outstand": [9, 36, 41, 71, 72, 86, 103, 132, 163, 169, 177], "overlook": 9, "door": [9, 27, 45, 89], "ratio": [9, 80, 87, 181], "confirm": [9, 39, 45, 61, 70, 73, 86, 104, 167], "overlap": [9, 43, 56, 59, 70, 86, 88, 99, 101, 103, 117, 126, 137, 139, 144, 151, 162, 169], "categori": [9, 35, 45, 50, 58, 59, 62, 63, 68, 88, 93, 98, 103, 111, 116, 119, 139, 158, 161, 162, 172], "wherea": [9, 35, 72, 103, 113, 124, 126, 139, 142, 144, 150, 170, 172], "vendor": [9, 61, 105, 160], "correl": [9, 35, 62, 88, 99], "jump": [9, 26, 35, 71, 72, 88, 118], "68": [9, 59, 130], "thought": [9, 27, 30, 31, 32, 37, 45, 48, 50, 66, 70, 78, 80, 82, 85, 86, 91, 111, 112, 115, 123, 132, 133, 139, 151, 158, 163], "close": [9, 25, 35, 41, 48, 64, 65, 69, 70, 71, 72, 74, 77, 79, 82, 84, 88, 98, 100, 109, 112, 114, 115, 116, 124, 129, 151, 158, 168], "attent": [9, 32, 33, 35, 41, 57, 60, 68, 69, 113, 117, 121, 133, 154, 156, 163, 171, 177], "firsthand": 9, "inasmuch": [9, 133, 139], "shop": [9, 68, 142, 143], "candid": [9, 43, 53, 78, 79, 92, 124, 171], "strong": [9, 35, 39, 54, 58, 61, 77, 86, 142, 144, 155, 175, 177], "face": [9, 28, 29, 35, 51, 75, 80, 86, 87, 104, 116, 162, 178], "belong": [9, 43, 46, 69, 116, 161], "css": [9, 107, 113], "defens": [9, 41, 103, 116], "artifact": [9, 26], "nowadai": 9, "lest": [9, 78, 155], "confus": [9, 28, 39, 49, 58, 76, 77, 98, 100, 102, 104, 112, 118, 130, 134, 150, 160, 165, 174], "monolith": [9, 39, 68], "human": [9, 26, 33, 34, 45, 48, 49, 58, 75, 86, 110, 116, 138, 146, 154, 178], "sir": [9, 35], "resum": [9, 30, 53, 77, 78, 106, 156, 172], "welcom": [9, 31, 53, 64, 132, 158, 165, 171, 182], "among": [9, 35, 58, 62, 68, 72, 76, 88, 106, 114, 142, 161, 162, 163], "j": [9, 25, 60, 96, 105, 106, 107, 109, 113, 129, 130, 142], "php": [9, 142, 181], "rail": 9, "325": [9, 142], "700": [9, 58], "tricki": [9, 55], "primari": [9, 35, 55, 72, 112, 142, 161, 169], "respons": [9, 26, 35, 37, 41, 53, 58, 59, 60, 68, 69, 86, 89, 97, 106, 127, 129, 132, 136, 143, 150, 163, 178, 179], "assur": [9, 39, 89, 92], "qa": [9, 68, 110, 180], "invent": [9, 91, 134, 160], "knowledg": [9, 25, 33, 34, 35, 49, 52, 77, 96, 98, 109, 111, 113, 119, 134, 136, 137, 140, 163], "attract": [9, 57, 88, 103, 137, 139, 142, 153, 177], "brittl": [9, 41], "keenli": 9, "awar": [9, 25, 28, 35, 37, 39, 43, 53, 56, 109, 112, 116, 117, 134, 150, 157, 168, 175], "possess": 9, "prestig": 9, "argu": [9, 26, 34, 43, 68, 69, 106, 121, 123, 134, 181], "forc": [9, 26, 35, 49, 58, 61, 77, 120, 121, 177], "qualifi": [9, 69, 124, 151], "profess": [9, 25, 43, 89, 109], "scarc": 9, "gamut": 9, "center": [9, 35, 68, 81, 85, 88, 96, 104, 113, 119, 162, 163], "wash": 9, "earli": [9, 45, 53, 54, 61, 63, 66, 71, 75, 78, 86, 94, 97, 104, 115, 121, 125, 126, 128, 139, 153, 163, 172, 177, 180], "1993": [9, 166], "furthest": 9, "touch": [9, 35, 61, 69, 70, 101, 112, 113, 116, 135, 155, 158, 162], "borland": 9, "pascal": 9, "santa": [9, 113], "cruz": 9, "california": [9, 59, 113], "headquart": 9, "overal": [9, 26, 29, 35, 53, 62, 68, 70, 99, 103, 110, 155, 163, 177], "500": [9, 35, 58, 93, 100, 116, 129, 142], "widen": 9, "57": 9, "recruit": [9, 27, 180], "hr": [9, 53], "rep": 9, "paycheck": 9, "harder": [9, 86, 116, 119, 127, 158, 177, 179, 182], "beyond": [9, 26, 28, 30, 31, 33, 34, 37, 41, 53, 58, 59, 60, 67, 68, 70, 75, 76, 78, 106, 111, 132, 133, 135, 139, 142, 143, 162, 167, 169, 177], "ph": 9, "dig": [9, 26, 66, 68, 69, 72, 76, 106, 112, 113, 126, 133, 143, 162, 176, 177], "hole": [9, 92, 102, 163, 178], "loan": [9, 89, 163], "biggest": [9, 35, 39, 52, 59, 142, 158], "week": [9, 28, 30, 31, 32, 40, 50, 55, 58, 59, 70, 76, 80, 92, 102, 113, 137, 142, 155, 158, 163, 172, 176], "breez": [9, 163], "dread": 9, "vote": 9, "oldest": [14, 63, 80, 85], "geometri": [14, 41, 80, 102, 163], "journal": [14, 35, 50, 58, 69], "calculu": [14, 25, 35, 57, 80, 82, 85, 87, 109, 163, 178], "sixti": [14, 69, 80, 163], "theori": [14, 33, 34, 67, 80, 86, 114, 142, 163], "curent": [17, 72], "wholeheartedli": [25, 109], "embrac": [25, 89, 109], "rang": [25, 26, 35, 41, 42, 43, 45, 52, 53, 67, 74, 76, 82, 83, 87, 88, 96, 97, 99, 109, 113, 122, 124, 126, 128, 129, 130, 138, 140, 142, 143, 144, 163, 168, 170, 177, 179], "quantum": [25, 31, 109], "numer": [25, 41, 48, 49, 62, 68, 87, 88, 99, 109, 113, 119, 127, 137, 142, 152, 162, 168, 170, 177, 179], "aspect": [25, 27, 33, 35, 37, 59, 77, 80, 109, 111, 116, 136, 137, 168, 177, 179], "growth": [25, 34, 35, 80, 109, 142, 163, 182], "stem": [25, 35, 53, 69, 102, 109, 130, 151], "societi": [25, 35, 109], "facilit": [25, 70, 104, 109, 175], "eas": [25, 41, 45, 53, 54, 59, 61, 69, 77, 103, 109, 110, 112, 117, 162], "scientist": [25, 35, 57, 68, 69, 74, 76, 78, 100, 109, 152, 163], "fascin": [25, 37, 69, 102, 106, 109, 169], "implement": [25, 30, 35, 48, 49, 53, 54, 59, 70, 74, 76, 77, 81, 87, 88, 93, 96, 98, 102, 103, 106, 109, 113, 114, 115, 118, 119, 121, 124, 127, 129, 130, 133, 142, 143, 144, 151, 165, 169, 171, 172, 179], "toolbox": [25, 109, 142], "character": [25, 35, 109], "companion": [25, 72, 76, 88, 109, 130], "alli": [25, 109], "deeper": [25, 76, 109, 120, 176], "stranger": [25, 109], "mx": [25, 109, 114], "ch4": 25, "4h": [25, 109], "upon": [25, 41, 75, 78, 116, 121, 139], "reserv": [25, 58, 109, 173, 175], "od": [25, 109], "molecul": [25, 35, 109], "combust": [25, 109], "methan": [25, 109], "carbon": [25, 109, 114], "dioxid": [25, 109], "water": [25, 39, 48, 86, 109, 158], "o2": 25, "co2": 25, "h2o": 25, "properli": [25, 77, 109, 120], "atom": [25, 58, 109, 113], "quantiti": [25, 62, 88, 109, 124, 163], "destroi": [25, 109], "chemic": [25, 35, 109], "reaction": [25, 35, 109], "antoin": [25, 109, 114], "lavoisi": [25, 109], "sp": [25, 81, 82, 109], "init_sess": [25, 81, 109, 162], "reactant": [25, 109], "coeffici": [25, 109], "equal": [25, 35, 42, 45, 48, 49, 70, 85, 87, 88, 96, 99, 101, 109, 112, 119, 120, 121, 122, 129, 130, 134, 138, 139, 152, 160, 162, 163, 165, 169, 177], "denot": [25, 109, 120, 162], "neg": [25, 35, 39, 53, 54, 80, 96, 109, 113, 119, 122, 124, 128, 129, 134, 140, 146, 152, 163], "vch4": [25, 109], "vo2": [25, 109], "vco2": [25, 109], "vh2o": [25, 109], "hold": [25, 35, 82, 106, 108, 109, 114, 115, 121, 125, 128, 129, 151, 158, 163, 177], "atombal": [25, 109], "eq": [25, 81, 85, 109, 112, 150], "hydrogen": [25, 109, 114], "oxygen": [25, 109, 114], "eqn": [25, 109], "infinit": [25, 35, 80, 82, 109, 118, 177], "basi": [25, 35, 40, 45, 53, 77, 86, 104, 107, 109, 112, 119, 133, 158, 163, 179], "vector": [25, 41, 45, 70, 109, 130, 142, 170], "multipli": [25, 35, 45, 82, 85, 96, 102, 109, 118, 119, 134, 142, 162], "suppli": [25, 35, 109, 120, 135, 150, 160, 161], "po": [25, 61, 80, 109], "ca3": [25, 109], "vcaohoh": [25, 109], "vca3po4po4": [25, 109], "calcium": [25, 109], "vh3po4": [25, 109], "phosphoru": [25, 109], "variat": [25, 109, 120, 128, 137], "fraction": [25, 39, 68, 87, 109, 113, 142, 170], "integ": [25, 26, 45, 48, 54, 62, 81, 82, 87, 96, 99, 102, 109, 110, 112, 113, 119, 121, 122, 126, 129, 130, 134, 140, 144, 152, 161, 162, 165, 168], "revisit": [25, 41, 51, 59, 80, 109, 150, 162, 171, 176], "trail": [25, 42, 69, 109, 170], "barbequ": 25, "propan": [25, 109], "grill": [25, 109], "immedi": [25, 35, 58, 109, 116, 117, 119, 138, 146, 157, 160], "someon": [25, 27, 39, 40, 53, 59, 60, 67, 69, 89, 104, 106, 109, 111, 120, 144, 154, 156, 163, 175, 176, 178, 179, 180], "pressur": [25, 27, 35, 109, 116, 178], "famou": [25, 35, 53, 62, 86, 104, 109, 122, 123], "ideal": [25, 26, 58, 72, 75, 109, 113, 151, 181], "ga": [25, 109], "pv": [25, 109], "nrt": [25, 109], "realiz": [25, 26, 35, 40, 49, 53, 60, 67, 71, 77, 79, 109, 110, 112, 119, 121, 122, 125, 131, 135, 142, 146, 162, 163, 169, 179, 180], "useless": [25, 109], "annoi": [25, 39, 73, 109, 158], "clever": [25, 58, 109, 154, 165], "cleverli": [25, 109, 179], "exasper": [25, 109], "van": [25, 69, 109, 177], "der": [25, 109], "waal": [25, 109], "preliminari": [25, 33, 35, 51, 107, 109], "constant": [25, 70, 80, 109, 110, 113, 119, 162, 168], "rearrang": [25, 109], "p": [25, 26, 35, 40, 43, 45, 49, 53, 55, 61, 65, 66, 73, 81, 84, 86, 96, 109, 113, 115, 130, 150, 162, 168], "constraint": [25, 100, 109, 124, 129], "posipt": [25, 109], "ideal_p": [25, 109], "vdw_eo": [25, 109], "r1": 25, "r2": [25, 124], "r3": 25, "capabl": [25, 61, 85, 88, 99, 101, 103, 109], "versu": [25, 104, 109, 133], "temperatur": [25, 109], "isotherm": [25, 109], "liquid": [25, 35, 109, 119], "butan": [25, 109], "liquifi": [25, 109], "natur": [25, 29, 34, 35, 39, 40, 41, 49, 56, 57, 58, 61, 63, 66, 69, 72, 77, 80, 85, 108, 109, 110, 114, 117, 120, 124, 133, 142, 152, 163], "lng": [25, 109], "molar": [25, 109], "guess": [25, 39, 41, 48, 85, 86, 96, 109, 110, 112, 116, 119, 121, 127, 128, 150, 168, 169, 175, 181], "paramet": [25, 35, 41, 42, 45, 49, 55, 61, 62, 74, 76, 87, 88, 97, 106, 109, 112, 114, 119, 123, 127, 129, 130, 162, 167, 168, 169, 170, 179], "minimum": [25, 62, 87, 98, 109, 114, 119, 121, 163], "deriv": [25, 35, 67, 68, 80, 109, 116, 131, 162, 163, 179], "dp": [25, 109], "diff": [25, 109, 162], "ddp": [25, 109], "pressure_eq": [25, 109], "dp_eq": [25, 109], "ddp_eq": [25, 109], "pc": [25, 109, 138], "vc": [25, 35, 109], "tc": [25, 109], "p_c": [25, 109], "v_c": [25, 109], "t_c": [25, 109], "critpoint": [25, 109], "pcr": [25, 109], "vcr": [25, 109], "tcr": [25, 109], "\ud835\udc5d\ud835\udc50": 25, "\ud835\udc4e": 25, "27\ud835\udc4f": 25, "\ud835\udc49\ud835\udc50": 25, "3\ud835\udc4f": 25, "\ud835\udc47\ud835\udc50": 25, "8\ud835\udc4e": 25, "27\ud835\udc45\ud835\udc4f": 25, "314": [25, 109], "highli": [25, 35, 43, 49, 57, 58, 68, 69, 78, 88, 89, 104, 109, 110, 116, 130, 175, 177], "literatur": [25, 49, 58, 109], "si": [25, 109, 114], "provis": [25, 109, 173], "sub": [25, 35, 42, 62, 101, 109, 113, 117, 139, 162, 177], "lambdifi": [25, 109], "numeric_pressur": [25, 109], "225": [25, 109], "e6": [25, 109], "03707": [25, 109], "e3": [25, 35, 109], "942009245580326": [25, 109], "thermodynam": [25, 109], "barbecu": [25, 109], "wikipedia": [25, 34, 35, 61, 80, 102, 109, 144, 168], "tank": [25, 109], "topic": [25, 26, 31, 32, 34, 48, 54, 58, 59, 63, 68, 69, 70, 74, 80, 86, 93, 95, 99, 106, 109, 113, 116, 121, 123, 124, 125, 127, 139, 153, 158, 161, 163, 165, 168, 171, 175, 177], "reiter": [25, 109], "deliv": [25, 53, 86, 91, 109, 153], "color": [25, 35, 41, 43, 45, 62, 80, 83, 85, 87, 88, 99, 109, 138], "z": [25, 69, 81, 96, 109, 113, 144, 162, 169], "strictli": [25, 28, 45, 58, 71, 72, 87, 88, 112, 113, 120, 121, 124, 139, 143, 154, 165], "36616": [25, 109], "2925e": [25, 109], "press_z": [25, 109], "223": [25, 109], "6e": [25, 109], "6943008": [25, 109], "947454035": [25, 109], "pyplot": [25, 41, 83, 84, 85, 87, 88, 109, 144], "plt": [25, 41, 83, 84, 85, 87, 88, 109, 144], "inlin": [25, 41, 81, 85, 106, 109, 121, 162], "t_step": [25, 109], "myt": [25, 109], "273": [25, 109], "00006": [25, 109], "001": [25, 53, 109], "m3": [25, 109], "v_step": [25, 109], "000001": [25, 55, 109], "myv": [25, 109], "myp": [25, 109], "routin": [25, 58, 85, 97, 109, 113, 133, 139, 162], "pukumarath": 25, "6e3710190fb0": 25, "norm": [25, 41, 100, 109, 126, 147], "mpl": [25, 109], "vmin": [25, 109], "vmax": [25, 109], "cmap": [25, 109], "cm": [25, 88, 109, 152], "scalarmapp": [25, 109], "jet": [25, 109], "set_arrai": [25, 109], "yi": [25, 109], "enumer": [25, 76, 109, 126], "1000": [25, 52, 70, 109, 124, 129, 144, 151, 180, 182], "to_rgba": [25, 109], "weight": [25, 99, 109], "xlabel": [25, 81, 88, 109], "ylabel": [25, 81, 88, 109], "cbar": [25, 109], "colorbar": [25, 109], "tick": [25, 83, 87, 109], "set_tick": [25, 83, 87, 109], "set_ticklabel": [25, 109], "ax": [25, 31, 41, 42, 62, 83, 84, 85, 87, 88, 109, 142], "set_yticklabel": [25, 109], "0f": [25, 109], "set_ylabel": [25, 109], "straight": [25, 56, 87, 124], "sundial": [25, 109], "solver": [25, 109, 151], "lh": [25, 109], "rh": [25, 109], "balance_stoichiometri": [25, 109], "nh4clo4": [25, 109], "al": [25, 34, 35, 53, 109], "al2o3": [25, 109], "hcl": [25, 105, 109], "n2": [25, 109, 165], "dict": [25, 41, 45, 48, 49, 54, 109, 110, 114, 127, 168, 169], "mass_fract": [25, 109], "3g": [25, 109], "wt": [25, 109], "52": [25, 66, 80, 106, 163], "62": [25, 75], "\ud835\udc63\ud835\udc36\ud835\udc3b4": [25, 109], "\ud835\udc63\ud835\udc36\ud835\udc422": [25, 109], "\ud835\udc63\ud835\udc3b2\ud835\udc42": [25, 109], "\ud835\udc63\ud835\udc422": [25, 109], "tougher": [25, 109], "\ud835\udc63\ud835\udc36\ud835\udc4e3\ud835\udc43\ud835\udc424\ud835\udc43\ud835\udc424": [25, 109], "\ud835\udc63\ud835\udc36\ud835\udc4e\ud835\udc42\ud835\udc3b\ud835\udc42\ud835\udc3b": [25, 109], "\ud835\udc63\ud835\udc3b3\ud835\udc43\ud835\udc424": [25, 109], "kinet": [25, 109], "investig": [25, 35, 41, 53, 59, 104, 109, 116, 138, 171], "adequ": [25, 76, 109, 121], "notat": [25, 26, 86, 89, 109, 110, 127], "differenti": [25, 35, 80, 86, 109, 151, 163], "molecular": [25, 109], "bromin": [25, 109], "nitrou": [25, 109], "oxid": [25, 109], "synthes": [25, 109], "nitrosyl": [25, 109], "bromid": [25, 109], "equilibrium": [25, 109], "indic": [25, 72, 88, 98, 100, 106, 109, 119, 121, 126, 139, 140, 142, 143, 153], "defaultdict": [25, 76, 109], "substanc": [25, 109], "reactionsystem": [25, 109], "get_odesi": [25, 109], "init_print": [25, 81, 109, 162], "NO": [25, 82, 109], "br2": [25, 109], "nobr": [25, 109], "abc": [25, 45, 49, 109, 142, 177], "str_massact": [25, 109], "k1": [25, 109], "k2": [25, 109], "rsy": [25, 109], "from_str": [25, 109], "substance_factori": [25, 109], "formula": [25, 41, 72, 80, 109, 113, 134, 151], "substance_nam": [25, 109], "peek": [25, 109, 125], "cell": [25, 41, 52, 53, 66, 70, 72, 74, 109, 112, 114, 130, 139, 160, 162, 168, 170, 171], "odesi": [25, 109], "include_param": [25, 109], "lower_bound": [25, 109], "expr": [25, 109, 138], "param": [25, 109, 168], "param_nam": [25, 109], "concentr": [25, 35, 109], "rate": [25, 35, 58, 59, 80, 109, 112, 163], "t_max": [25, 109], "a0": [25, 109], "b0": [25, 109], "c0": [25, 109], "tout": [25, 109], "yout": [25, 109], "cvode": [25, 109], "nstep": [25, 109, 126], "legend": [25, 30, 41, 109], "br": [25, 109, 129], "_2": [25, 109], "steadi": [25, 35, 109], "stir": [25, 109], "reactor": [25, 109], "cstr": [25, 109], "extra2": [25, 109], "new_rsi": [25, 109], "commerci": [25, 41, 67, 72, 89, 108, 109, 142, 150, 162], "equilibria": [25, 109], "appropri": [25, 28, 43, 49, 53, 58, 60, 61, 69, 72, 75, 76, 79, 103, 109, 110, 111, 112, 113, 114, 116, 119, 127, 129, 134, 138, 139, 142, 143, 152, 153, 161, 162, 171, 174, 176, 179], "energet": [25, 109], "protein": [25, 35, 109], "fold": [25, 72, 109], "truli": [25, 26, 28, 52, 68, 109, 119, 129], "amaz": [25, 35, 109], "enrich": [25, 35], "throughout": [25, 33, 35, 51, 61, 65, 109, 113, 119, 163, 171], "twofold": 26, "verg": 26, "slog": 26, "profici": [26, 59], "resist": [26, 35, 58], "urg": [26, 66, 150], "swap": [26, 30, 69, 96, 107, 112, 114, 122, 130], "broken": [26, 64, 78, 120, 121], "suffer": [26, 85, 86, 89, 179], "drawback": [26, 39, 131], "facil": [26, 37, 76], "modern": [26, 33, 35, 36, 58, 75, 86, 100, 104, 113, 119, 132, 134, 137, 181], "fetchcont": [26, 40], "drunk": 26, "deepli": [26, 56, 66, 89], "pitcher": 26, "tdd": [26, 45], "kool": 26, "aid": 26, "cliff": 26, "ocean": 26, "murder": 26, "chase": [26, 150], "movi": [26, 35, 39, 59, 74, 99, 122, 126], "hardli": [26, 28, 76, 96, 116, 171], "enabl": [26, 35, 40, 41, 50, 52, 53, 58, 61, 66, 68, 72, 77, 81, 101, 103, 106, 112, 115, 135, 138, 139, 150, 160, 168, 170, 171, 177], "enhanc": [26, 34, 35, 100, 120, 121, 133, 150], "influenc": [26, 33, 34, 35, 121, 146, 169], "inspir": [26, 35, 68, 70, 121, 142], "target_sourc": 26, "makefil": [26, 40, 61, 115], "gnu": [26, 40, 61, 100, 142], "conan": [26, 40], "recip": [26, 77], "largest": 26, "catch2": 26, "googletest": 26, "cmakelist": [26, 150], "helper": [26, 45, 65], "readm": [26, 30, 39, 40, 43, 53, 61, 71, 78, 79, 135, 170], "simplifi": [26, 35, 39, 45, 60, 61, 68, 80, 101, 114, 116, 124, 130, 139, 143, 153, 162, 171, 174, 175], "lib": [26, 39, 43, 61, 81, 105, 107, 117, 135, 139, 175], "subdirectori": [26, 117, 175], "source_root": 26, "cmake_minimum_requir": 26, "cmake_cxx_standard": 26, "cmake_cxx_standard_requir": 26, "add_execut": 26, "add_subdirectori": 26, "boilerpl": [26, 106, 112, 161], "creativ": [26, 57, 89, 117, 125, 154], "humbli": 26, "add_librari": 26, "correspond": [26, 35, 53, 55, 62, 97, 113, 118, 119, 130, 134, 142, 144, 152, 170], "gave": [26, 52, 55, 58, 79, 89, 112, 115, 128, 133, 151, 172], "clue": [26, 175], "complain": [26, 96, 103, 116, 163, 168, 176], "privat": [26, 61, 71, 78, 116, 143, 158, 173], "cpp": [26, 40], "fetchcontent_declar": 26, "git_repositori": 26, "catchorg": 26, "git_tag": 26, "4acc51828f7f93f3b2058a63f54d112af4034503": 26, "devel": 26, "fetchcontent_makeavail": 26, "target_link_librari": 26, "catch2withmain": 26, "highlight": [26, 78, 80, 86, 88, 101, 106, 107, 167], "redund": [26, 41, 45], "fetch": [26, 75, 112, 168], "shamelessli": 26, "catch_test_macro": 26, "hpp": 26, "unsign": [26, 129], "int": [26, 40, 43, 49, 54, 55, 66, 67, 97, 110, 112, 114, 119, 121, 122, 126, 129, 140, 161, 165, 168, 169], "test_cas": 26, "3628800": 26, "mysteri": [26, 33, 80, 92, 121, 160], "macro": [26, 70, 121], "assert": [26, 45, 53, 54, 60, 68, 81, 102, 116, 122, 124, 135, 165, 168, 172], "halt": [26, 69], "failur": [26, 81, 116, 134, 158, 163], "matcher": 26, "expect_my_puppy_to_be_named_bori": 26, "hide": [26, 35, 75, 179], "purist": [26, 121], "vapor": 26, "paraphras": 26, "antoni": 26, "prais": [26, 58], "dcmake_build_typ": [26, 150], "seed": [26, 144], "stuff": [26, 30, 32, 35, 49, 52, 53, 57, 58, 65, 67, 76, 80, 94, 132], "phoni": 26, "grain": [26, 53, 88, 127, 172], "rf": [26, 150], "desir": [26, 35, 42, 99, 113, 121, 144, 150, 160, 162, 163, 169, 177], "consum": [26, 45, 53, 54, 55, 69, 118, 121, 124, 129, 131, 136, 143, 154, 158, 169, 177], "prototyp": [26, 70, 181], "pragma": 26, "target_include_directori": 26, "cmake_current_source_dir": 26, "confess": [26, 30, 45, 75, 97, 104], "iostream": [26, 40], "argc": [26, 40], "char": [26, 40, 96, 122, 126, 129, 140], "argv": [26, 40, 68, 110, 139], "cout": [26, 40], "endl": [26, 40], "input": [26, 43, 48, 55, 58, 62, 70, 79, 88, 97, 98, 106, 110, 116, 121, 122, 124, 127, 131, 134, 139, 140, 144, 146, 151, 163, 168, 179], "stoi": 26, "to_str": 26, "referenc": [26, 45, 61], "overflow": 26, "33": [26, 75, 99, 106, 114], "2147483648": 26, "stub": [26, 49], "minim": [26, 30, 39, 40, 41, 56, 75, 100, 103, 104, 110, 111, 117, 135], "tediou": [26, 86, 112, 143], "batch": [26, 65, 139], "corner": [26, 41, 43, 72, 74, 89, 106, 150], "pars": [26, 39, 49, 55, 68, 76, 77, 97, 103, 110, 127, 138, 139, 169, 170], "client": [26, 27, 45, 61, 71, 74, 97, 103, 104, 105, 106, 132, 143, 161, 173, 179], "exclud": [26, 43, 53, 70, 97, 128, 144], "suit": [26, 28, 40, 50, 72, 75, 114, 118, 136, 138, 177], "cite": [26, 29], "submodul": [26, 68], "rebuild": [26, 35, 61, 101], "isabella": 26, "muert": 26, "buzz": [26, 71, 122, 134], "meson": [26, 40], "cmake_start": 26, "finest": 27, "buzzword": [27, 160], "solid": [27, 80, 98, 116, 121, 163, 166], "craftsmanship": 27, "virtu": 27, "ey": [27, 34, 35, 116, 134, 143], "behold": 27, "succinct": 27, "undergon": [27, 35], "hasn": [27, 67, 69], "wrote": [27, 34, 35, 39, 43, 48, 50, 59, 67, 68, 69, 70, 76, 80, 87, 97, 104, 106, 112, 115, 124, 127, 131, 132, 133, 138, 143, 156, 177], "awhil": [27, 58, 129, 165], "imposs": [27, 33, 39, 58, 103, 116, 120, 138], "deadlin": 27, "colleagu": [27, 50, 66, 68, 72, 89, 136, 175, 179], "ugli": [27, 35, 73, 76, 78, 79, 112, 113, 116, 135], "incorpor": [27, 67, 100], "asham": [27, 146], "hadn": [27, 58, 66, 115, 142], "signatur": [27, 45, 49, 80, 112, 122, 143], "superpow": [27, 114], "permiss": [27, 52, 61, 71, 75, 106, 115, 116], "mood": [27, 35], "elev": 27, "charg": [27, 35, 43, 99, 106], "ka": 27, "ching": 27, "promot": [27, 103, 125, 153, 158], "vocabulari": 27, "linkedin": [27, 29, 46, 51, 57, 58, 89, 154, 155, 158, 163], "smile": [27, 35], "halfwai": [27, 65, 80], "dear": [28, 58, 160, 163], "subscrib": [28, 29, 31], "thanksgiv": 28, "exclus": [28, 39, 67, 134], "thursdai": [28, 80, 119, 145], "frequenc": [28, 35, 88], "ever": [28, 29, 33, 40, 45, 51, 69, 73, 74, 76, 95, 100, 103, 112, 119, 129, 132, 135, 143, 163, 167, 168, 179], "bill": [28, 40, 69, 75, 99, 106, 151, 153], "massiv": [28, 39, 53, 169], "hadoop": [28, 69, 75], "wareh": 28, "bigqueri": 28, "excit": [28, 34, 36, 37, 59, 64, 71, 75, 78, 103, 119, 133, 138, 155, 162, 177], "duckdb": [28, 132], "brilliantli": [28, 61, 76, 93, 170], "mine": [28, 31, 32, 35, 46, 53, 60, 68, 78, 86, 137, 154, 155, 177], "olap": [28, 160], "unexpect": [28, 35, 120, 143, 160, 170], "bonu": [28, 61, 75, 80, 118, 178], "fring": [28, 112], "pictur": [28, 35, 40, 58, 96, 98, 100, 129, 169], "accompani": [28, 86, 94, 100], "cuter": 28, "babi": [28, 92], "duck": [28, 143], "hundr": [28, 58, 142, 165, 178, 179], "sped": [28, 75, 142], "jason": 28, "brownle": 28, "superfast": 28, "chri": 28, "moffitt": 28, "vent": 28, "tire": [28, 58, 104, 158, 165], "board": [28, 59, 69, 80, 102, 121, 160], "chime": [28, 29], "hei": [28, 68, 92, 126], "poetri": [28, 66, 68, 175], "beneficiari": [28, 177], "affair": 28, "month": [28, 50, 51, 52, 55, 57, 68, 80, 89, 93, 99, 101, 106, 108, 113, 121, 146, 158, 166, 179], "interweb": [29, 32], "survei": [29, 93, 125, 147], "swing": 29, "pygri": 29, "geograph": 29, "announc": [29, 71, 91, 145, 155, 158], "censu": 29, "bureau": 29, "tiger": [29, 86], "cartograph": 29, "goedatafram": 29, "disclosur": 29, "reddit": [29, 32, 40, 58, 131, 132, 137, 151, 163], "miguel": 29, "grinberg": 29, "eminin": 29, "inclin": [29, 75, 121, 133, 163, 172], "despit": [29, 129, 142, 151, 160], "falcon": 29, "late": [29, 35, 54, 59, 89, 91, 97, 103, 132, 142, 154, 169, 176, 177, 179], "verb": [29, 120, 121], "handler": [29, 41, 45, 79, 106, 116, 139, 143, 175], "on_get": 29, "hardest": [29, 80], "overcom": [29, 142, 163, 169, 177], "stack": [29, 39, 43, 53, 59, 61, 62, 68, 69, 88, 95, 96, 99, 103, 116, 136, 139, 142, 143, 150, 163, 169, 177, 179, 181], "mock": [29, 68], "intervent": [29, 35, 146], "scratch": [29, 39, 41, 60, 80, 99, 100, 106, 133, 144, 172, 174], "kitchen": 29, "sink": 29, "deserv": [29, 58, 134, 158, 163], "credit": [29, 52, 68, 85, 91, 106, 138, 163, 176, 178], "hybrid": 29, "discrep": 29, "inherit": [29, 112, 181], "satir": 29, "abject": 29, "orient": [29, 35, 45, 69, 76, 77, 96, 113, 117, 121, 132, 138, 139, 168, 170, 177, 179, 181], "send": [30, 35, 43, 68, 79, 80, 92, 114, 116, 143, 158], "vacat": [30, 131], "aizham": [30, 93], "zhetigenova": [30, 93], "six": [30, 70, 86, 87, 96, 101, 113, 121, 122, 130, 144, 163, 166], "modin": 30, "sent": [30, 69, 158], "rai": [30, 34], "dask": [30, 100], "accord": [30, 35, 41, 53, 69, 85, 102, 113, 118, 119, 129, 134, 138, 142, 144, 163, 169, 172], "megabyt": 30, "terabyt": 30, "lightn": [30, 75], "sport": [30, 34, 86], "across": [30, 35, 39, 48, 51, 53, 59, 68, 71, 86, 96, 103, 111, 130, 138, 139, 150, 174], "impress": [30, 32, 40, 41, 45, 68, 70, 75, 108, 142, 150], "playwright": 30, "shantnu": 30, "tiwari": 30, "abner": 30, "bogan": 30, "levenberg": [30, 151], "marquardt": [30, 151], "testament": 30, "anim": [30, 35, 49, 58, 88], "traffic": [30, 99, 124, 154, 158], "spike": 30, "weekli": [30, 50, 113, 132], "whenev": [30, 35, 41, 69, 89, 98, 112, 119, 122, 124, 174], "samir": 30, "paul": [30, 80, 86, 151, 162, 163, 170], "leetcod": 30, "brought": [31, 41, 70, 142, 163], "progress": [31, 34, 51, 58, 69, 71, 76, 80, 99, 118, 150], "feedback": [31, 41, 158, 160], "jupypterlab": 31, "hopefulli": [31, 40, 96], "portal": [31, 107, 142], "makeov": 31, "curiou": [31, 35, 39, 71, 77, 94, 104, 107, 112, 114, 119, 124, 126, 130, 135, 142, 144, 162, 168, 171], "elementor": 31, "upgrad": [31, 59, 61, 66, 67, 75, 115, 119, 138, 150, 171, 175], "unintuit": [31, 110], "bang": 31, "li": [31, 116, 121], "laura": 31, "mersini": 31, "houghton": 31, "chapel": 31, "hill": [31, 138], "sucker": 31, "pop": [31, 35, 42, 67, 163, 168, 169, 179], "physic": [31, 33, 34, 35, 67, 144, 157, 163], "treatment": [31, 35, 54], "cosmologi": 31, "happi": [32, 35, 39, 43, 45, 58, 71, 78, 89, 91, 100, 116, 127, 131, 139, 146, 157, 178, 181], "holidai": [32, 80, 93, 113, 114], "affect": [32, 35, 69, 160, 171, 174, 175], "disord": [32, 35, 145], "stuck": [32, 57, 86, 99, 103, 122, 128, 158, 163, 167], "snowbank": 32, "roundup": [32, 93], "goodi": [32, 39, 92, 104, 163], "elsewher": [32, 80, 93, 158, 177], "formal": [32, 45, 49, 58, 85, 114, 119, 163, 165, 168], "treat": [32, 41, 49, 50, 58, 59, 61, 69, 86, 88, 89, 110, 121, 129, 133, 151, 158, 160, 163, 165, 169, 176], "organ": [32, 35, 50, 51, 52, 59, 71, 76, 80, 108, 110, 123, 137, 142], "guest": [32, 35, 76, 132, 137, 173], "retir": [32, 63, 86], "tim": [32, 127], "hockswend": 32, "pycod": 32, "yearli": [32, 67], "twitter": [32, 57, 58, 154, 155, 158, 163, 166], "pythonhub": 32, "regularli": [32, 163], "tidbit": 32, "nuitka": 32, "nevertheless": [32, 39, 61, 106, 117, 119, 126, 127, 131, 175, 177, 179], "comprehens": [32, 34, 45, 52, 53, 67, 76, 82, 87, 96, 116, 124, 129, 134, 161, 170], "cheatsheet": 32, "cheat": [32, 39, 48, 49, 72], "offici": [32, 66, 67, 77, 86, 101, 119, 168, 169], "doc": [32, 51, 52, 53, 60, 81, 121, 127, 139, 143, 162, 168, 169, 173], "channel": [32, 35, 39, 65, 91, 97, 135, 163, 168], "sheer": [32, 138], "scope": [32, 104, 112, 114], "lawrenc": 32, "eagl": 32, "engag": [33, 57, 58, 88], "brilliant": [33, 34], "philosph": 33, "daniel": [33, 34], "mission": [33, 35, 67, 137], "dismantl": 33, "cartesian": [33, 41], "theater": 33, "observ": [33, 42, 62, 88], "draft": [33, 50, 51, 66, 97], "emerg": [33, 35], "mirag": 33, "aris": [33, 79, 110, 132, 174], "perceputu": 33, "agenc": 33, "brain": [33, 34, 37, 38, 50, 57, 58, 137, 146], "medit": [33, 155, 156], "mental": [33, 57, 58, 80, 86, 107, 113, 157], "sip": 33, "coffe": [33, 45, 120, 143, 158, 179], "consciou": [33, 34, 35, 37], "buddhist": [33, 58, 89, 155, 156], "anatta": 33, "unchang": [33, 96, 122, 152], "perman": [33, 42, 150, 163], "phenomenon": [33, 35], "relationship": [33, 35, 41, 49, 51, 62, 63, 74, 105, 113, 142], "explicit": [33, 35, 53, 58, 71, 75, 113, 115, 121, 126, 162, 163, 165, 177], "strike": [33, 45, 49, 106, 124, 126, 132, 150, 160], "illusori": [33, 35], "ag": [33, 35, 43, 75, 93, 119, 140, 150, 160, 169], "ai": [33, 34, 35, 40, 58, 100], "wordstar": 33, "sell": [33, 57, 89, 91, 125, 158, 163, 166], "cursori": [33, 87], "interdisciplinari": 33, "cognit": [33, 37, 57, 86, 107], "instinct": [33, 34], "unravel": 33, "conscious": [34, 35], "dennett": 34, "mariano": [34, 37], "sigman": [34, 37], "emot": 34, "lisa": 34, "feldmean": 34, "barrett": 34, "driven": [34, 35, 68, 177], "role": [34, 35, 62, 68, 72, 77, 106, 114, 169, 172, 177], "youtub": [34, 35, 46, 58, 65, 80, 91, 149, 163, 178], "synapt": 34, "joseph": 34, "ledoux": 34, "phd": 34, "gazzaniga": 34, "feldman": 34, "assembl": 34, "neural": [34, 35, 57, 130, 147], "smarter": [34, 86, 180], "peter": [34, 127], "robin": 34, "hiesing": 34, "neurosci": [34, 35, 37, 38, 57], "4th": [34, 140, 155], "bear": [34, 72, 82, 129], "mit": 34, "opencoursewar": 34, "biologi": 34, "textbook": [34, 82, 163], "pricei": [34, 59, 72, 163], "tale": [34, 60, 89, 157], "neuroscientist": 34, "quest": 34, "fantasi": 34, "soul": 34, "hofstadt": 34, "ed": 34, "steven": 34, "pinker": 34, "evolut": [34, 35, 72, 73, 88, 102], "techumseh": 34, "fitch": 34, "neuron": [34, 38, 50, 57, 86], "dynam": [34, 69, 76, 102, 104, 114, 116, 118, 127, 129, 169, 175], "wulfram": 34, "gerstner": 34, "et": [34, 35], "theoret": [34, 35, 140], "plato": 34, "camera": 34, "landscap": [34, 70], "abstract": [34, 35, 45, 61, 77, 105, 113, 126, 132, 139, 162, 172, 177], "categor": [34, 35, 49, 62, 88], "gerald": 34, "edelman": 34, "entic": 34, "pull": [34, 61, 65, 78, 103, 107, 150, 179], "searl": 34, "churchland": 34, "fodor": 34, "ramachandran": 34, "themselv": [34, 41, 52, 54, 68, 89, 96, 128, 133, 143, 180], "terribl": 34, "chore": [34, 50, 153], "crazi": [34, 60, 119, 133, 177], "devis": 34, "sadist": 34, "coursera": [34, 59, 77, 142], "synaps": [34, 38], "edx": 34, "vide": 34, "histori": [34, 39, 65, 69, 75, 77, 78, 80, 86, 89, 96, 102, 121, 135, 163, 177], "ann": [34, 35], "perceptron": 34, "1958": 34, "paper": [34, 35, 60, 67, 80, 87, 162, 163, 178], "frank": [34, 158], "rosenblatt": 34, "randomli": [34, 62, 73, 144, 157], "consensu": [34, 35, 70], "biolog": 34, "intellig": [34, 50, 113], "connect": [34, 35, 40, 52, 58, 60, 61, 62, 72, 78, 88, 95, 103, 106, 115, 125, 133, 142, 143, 150, 153, 154, 155, 161, 173, 175], "birth": 34, "dartmouth": 34, "workshop": 34, "1956": 34, "Their": [34, 86, 113, 122, 143, 169], "von": 34, "neumann": 34, "leader": 34, "nueral": 34, "sidelin": 34, "reinforc": [34, 49, 58, 77, 126, 128, 146, 163], "london": [34, 35, 58], "startup": [34, 40, 43, 61, 69, 103, 174], "deepmind": 34, "muzero": 34, "naiv": 34, "player": [34, 68, 112, 162, 177], "mcculloch": [34, 35], "pitt": [34, 35], "1943": [34, 35, 118], "artifici": [34, 35], "connectom": 34, "diagram": [34, 35, 85, 100, 169, 179], "chmeistri": 34, "solomonoff": 34, "predict": [34, 35, 75, 128, 143, 144, 151], "evolutionari": 34, "110": [34, 96], "wolfram": [34, 86, 162, 163], "mathematica": [34, 67, 162, 177], "Its": [34, 55, 113], "selfassemblingbrain": 34, "hallucin": 34, "realiti": [34, 35], "ted": 34, "anil": 34, "seth": 34, "donald": [34, 35, 57, 91], "hoffman": 34, "perceptu": [34, 35], "aliv": [34, 68], "accuratl": 34, "hid": 34, "brainfact": 34, "gross": 34, "anatomi": [34, 35], "allen": [34, 35, 51], "institut": [34, 35], "analyz": [34, 48, 53, 59, 62, 68, 92, 99, 152], "professor": [35, 80, 86, 163], "idan": 35, "segev": 35, "abbrevi": [35, 39, 114, 117, 122], "billion": [35, 129, 144], "dollar": [35, 57, 86, 134, 165, 170], "seattl": 35, "atla": 35, "janelia": 35, "farm": 35, "dc": 35, "usa": [35, 70, 128], "eu": 35, "presid": [35, 112, 113], "obama": 35, "connectomix": 35, "bmi": 35, "camillo": 35, "golgi": 35, "santiago": 35, "ramon": [35, 36], "cajal": [35, 36], "giant": [35, 58], "stain": 35, "tissu": 35, "dark": 35, "1906": 35, "nobel": 35, "prize": 35, "nanomet": 35, "resolut": [35, 144, 156], "electron": [35, 154], "microscop": 35, "detect": [35, 82, 131, 139], "reconnect": 35, "3d": 35, "prospect": [35, 78], "blueprint": 35, "sick": 35, "bridg": [35, 80], "genet": [35, 163], "vivo": 35, "micromet": 35, "mess": [35, 39, 40, 66, 85], "mice": [35, 102], "gene": [35, 57], "insert": [35, 48, 128, 140, 143, 160, 161, 170], "dna": 35, "floursec": 35, "henc": [35, 48, 61, 66, 127], "art": [35, 68, 119, 122, 163], "exhibit": 35, "tagg": 35, "eg": 35, "retina": 35, "trace": [35, 139, 143, 179], "electrod": 35, "implant": 35, "arm": [35, 58, 66, 70, 85, 89, 178], "amelior": 35, "parkinson": 35, "puls": 35, "basal": 35, "ganglia": 35, "pacemak": 35, "telemetr": 35, "invas": [35, 58, 75], "electod": 35, "movement": [35, 112], "plant": [35, 49], "probe": 35, "wavelength": 35, "retin": 35, "receptor": [35, 133], "ion": 35, "rhodopsin": 35, "natronoma": 35, "pharaoni": 35, "yellow": [35, 59, 78, 138], "aka": [35, 40], "campu": 35, "induc": 35, "drink": [35, 147], "lord": 35, "kelvin": 35, "william": [35, 67], "thompson": [35, 86], "until": [35, 43, 53, 58, 70, 72, 75, 76, 80, 91, 92, 99, 101, 102, 103, 118, 119, 124, 129, 133, 135, 139, 150, 162, 163, 166, 169, 177], "succe": [35, 57, 77, 163], "bl": 35, "ibm": 35, "spine": [35, 84], "potentiti": 35, "psp": 35, "histor": [35, 77, 104, 113, 121, 147], "hook": [35, 168], "schwann": 35, "sigmund": 35, "freud": 35, "draw": [35, 41, 49, 58, 85, 87, 88, 89, 122, 163], "crayfish": 35, "controversi": [35, 121, 132], "ryc": 35, "artist": 35, "primit": [35, 49, 58, 168], "nervou": [35, 133], "conceiv": [35, 125], "drew": [35, 41], "receiv": [35, 100, 102, 139, 163], "somehow": [35, 49, 53, 115, 118, 128, 134, 158], "recept": 35, "debat": [35, 165], "podium": 35, "varicos": 35, "bouton": 35, "neurotransmitt": 35, "nb": [35, 168], "thoushand": 35, "red": [35, 43, 62, 167, 168], "excitatori": 35, "inhibitori": 35, "tak": 35, "pyramid": 35, "cortex": [35, 86], "soma": 35, "segment": [35, 62, 80, 85, 87, 121, 126, 128], "hot": [35, 89, 143, 153, 175], "region": [35, 59, 97, 106], "channelss": 35, "propag": [35, 71], "ranvier": 35, "inter": [35, 127, 169], "myelin": 35, "sheath": 35, "lipid": 35, "internod": 35, "glial": 35, "aren": [35, 53, 57, 68, 85, 97, 112, 124, 130, 163, 169, 172, 180], "oligodendrocyt": 35, "boost": [35, 40, 97, 104, 154, 171], "sclerosi": 35, "diseas": [35, 119], "immun": 35, "myelen": 35, "amplifi": 35, "centimet": 35, "meter": [35, 112, 122, 160], "swell": 35, "carri": [35, 89, 102, 116, 134], "3rd": 35, "purkinj": 35, "cerebellum": 35, "flat": 35, "bush": [35, 58], "starburst": 35, "amacrin": 35, "hippocampu": 35, "triangular": 35, "dendtrit": 35, "spinei": 35, "death": [35, 58, 70], "bed": [35, 177], "pyradim": 35, "micron": 35, "millionth": 35, "60": [35, 80, 85, 96, 113, 114, 122, 138], "apic": 35, "takeawai": [35, 72], "classifi": 35, "anatom": [35, 36], "interneuron": 35, "pattern": [35, 49, 50, 62, 70, 74, 82, 88, 103, 117, 118, 144, 170, 171], "fire": [35, 40, 57, 116, 133, 158, 168], "characterist": [35, 116, 138, 169], "classif": [35, 68], "thousand": [35, 119], "neocortex": 35, "2013": 35, "javier": 35, "defelip": 35, "chandeli": 35, "baskent": 35, "hors": [35, 115], "retziu": 35, "slide": [35, 141], "stutter": 35, "structual": 35, "nueron": 35, "denrit": 35, "contact": [35, 143], "gap": [35, 52, 67, 80, 105, 142], "spini": 35, "vesicl": 35, "dentrid": 35, "glutam": 35, "acytlcolin": 35, "seratonin": 35, "vessicl": 35, "travel": [35, 45, 99, 113, 160, 163], "digit": [35, 55, 82, 113, 119, 134, 143, 144, 179], "arriv": [35, 63, 75, 78, 82, 99, 124, 151], "grade": [35, 45, 58, 80, 86, 114, 119, 163, 169], "quantal": 35, "thalamu": 35, "1500": 35, "neighbor": 35, "360": [35, 80], "reshow": 35, "threshold": 35, "quiz": [35, 46, 80], "92": [35, 53], "85": [35, 112, 114, 119, 138], "2024": [35, 80, 81, 178], "synatp": 35, "tau": 35, "repeat": [35, 49, 52, 57, 82, 104, 111, 113, 130, 132, 143, 172], "membrand": 35, "patch": [35, 68, 70, 106, 175], "wrap": [35, 40, 45, 49, 68, 69, 104, 116, 120, 124, 142, 143, 152, 169, 170, 179], "sphere": 35, "dif": 35, "inject": [35, 61, 119, 172], "voltrag": 35, "slowli": [35, 53, 104, 106, 119, 167], "mere": [35, 89, 112], "resistor": 35, "ohm": 35, "ir": 35, "decai": [35, 80], "depolar": 35, "act": [35, 76, 89, 96, 102, 146], "baselin": [35, 75, 136], "approxim": [35, 45], "capacit": 35, "frac": [35, 62, 80, 85, 162, 170], "dv": 35, "dt": [35, 55, 113], "basical": 35, "kirchoff": 35, "dervi": 35, "infti": 35, "tau_": 35, "minu": [35, 52, 67, 80, 89, 113, 126, 144, 162, 167, 178], "attenu": 35, "exponenti": [35, 80, 119], "expon": [35, 67, 122, 162], "cale": 35, "mirror": 35, "goveren": 35, "govern": [35, 59, 179], "vice": 35, "versa": 35, "r_": 35, "directli": [35, 41, 43, 45, 52, 53, 54, 59, 61, 62, 68, 70, 74, 82, 85, 88, 99, 110, 114, 119, 124, 129, 138, 139, 140, 142, 144, 150, 160, 168, 170, 171, 174, 175, 179], "maximum": [35, 62, 77, 87, 98], "intermitt": 35, "buildup": 35, "previou": [35, 39, 42, 80, 113, 119], "constantli": 35, "gotten": [35, 49, 88, 104, 133, 162, 176], "hyperpolar": 35, "hypopolar": 35, "suddenli": 35, "70": [35, 75, 96, 114, 138], "millivolt": 35, "energi": [35, 55, 58, 86, 154], "e_": 35, "dealt": [35, 144], "proprerti": 35, "btw": 35, "ballpark": 35, "uptak": 35, "conductor": 35, "g_": 35, "syn": 35, "white": [35, 42, 163, 167], "neurtransmitt": 35, "nerv": 35, "sodium": [35, 114], "fewer": [35, 42, 154, 176], "potassium": 35, "opposit": [35, 43, 77, 89, 155, 156, 169], "gradient": 35, "lose": [35, 77, 79, 163, 168, 169], "ceil": 35, "200": [35, 53, 84, 85, 100, 106, 112, 116, 126, 143, 175], "consant": 35, "clamp": 35, "propog": 35, "alan": 35, "lloyd": 35, "andrew": [35, 39, 142], "cambridg": 35, "wwii": 35, "1963": 35, "squid": 35, "experiment": [35, 40, 70, 72, 163, 170], "uniqu": [35, 48, 49, 58, 62, 75, 88, 99, 100, 106, 112, 114, 116, 126, 134, 143, 168, 169], "mm": [35, 55, 170, 175], "cathet": 35, "oscilloscop": 35, "1939": [35, 118], "stimulu": 35, "gradual": [35, 120, 146], "1952": 35, "triumph": 35, "votag": 35, "suprathreshold": 35, "inward": 35, "outward": 35, "drug": [35, 163], "tetrodotoxin": 35, "ttx": 35, "fish": [35, 54], "toxin": 35, "phase": [35, 70, 87], "disappear": [35, 39, 45, 62, 85, 160, 162, 170, 174], "tetraethilammonium": 35, "tea": 35, "na": [35, 114, 140], "1954d": 35, "potasium": 35, "leak": [35, 53], "i_": 35, "v_": 35, "inactiv": 35, "rise": [35, 68, 87, 150], "slower": [35, 53, 69, 70, 77, 97, 103, 104, 129, 142, 150, 153], "exp": 35, "4t": 35, "newcommand": 35, "overbar": 35, "mkern": 35, "5mu": 35, "overlin": 35, "repes": 35, "proport": [35, 62, 88], "dn": [35, 113], "alpha": [35, 86, 104, 163], "beta_": 35, "beta": 35, "dm": 35, "alpha_": 35, "dh": 35, "schemat": 35, "sensor": [35, 114], "de": [35, 39, 40, 53, 143], "overshoot": 35, "toughest": 35, "embed": [35, 69, 77, 134, 150, 162, 170, 177], "reliabl": [35, 40, 42, 113, 117, 142, 143, 144, 150], "karl": 35, "deisseroth": 35, "clariti": [35, 121, 165, 179], "transpar": [35, 62, 88, 150], "coat": 35, "fly": [35, 40, 49, 66, 114], "aristotl": 35, "groundbreak": 35, "ambigu": [35, 168], "amir": 35, "amedi": 35, "hebrew": 35, "blind": [35, 57, 102], "sound": [35, 45, 49, 50, 57, 58, 64, 69, 76, 78, 93, 102, 133, 142, 176, 180], "car": [35, 45, 66, 163], "held": [35, 53, 104], "hein": 35, "reconstruct": [35, 45, 49], "cochlear": 35, "ear": 35, "vision": 35, "feed": [35, 86, 158], "colllater": 35, "cerebr": 35, "pyramidi": 35, "sea": 35, "aobut": 35, "strength": [35, 36, 39, 61, 76, 78, 99, 101, 103, 114, 177], "stronger": [35, 39, 151], "weaker": 35, "hebb": [35, 57], "hypothesi": [35, 99], "1949": 35, "repeatedli": [35, 39, 97, 112, 124, 167, 169], "metabol": 35, "hippocamp": 35, "transmitt": 35, "1990": [35, 58, 78, 102, 154, 166, 177], "stdp": 35, "ltp": 35, "lifetim": [35, 121, 146, 165, 169], "ltd": 35, "depress": [35, 146], "dan": 35, "poo": 35, "rat": [35, 147, 154], "2006": [35, 154, 166], "trend": [35, 69, 89, 142, 177], "downward": [35, 122, 146], "upward": [35, 86, 88], "40m": 35, "incident": [35, 39, 49, 67, 134, 160, 162, 171], "pavlov": 35, "bell": [35, 163, 166], "food": [35, 58, 120, 128, 179], "blurri": 35, "morpholog": 35, "1967": 35, "globu": 35, "scheibel": 35, "depriv": [35, 155], "rabbit": [35, 49, 92, 102], "densiti": [35, 88], "stabl": [35, 56, 64, 142, 167], "dead": [35, 79], "photon": 35, "adult": [35, 59, 86, 154, 163, 178], "persist": [35, 58, 61, 85, 129], "song": [35, 57, 79, 96], "bird": [35, 49], "male": [35, 59, 163], "sing": [35, 42], "mammal": [35, 114], "pasko": 35, "ravic": 35, "prenat": 35, "postnat": 35, "1997": 35, "elizabeth": 35, "gould": 35, "princeton": 35, "shrew": 35, "marmoset": 35, "monkei": 35, "primat": [35, 57, 58], "olfactori": 35, "tone": 35, "newborn": 35, "alzheim": 35, "rehab": 35, "stroke": [35, 166], "injuri": 35, "anecdot": 35, "taxi": [35, 99, 138, 160, 171], "driver": [35, 69, 103, 136, 138, 150, 160, 171], "musician": [35, 57], "trustworthi": 35, "stimul": 35, "emb": [35, 119, 162], "capbabl": 35, "ingredi": [35, 146], "implem": 35, "street": [35, 57, 179], "cup": 35, "distanc": [35, 45, 99, 122, 127, 138, 156, 160, 171], "ground": [35, 81, 122, 161, 168], "classic": [35, 36, 136, 163, 170], "pixel": 35, "pac": [35, 92], "laureat": 35, "hubel": 35, "wiesel": 35, "1981": 35, "paticular": 35, "occas": 35, "angl": [35, 41, 80, 85, 96], "cortext": 35, "vertic": [35, 62, 80, 85, 87, 88, 96, 170], "tune": [35, 77, 146], "strongest": [35, 99], "decompos": [35, 124], "influenti": 35, "imman": 35, "bet": [35, 163], "yep": 35, "veto": 35, "e1": 35, "OR": [35, 43, 101], "e2": 35, "AND": 35, "NOT": [35, 114, 124, 134, 168], "syaps": 35, "implic": 35, "conceptu": [35, 142], "rigor": 35, "misquot": 35, "him": [35, 45, 58, 85, 86, 99], "cannot": [35, 37, 42, 45, 53, 105, 112, 135, 138, 140, 169, 179], "meager": 35, "unsatisfactori": 35, "biophys": 35, "physiologicaql": 35, "essenc": 35, "hh": [35, 55], "ap": 35, "theoretician": 35, "anti": [35, 162], "theorist": 35, "young": [35, 86, 163, 178], "wilfrid": 35, "mentor": [35, 91], "impact": [35, 53, 56, 96, 121, 129, 136, 143, 144, 154, 163], "founder": [35, 142], "1964": 35, "oversimplifi": 35, "1959": 35, "isopotenti": 35, "delai": [35, 131], "somat": 35, "cylind": 35, "axial": 35, "delta": 35, "boundari": [35, 75, 121], "dimens": [35, 96, 99, 122, 142], "seal": 35, "escap": [35, 45, 72, 129, 140, 156, 162, 170, 175, 181], "assymetr": 35, "shallow": [35, 96, 126], "trunk": 35, "leaki": 35, "mayb": [35, 52, 53, 56, 72, 79, 80, 85, 102, 133, 135, 142, 143, 153, 163, 165, 180], "40": [35, 70, 80, 96, 104, 119, 122, 124, 138, 161, 169, 178], "subunit": 35, "territori": [35, 103, 106], "neighborhood": 35, "distal": 35, "notion": [35, 113, 181], "dissip": 35, "proxim": 35, "peak": [35, 43, 53], "width": [35, 52, 62, 88, 112, 119, 122, 152], "verifi": [35, 39, 53, 64, 82, 100, 106, 110, 142, 150, 160, 161, 171], "global": [35, 39, 50, 56, 69, 101, 106, 114, 121, 139, 143, 160, 163, 170, 175], "direction": 35, "auditori": 35, "sharpen": 35, "koch": 35, "poggio": 35, "inhibit": 35, "inibitori": 35, "bartlett": 35, "mel": 35, "operatrion": 35, "cluster": [35, 52, 68, 171], "taller": [35, 112], "photoreceptor": 35, "granular": [35, 83, 87, 116], "rodin": 35, "kiss": [35, 58], "brancusi": 35, "overli": [35, 101], "arthur": 35, "konnerth": 35, "munich": 35, "2010": [35, 113], "zoom": [35, 41, 45], "miracul": 35, "ganglion": 35, "bipolar": 35, "optic": 35, "senstiv": 35, "reihard": 35, "detector": 35, "assymetri": 35, "disprov": [35, 104], "kevan": 35, "martin": 35, "winfrid": 35, "denk": 35, "electrophysiologi": 35, "winfid": 35, "predecessor": 35, "verif": 35, "elementari": [35, 89, 163], "uniform": [35, 144], "inher": 35, "exploit": 35, "analogi": 35, "indiv": 35, "tight": 35, "mega": 35, "pysiologi": 35, "futurist": 35, "lausann": 35, "switzerland": 35, "disciplin": [35, 89, 163], "revolutionari": 35, "decod": [35, 45, 106, 127, 143], "diseaseom": 35, "560": 35, "neurolog": 35, "systemat": [35, 51, 57, 58, 163, 169], "worldwid": 35, "misbehav": [35, 43], "hagai": 35, "bergman": 35, "simmul": 35, "preserv": [35, 92], "henri": [35, 163], "markram": 35, "bb": 35, "supercomput": 35, "genom": 35, "processor": [35, 66, 70, 110, 142, 150], "peta": 35, "flop": 35, "sec": 35, "sexual": 35, "connot": 35, "assist": [35, 167], "intrins": [35, 58, 146], "labor": [35, 85], "intens": [35, 62, 142], "em": 35, "bam": [35, 50], "floresc": 35, "dye": 35, "mamalian": 35, "neurocortex": 35, "skull": 35, "deep": [35, 45, 68, 106, 162], "approx": 35, "stellar": 35, "denser": 35, "dens": [35, 130], "stellat": 35, "whisker": [35, 169], "barrel": [35, 163], "somato": 35, "align": [35, 41, 76, 137], "layout": [35, 87, 171], "bert": 35, "sakmann": 35, "nobl": 35, "exitatori": 35, "clai": 35, "reed": 35, "orientaion": 35, "axi": [35, 41, 42, 45, 62, 83, 87, 88, 96, 152], "cube": [35, 80], "properi": 35, "moo": 35, "ongo": [35, 91], "la": 35, "super": [35, 112, 113, 126, 179], "fiber": 35, "interlud": 35, "d8ntw7pgi": 35, "amsterdam": 35, "chunk": [35, 138], "epilept": 35, "patient": [35, 37, 75, 163], "physiologi": 35, "exaflop": 35, "estim": [35, 53, 62, 88, 151, 156], "2014": [35, 45, 68, 80], "supposedli": 35, "petaflop": 35, "bbp": 35, "simulationo": 35, "hbp": 35, "informat": 35, "neuroscop": 35, "neurorobot": 35, "neuromorph": 35, "chip": [35, 54, 68, 142], "ONE": 35, "europ": [35, 55, 110], "256": [35, 70, 104, 129], "114": 35, "countri": [35, 55, 57, 59, 70, 98, 113, 114, 128, 163], "ict": 35, "obtain": [35, 61, 82, 113, 126, 128, 129, 130], "cheapli": 35, "watt": 35, "neuroinformat": 35, "medic": [35, 69], "hpc": 35, "lide": 35, "lectur": [35, 80, 86, 163], "speaker": [35, 163, 176], "israel": 35, "nelken": 35, "emphasi": 35, "stori": [35, 40, 41, 53, 65, 78, 79, 119, 139, 147, 158, 163, 172, 177], "sensat": 35, "processs": 35, "david": [35, 51], "marr": 35, "2d": [35, 85, 88], "recov": [35, 79, 116, 146, 162], "latent": 35, "threat": 35, "music": [35, 57, 163], "chill": 35, "hair": 35, "mechano": 35, "depolarizt": 35, "sit": [35, 58, 139, 157], "basilar": 35, "corti": 35, "roof": 35, "copola": 35, "vibrat": 35, "cochlea": 35, "snail": [35, 158], "canal": 35, "tympan": 35, "eardrum": 35, "transfer": [35, 169], "tiniest": 35, "wave": [35, 58, 85, 89], "hermann": 35, "helmholtz": 35, "hz": 35, "amplitud": 35, "flatter": 35, "peizoelectr": 35, "summar": [35, 61, 68, 98, 110, 112, 118, 127, 138, 143, 163, 165, 171], "cue": [35, 58], "binaur": 35, "sin": [35, 84, 85, 88, 96, 162, 170], "louder": 35, "shadow": [35, 88], "interaur": 35, "itd": 35, "ild": 35, "mostli": [35, 40, 53, 103, 150, 175], "microsecond": [35, 55, 70, 113, 171], "hundreth": 35, "lock": [35, 66, 69, 101, 103, 120, 133, 150, 169], "incom": 35, "audio": [35, 58, 155], "nucleu": 35, "medial": 35, "superior": [35, 39, 68, 103, 142, 153, 158], "oliv": 35, "mso": 35, "nuclei": 35, "olivari": 35, "coincid": 35, "spatial": 35, "fidel": 35, "relai": 35, "smell": [35, 60, 121], "brainstem": 35, "bulb": 35, "barn": 35, "owl": 35, "prei": 35, "hunt": [35, 57, 73, 112, 172], "dusk": 35, "steo": 35, "azimuth": 35, "prism": [35, 107], "mamal": 35, "inferior": [35, 89], "colliculu": 35, "tectum": 35, "motor": 35, "socket": [35, 124, 129, 143], "sensitivti": 35, "correspend": 35, "icc": 35, "immateri": 35, "icx": 35, "converg": [35, 151], "regardless": [35, 61, 134], "station": 35, "ot": 35, "multimod": 35, "homolog": 35, "couldn": [35, 53, 61, 102, 136, 142, 143, 151, 163], "gutfreund": 35, "zheng": 35, "knudson": 35, "2002": [35, 55, 154], "flash": [35, 80, 114], "illus": 35, "latter": [35, 69, 104, 147, 150], "devianc": 35, "violat": [35, 110, 112, 168], "blood": 35, "beep": 35, "boop": 35, "eeg": 35, "mmn": 35, "evok": 35, "150": [35, 75, 81, 89, 100, 138, 152], "cadenc": 35, "anaesthet": 35, "rariti": 35, "elicit": 35, "border": 35, "melodi": 35, "rodent": 35, "discrimin": [35, 163], "irregular": 35, "anesthet": 35, "Such": [35, 49, 54, 92], "physiolog": 35, "phy": 35, "distinct": [35, 49, 100, 113, 116, 119, 134, 160, 168], "implicit": [35, 80, 85, 121], "roll": [35, 80, 144, 169], "reward": [35, 77], "punnish": 35, "arnold": 35, "unconsci": [35, 37], "damasio": 35, "bodili": 35, "adapt": [35, 43, 71, 113, 139], "secondari": [35, 161], "conserv": 35, "amygdala": 35, "fear": [35, 68, 102, 119, 135], "vta": 35, "midbrain": 35, "dopamin": [35, 58], "similarli": [35, 39, 45, 50, 53, 57, 58, 62, 70, 75, 85, 88, 103, 107, 128, 138, 152, 156, 158], "acumben": 35, "outcom": [35, 45, 53, 134], "sex": [35, 59, 160], "mamallian": 35, "zatorr": 35, "pet": [35, 49, 128], "mri": 35, "anterior": 35, "cingul": 35, "ventral": 35, "striatum": 35, "decreas": [35, 80, 129], "speech": 35, "grandmoth": 35, "textur": 35, "madelein": 35, "proust": 35, "passag": [35, 80, 160], "9th": 35, "neuroeth": 35, "augment": 35, "dissemin": 35, "mooc": 35, "frontier": 35, "acccess": 35, "franci": 35, "crick": 35, "claud": 35, "shannon": 35, "repair": 35, "emphas": [35, 37, 69, 87, 153], "transmiss": 35, "surviv": [35, 154, 160], "corresponsdsd": 35, "lack": [35, 59, 101, 103, 105, 112, 113, 121, 142, 162, 163, 172, 177, 180], "brighten": 35, "privaci": 35, "reproduc": [35, 39, 50, 61, 70, 72, 82, 85, 100, 101, 105, 144], "accuraci": 35, "social": [35, 57, 58, 89, 112, 147, 154, 156, 161, 163], "magnet": 35, "reson": 35, "belief": [35, 86, 163], "lie": [35, 167], "agrress": 35, "indirectli": [35, 85], "encod": [35, 45, 62, 127, 140, 144], "kawabata": 35, "zeki": 35, "paint": [35, 57, 58], "quantifi": 35, "dislik": 35, "orbit": [35, 163], "frontal": 35, "hemispher": 35, "avers": 35, "intest": 35, "england": [35, 113, 114, 122, 163], "Willful": 35, "monti": [35, 49], "willfulli": 35, "polygraph": 35, "fmri": 35, "succcess": 35, "calibr": 35, "extent": [35, 39, 52, 58, 62, 68, 69, 87, 100, 110, 113, 151, 156, 177], "transcrani": 35, "tm": [35, 43], "sack": 35, "markham": 35, "phinea": 35, "gage": 35, "patent": 35, "damag": 35, "vermont": [35, 122], "1848": 35, "rod": [35, 102], "pfc": 35, "thoma": [35, 163], "determinist": [35, 121, 144, 165], "automota": 35, "isaac": 35, "bashevi": 35, "singer": 35, "benjamin": 35, "libet": 35, "rotat": [35, 49, 130], "ball": [35, 72, 86, 137], "freeli": 35, "2000": 35, "subconsci": 35, "flex": 35, "wrist": 35, "causal": 35, "finger": [35, 58, 101, 158], "bend": 35, "irrelev": [35, 42, 163], "furthermor": [35, 39], "2009": 35, "pariet": 35, "lick": [35, 130], "lip": 35, "mouth": [35, 115], "premotor": 35, "wolf": 35, "planck": 35, "frankfort": 35, "2004": [35, 154], "crime": 35, "evid": [35, 69, 121], "abnorm": 35, "judg": 35, "incorrect": [35, 41, 116, 120], "dendrit": 36, "pleasur": 37, "2015": [37, 168], "abil": [37, 40, 56, 58, 61, 72, 74, 78, 99, 103, 109, 112, 127, 129, 131, 133, 136, 137, 138, 140, 143, 144, 160, 163, 169, 170, 171, 172, 177], "neonat": 37, "infant": 37, "prior": [37, 76, 113], "alert": [37, 75, 76, 124], "dreamer": 37, "veget": 37, "innat": 37, "vere": 37, "adaptationist": 37, "cultur": 37, "theme": [37, 40, 59, 67, 88, 107, 158, 168, 176], "compel": [37, 53, 104, 117], "surf": 38, "forum": 39, "clunki": [39, 51], "expens": [39, 53, 68, 75, 133, 150, 162], "symptom": 39, "decad": 39, "horrifi": 39, "jar": [39, 58], "maven": [39, 60], "gradl": 39, "ivi": 39, "muddi": [39, 48], "veteran": [39, 76, 153], "flush": [39, 81], "ceas": 39, "skinner": 39, "tanenbaum": 39, "anaconda": [39, 59, 70, 105], "successfulli": [39, 58, 75, 98, 100, 101, 106, 139, 143, 175], "conflict": [39, 43, 56, 75, 100, 101, 135], "unfair": [39, 142], "fight": [39, 101, 163, 176], "philosophi": [39, 68, 80, 89, 127], "swiss": [39, 103, 175], "armi": [39, 103, 175], "knife": [39, 103, 175], "unaccept": 39, "contrari": [39, 160, 174], "degrad": 39, "quirk": [39, 76, 112, 161], "python_vers": [39, 66, 135], "pain": [39, 75, 172, 180], "knew": [39, 53, 57, 58, 59, 72, 86, 117, 142, 157, 169, 176], "culprit": [39, 53], "preced": [39, 88, 169], "presum": [39, 67, 113, 168, 172], "zombi": [39, 156], "disgust": 39, "pyenv_root": [39, 66], "eval": [39, 45, 66], "0rc2": 39, "bullsey": [39, 61, 115], "hesit": [39, 57, 77, 150], "lover": [39, 129, 134], "appreci": [39, 82], "excerpt": 39, "virtualenv": [39, 101], "virtualenvwrapp": 39, "addition": [39, 88, 139, 162], "commonli": [39, 43, 62, 68, 69, 70, 77, 99, 100, 104, 114, 130, 134, 139, 142, 168, 175, 177, 179], "brows": [39, 40, 50, 150], "minor": [39, 48, 69, 71, 80, 85, 139, 157, 177], "disadvantag": [39, 42, 70, 77, 110, 150, 168], "destin": [39, 119], "obtus": [39, 132], "ensur": [39, 41, 43, 48, 49, 53, 61, 70, 74, 78, 88, 100, 101, 106, 111, 113, 116, 121, 122, 126, 138, 143, 161, 168, 171, 174], "deactiv": [39, 56, 135, 141], "elimin": [39, 48, 74, 158], "prereleas": 39, "unabl": [39, 67], "forg": [39, 138, 160, 171], "fail": [39, 40, 54, 60, 61, 68, 71, 106, 117, 121, 134, 139, 142, 158, 163, 168, 170, 175], "suppress": [39, 52, 61, 112, 143, 160, 162, 168], "commandnam": 39, "rich": [39, 70, 82, 110, 120, 133, 139, 140, 142, 165], "transit": [39, 70, 78, 99, 125], "dispos": 39, "distract": [39, 40, 58, 59, 158, 176], "screenshot": [39, 40, 60, 67, 68, 71, 72, 87, 98, 115, 116, 117, 143, 162, 168, 170], "intric": 39, "juptyerlab": 39, "opt": [39, 75, 100, 150], "homebrew": [39, 66], "caskroom": 39, "py310hf450f58_0": 39, "restor": [39, 81, 105, 133, 143, 167], "exact": [39, 43, 71, 86, 103, 112, 113, 117, 134, 139, 181], "condavalueerror": 39, "lengthi": [39, 45, 64, 73], "rc": 39, "conda_prefix": 39, "pushd": 39, "popd": 39, "facto": [39, 40], "typescript": [40, 94, 103, 105, 107, 181], "upvot": 40, "201": 40, "albeit": [40, 133, 143], "overengin": [40, 82], "spectacularli": 40, "romantic": 40, "brimston": 40, "wail": 40, "gnash": 40, "teeth": 40, "hell": 40, "stick": [40, 87, 104, 120, 138, 172], "findboost": 40, "find_packag": 40, "archiv": [40, 74, 113, 139, 150], "bootstrap": [40, 100, 150], "poorli": [40, 125, 168], "anxiou": 40, "dealbreak": 40, "vscode": [40, 43, 50, 51, 103, 116], "shortli": [40, 49, 85, 92, 103, 168], "palett": [40, 43, 50, 103, 168], "visibl": [40, 43, 62, 70, 85, 115, 124], "scene": [40, 54, 99, 112, 125, 135, 143, 171], "mount": 40, "f5": [40, 43, 167], "breakpoint": [40, 43, 150, 167], "spin": [40, 94, 103, 115, 176], "hoc": [40, 75, 127, 179], "floppi": [40, 78, 167], "apologi": [40, 112, 113], "uphil": 40, "devcontain": 40, "room": [40, 42, 58, 87, 132], "gcc": [40, 150], "defeat": 40, "newli": [40, 43], "forck": 40, "tmp": 40, "apt": [40, 61, 67, 115, 150, 162], "debian_frontend": 40, "noninteract": 40, "uncom": [40, 97], "vcpkg": 40, "su": 40, "vcpkg_root": 40, "forwardport": 40, "postcreatecommand": 40, "cpptool": 40, "remoteus": 40, "registry_nam": 40, "your_account_nam": 40, "fork": [40, 43, 71, 182], "cpu": [40, 67, 69, 118, 124, 177], "habit": [40, 76, 89, 146, 155, 157, 158], "inact": 40, "pan": 41, "briefli": [41, 43, 48, 59, 64, 66, 67, 69, 86, 99, 100, 101, 106, 127, 130, 133, 134, 139, 162, 163, 165, 173], "shortag": 41, "matplotib": 41, "mainstream": [41, 175, 181], "superset": [41, 77, 88, 133, 169], "widget": [41, 116, 142], "chart": [41, 70, 74, 78, 87, 88, 89, 179], "slider": 41, "mediat": 41, "payload": 41, "bokeh": 41, "vega": 41, "altair": 41, "plotli": [41, 81], "dash": [41, 65, 140], "enterpris": 41, "jupyterdash": 41, "primetim": 41, "ipympl": 41, "labextens": 41, "plane": [41, 118], "vector_1": 41, "aco": 41, "pi": [41, 67, 80, 84, 85, 96, 119], "vector_2": 41, "geometr": [41, 84, 85, 102], "magnitud": [41, 45, 53, 70, 96, 102, 106, 124, 129, 142], "get_label": 41, "which_vector": 41, "plot_lin": 41, "drawn": [41, 49, 88, 151], "xytext": 41, "xy": 41, "arrowprop": 41, "get_color": 41, "arrowstyl": 41, "configure_graph_grid": [41, 83, 87], "grid_min": [41, 81, 83, 87], "grid_max": [41, 81, 83, 87], "line_1": 41, "line_2": 41, "get_titl": 41, "concaten": [41, 96, 119, 137, 140], "14": [41, 45, 49, 53, 55, 57, 61, 75, 80, 81, 96, 113, 115, 119, 128, 138, 140, 168, 171], "marker": [41, 88, 175], "rectangl": [41, 49, 62, 88, 112, 122], "triangl": [41, 80, 85], "resiz": [41, 49], "expos": [41, 45, 49, 77, 97, 115, 116, 124, 129, 130, 161, 163, 168], "synonym": [41, 92, 116], "itch": [41, 59], "vector_angl": 41, "vectors_to_datafram": 41, "vector1": 41, "vector2": 41, "radian": [41, 85, 96], "linalg": [41, 96, 130, 142, 151], "round": [41, 45, 68, 88, 96, 98, 102, 112, 119, 129, 134, 137, 143, 144, 152, 160], "consolid": [41, 45], "do_upd": 41, "intereract": 41, "redraw": 41, "clf": 41, "handle_ev": 41, "v1_x": 41, "v1_y": 41, "v2_x": 41, "v2_y": 41, "repack": 41, "slider_config": 41, "intslid": 41, "slider_control": 41, "award": 41, "unus": [41, 61], "repackag": 41, "formerli": [41, 177], "35": [41, 75, 155], "37": [41, 43, 55, 138], "lat": [41, 42], "float": [41, 43, 45, 49, 53, 54, 67, 70, 98, 102, 110, 112, 113, 119, 122, 127, 129, 134, 140, 143, 144, 151, 152, 160, 168], "cosin": [41, 88, 96], "norm1": 41, "norm2": 41, "cuemath": 41, "cos_of_angl": 41, "elif": [41, 117, 122, 139, 179], "availbl": [41, 143], "figsiz": [41, 62, 83, 87, 88, 144], "workaround": [41, 75, 133, 163], "cleans": 42, "scrub": 42, "identifi": [42, 49, 52, 57, 74, 112, 113, 115, 116, 121, 143, 144, 147, 158, 163, 168], "hous": [42, 59, 163, 173, 175], "dushanb": 42, "floor": [42, 134], "dushanbe_hous": 42, "trust": [42, 51, 58, 85, 162], "5579": 42, "unnam": [42, 120, 165], "data1": [42, 81], "drope": 42, "inplac": [42, 62], "del": [42, 54, 140, 174], "data2": [42, 81], "ramg": 42, "df": [42, 55, 70, 74, 75, 96, 98, 99, 152, 171], "df1": 42, "5000000": [42, 53], "reset": [42, 73, 98, 143, 144, 157], "number_of_room": 42, "latitud": 42, "longitud": 42, "set_axi": 42, "lon": 42, "isnul": [42, 62], "1849": 42, "int64": [42, 70, 75, 96, 99, 138], "notnul": 42, "3730": 42, "panada": 42, "fillna": 42, "nupmi": 42, "to_replac": 42, "nan": [42, 87], "dropna": [42, 70], "immut": [42, 45, 112, 114, 121, 129, 138, 140], "set_index": [42, 75], "109": 42, "3732": 42, "1139": 42, "unusu": [42, 106, 161], "azia": 42, "bahir": 42, "erlan": 42, "marri": 42, "le": [42, 91], "strip": [42, 140], "iat": 42, "regex": 42, "aim": [43, 75, 103, 110, 174], "debugg": [43, 68, 72, 76, 89, 94, 133, 150, 180], "zip": [43, 54, 61, 74, 106, 117, 139, 169, 170, 175], "microsoft": [43, 65, 66, 80, 103, 142, 150, 177], "marketplac": [43, 103], "workspac": 43, "dismiss": [43, 163], "session": [43, 58, 73, 76, 97, 143, 161, 167], "perfect_math": 43, "somebodi": 43, "nemesi": [43, 120], "brad": 43, "bumblekei": 43, "architect": 43, "certifi": 43, "copyright": 43, "bradlei": 43, "robust": [43, 88, 99, 100, 139, 142, 143, 165], "unlimit": [43, 169], "is_numb": 43, "isinst": [43, 127], "get_numbers_from_dictionari": 43, "dct": [43, 127], "tupl": [43, 45, 54, 96, 102, 112, 114, 118, 124, 126, 128, 134, 139, 165, 169, 170], "test_get_numbers_from_dictionari": 43, "printout": [43, 49], "bond": 43, "agent": 43, "jame": [43, 58], "agent_numb": 43, "__name__": [43, 45, 53, 61, 106, 139, 161], "__main__": [43, 45, 53, 106, 112, 139, 161], "paid": [43, 59, 71, 97, 103, 125, 133, 142, 163, 180], "submit": [43, 60, 61, 79, 107], "upper": [43, 72, 88, 106, 122, 126, 128, 130, 138, 140, 144, 150, 167], "fashion": [43, 45, 75, 153, 179], "decim": [43, 76, 96, 134, 137, 140, 143, 165], "girlfriends_per_episod": 43, "shaken_not_stir": 43, "ppk_calib": 43, "380": 43, "rerun": [43, 167], "alright": [43, 52, 113, 163], "shouldn": [43, 52, 53, 86, 89, 106, 112, 114, 116, 143, 144], "f9": 43, "ON": [43, 139, 161], "faint": [43, 132], "toolbar": 43, "hover": [43, 53, 65, 115, 150, 168], "f10": 43, "Into": [43, 167], "f11": 43, "caller": [43, 106, 116, 120, 121, 143, 165], "restart": [43, 61, 64, 73, 142], "cursor": [43, 142, 143], "temporarili": [43, 106], "narrow": [43, 56, 70, 103, 113, 121, 127, 143, 170], "uncaught": 43, "neatli": [43, 161, 162, 170], "blank": [43, 50, 97, 112, 119, 150], "usr": [43, 66, 100], "ging": 43, "pythonfil": 43, "debugpi": 43, "52437": 43, "johnl": 43, "ockwood": 43, "frozen": [43, 112, 117, 169], "envirom": 43, "newlin": [43, 170], "intellisens": [43, 103, 150], "visit": [43, 52, 61, 71, 93, 150, 155, 158, 178], "fwlink": [43, 150], "linkid": [43, 150], "830387": [43, 150], "integratedtermin": 43, "justmycod": 43, "internalconsol": 43, "internalconsoleopt": 43, "openonsessionstart": 43, "inconsist": [43, 70, 109, 127, 177], "island": [43, 113, 114, 122, 163], "misfit": 43, "jetbrain": [43, 72, 103, 133, 153], "subscript": [43, 121], "whet": [43, 68], "appetit": [43, 68, 120], "vanilla": [43, 67, 68, 113, 139, 142, 162], "02": [43, 55, 61, 70, 81, 100, 138], "spirit": [44, 45, 49, 121, 125], "driveinfo": 44, "slip": [44, 45, 158], "directoryinfoexampl": 44, "void": [44, 126, 172], "arg": [44, 115, 123, 139, 150], "writelin": 44, "dilist": 44, "foreach": [44, 124], "di": [44, 112, 168], "getdirectori": 44, "fullnam": 44, "fileinfo": [44, 97], "fi": [44, 150], "getfil": 44, "ncreat": 44, "nlength": 44, "creationtim": 44, "readkei": 44, "glad": 45, "beautifulli": 45, "claim": [45, 53, 57, 69, 77, 89, 101, 104, 126, 142, 151, 166, 171], "__init__": [45, 48, 49, 53, 60, 75, 112, 117, 122, 124, 127, 129, 135, 143, 161, 174, 175], "abracadabra": 45, "unburden": 45, "pointer": 45, "javaspeak": 45, "burden": 45, "misfortun": 45, "underbar": [45, 49, 76, 112, 114], "gatewai": [45, 163], "inner": [45, 96, 99, 130, 169], "0x110fb0af0": 45, "paradox": [45, 86], "beautifi": 45, "readabl": [45, 49, 53, 68, 69, 75, 77, 80, 118, 119, 127, 129, 138, 139, 152, 160, 165], "needn": [45, 99], "secondli": [45, 49, 58, 67, 100, 103, 110, 111, 114, 116, 121, 124, 136, 139, 161, 177], "points_list": 45, "points_dict": 45, "marti": 45, "mathmajor": 45, "unimpress": 45, "clamor": 45, "q": [45, 61, 96, 115, 130, 160], "subtract": [45, 55, 96, 124, 134], "__sub__": 45, "proud": [45, 79], "excitedli": 45, "pandem": [45, 70], "mildli": 45, "oddbal": 45, "pour": 45, "incid": 45, "mr": 45, "chagnon": 45, "11th": [45, 155], "pythagorean": [45, 80], "theorem": [45, 80, 85], "__len__": 45, "hypotenus": 45, "jot": [45, 58], "sqrt": [45, 85, 142, 162], "distance_from_origin": 45, "obscur": 45, "imaginari": [45, 119, 144], "firm": [45, 107, 130], "__add__": [45, 49], "__mul__": 45, "__div__": 45, "__eq__": [45, 48, 54, 76, 161, 169], "nd": [45, 130], "__ne__": 45, "weird": [45, 53, 69, 102, 126, 143, 170, 174], "__hash__": [45, 48, 112, 114, 169], "hashabl": [45, 114, 169], "hash": [45, 48, 73, 101, 112, 114, 169], "hypermegagiantcarsal": 45, "6300": 45, "toyota": 45, "cruiser": 45, "274117": 45, "black": [45, 85, 163], "2899": 45, "ford": [45, 163], "se": [45, 54, 71, 80, 110, 163, 170], "2011": [45, 113], "190552": 45, "silver": 45, "5350": 45, "dodg": 45, "mpv": 45, "2018": [45, 59], "39590": 45, "25000": 45, "64146": 45, "blue": [45, 88], "namedtupl": [45, 76], "carlist": 45, "tuple_nam": 45, "brand": [45, 58, 66, 68, 75, 93, 103, 106, 137, 150, 163], "mileag": [45, 166, 177], "tuple_class": 45, "__iter__": [45, 124], "list_iter": 45, "__next__": [45, 124], "redun": 45, "stopiter": [45, 124], "exhaust": [45, 96, 104, 124, 137], "unpack": [45, 112, 114, 127, 169], "car_tupl": 45, "nerd": [45, 56, 59, 85, 133], "__dunder__": 45, "__doc__": 45, "docstr": [45, 53, 112, 116, 123, 140, 162, 168, 179], "inspect": [45, 82, 87, 88, 168], "explore_dund": 45, "033": 45, "1m": 45, "0m": 45, "any_var": 45, "dir_list": 45, "__": [45, 171], "endswith": 45, "__getattribute__": 45, "ansi": [45, 113], "necessarili": [45, 121, 127, 137, 179], "__class__": 45, "bytes_or_buff": 45, "buffer": [45, 124], "repr": [45, 96, 112, 113, 179], "sy": [45, 60, 68, 110, 124, 135, 138, 139, 175], "getdefaultencod": 45, "strict": [45, 54, 116, 155, 175], "__contains__": 45, "__delattr__": 45, "delattr": 45, "__dir__": 45, "__format__": 45, "format_spec": 45, "__ge__": [45, 54, 112], "getattr": 45, "__getitem__": 45, "__getnewargs__": 45, "__gt__": [45, 112], "accur": [45, 53, 143, 163], "__init_subclass__": 45, "subclass": [45, 49, 144, 161], "overridden": [45, 49, 169], "__le__": [45, 112], "__lt__": [45, 54, 112], "__mod__": 45, "__new__": 45, "__reduce__": 45, "pickl": 45, "__reduce_ex__": 45, "__rmod__": 45, "__rmul__": 45, "__setattr__": 45, "setattr": 45, "__sizeof__": 45, "__subclasshook__": 45, "issubclass": 45, "abcmeta": 45, "__subclasscheck__": 45, "notimpl": 45, "cach": [45, 59, 69, 70, 75, 115, 124, 136], "entiti": [46, 84, 85, 131, 133, 161], "pprint": [46, 52, 110, 127, 175], "puzzler": 46, "poll": [46, 118], "messi": [48, 62, 66, 121], "analyst": 48, "contend": [48, 163, 177], "dive": [48, 49, 52, 59, 76, 86, 112, 119, 124, 130, 139, 152], "guarante": [48, 102, 112, 128, 130, 143, 144], "gold": [48, 121, 179], "medal": [48, 163], "game": [48, 58, 77, 79, 121, 144, 155, 156, 162, 165], "get_unique_el": 48, "too_much_chees": 48, "chees": [48, 112, 179], "pizza": 48, "chicken": [48, 130, 169], "grape": 48, "fromkei": 48, "ordereddict": 48, "get_unique_elements_ord": 48, "unique_ord": 48, "eturn": 48, "__repr__": [48, 49, 76, 113, 127, 161, 168, 171], "melissa": 48, "9193612495": 48, "jon": 48, "5083412318": 48, "ida": 48, "7043756942": 48, "intermedi": [48, 80, 153, 165, 174, 175], "a_dict": [48, 169], "a_set": 48, "sale": [48, 79, 119, 121, 125, 165], "oubl": 48, "score": [48, 52, 58, 72, 75, 80, 86, 114, 119, 163, 178], "track": [48, 49, 51, 58, 78, 96, 101, 113, 118, 167, 177], "hashtabl": [48, 114, 169], "counter": [48, 76, 114, 124, 127, 169], "demo": [48, 52, 71, 72, 79, 92, 106, 113, 117, 120, 124, 129, 139, 141, 142, 143, 144, 175], "father": 48, "wood": [48, 86], "woodchuck": 48, "chuck": 48, "split": [48, 68, 96, 114, 124, 126, 128, 139, 140, 165, 169, 170, 175], "squirrel": 48, "punctuat": [48, 114, 120, 144], "bigger": [48, 61], "terminologi": [49, 61, 175], "cooki": 49, "cutter": 49, "christma": [49, 76, 119], "dog": [49, 58, 118, 140, 169], "fritz": 49, "smokei": 49, "convent": [49, 60, 70, 99, 109, 110, 120, 121, 127, 130, 142, 168, 169], "convention": 49, "member": [49, 57, 112, 127, 128, 143, 158, 169], "interview": [49, 69, 79, 122, 126, 134, 137, 180], "encapsul": [49, 61, 68, 121, 124], "bundl": [49, 61, 70, 100], "subtyp": [49, 81], "polymorph": 49, "fanci": [49, 58, 63, 121, 163, 178], "enforc": [49, 66, 71, 79, 120, 122, 168, 179, 181], "dry": [49, 112], "deceas": 49, "parrot": [49, 54, 128, 169], "sketch": 49, "elips": 49, "canva": 49, "orang": 49, "fruit": [49, 118, 146, 162, 177], "child": [49, 163, 179], "edibl": 49, "concret": [49, 117, 120, 169], "hop": [49, 70], "pit": 49, "bull": 49, "fluffi": 49, "enclos": [49, 78, 119, 124, 126, 140], "parent_class_nam": 49, "other_paramet": 49, "poor": [49, 72, 75, 85, 98, 99, 112, 114, 116], "bunni": 49, "overus": 49, "flip": [49, 102, 112, 134, 161, 169], "ini": [49, 110], "xml": [49, 172], "admittedli": [49, 53, 79, 99, 103, 106, 129, 142], "borderlin": 49, "composit": [49, 102], "email": [49, 52, 79, 112, 116, 121, 135, 158], "first_nam": [49, 127, 169], "last_nam": [49, 169], "las_nam": 49, "ben": 49, "franklin": 49, "postmast": 49, "usp": 49, "achiev": [49, 54, 61, 74, 82, 88, 89, 163, 177], "emailaddress": 49, "husband": 49, "wive": 49, "is_confirm": 49, "__str__": [49, 76, 112, 113, 119, 168], "lockwood": [49, 112, 114, 127], "pitfal": 49, "tempt": [49, 69, 121, 127, 151, 163], "wrapper": [49, 92, 106, 107, 129, 144, 175, 177], "eat": [49, 120, 139], "assumpt": 49, "abstractmethod": 49, "typeerror": [49, 96, 116, 120, 127, 129, 140, 161, 179], "cake": [49, 139], "snooz": 49, "tweeti": 49, "sugar": 49, "clearer": 49, "spot": [49, 85, 142, 177, 182], "rewrit": [49, 53, 118, 120, 134, 150], "hierarchi": [49, 50, 66, 116, 179], "thirsti": 49, "classmethod": [49, 127], "staticmethod": [49, 127], "gang": 49, "luciano": [49, 168], "ramalho": [49, 168], "fluent": [49, 54, 168], "gtd": 50, "smart": [50, 53, 162], "fridai": [50, 80, 119], "lookup": [50, 53, 76, 113, 114, 139, 143, 169], "coolest": [50, 70], "instantli": [50, 103], "inbox": 50, "wiki": [50, 61, 78, 168], "hit": [50, 58, 66, 86, 100, 116, 122], "hashtag": [50, 58, 166], "silli": 50, "backlink": 50, "interconnect": 50, "dismal": 50, "vault": 50, "prudent": 50, "calendar": 50, "appoint": 50, "daili": [50, 58, 80, 103, 166], "breaker": 50, "salespeopl": 50, "schema": [50, 75, 95, 110, 138], "hierarch": [50, 93, 138], "rough": [50, 80], "dedic": [50, 76, 87, 119], "exacerb": [51, 139, 163], "tenet": 51, "scatter": [51, 144], "trello": 51, "haphazard": 51, "bore": [51, 58], "reorgan": 51, "todo": [51, 106, 114], "metadata": [51, 110, 135, 161], "openpyxl": [52, 138], "xlx": 52, "gspread_datafram": 52, "worksheet": [52, 99], "upload": [52, 74, 97, 106, 135], "employe": [52, 89, 112], "hurdl": [52, 151], "throw": [52, 70, 71, 89, 113, 116, 122, 134, 138, 139, 165, 179], "loyal": 52, "fanboi": [52, 68, 133], "somedai": [52, 78, 153], "sorri": [52, 68, 93, 115, 116, 131, 134, 140, 143], "spread": [52, 120, 169], "authent": [52, 68, 73, 78], "gcp": 52, "googlesheetsaccess": 52, "quidditch": 52, "service_account": 52, "appdata": 52, "clipboard": [52, 106, 107], "pp": [52, 80], "gc": 52, "sh": [52, 61, 115, 150], "analyticssnapshot": [52, 99], "s_rang": 52, "a1": 52, "d4": 52, "1800": 52, "280": [52, 142], "542": 52, "1700": 52, "298": [52, 53], "470": 52, "47": [52, 53, 106], "2534": 52, "436": 52, "481": 52, "19": [52, 70, 73, 80, 82, 96, 99, 112, 113, 134, 138, 140, 162], "rjust": 52, "unlink": 52, "range_copi": 52, "new_worksheet": 52, "add_worksheet": 52, "b1": [52, 129], "c1": [52, 85], "entrant": [52, 61, 124, 161, 169], "okai": [52, 64, 65], "get_as_datafram": 52, "set_with_datafram": 52, "worksheet_titl": 52, "worksheetnotfound": 52, "df_test": 52, "64": [52, 53, 66, 81, 82, 96, 118, 139, 178], "df_read": 52, "usecol": 52, "nrow": 52, "skiprow": 52, "include_column_head": 52, "casual": 52, "offic": [52, 58, 86], "moot": [52, 91, 133], "oner": [52, 151], "pleas": [53, 61, 70, 91, 105, 106, 112, 113, 119, 124, 142, 143, 145, 158, 159], "alloc": [53, 70, 129, 143], "viewer": [53, 127], "dictum": 53, "prematur": 53, "evil": [53, 163], "bottleneck": [53, 69], "lifecycl": [53, 61, 169], "convinc": [53, 153, 163], "coars": 53, "bench": [53, 97], "deduc": [53, 88], "crunch": 53, "likewis": [53, 77, 100], "exagger": 53, "cryptocurr": 53, "fry": 53, "egg": [53, 120], "gpu": [53, 68, 69, 100, 177], "dmv": 53, "imagin": [53, 58, 65, 102, 112, 114, 118, 120, 129, 137, 139, 151, 156, 169, 176], "paperwork": 53, "codebas": [53, 66, 69, 119, 121, 143], "ineffici": [53, 119, 138], "states_list": 53, "alabama": 53, "alaska": 53, "ak": 53, "list_lookup": 53, "state_nam": 53, "states_dct": 53, "dict_lookup": 53, "test_lookup": 53, "code1": 53, "code2": 53, "stare": 53, "bump": [53, 95, 119, 124, 135, 162], "contriv": [53, 116, 142, 161], "slowdown": [53, 129], "impos": 53, "overhead": [53, 69, 104, 116, 153, 168], "pstat": 53, "cumul": [53, 58, 86, 163], "200000": 53, "descend": [53, 96, 99], "ncall": [53, 70], "tottim": 53, "percal": 53, "cumtim": 53, "lineno": [53, 81], "breakdown": [53, 103], "384": 53, "019": 53, "027": 53, "troublesom": [53, 110, 121], "cleaner": 53, "sortkei": 53, "pr": 53, "stat": 53, "sort_stat": 53, "strip_dir": 53, "print_stat": 53, "compris": 53, "108": [53, 80, 129, 144], "uninterest": 53, "nearli": [53, 85, 126], "programmat": [53, 75, 117], "york": [53, 163], "nsec": 53, "500000": 53, "573": 53, "result_long": 53, "stmt": [53, 129], "result_short": 53, "2f": [53, 75, 119, 134], "subtli": 53, "downsid": [53, 75, 103, 120, 139, 155, 170], "instrument": [53, 57, 163], "lprof": 53, "unwieldi": [53, 68, 75], "load_ext": [53, 112, 160, 168], "10_000_000": 53, "039": 53, "029": 53, "010": 53, "038": 53, "builtin": [53, 67], "_lsprof": 53, "718": [53, 142], "411": 53, "260": 53, "listcomp": 53, "047": 53, "convers": [53, 55, 75, 110, 129, 138, 140, 160, 163, 168], "n64": 53, "drag": [53, 70], "freed": [53, 143], "garbag": [53, 69, 77, 168], "collector": [53, 77], "asymmetr": 53, "dealloc": [53, 143], "memoryeat": 53, "big_list": 53, "make_arrai": 53, "big_arrai": 53, "delete_arrai": 53, "delete_list": 53, "use_memori": 53, "memory_demo": 53, "892": 53, "mib": 53, "increment": [53, 87, 106, 114, 143, 144, 168, 169], "306": 53, "967": 53, "76": [53, 114, 142], "584": 53, "84": [53, 86, 124, 144, 163, 178], "382": 53, "unclear": [53, 79, 104, 112, 121, 127, 128, 165, 169], "mpru": 53, "attest": 53, "offend": [53, 102, 138], "flag": [53, 97], "poke": 53, "scrun": 53, "puzzl": [53, 57, 58, 72, 80, 130, 170], "same_str": 54, "same_numb": 54, "same_boolean": 54, "pig": 54, "canari": 54, "favorite_websit": 54, "same_dictionari": 54, "key_ad": 54, "key_remov": 54, "value_chang": 54, "type_chang": 54, "type_aware_equ": 54, "d1": 54, "d2": 54, "favorite_food": 54, "chilli": 54, "list_copi": 54, "foods_as_set": 54, "second_set": 54, "tuple1": 54, "tuple2": 54, "array1": 54, "array_copi": 54, "ubiquit": [54, 127, 138, 163, 177, 181], "functool": [54, 81], "total_ord": 54, "arithmet": [55, 143, 177], "strptime": 55, "date_str": [55, 113, 134], "valueerror": [55, 179], "dd": 55, "yyyi": 55, "directivemeaningreturn": 55, "aabbrevi": 55, "weekdayssun": 55, "mon": 55, "sat": [55, 80, 100], "aful": 55, "weekdayssundai": 55, "mondai": [55, 80, 92, 113, 119], "saturdai": [55, 80, 113, 119], "wweekdai": 55, "sundai": [55, 80, 119], "saturday0": 55, "ddai": 55, "pad": [55, 113, 163], "numbers01": 55, "babbrevi": 55, "monthsjan": 55, "feb": [55, 99, 113], "dec": [55, 80, 165], "bfull": 55, "monthsjanuari": 55, "mmonth": 55, "yyear": 55, "numbers00": 55, "99": [55, 59, 65, 70, 89, 98, 114, 122, 128, 129, 140, 163, 179], "numbers0001": 55, "0002": 55, "0003": 55, "9998": 55, "9999": [55, 113], "hhour": 55, "ihour": 55, "pthe": 55, "pmam": 55, "mminut": 55, "ssecond": 55, "fmicrosecond": 55, "numbers000000": 55, "000002": 55, "999999": 55, "zutc": 55, "offset": [55, 76, 88, 142], "hhmm": 55, "ss": 55, "ffffff": 55, "0000": 55, "0400": 55, "1030": [55, 113], "063415": 55, "030712": 55, "345216": 55, "ztime": 55, "nameutc": 55, "gmt": 55, "jdai": 55, "numbers001": 55, "003": 55, "365": [55, 80], "366": 55, "uweek": 55, "week00": 55, "wweek": 55, "cdate": 55, "representationmon": 55, "jun": 55, "xdate": 55, "representation01": 55, "0201": 55, "200214": 55, "xtime": 55, "representation21": 55, "date_obj": 55, "ncurrent": 55, "pytz": [55, 101], "berlin": 55, "timezon": [55, 110, 113], "datetime_berlin": 55, "all_timezon": 55, "contin": [55, 70, 98], "date_todai": 55, "textual": 55, "strftime": 55, "weekdai": [55, 119], "time_now": 55, "ntime": 55, "to_datetim": 55, "frame": [55, 58, 62, 69, 88, 98, 99, 138, 152, 160, 166, 171], "from_dict": 55, "alex": [55, 140], "mia": 55, "bena": 55, "birthdai": [55, 113, 131], "1975": 55, "2005": [55, 177], "07": [55, 75, 106, 113], "uk": 55, "kg": 55, "kz": 55, "datefram": 55, "timedelta": [55, 76, 110], "_get_valu": 55, "date1": 55, "date2": 55, "parser": [55, 70, 110, 116, 132, 139, 170], "dates_list": 55, "243860": 55, "nov": 55, "40am": 55, "septemb": 55, "2007": 55, "sun": [55, 59, 80], "1998": 55, "30pm": 55, "08": [55, 110, 113], "586525": 55, "tuesdai": [55, 80, 92, 113, 119], "6th": 55, "13t20": 55, "45": [55, 99, 113], "25z": 55, "to_timezon": 55, "tzinfo": [55, 110, 113], "america": [55, 113], "new_york": 55, "x_float": 55, "x_int": 55, "intig": 55, "x_str": 55, "entrench": [56, 58, 120], "hat": [56, 86, 135], "heavyweight": [56, 72], "internet": [56, 57, 58, 70, 77, 78, 113, 132, 154, 163], "exchang": 56, "bloatwar": 56, "lightweight": [56, 61, 68, 72, 103, 150, 153], "bloat": 56, "grep": 56, "miniconda2": 56, "miniconda3": 56, "revis": [56, 152, 160], "datasci": [56, 59], "cleanli": 56, "freedom": [56, 58, 163], "tradit": [56, 58, 72, 76, 89, 97, 101, 120, 163, 170], "outlet": [57, 125], "disneyland": 57, "woodwork": 57, "broadli": [57, 125, 150, 175, 177], "stock": 57, "trader": 57, "wall": [57, 109, 124, 176], "mad": [57, 125], "grand": [57, 179], "passion": 57, "heaven": 57, "trumpet": 57, "miser": 57, "boom": 57, "buck": 57, "unsur": [57, 114, 182], "invest": [57, 61, 77, 79, 139, 163, 181], "spare": 57, "crash": [57, 58, 59, 124, 142], "zell": 57, "affili": [57, 163], "meati": 57, "hone": [57, 58], "cute": [57, 79], "pathwai": 57, "repetit": [57, 59, 140], "catchi": 57, "mom": [57, 89, 163, 168, 179], "indulg": [57, 89, 178], "curios": [57, 58, 104, 124], "unstick": 57, "spoken": 57, "agricultur": 57, "splice": 57, "tablet": [57, 155], "golf": [57, 86], "underwat": 57, "capac": [57, 146], "sustain": [57, 154, 163], "foundat": [57, 72, 76, 77, 163], "solitari": 57, "speci": [57, 62, 88, 99, 152], "craft": [57, 70, 79, 103], "allei": 57, "volunt": 57, "shout": [58, 68], "writer": [58, 92, 134], "blame": [58, 59, 69, 135], "cold": [58, 89], "treadmil": 58, "debt": 58, "undertook": 58, "georg": [58, 112, 113], "flub": 58, "sentenc": [58, 128, 169, 170], "cia": 58, "director": [58, 122], "heard": [58, 70, 85, 121, 142, 158, 163, 177], "wooli": 58, "mammoth": 58, "roam": 58, "quiet": [58, 74, 86, 162], "portabl": [58, 100, 139, 142], "lunch": [58, 120], "alien": [58, 86, 156], "troubleshoot": [58, 61, 69, 116, 117, 121, 139, 150, 167], "spyder": [58, 72, 142], "risk": [58, 104, 120, 147, 155, 158], "weigh": [58, 75, 116, 132], "establish": [58, 68, 78, 100, 101, 125, 135, 158], "tie": 58, "breakfast": [58, 120], "morn": [58, 92, 99, 140, 156], "___": [58, 171], "night": [58, 96, 116, 158, 179], "woke": 58, "fuzzi": [58, 89, 102], "stupid": 58, "tough": [58, 70, 163, 175], "danc": 58, "gym": 58, "strive": [58, 175], "chocol": 58, "mileston": 58, "yesterdai": [58, 80], "chimpanze": 58, "tremend": 58, "stingi": 58, "harsher": 58, "shini": [58, 163, 178], "baubl": 58, "attitud": [58, 125, 158, 163], "sake": [58, 130, 142, 163], "distast": 58, "prerequisit": [58, 106, 163], "march": [58, 82], "park": [58, 86, 147], "feet": [58, 163, 166], "agreement": [58, 64, 72], "stoic": 58, "greek": 58, "darn": [58, 85], "dessert": [58, 59], "satisfi": [58, 71, 72, 75, 87, 96, 124, 152], "tap": 58, "gear": [58, 150, 160], "freshen": 59, "octav": [59, 151, 162], "fellow": [59, 114, 155], "wrangl": [59, 99, 138], "jake": 59, "vanderpla": 59, "rung": 59, "caffein": 59, "diner": 59, "to_html": 59, "total_bil": 59, "smoker": 59, "femal": 59, "dinner": [59, 120, 130], "66": [59, 130], "61": [59, 98], "244": [59, 142], "set_them": 59, "relplot": 59, "hue": [59, 88], "get_dataset_nam": [59, 160], "searchabl": 59, "curat": [59, 131], "nation": [59, 113, 181], "gov": 59, "feder": 59, "overwhelm": 59, "superhero": 59, "comfort": [59, 77, 78, 88, 110, 163], "merg": [59, 78, 98, 161], "pensk": 59, "truck": 59, "apart": [59, 80, 118], "intricaci": 59, "former": [60, 155], "struggl": [60, 111, 163, 166], "mypackag": 60, "greeter": 60, "testabl": [60, 121], "test_greet": [60, 135], "myapp": 60, "test_greeter_returns_hello_world_if_no_name_provid": 60, "test_greeter_returns_hello_name_if_name_provid": 60, "plenti": [60, 85, 86, 87, 125, 163, 177], "exclam": [60, 120, 139], "boil": [60, 69, 71, 77, 101, 103, 113, 119, 122, 123, 143, 177, 180], "modulenotfounderror": [60, 76, 111], "pythonpath": [60, 175], "gem": [60, 82, 139], "idiomat": [60, 124], "lift": 60, "pen": 60, "retrospect": [60, 78, 155], "blinder": 60, "wear": [60, 86], "deploy": [61, 71, 105], "daemon": [61, 169], "premis": [61, 68], "acknowledg": [61, 139, 179], "microservic": 61, "orchestr": [61, 68], "en": [61, 168], "cloud_native_comput": 61, "dividend": 61, "impati": 61, "desktop": [61, 64, 113, 142, 177], "sudo": 61, "hub": 61, "image_nam": 61, "slim": [61, 100, 106, 115], "buster": 61, "alpine3": 61, "flaskapp": 61, "flask_main": 61, "h1": [61, 107], "useradd": 61, "myuser": 61, "chown": 61, "flask_app": 61, "flask_run_port": 61, "flask_run_host": 61, "some_packag": 61, "sad": 61, "hexadecim": [61, 110, 144, 165], "fraught": 61, "addus": [61, 115], "minutia": 61, "underli": [61, 88, 99, 113, 124, 129, 143, 170, 179], "tightli": [61, 100, 101, 118, 121, 169], "mongodb": 61, "dyanmodb": 61, "forethought": 61, "guidelin": 61, "admin": [61, 68], "startproject": 61, "modif": 61, "postgres_us": 61, "appnam": [61, 171], "postgres_password": 61, "appnamekth1pjvmecyknzna": 61, "postgres_db": 61, "appname_db": 61, "pgdata": 61, "postgres_host_auth_method": 61, "md5": [61, 97], "postgres_port": 61, "5432": 61, "postgres_remote_host": 61, "django_settings_modul": 61, "codesolid_demo": 61, "django_superus": 61, "appname_admin": 61, "django_superuser_email": 61, "your_email": 61, "django_superuser_password": 61, "appnameotwegxaapj5zlmsq": 61, "tai": 61, "tah": 61, "encrypt": 61, "scram": 61, "expans": 61, "frontend": 61, "container_nam": 61, "env_fil": 61, "8000": [61, 71, 142], "neat": [61, 66, 80], "db": [61, 143, 160, 161], "hostnam": 61, "get_config": 61, "val": [61, 87, 112, 142, 168], "getenv": [61, 139], "keyerror": [61, 114], "possibli": 61, "ssm": 61, "postgresql_psycopg2": 61, "superus": 61, "runserv": 61, "contrib": 61, "get_user_model": 61, "is_superus": 61, "user_nam": 61, "user_email": 61, "user_password": 61, "create_superus": 61, "libpq": 61, "chmod": [61, 116, 150], "766": 61, "plug": [61, 142], "login": 61, "command_nam": 61, "cleanup": [61, 139], "taskcommand": 61, "examplesconnect": 61, "service_nam": [61, 106], "containersdock": 61, "pslist": 61, "akil": 61, "kill": 61, "dangl": 61, "prune": 61, "fdelet": 61, "hammer": [61, 151], "situat": [61, 79, 86, 118, 119, 134, 177], "daunt": [61, 117, 132], "collabor": [61, 67, 78, 177], "preprocess": [62, 68, 74], "histogram": [62, 68], "iri": [62, 75, 88, 152], "sklearn": 62, "flower": [62, 88, 152], "null": [62, 150, 165, 172], "sepal": [62, 88, 152], "sepalwidthcm": 62, "subplot": [62, 83, 84, 85, 87, 88], "horizont": [62, 85, 88, 119], "sepallengthcm": 62, "petal": [62, 88, 152], "petallengthcm": 62, "labelencod": 62, "label_encod": 62, "marrig": 62, "fit_transform": 62, "petalwidthcm": 62, "colormap": 62, "viridi": 62, "rectangular": [62, 85, 88], "discret": [62, 68, 80, 88], "contribut": [62, 69, 86, 92], "rendit": 62, "quartil": [62, 88], "outlier": [62, 88, 104, 166, 181], "boxplot": [62, 88], "circular": 62, "rand": [62, 96, 142, 144], "kernel": [62, 67, 68, 69, 70, 72, 75, 81, 88, 115, 142, 160], "hexagon": 62, "honeycomb": 62, "shade": 62, "hexabin": 62, "haxbin": 62, "gridsiz": 62, "himself": [63, 111, 125], "smatter": 63, "tenuou": 63, "euclid": [63, 80, 81, 82, 87], "pleasant": 63, "divers": [63, 163], "licens": [64, 103, 135, 142, 167], "msi": 64, "reopen": 64, "synchron": [64, 97, 143], "pat": 64, "intimid": 65, "slideshow": 65, "monitor": [65, 71], "hyphen": [65, 144], "lowercas": [65, 114, 119, 128, 130, 140, 168], "unimport": [65, 165], "kick": [65, 104, 155, 180], "gitforwindow": 65, "yeah": 65, "vim": 65, "ssh": [65, 78, 173], "ssl": [65, 71], "lifestyl": 65, "credenti": [65, 97, 106], "uncheck": [65, 116], "frankli": 65, "rid": [65, 113, 158], "beast": [65, 178], "tidi": 66, "python2": [66, 100], "pip3": [66, 101, 175], "chug": 66, "wors": [66, 69, 75, 76, 112, 142], "bite": 66, "bullet": [66, 75, 79, 116, 126], "regress": [66, 68, 88], "guido": [66, 69, 177], "ride": 66, "sunset": 66, "prison": [66, 99], "yard": 66, "shoot": 66, "brew": [66, 68, 176], "unalia": 66, "fresh": [66, 86, 116], "ensurepip": 66, "awscli": 66, "unsupport": 66, "tackl": [66, 76, 77, 85, 163], "viabl": [67, 110, 133, 177], "magma": [67, 177], "mapl": [67, 177], "proprietari": [67, 103, 105, 153, 177], "nineti": [67, 163], "maxima": 67, "lisp": [67, 70, 162], "pari": 67, "sagemathcel": 67, "quadrat": [67, 80, 86, 151], "liner": [67, 117, 151, 171, 173], "stein": 67, "modest": [67, 142, 176], "monthli": 67, "disk": [67, 70, 75, 78, 100, 138, 160, 171, 174], "m1": [67, 70, 75, 142, 150], "manifold": 67, "__builtins__": 67, "156": 67, "1918": 67, "caret": [67, 119], "bitwis": 67, "xor": [67, 134], "125": [67, 142], "ration": [67, 163], "cast": [67, 89, 96, 160, 169], "stolen": 67, "gregori": 67, "bard": 67, "undergradu": [67, 82, 86, 163, 178], "retro": [67, 78], "swift": [68, 177], "skim": [68, 82, 129], "jayamann": 68, "avid": 68, "idl": [68, 118], "batteri": [68, 127], "idle3": 68, "appl": [68, 70, 75, 118, 142, 150, 179], "silicon": [68, 75, 114, 142, 150], "intel": [68, 100, 150], "intrigu": 68, "solemn": 68, "vow": 68, "forev": [68, 89, 118, 158], "uglier": 68, "xonsh": [68, 139], "whip": [68, 135], "kinda": 68, "clockwis": 68, "randomwalk": 68, "get_random_point": 68, "preview": [68, 72, 80, 103, 170], "junit": 68, "testcas": 68, "testprogrammerremembersfirstgrademath": 68, "test_basic_math": 68, "assertequ": [68, 172], "wordi": 68, "render": [68, 107, 161, 162], "my_modul": 68, "test_my_modul": 68, "make_purchas": 68, "cart": 68, "purchas": [68, 86, 133, 163, 167], "card": [68, 80, 91, 106, 114, 138, 144], "declin": [68, 86], "unreach": 68, "transact": [68, 160, 161], "creditcardprocessor": 68, "postman": 68, "fourier": 68, "pandasql": [68, 160], "keen": 68, "thrive": 68, "incur": [68, 104, 116], "permit": [68, 100], "scalabl": [68, 177], "grown": [68, 142], "eclips": [68, 103, 172], "ryan": 68, "connor": 68, "asp": [68, 177], "ec": 68, "boto3": [68, 105, 132, 177, 179], "sdk": [68, 97], "glue": [68, 69, 106, 139], "bucket": [68, 97, 106], "dynamodb": [68, 106], "orm": [68, 133, 136, 161], "middlewar": 68, "intercept": [68, 87], "elegantli": 68, "traction": [68, 94, 175], "bento": [68, 175], "flit": [68, 175], "pep": [68, 92, 112, 120, 121, 130, 132, 135, 144, 168], "517": 68, "whew": [68, 143], "hang": [68, 87, 131, 158, 162, 163, 167, 168, 169], "perl": [68, 142, 177], "shutil": [68, 139], "popen": [68, 139], "argpars": [68, 110, 139], "crowd": [68, 102, 103, 107, 167], "amazingli": 69, "iron": [69, 114], "discount": [69, 86, 91], "lone": [69, 101, 158], "voic": [69, 102, 163], "wilder": 69, "algol": 69, "bytecod": [69, 168, 174], "elaps": [69, 75, 142, 178], "161": [69, 144], "fee": 69, "race": 69, "234": [69, 119], "160": 69, "rossum": [69, 177], "creator": [69, 74, 167, 177], "1999": [69, 134], "everydai": [69, 112, 129, 133, 142], "specialist": [69, 119], "enthusiasm": 69, "rapid": [69, 91, 100, 177], "scijava": 69, "jama": 69, "doctor": 69, "thrown": [69, 116, 137, 143], "mapreduc": 69, "overwhelmingli": 69, "alik": [69, 134], "disgruntl": 69, "assembli": [69, 77, 142, 177, 181], "lurk": 69, "plausibl": 69, "__pycache__": [69, 174], "ly": 69, "deadlock": 69, "crop": [69, 163, 174], "multithread": [69, 143], "brett": [69, 129, 169], "slatkin": [69, 129, 169], "devot": [69, 76, 133, 144, 163], "concurr": 69, "bound": [69, 70, 126, 142, 143, 144, 158], "coroutin": [69, 116], "function_nam": [69, 162, 165], "ru": 69, "multiprocess": [69, 169], "intention": [69, 139, 167], "threadpoolexecutor": 69, "processpoolexecutor": 69, "geolog": [69, 169], "crawl": [69, 77], "entitl": [69, 112, 163], "ambiti": [69, 77, 139, 162], "untoward": 70, "repl": [70, 103, 113, 171], "pkg": [70, 97, 167], "ijulia": 70, "nifti": [70, 112], "a_list": [70, 134, 170], "lightli": 70, "anytim": [70, 135], "unregist": 70, "remotefil": 70, "manifest": 70, "dep": 70, "336ed68f": 70, "0bac": 70, "5ca0": 70, "87d4": 70, "7b16caf5d00b": 70, "a93c6f00": 70, "e57d": 70, "5684": 70, "b7b6": 70, "d8193f3e46c0": 70, "cbe49d4c": 70, "5af1": 70, "5b60": 70, "bb70": 70, "0a60aa018e1b": 70, "uuid": [70, 121, 168], "codeczlib": 70, "filepathsbas": 70, "inlinestr": 70, "mmap": 70, "pooledarrai": 70, "sentinelarrai": 70, "unicod": [70, 129, 140], "weakrefstr": 70, "sha1": 70, "9519274b50500b8029973d241d32cfbf0b127d97": 70, "juliasandbox": 70, "jupyter1": 70, "v0": 70, "covid": 70, "mortal": 70, "canada": [70, 114, 128], "colder": 70, "climat": 70, "covid_data": 70, "ourworldindata": 70, "owid": 70, "isfil": 70, "file_path": [70, 117], "iso_codecontinentlocationdatetotal_casesnew_casesnew_cases_smoothedstring15string15": 70, "stringdatefloat64": 70, "float64": [70, 75, 96], "afgasiaafghanistan2020": 70, "2455missingafgasiaafghanistan2020": 70, "2550missingafgasiaafghanistan2020": 70, "2650missingafgasiaafghanistan2020": 70, "2750missingafgasiaafghanistan2020": 70, "2850missingafgasiaafghanistan2020": 70, "29500": 70, "714": 70, "iso_cod": 70, "total_cas": 70, "new_deaths_smoothed_per_million": 70, "continentlocationnew_deaths_smoothed_per_millionstring15": 70, "stringfloat64": 70, "asiaafghanistanmissingasiaafghanistanmissingasiaafghanistanmissingasiaafghanistanmissingasiaafghanistanmissingasiaafghanistanmiss": 70, "forgotten": 70, "linq": 70, "df_column_subset": 70, "df_north_america": 70, "orderbi": 70, "locationnew_deaths_smoothed_per_milliondatestringfloat64dateunit": 70, "states02020": 70, "29unit": 70, "01unit": 70, "states0": 70, "0032020": 70, "02unit": 70, "03unit": 70, "0052020": 70, "04unit": 70, "05unit": 70, "0062020": 70, "06unit": 70, "0072020": 70, "07unit": 70, "0092020": 70, "08canada0": 70, "0042020": 70, "column_nam": 70, "popul": [70, 128, 144, 161], "total_deaths_per_million": 70, "df_plottabl": 70, "dateunit": 70, "statescanadadatefloat64": 70, "290missing2020": 70, "010missing2020": 70, "020": 70, "003missing2020": 70, "030": 70, "040": 70, "005missing2020": 70, "050": [70, 104], "060": 70, "006missing2020": 70, "070": 70, "007missing2020": 70, "080": 70, "009missing2020": 70, "090": 70, "0070": 70, "0090": 70, "004": 70, "grim": 70, "x_valu": [70, 83, 87, 99], "passport": 70, "eh": 70, "nod": [70, 144, 162], "timeit": [70, 75, 76, 124, 129, 138, 142, 151], "accommod": [70, 87, 126, 129], "accumul": 70, "kristoff": 70, "carlsson": 70, "timeroutput": 70, "255": [70, 165], "inclus": [70, 82, 96, 99, 122, 128, 144], "test_implicit_typ": 70, "tot": 70, "557\u03bc": 70, "08mib": 70, "00k": 70, "223\u03bc": 70, "223n": 70, "12kib": 70, "233": 70, "display_tim": 70, "ttime": 70, "u00b5": 70, "1000000": 70, "the_list": 70, "\u00b5": [70, 124, 151], "12535": 70, "66699961084": 70, "53566699961084": 70, "883": 70, "5419976094272": 70, "8835419976094272": 70, "leg": [70, 88], "resembl": 70, "dispatch": [70, 85], "unoffici": 71, "summer": 71, "pyscript": [71, 107], "pyodid": [71, 107], "cpython": [71, 77, 104, 107, 132, 133, 143, 150, 174], "webassembli": [71, 107], "rougher": 71, "youraccountnam": 71, "reusabl": 71, "lua": [71, 100, 181], "wren": 71, "route53": 71, "cname": 71, "recheck": 71, "indexdb": 71, "dist": [71, 135], "unsuccess": 71, "yourpag": 71, "ipynb": [71, 80], "righthand": 72, "gmail": 72, "esc": 72, "rocketship": 72, "juptyer": 72, "usernam": [72, 73, 74, 135], "jpserver": 72, "37474": 72, "8889": 72, "token": [72, 73, 74, 126, 139, 144, 169], "4a63802ed46f749388b6069b5eea48bd7f4bb09288a9c2eb": 72, "tile": 72, "data_fram": 72, "pristin": 72, "incompat": [72, 112], "minimalist": 72, "unfamiliar": [72, 114, 120], "swear": 72, "latenc": 72, "wager": 72, "baud": 72, "modem": 72, "anagram": 72, "mnemon": [72, 96], "ju": 72, "pyt": 72, "gordon": 72, "straddl": 72, "fenc": [72, 108], "everybodi": [72, 119], "versatil": [72, 77, 98, 152, 181], "settl": [73, 142], "nbclassic": 73, "whichev": 73, "whatsoev": [73, 121], "medusa": 73, "stone": [73, 93, 99], "jupyter_notebook_config": 73, "jupyter_server_config": 73, "argon2": 73, "panic": 73, "safest": 73, "precaut": 73, "juptyer_server_config": 73, "serverapp": 73, "argon2id": 73, "10240": 73, "dft": 73, "cfcfathgybfzt": 73, "xwvw": 73, "wn0dewtxxschts3qd02wtqxuukdmf0zsbkyqloscuj": 73, "juptyer_notebook_config": 73, "notebookapp": 73, "twafangevngfix4gdrip4w": 73, "f1xjnyqobltqx5": 73, "gwh5i": 73, "fcvhcr95kq3pstlhv62cgu": 73, "avatar": 74, "dataset_list": 74, "datasets_list": 74, "air": [74, 98], "refin": [74, 80, 146, 155], "explan": [74, 112, 163, 177], "senapatirajesh": 74, "netflix": 74, "tv": [74, 102], "zipfil": [74, 139], "zip_ref": 74, "extractal": 74, "dataset_download_fil": 74, "cv": 74, "dataset_identifi": 74, "dataset_id": 74, "themrityunjaypathak": 74, "imdb": 74, "ahbab911": 74, "250": 74, "korean": 74, "drama": 74, "kdrama": 74, "xl": 74, "xlsx": [74, 98, 99], "xlsm": 74, "xlsb": 74, "enthusiast": [74, 120], "academia": 74, "convei": 74, "particip": 74, "compet": [74, 86, 151, 154, 180], "streamlin": 74, "jupit": 74, "reduc": [75, 100], "fulfil": [75, 114], "riiid": 75, "gb": [75, 142], "fastparquet": [75, 138], "timer": [75, 113, 144], "__enter__": [75, 143], "tstart": 75, "perf_count": 75, "__exit__": [75, 143], "traceback": [75, 81, 116, 120, 139], "elapst": 75, "65": [75, 86, 114, 138, 151], "row_id": 75, "timestamp": [75, 81, 144], "int32": [75, 96], "user_id": [75, 121, 168], "content_id": 75, "content_type_id": 75, "task_container_id": 75, "user_answ": 75, "answered_correctli": 75, "prior_question_elapsed_tim": 75, "prior_question_had_explan": 75, "shave": 75, "feather": [75, 132, 138], "readili": [75, 88, 99, 137, 151], "to_parquet": [75, 138, 171], "threw": 75, "Be": [75, 166], "write_parquet": 75, "51": [75, 80, 87, 99, 138], "storag": [75, 93, 171], "catalyst": 75, "lazili": 75, "impract": 75, "ram": [75, 142], "spill": [75, 143], "bean": [75, 127, 172], "advis": [75, 100, 116, 119, 179], "low_memori": 75, "40828": 75, "set_index_and_fetch": 75, "scan_csv": 75, "2147470777": 75, "10th": 75, "ton": [76, 135, 163], "hassl": 76, "compound": 76, "comb": 76, "workhors": [76, 169, 172], "road": [76, 163], "zoneinfo": 76, "dateutil": [76, 101], "recur": 76, "stump": 76, "anymor": 76, "nineteen": [76, 112], "tradition": 76, "forti": [76, 96, 99, 176], "brush": [76, 94, 137, 163, 178], "acronym": [76, 110, 125], "queue": 76, "mutabl": [76, 96, 112, 126, 128, 129], "cprofil": 76, "line_profil": 76, "memory_profil": 76, "belov": 77, "financ": 77, "trade": [77, 127, 163], "paradigm": 77, "tax": 77, "merit": [77, 85], "poni": 77, "blaze": 77, "jpython": 77, "ironpython": [77, 104], "callback": [77, 81], "w3school": [77, 137], "cplusplu": 77, "tutorialspoint": 77, "udac": 77, "nanodegre": 77, "dug": [78, 101], "tart": [78, 179], "backup": [78, 133], "jurass": 78, "saver": 78, "screensav": 78, "jealou": 78, "polish": [78, 103, 163, 171], "metric": [78, 142], "longest": [78, 99, 137, 163], "squash": 78, "rebas": 78, "flesh": [78, 91, 143], "weekend": [79, 80, 86, 156], "tina": 79, "turner": 79, "lost": [79, 86, 136], "bout": 79, "mari": [79, 113], "plainli": 79, "burn": 79, "scrabbl": 79, "clarif": 79, "stink": 79, "undon": 79, "foo": 79, "ajax": 79, "borrow": [79, 112], "linter": [79, 168], "coverag": 79, "sweat": [79, 80], "afraid": [79, 180], "journi": 80, "precalc": 80, "calc": 80, "onedr": 80, "trig": 80, "onenot": 80, "wednesdai": [80, 113, 119], "trigonometri": [80, 96, 163], "precalculu": 80, "frixion": 80, "rocketbook": 80, "schoolyourself": 80, "playlist": 80, "k\u00f6nigsberg": 80, "hack": [80, 155], "igraph": 80, "graphwork": 80, "leonard": [80, 86, 163], "intro": 80, "calculus_test": 80, "precalc_demo": 80, "thur": 80, "desmo": [80, 87, 162], "geogebra": 80, "probl": 80, "nochebuena": 80, "quadratur": 80, "lune": 80, "parametr": 80, "logarthim": 80, "prelud": 80, "logarithm": [80, 119], "euler": 80, "proposit": [80, 85], "ac": [80, 85, 172], "logreview": 80, "transcendent": 80, "tangl": 80, "prof": 80, "jan": [80, 113, 171], "trudeau": [80, 82], "planar": 80, "101": [80, 110, 112], "104": 80, "chat": [80, 157], "gpt": 80, "quad": 80, "tomorrow": [80, 113], "mandatori": 80, "polici": [80, 106], "brightspac": 80, "mat": 80, "271": 80, "emma": 80, "scothorn": 80, "homework": [80, 85, 86, 163], "cengag": 80, "webassign": 80, "wed": 80, "kerjigg": 80, "dumb": [80, 82, 85, 89, 102, 135], "smackerel": 80, "redo": 80, "robert": 80, "stoll": 80, "thorni": 80, "troubleshot": 80, "nasti": [80, 116], "ln": 80, "coq": 80, "boyer": 80, "russel": 80, "peano": 80, "golden": [80, 120], "interior": 80, "polygon": [80, 85], "pentagon": 80, "540": 80, "retri": 80, "casei": 80, "exam": [80, 86, 163, 178], "ba": 80, "bisector": 80, "supplement": [80, 82, 163], "tangent": 80, "misc": 80, "larson": 80, "slope": [80, 87], "conic": 80, "103": [80, 138, 144, 178], "sweet": [80, 182], "clawson": 80, "calvin": 80, "quotient": 80, "veloc": [80, 122], "nanci": 80, "symplot": 80, "synthet": 80, "horner": 80, "lattic": 80, "headach": 80, "invers": 80, "hiatu": 80, "caught": [80, 116], "thurdai": 80, "102": [80, 144], "antideriv": 80, "taylor": 80, "extrema": 80, "mvt": 80, "v239iiogvt8": 80, "frowni": 80, "plate": 80, "tue": 80, "courant": 80, "mp": 81, "cl": [81, 127, 162], "317": 81, "32275": 81, "22346173": 81, "nsapplicationdeleg": 81, "applicationsupportssecurerestorablest": 81, "320": 81, "nsevent": 81, "othereventwithtyp": 81, "modifierflag": 81, "windownumb": 81, "648": 81, "xxx": 81, "677": 81, "opcod": 81, "tornado": 81, "enter_eventloop": 81, "advance_eventloop": 81, "0x106166660": 81, "ioloop": 81, "738": 81, "_run_callback": 81, "ret": 81, "ipykernel": 81, "kernelbas": 81, "468": 81, "eventloop": 81, "353": 81, "loop_cocoa": 81, "shell_stream": 81, "systemerror": [81, 143], "ellips": [81, 85], "hyperbola": 81, "hyperbola2": 81, "p1": [81, 85, 112, 169], "plot_implicit": [81, 85], "p2": [81, 85, 112, 169], "radii": 81, "circle1": 81, "radiu": [81, 84, 85], "aspect_ratio": [81, 85], "lim": [81, 170], "xlim": [81, 162], "ylim": 81, "__version__": [81, 88], "richard": 82, "hail": [82, 113], "grappl": 82, "ntheori": 82, "congruenc": 82, "modulu": 82, "operand": [82, 134], "congruent": 82, "equiv": 82, "is_congru": 82, "militari": 82, "bmod": 82, "139": 82, "128": [82, 106, 129, 144], "summat": 82, "limits_": 82, "524287": 82, "fluke": 82, "lucki": [82, 179], "fourth": [82, 146], "induct": 82, "terms_to_check": 82, "motherlod": 82, "min_val": [83, 87], "max_val": [83, 87], "tick_incr": 83, "set_xtick": [83, 87, 88], "set_ytick": [83, 87], "plot_ax": [83, 87], "grai": [83, 85], "y_valu": [83, 87, 99], "fig": [83, 84, 87, 88], "2x": [83, 87, 162], "stackoverflow": 84, "60325325": 84, "untest": 84, "move_sympyplot_to_ax": 84, "_process_seri": 84, "_seri": 84, "process_seri": 84, "set_color": 84, "set_posit": 84, "cfm": 84, "brown": [84, 118], "edu": 84, "dobrush": 84, "am33": 84, "part1": 84, "theta": [84, 85], "2pi": [84, 85], "linspac": [84, 85, 87, 88], "x1": [84, 85], "x2": [84, 85, 170], "set_aspect": [84, 85], "union": [85, 113, 169], "muster": 85, "drudg": 85, "straightforwardli": 85, "accru": 85, "equilater": 85, "vertex": 85, "ab": [85, 112], "bc": 85, "anachronist": 85, "regularpolygon": 85, "dang": 85, "stab": 85, "make_plott": 85, "flatten": 85, "postul": 85, "euclidean": [85, 102], "circ1": 85, "astut": 85, "centr": 85, "0x11fc2b8d0": 85, "linewidth": 85, "compass": 85, "cynic": 85, "fontsiz": 85, "c2": 85, "apex": 85, "side_list": 85, "point2d": 85, "elig": [86, 168, 178], "medicar": [86, 178], "enrol": [86, 91], "midpoint": 86, "joke": [86, 106, 180], "nurs": 86, "teenag": 86, "classmat": 86, "youth": 86, "reveng": 86, "wreck": 86, "sylvanu": 86, "dwell": 86, "loud": [86, 163], "jokingli": 86, "delicaci": 86, "inciner": 86, "mint": 86, "classroom": [86, 103, 163], "brightest": 86, "formid": 86, "competitor": [86, 103], "partner": 86, "matur": [86, 136, 153, 176], "wild": [86, 107], "debauch": 86, "younger": 86, "prefront": 86, "richer": [86, 103], "steal": 86, "luxuri": [86, 158, 172], "actuari": 86, "newton": 86, "formul": [86, 151], "motion": [86, 167], "einstein": 86, "club": 86, "despair": 86, "digest": [86, 168], "stevi": 86, "billboard": 86, "thirteen": 86, "piano": 86, "discoveri": [86, 162], "kahn": [86, 163], "academi": [86, 163], "thriftbook": 86, "colleg": [86, 163, 178], "308": 86, "bought": 86, "lieu": [86, 143, 161], "demon": 86, "exorcis": 86, "enorm": [86, 98, 142], "tuition": [86, 163], "embark": 86, "famous": [86, 91, 143], "ancient": 86, "mediev": [86, 110], "weak": [86, 103, 163], "catalog": 86, "ratemyprofessor": 86, "spectat": 86, "slouch": 86, "pigeon": 86, "skinni": 86, "offlin": 86, "sparingli": [86, 116, 154], "prong": 86, "ti": [86, 163, 178], "understood": [86, 136], "baffl": 86, "fool": 86, "wolframalpha": [87, 162, 163], "confront": 87, "compress": [87, 113, 138, 139, 171], "trauma": 87, "detour": [87, 171], "subroutin": [87, 165], "tick_siz": 87, "ruler": 87, "wrinkl": 87, "x_as_arrai": 87, "x_as_list": 87, "asymptot": 87, "infin": 87, "guard": 87, "denomin": [87, 162, 170], "function_with_asympot": 87, "denom": 87, "x_arrai": [87, 96], "y_arrai": 87, "matplolib": 88, "univari": 88, "bivari": 88, "matplotlibseabornmatplotlib": 88, "pie": 88, "comprehend": 88, "barplot": 88, "oom": 88, "maplotlib": 88, "x_axi": 88, "y_axi": 88, "setosa": [88, 152], "versicolor": 88, "virginica": [88, 152], "seborn": 88, "scatterplot": 88, "adjac": 88, "x_data": 88, "lineplot": 88, "hist": 88, "distplot": 88, "displot": 88, "kde": 88, "interquartil": 88, "overlaid": [88, 139], "violinplot": 88, "add_ax": 88, "bp": 88, "initialiaz": 88, "plote": 88, "asix": 88, "sine": [88, 96], "frameon": 88, "ncol": 88, "fancybox": 88, "framealpha": 88, "borderpad": 88, "conclus": [88, 151], "buddha": 89, "enlighten": 89, "counsel": [89, 137], "adopt": [89, 93, 101, 110, 113, 121, 177], "sensual": 89, "ascetic": 89, "media": [89, 156, 161, 163], "uncomfort": 89, "goldilock": 89, "porridg": 89, "dumbif": 89, "engineeri": 89, "thou": [89, 163], "neolog": 89, "tendenc": 89, "portrai": 89, "abstrus": 89, "preval": [89, 134, 163], "humor": [89, 139, 143], "negat": [89, 96, 134], "printf": [89, 97, 119, 126], "ought": 89, "mastercard": 89, "visa": 89, "men": [89, 163], "clueless": 89, "snuck": 89, "indign": 89, "idiot": 89, "swarm": 89, "hive": 89, "bee": 89, "nit": 89, "embarrass": [89, 93, 179], "hairi": 89, "insecur": 89, "flowchart": 89, "spout": 89, "knock": 89, "conced": 89, "admir": 89, "unaccompani": 89, "bathroom": 89, "loss": 89, "rumsfeld": 91, "guidanc": [91, 116, 121, 137], "trial": [91, 142], "quarter": 91, "udemi": [91, 166], "coach": 91, "elect": 92, "democraci": 92, "pachunt": 92, "closet": 92, "polit": 92, "junki": [92, 156], "committe": 92, "denier": 92, "horizon": 92, "gil": 92, "684": 92, "streamlit": 92, "depart": [92, 113], "headwai": 92, "scorpion": 92, "snake": 92, "moral": 92, "tropospher": 92, "relax": [93, 96], "17th": 93, "cousin": 93, "niec": 93, "contributor": 93, "nail": [93, 151], "distinguish": [93, 142, 165, 179], "herself": [93, 134], "showroom": 93, "winner": [93, 103, 129, 130, 177], "funni": 93, "fourteen": [93, 113, 142, 160], "mocha": 94, "chai": 94, "jest": 94, "killer": 94, "webstorm": 94, "mike": [94, 142], "mcclaren": 94, "stater": 94, "gitpod": [94, 103, 133, 153], "theia": 94, "advertis": 95, "stall": 96, "pillar": 96, "unqualifi": 96, "scalar": [96, 130, 152], "ascii_uppercas": [96, 126, 144], "u1": 96, "chr": [96, 140], "ord": [96, 140], "randint": [96, 124, 130, 169], "mu": 96, "53449952": 96, "65468816": 96, "82071586": 96, "86682187": 96, "21763168": 96, "80572274": 96, "97562422": 96, "58591293": 96, "44201627": 96, "80652277": 96, "83698711": 96, "24264316": 96, "30675551": 96, "63795295": 96, "87011717": 96, "27054306": 96, "65159876": 96, "49426323": 96, "68323172": 96, "69278983": 96, "radio": [96, 130], "royal": [96, 130], "crown": [96, 130], "cola": [96, 130], "myarrai": 96, "outer": [96, 114, 116, 130, 161], "ndim": [96, 102], "original_arrai": 96, "new_arrai": 96, "z_list": 96, "y_list": 96, "x_list": 96, "tilt": 96, "arr": 96, "four_by_f": 96, "nth": 96, "one_dim": 96, "brainbust": 96, "matric": [96, 102, 142], "ex": [96, 100, 106, 116, 143], "num_decim": 96, "npz": 96, "jennif": 96, "helen": [96, 120], "miryam": 96, "savez": 96, "people2": 96, "languages2": 96, "jenniff": 96, "myrrai": 96, "savetxt": 96, "delimit": [96, 142, 177], "arr2": 96, "loadtxt": 96, "wise": [96, 130], "lumberjack": 96, "u10": 96, "peasi": 96, "lemon": 96, "squeezi": 96, "surround": [96, 114, 119, 121], "step1": 96, "step2": [96, 150], "search_result": 96, "str_len": 96, "rsync": 97, "bulk": 97, "sync": [97, 115], "crypto": 97, "fmt": 97, "ioutil": 97, "filepath": 97, "gets3sess": 97, "gets3servic": 97, "newsess": 97, "getconfigur": 97, "newsharedcredenti": 97, "struct": [97, 138], "localdirectori": 97, "east": [97, 106, 138], "strategi": [97, 116, 121], "checksum": 97, "getawss3itemmap": 97, "multipart": 97, "s3servic": 97, "loi": 97, "listobjectsinput": 97, "setbucket": 97, "obj": [97, 106, 127], "err": [97, 116, 121, 165], "listobject": 97, "etag": 97, "nil": 97, "s3obj": 97, "trim": [97, 168], "filewalkwithoutgoroutin": 97, "awsitem": 97, "testfilenogoroutin": 97, "filestoupload": 97, "blogdir": 97, "isdir": 97, "relativefil": 97, "checksumremot": 97, "readfil": 97, "sumstr": 97, "sprintf": 97, "testfil": [97, 106], "filewalk": 97, "numfil": 97, "ch": 97, "chan": 97, "main_test": 97, "testmain": 97, "fatal": 97, "benchmarkfilewalkgoroutin": 97, "benchmarkfilewalkwithoutgoroutin": 97, "prettybench": 97, "goroutinesbenchmarkfilewalkgoroutin": 97, "543": 97, "ssd": 97, "hecka": [97, 143], "cheer": [97, 102], "aq": 98, "bangladesh": 98, "173": 98, "south": [98, 138], "asia": 98, "chad": 98, "147": [98, 152, 163], "africa": 98, "pakistan": 98, "131": 98, "tajikistan": 98, "116": 98, "mongolia": 98, "107": [98, 144], "uganda": 98, "moder": 98, "arab": 98, "emir": 98, "uzbekistan": 98, "india": 98, "kyrgyzstan": 98, "lh5": 98, "googleusercont": 98, "yz_g_om2rz9p7lhspdmlol4fa4v2lw6otwmbbyzxx6lhxtwajbmuszs6kcfnyf9grlvhudem2oznxrsvwnuegf": 98, "3lzf8lhu_axwmgvni": 98, "hvvcay3a68nwrrvsx0vf7cn5a7jytoktlmmj6mdmjku3": 98, "fmvqgwpizjpnb8pptfxewet5tyapats8nd0q": 98, "cont": 98, "dataframegroupbi": 98, "0x0000018f426ac760": 98, "lh4": 98, "qjufc7icmlbmjkk5m6horsxlwgehwk0cqrdyw63mdpls3zrkeeulzpqi6j1slmsehsyey_mw85cjlyxtbrxikx3rmosvunvkhznhxda8eol6qva8": 98, "jwgx0lwx0qb8ieyrghrsh3ikng6sak": 98, "heh3tfzoaacbjnt2luwbi38gzmtarojao8kxmm1shw": 98, "proce": 98, "pocm5yvdku0teuk2kdei6fpc": 98, "fe8llsjsvsdyc_8tjw4drgyir3": 98, "bi6zkht72ux9kw5qqtoxyvmjx7gq9tfxyl2sufd4necpexghpmr7z8kky5gsio8wam": 98, "j0pehvr1egjgxmpobbm18_vl_n5zxajanttdgv00qibrzdetykf_fwklh2w2v4ghppa": 98, "916l7q2ojf8": 98, "mxveskgxjmk": 98, "nolgdtdkt9t4rmibjvjzthouqdt2_9jwqk2rcvpgca3h8rmxrossudhekqheqh1detkypw30y1_z_yz3dcjnnnizncyjv6sjrpwme1kykxkyx46raujsipatemp4ol": 98, "eohldciufbkd9xqkf": 98, "dcrego03gf54i_dw": 98, "get_group": 98, "lh3": 98, "_eopsoa_mkoi8o_uxcndx4h6nhui1vw": 98, "27t91z8xs5jh210dzcvxwkb6x2nl7unsxm9vdakegh9xp57yx5ta1kdmykqw6kgufwvxvttdjtc8jrw": 98, "ufaxo5yvnrundmsf9z": 98, "kf9xpwbdrze3ksmqvxi2nfgomohsi9jvltu74ntrcamaotk9p6mubhw": 98, "q2gshqxuvvr_pqt2swgsjbw": 98, "jlzxsvf7r_o_qbx9ve9pyv": 98, "qwg4hx4rla": 98, "fijkoxdjesyakbihjqety_4": 98, "3bqljbwju": 98, "nihx": 98, "cposgs_sr2c0pvwqsgofztia413rrfw5koa1uvegvl9e984l_xwwkwvv0wy8ucutpgqzwt": 98, "kmxldfuvwqw8gkoomq": 98, "pint": 98, "zf7": 98, "q6lbzpegumheqnfiv1r_gp": 98, "hrakbkyk3ycnjec9fscntkmudiuxeczxzevzht_kf9i": 98, "zntkfjrmp1g4yj3d5zbkshupicyf0hzyioo41fkny2c1qzbz5zez5_bz_owi8i4f5svdb4efim7movzzkougkd8xbzkwpai3tyb": 98, "pziidp2bfy09ouq": 98, "dmdbchdui5o": 98, "ew09ou_rdpf3wb": 98, "kqfz5": 98, "idj_ft3e_zxpgkiq6naa3sebx91rvbnt0zljwopoi7mvxrpldjw2yejjrcsskxmwcm0gymcf2pu3wxh": 98, "sv4xxtatxshvtca_fmqwzen8a8t_sikki_": 98, "jufhurfqarskraiveu9pzlcyygbjm2y_bm0g": 98, "impot": 98, "vscrtflkpurrndz8fupmdfermgovamjzh9k": 98, "c1mr37jw5flpp": 98, "vhmbgjtaa": 98, "0ztjtg3m7temiltjyst8yveokp07jcifiqnbc6uby_t7dubepk2n4xknw0iaqcvpujbxv2d7lbhglkscg3bumeegi0n9wybdhws_utyopg_4koz5": 98, "zp55bfzghj8za": 98, "tnkua61gb04d8krlqov7anxgd": 98, "f0vxyoohtcc1tnm2tdqi": 98, "_c4tuupzsu4ruxcifqckjziaf0mpweleh2tyj1rklp2l6tevqg8sb_6ferhryevw5k7ij7bpom82wkeegn3tr13bc4x3yp5r1ox": 98, "uztuow_qvoejy3stha78rkysaicaqufq9": 98, "qwepw": 98, "lh6": 98, "c4fy": 98, "2pk5no0dx_9iet07at4jo1doa2ibuorydkz": 98, "kdaiypjkn2cgzap4gasbswgkvaighejhl40qerbd6zsjtevqdjkibdp6hruoijyn01vdltjlcrjnzcsw9ctm2": 98, "kx3jwtpftq0xyevwpboyr3lrsfjcffdzb_uujpwlx4tadprvc31vqwpyaca": 98, "perc": 98, "g0ketahtmn3mbwm5ank9ly0pamrndgxte3in64crq64ccq3_6pavfsytvhy7ogawwnu7aa8_vbodwkwpkmsrh8lcwostv1rj": 98, "j_ydxy1uw94aq7u1nm2khbupblndh_qg3dppijyhgbtfcew0laljjvswvg_42p8igxcz4b0qvkimurepcnsqhq4yg": 98, "aggregationdescriptioncount": 98, "itemsfirst": 98, "nbsp": [98, 100, 140], "itemmean": 98, "medianmin": 98, "maximumstd": 98, "deviat": [98, 144], "variancemad": 98, "deviationprod": 98, "itemssum": 98, "tnfzvs9fdirndqbhghyuqzjdl5sayxt_dmckw6oq": 98, "0r0_9": 98, "34j485hcvamakedch2n5bssjb7zpz": 98, "trst8w0t9ykxmqun": 98, "qclygeladqtlcetf3wjfiajqimcygbc2lghsjz3wd2fqizighbupy0y8zzl3obo1qty1r4km5ggydvjloglfowkxkkta": 98, "agg": 98, "39zxn0s3u5dhu6vfknvickudvzoansabm4y_jww": 98, "d5dap_wopphpheqy36tcg56minifv7phxv96lcgxraqb6ryjrf1y8c3mykropnfhippdoulbhsup0iwhvgi7bea7a0cfriu8ttghboj8epuqhddqhd9cyleho96gkl_ywmwtrrxebtvfbpenmw": 98, "jndpfxsm8djcwq": 98, "0cxxdlgiu7hjeo2mpny4vwu6qgsy9ufvcbp7ozzevyzipuhfyjk9grszgtilzrh1m5tfimstrlaug": 98, "cm2xb7i9m5o0tfxk9mdczljhjfognhyknyl3ehbwxi_zibjdvpjlsakozjt80p3c_a2xv5ucswa0iuyor6evrrgmfw08w": 98, "recombin": 98, "aqi": 98, "transfor": 98, "jn8kseuc3jucrxbbxjhxxa_yyqzbp": 98, "0l_v0": 98, "ebmiqmqaswdvcx_zvkckhse7zbjarmf": 98, "ilfjweau35mv7lebgteuxosusfsjmycftemfipc52ptritr61ikj0codumqwdzz7lbegwfjc7p9cgkykivsbx7ucw2h4o7s5qglkjg463": 98, "ezt4qkoev5hg": 98, "jg3wlguvswgkzbv3xvoy5z4conteqzuwwmttnzdefg9hjdjrtmwf6qftigwiatittme8yzf": 98, "kmemyubxyvme0ktua2jojit7m_pdgoqddlubfop10njqyhh9cubtwm44ldxnccn3n1udaprukfinoduj240utinzuok7j3_d": 98, "lhn27eadeta87tag": 98, "to_csv": 98, "datset": 98, "my_df": 98, "reset_index": 98, "grouped_fil": 98, "6u4xjjnfbdseplznaq9jxrocs0eal1uimw9nfulwcl_w_5mfy1hgzaoqr6q2cl2prsys8e4lfrkeszs1ki5mzhr0v95wgorssjj9eion": 98, "l6mfsd8clbahn5fxhr0zeids": 98, "tjz1drfdjucpkxsrc4mskdcxthfqtglvmhivcqyp7m0ppec9d": 98, "b7dq": 98, "to_excel": 98, "to_xlsx": 98, "ztjfbt2aerelpi0hmv41wukzsqymyh8r5rr": 98, "yuoklipqc4r": 98, "3_7efkitby4keilrqjhd9mbwgp7lsf": 98, "zypauyx2a1jf3oacwhm7rgar7wrqe9oarf5yypdlu1ko71b79sqmwb1phouplej6_vz2ayghy8cpzg2xzciz_nt3wbkzrq_j5zbfs3alprw": 98, "sb": 99, "afford": [99, 163], "attornei": 99, "rangeindex": 99, "dognamedblu": 99, "homogen": [99, 112], "point3": 99, "pickup": [99, 160], "dropoff": [99, 160], "passeng": [99, 138, 160, 171], "fare": [99, 138, 160, 171], "toll": [99, 138, 171], "payment": [99, 138], "pickup_zon": [99, 138], "dropoff_zon": [99, 138], "pickup_borough": [99, 138, 171], "dropoff_borough": [99, 138], "6428": 99, "6429": 99, "6430": 99, "6431": 99, "6432": 99, "6433": [99, 138], "rider": 99, "cab": 99, "isin": 99, "queen": [99, 140], "bronx": 99, "df_home": 99, "zillow_home_data": 99, "df_homes_2": 99, "hypothet": [99, 117], "leftmost": [99, 138, 168], "df_penguin": 99, "df_penguins_ful": 99, "millimet": 99, "mass": 99, "flipper": [99, 102], "preciou": 99, "pickup_tim": 99, "taxis_one_dai": 99, "06": [99, 104, 113, 138, 168], "exlus": 99, "midnight": [99, 113], "taxis_mean": 99, "tip_in_perc": 99, "time_interv": 99, "warrant": [99, 158], "variant": [100, 144], "pypa": 100, "restrict": 100, "interrupt": [100, 116], "vistualenv": 100, "registri": [100, 113, 139], "rubi": [100, 106, 121, 168], "scala": [100, 112, 142, 169, 171], "supervisor": 100, "thoroughli": [100, 106, 168], "proceed": 100, "zlib": [100, 139], "manner": 100, "prebuilt": 100, "particularli": [100, 133, 163], "x86": 100, "nvidia": 100, "mkl": 100, "cuda": 100, "speedup": 100, "condo": 100, "720": 100, "planemo": 100, "libjpeg": 100, "surprisingli": 100, "differencepipcondamulti": 100, "dependencynot": 100, "supportedsupportedpackag": 100, "installationbuild": 100, "wheelsdownload": 100, "availability235": 100, "packages1": 100, "packagesdepend": 100, "managementno": 100, "testperform": 100, "managementin": 100, "systemminimalisticyesno": 100, "discourag": [101, 116, 135, 163, 166], "housekeep": 101, "celebr": [101, 113], "victori": [101, 166], "someproject": 101, "autoremov": 101, "uninstal": 101, "tactic": 101, "ipenv": 101, "pipenv_venv_in_project": 101, "highwai": 101, "glimps": 101, "pipfil": 101, "pipdeptre": 101, "latin": [102, 110], "carrier": 102, "growabl": 102, "contigu": [102, 138], "loos": [102, 163, 165, 168], "3x": 102, "stoog": [102, 120, 126, 128], "musket": 102, "shrink": [102, 126], "dolphin": 102, "sight": [102, 112, 168], "wondrou": 102, "twilight": [102, 107], "zone": 102, "1950": 102, "1960": 102, "narrat": 102, "televis": 102, "serl": 102, "episod": 102, "blow": 102, "comma": [102, 114, 128, 165], "smartest": 102, "approv": 102, "tensor": [102, 142], "earth": [102, 122], "vaccin": 102, "faith": 102, "patholog": [103, 125, 169, 177], "loser": 103, "nich": [103, 177, 181], "intellij": [103, 172], "privileg": [103, 106, 108, 132, 163], "verdict": 103, "scribbl": [103, 162], "cloud9": 103, "struck": [103, 133, 177], "chrome": [103, 155, 157, 158], "freemium": [103, 142, 162], "pricier": 103, "codespac": [103, 133, 153], "staff": 103, "ski": 103, "cumbersom": 103, "connector": 103, "seamless": [103, 143], "premium": [103, 134], "wander": 103, "199": 103, "stride": 103, "jython": 104, "jvm": [104, 171], "stackless": 104, "microthread": 104, "tasklet": 104, "callabl": [104, 109, 114, 165], "micropython": 104, "constrain": 104, "microcontrol": 104, "rpython": 104, "offshoot": 104, "pypy3": 104, "pyzmq": 104, "zeromq": 104, "cflag": 104, "stdlib": 104, "libc": 104, "benchmarktim": 104, "cpythontim": 104, "pypydifference10000": 104, "10000": [104, 129, 142], "iterated0": 104, "825588750": 104, "2362114583": 104, "faster10000": 104, "iterated1": 104, "3694779580": 104, "2289802925": 104, "fasterpython": 104, "numbers0": 104, "5970": 104, "292": 104, "bytearrai": [104, 129], "5440": 104, "6331": 104, "slowerpython": 104, "numbers4": 104, "854474": 104, "739715": 104, "slowernumpi": 104, "0561": 104, "annoy": [104, 157], "infrastructur": 105, "tear": 105, "pluggabl": 105, "hashicorp": 105, "nodej": [105, 177], "potenti": [106, 124, 134, 144, 155], "meme": [106, 107], "coin": [106, 169], "administ": 106, "tier": 106, "anonym": [106, 165], "lambda_funct": 106, "lambda_handl": 106, "statuscod": 106, "dump": [106, 127, 175], "pretend": 106, "liber": 106, "whop": [106, 163], "cent": [106, 172], "architectur": [106, 139], "x86_64": 106, "iam": 106, "eventnam": 106, "princip": 106, "amazonaw": 106, "st": 106, "assumerol": 106, "arn": 106, "rolenam": 106, "roleid": 106, "aroavjirr95yujtabcd": 106, "36349901212": 106, "created": 106, "15t19": 106, "assumerolepolicydocu": 106, "fileb": 106, "arn_from_when_you_created_rol": 106, "operation_nam": 106, "functionnam": 106, "functionarn": 106, "339698421837": 106, "myoutput": 106, "executedvers": 106, "cloudwatch": 106, "behalf": 106, "lamda": 106, "bucket_and_fil": 106, "bucket_nam": 106, "boto": 106, "create_bucket": 106, "get_test_fil": 106, "upload_fil": 106, "content_length": 106, "last_modifi": 106, "nobodi": [106, 112, 119], "attach": [106, 150], "amazons3": 106, "amazons3readonlyaccess": 106, "download_fileobj": 106, "bytesio": 106, "seek": 106, "utf8": 106, "file_info": 106, "requestid": 106, "4fed7a21": 106, "7051": 106, "43d0": 106, "b2b5": 106, "96e36fb53c30": 106, "374": 106, "375": [106, 142], "74": [106, 138], "codebuild": 106, "codedeploi": 106, "localstack": 106, "jupyterlit": [107, 142], "rustl": 107, "reilli": 107, "exerc": 107, "vue": 107, "spun": [107, 130, 176], "npx": 107, "pythonapp": 107, "compoent": 107, "tsx": 107, "codeeditor": 107, "goodby": [107, 126, 158], "cruel": 107, "strictmod": 107, "iu": 107, "reactprismeditor": 107, "prop": 107, "children": [107, 120, 156], "div": 107, "classnam": 107, "linenumb": 107, "readonli": 107, "node_modul": 107, "compliment": 108, "simmer": 108, "ripen": 108, "sibwp_form": [108, 123], "van_der_walls_solved_for_volum": 109, "van_der_walls_solved_for_temparatur": 109, "gca": 109, "thrill": 110, "bob": [110, 116], "toolavailabilityprosconssimpl": 110, "dictionariesbuilt": 110, "ineasi": 110, "configparserbuilt": 110, "supportedvalu": 110, "localconfigpypi": 110, "jsonbuilt": 110, "tomllibbuilt": 110, "tomlinstal": 110, "condaexcel": 110, "pyamlinstal": 110, "condaload": 110, "renaiss": 110, "main_top": 110, "unreason": 110, "blur": 110, "overriden": 110, "8888": [110, 115], "443": 110, "fp": [110, 161], "read_fil": 110, "loader": [110, 117], "localhost_port": 110, "glanc": [110, 113, 119, 144, 163, 168], "to_dictionari": 110, "config_as_dict": 110, "getboolean": 110, "localconfig": 110, "tom": 110, "semant": [110, 169], "tommlib": 110, "pyproject": 110, "original_cr": 110, "preston": 110, "werner": 110, "dob": 110, "1979": [110, 121], "27t07": 110, "codesolid_vers": 110, "example_modifi": 110, "14159": 110, "71828": 110, "rb": 110, "toml_311": 110, "57600": 110, "bypass": 110, "toml_pre_311": 110, "pyyaml": 110, "librariessit": 110, "posts_publish": 110, "subtop": 110, "usabl": [111, 124, 142], "requr": 111, "__repr__and": 112, "fuss": 112, "parameter_nam": 112, "height_in_met": 112, "0x123029150": 112, "refrain": 112, "metoo": 112, "me_too": 112, "__every__": 112, "__last__": 112, "__one_of_them__": 112, "wast": [112, 138, 158], "__match_args__": 112, "nicer": [112, 135], "nb_mypi": [112, 168], "princess": 112, "diana": 112, "spencer": 112, "washington": [112, 113], "duan": 112, "johnson": [112, 163], "sandwich": [112, 120, 134], "ladi": 112, "disrespect": 112, "hungri": [112, 120], "myclass": 112, "my_field": 112, "my_var": 112, "unsafe_hash": 112, "557": 112, "nametupl": 112, "frozeninstanceerror": 112, "point1": 112, "point2": 112, "238092144646713039": 112, "9078147046843256684": 112, "omit": [112, 119, 126, 128, 152, 160, 161], "canon": 112, "player_on": 112, "ready_player_on": 112, "secret123": 112, "kept": [112, 127, 152], "retain": 112, "__post_init__": 112, "couch": [112, 169], "personbyheight": 112, "lincoln": 112, "abraham": [112, 151], "lexicograph": 112, "forb": 112, "wisdom": [112, 117], "allud": 112, "namedupl": 112, "occurr": 112, "resound": 112, "101025": 113, "flexibli": 113, "now_dat": 113, "now_tim": 113, "825771": 113, "999": [113, 126], "greenwich": 113, "clock": [113, 121, 142], "gregorian": 113, "leap": [113, 165], "julian": 113, "honest": 113, "virginia": [113, 163], "1731": 113, "1752": 113, "britain": 113, "coloni": 113, "1732": 113, "audit": 113, "legal": [113, 163], "complianc": 113, "datetime_is_awar": 113, "utcoffset": 113, "astimezon": 113, "dt_naiv": 113, "dt_awar": 113, "time_zon": 113, "285527": 113, "72000": 113, "edt": 113, "timetz": 113, "my_tim": 113, "544156": 113, "guam": 113, "saluda": 113, "iana": 113, "protocol": [113, 124, 129], "available_timezon": 113, "pacif": 113, "tz_guam": 113, "eastern": 113, "australia": 113, "daylight": 113, "now_her": 113, "now_guam": 113, "744449": 113, "27th": 113, "guam_now": 113, "boss": 113, "incredibli": [113, 136], "independence_dai": 113, "1776": 113, "infami": 113, "pearl_harbor": 113, "1941": [113, 126], "pearl_harbor_more_exactli": 113, "honolulu": 113, "hawaii": 113, "td1": 113, "td2": 113, "td3": 113, "loan_period_dai": 113, "due_dat": 113, "minutes_ago": 113, "562711": 113, "prettier": 113, "adjust": [113, 135, 180], "pseudocod": [113, 114, 143], "datetime_1": 113, "datetime_2": 113, "countdown": 113, "winter": 113, "ou": 113, "get_christmas_year": 113, "days_till_christma": 113, "1989": 113, "los_angel": 113, "special_dai": 113, "123456": 113, "special_d": 113, "special_tim": 113, "oct": [113, 165], "274": [113, 142], "0700": 113, "hhhh": 113, "1900": 113, "earliest": 113, "format_str": 113, "date_string2": 113, "isoformat": 113, "fromisoformat": 113, "weren": [113, 143, 163], "01t10": 113, "colombia": [113, 114, 128, 131], "spain": 113, "juli": [113, 150], "1810": 113, "textcalendar": 113, "prmonth": 113, "htmlcalendar": 113, "suspend": [113, 143], "outlook": 113, "tutorialdecemb": 113, "june": 113, "1st": [113, 140], "upfront": [113, 179], "cycl": [113, 121, 177], "31st": 113, "one_month_from_now": 113, "six_weeks_ago": 113, "dtstart": 113, "novel": 114, "screenplai": 114, "cave": 114, "basebal": 114, "curli": [114, 116, 119, 120, 126, 128, 140, 170], "grade_map": 114, "brace": [114, 116, 119, 140, 167, 170], "key1": [114, 169], "value1": [114, 169], "keyn": 114, "valuen": 114, "min_grade_for_a": 114, "vain": [114, 161], "unhappi": 114, "key2": [114, 169], "value2": 114, "good_grad": 114, "rhode": [114, 122], "massachusett": [114, 122], "connecticut": [114, 122], "pseudo": 114, "ri": [114, 122], "ct": [114, 122], "state_abrevi": 114, "long_state_nam": 114, "rapidli": 114, "super_pow": 114, "superman": 114, "sue": 114, "storm": 114, "invisibl": 114, "dict_item": 114, "count_word": [114, 169], "presult": 114, "make_grade_list": 114, "all_grad": 114, "smith": 114, "jone": [114, 118], "codes_to_countri": 114, "china": [114, 128, 163], "cn": 114, "mexico": 114, "countries_to_cod": 114, "bismuth": 114, "bi": 114, "fe": 114, "helium": 114, "find_symbol": 114, "zinc": 114, "zn": 114, "sensor_id": 114, "reading1": 114, "reading2": 114, "reading_list": 114, "id001": 114, "id007": 114, "id003": 114, "kalea": 114, "sympathet": 115, "spoil": 115, "excus": [115, 142, 180], "arg_gid": 115, "arg_uid": 115, "gid": 115, "uid": 115, "sageus": 115, "debian": 115, "settabl": 115, "whom": [115, 153, 158], "run_lab": 115, "ip": [115, 173], "clickabl": 115, "gift": 115, "sageexampl": 115, "delight": 116, "opaqu": 116, "mindset": [116, 163], "pep8": [116, 120], "reformat": 116, "incorrectli": [116, 121, 156, 168], "rational": 116, "oserror": [116, 143, 179], "bubbl": [116, 143], "hobbl": 116, "inadequ": 116, "grasp": [116, 130], "filenotfounderror": [116, 143], "show_cont": 116, "not_her": 116, "unhandl": [116, 165], "exceptiontyp": 116, "variable_nam": 116, "logging_exampl": 116, "errno": [116, 143], "ioerror": [116, 179], "unread": [116, 177], "nix": 116, "deni": 116, "baseexcept": [116, 179], "order_widget": 116, "gadget": 116, "danger": 116, "crispi": 116, "fireproof": 116, "purs": 116, "recap": 116, "chosen": [116, 127, 139], "httpstatu": [116, 143], "pii": [116, 144], "shot": 116, "withstood": 116, "glamor": 116, "glob": [117, 139], "filesystem": 117, "robustli": 117, "pyth": 117, "posixpath": 117, "windowspath": 117, "list_dir": 117, "expand": 117, "list_dirs_recurs": 117, "find_fil": 117, "my_subdirectori": 117, "ometh": 117, "posix": 117, "__file__": [117, 139, 143], "print_path": 117, "print_directori": 117, "output_path": 117, "ng": [117, 142], "is_fil": 117, "is_dir": 117, "list_path": 117, "path_typ": 117, "abs_path": 117, "construct_filenam": 117, "directory_par": 117, "file_in_modul": 117, "cwd": [117, 150], "directory_nam": [117, 175], "config_directori": 117, "0a6": 117, "python311": 117, "dynload": [117, 175], "alter": 117, "frozenload": 117, "find_spec": 117, "importlib": [117, 135], "spec": 117, "suffic": [117, 120], "bask": 117, "dutch": [117, 127], "plural": 118, "singular": 118, "banana": 118, "cherri": 118, "doh": 118, "fruit_kei": 118, "fruit_valu": 118, "indefinit": [118, 162, 163], "boolean_condit": 118, "uncondition": 118, "unnecessarili": 118, "eric": 118, "terri": 118, "1942": 118, "clees": 118, "todo_set": 118, "milk": 118, "bookmark": 118, "fox": 118, "vowel": [118, 122], "sling": 119, "daisha": 119, "nurseri": 119, "rhyme": 119, "buckl": 119, "shoe": 119, "mother": 119, "goos": 119, "forgiv": [119, 144], "gentl": [119, 120], "newest": 119, "2016": [119, 154, 158], "appet": 119, "scale_info": 119, "placehold": [119, 152], "prepend": [119, 129, 134], "1980": [119, 177], "141592653589793": 119, "718281828459045": 119, "yike": 119, "how_old": 119, "10101": 119, "hex": [119, 165], "astrophysicist": 119, "viral": 119, "fifth": [119, 140, 169], "10\u2075": 119, "1e5": 119, "100000": 119, "big_num": 119, "1_234_567_890": 119, "small_num": 119, "1234": [119, 168], "23457e": 119, "234568e": 119, "234000e": 119, "567": 119, "890": 119, "germani": 119, "sweden": 119, "setlocal": 119, "lc_all": 119, "heidi": 119, "olaf": 119, "font": 119, "invalid": [119, 120, 127], "ascii": [119, 122, 129, 171], "ho": 119, "3f": 119, "142": 119, "weapon": 119, "fanat": 119, "pope": 119, "spanish": [119, 163, 176], "inquisit": 119, "day_of_week": 119, "priweformat": 119, "oyster": 119, "1f": 119, "legaci": 119, "changeabl": 120, "interchang": [120, 127, 144], "guilti": 120, "my_nam": 120, "argument_nam": 120, "type_nam": 120, "argnam": 120, "lame": 120, "append_one_item_to_list": 120, "item_list": 120, "list_one_numb": 120, "dog_list": 120, "fuction": 120, "moe": [120, 126, 128], "larri": [120, 126, 128], "more_stoog": 120, "mixtur": 120, "print_food": 120, "soup": [120, 128], "splat": 120, "feast": 120, "traditional_thanksgiving_list": 120, "turkei": 120, "gravi": 120, "mash": 120, "vegan_thanksgiving_tupl": 120, "burger": 120, "meat": 120, "loaf": 120, "mushroom": 120, "turnip": 120, "vegan": [120, 127, 155, 157], "print_main_cours": 120, "meal": [120, 123], "main_cours": 120, "bagel": 120, "chili": 120, "chuck_norri": 120, "broken_funct": 120, "syntaxerror": [120, 134], "print_person_info": 120, "codes_in_python": 120, "onward": 120, "570": 120, "greet_flex": 120, "greet_posit": 120, "shemp": 120, "fate": [120, 156], "chess": [121, 165], "oppon": 121, "grandmast": 121, "validate_and_save_us": 121, "recast": 121, "validate_us": 121, "save_us": 121, "judgment": [121, 165], "user_is_subscrib": 121, "user_subscription_level": 121, "is_platinum_us": 121, "is_subscrib": 121, "subscription_level": 121, "platinum_level": 121, "refactor": 121, "platinum": 121, "condemn": 121, "noun": 121, "load_us": 121, "load_user_from_databas": 121, "buri": 121, "pirat": 121, "treasur": 121, "banish": [121, 126, 163], "autoincr": 121, "lookup_us": 121, "lint": [121, 168], "257": 121, "unambigu": 121, "ideolog": 121, "outweigh": [121, 155], "penalti": 121, "feasibl": [121, 177], "pragmat": 121, "trump": 121, "zealot": 121, "indebt": 121, "steve": 121, "macguir": 121, "precondit": 121, "count_sales_over_one_hundr": [121, 165], "progam_nam": 121, "oo": 121, "something_import": 121, "timeworn": 121, "1972": 121, "smalltalk": 121, "stateless": [121, 136], "reverse_list": 122, "odd_length": 122, "even_length": 122, "empty_list": 122, "half_list": 122, "idx": [122, 126], "orgin": 122, "remove_vowel": 122, "lv": 122, "pythn": 122, "aeiouaeiou": 122, "new_str": 122, "has_dupl": 122, "twelfth": 122, "print_powers_of_two": 122, "calculate_valu": 122, "12th": 122, "4096": 122, "display_box": 122, "xxxxx": 122, "fizzbuzz": [122, 134], "fizz": [122, 134], "hampshir": 122, "postal": 122, "ma": 122, "vt": 122, "nh": 122, "get_state_full_nam": 122, "state_cod": 122, "year_releas": 122, "display_movi": 122, "jacket": 122, "stanlei": 122, "kubrick": 122, "1987": 122, "trek": 122, "ii": 122, "wrath": 122, "khan": 122, "nichola": 122, "meyer": 122, "1982": 122, "cutoff": 122, "calculate_pric": 122, "small_order_r": 122, "medium_order_r": 122, "large_order_r": 122, "minimum_medium_ord": 122, "minimum_large_ord": 122, "81": 122, "acceler": 122, "still_fal": 122, "seconds_ago": 122, "starting_height": 122, "underwai": 123, "dice": [123, 144], "kwarg": 123, "shame": [124, 146, 147], "unbound": 124, "luminos": 124, "telescop": 124, "num_list": [124, 128, 129], "10000000": 124, "num_gener": 124, "ngener": 124, "118": 124, "119": 124, "330": 124, "414": 124, "437": 124, "rand_str": 124, "ascii_lowercas": [124, 144], "str_list": 124, "str_gener": 124, "56": [124, 140, 173], "305": 124, "yield": [124, 129, 143, 162], "presenc": [124, 143], "generaor": 124, "my_gener": 124, "demo_list": 124, "demo_gener": 124, "genexpr": 124, "0x107ef2500": 124, "town": [124, 126], "shrubberi": [124, 126], "gen": 124, "ranger": 124, "pos_count": 124, "neg_count": 124, "l1": 124, "l2": 124, "backward": [124, 126, 128, 168], "demo_rang": 124, "nsame": 124, "nnot": 124, "fivenumb": 124, "gen_exp": 124, "closest": 124, "0x1078cf4c0": 124, "get_random": 124, "hobbi": [125, 158, 166], "pal": 125, "lap": [125, 143], "alp": 125, "british": 125, "uncontoversi": 125, "happiest": 125, "eb": 125, "contradictori": 125, "softwaer": 125, "sucess": 125, "ist": 126, "1066": 126, "1969": 126, "last_index": 126, "funniest": 126, "indexoutofbound": 126, "stdio": 126, "nindex": 126, "nlist": 126, "substr": [126, 134, 140], "order_item": 126, "19098": 126, "brian": 126, "count_to_ten": 126, "num": 126, "400": [126, 142], "ascii_upercas": 126, "alphabet": [126, 138], "haystack": 126, "hai": 126, "nah": 126, "knight": 126, "ni": 126, "taskpython": 127, "jsonadvantagesdisadvantagesconvert": 127, "stringjson": 127, "dumpsextrem": 127, "dictionaryjson": 127, "loadsa": 127, "abovea": 127, "abovewrit": 127, "filejson": 127, "dumpa": 127, "aboveread": 127, "objectjson": 127, "loada": 127, "jsonapproach": 127, "json_str": 127, "conver": 127, "json_dictionari": 127, "file_nam": 127, "dicitonari": [127, 169], "outfil": 127, "infil": 127, "vaulu": 127, "mold": [127, 162], "firstnam": 127, "restaur": 127, "lunchtim": 127, "cuisin": 127, "bean2": 127, "__dict__": 127, "deseri": 127, "restaurantdecod": 127, "object_hook": 127, "restaurantencod": 127, "cava": 127, "cava_str": 127, "cava_copi": 127, "pydant": 127, "pharmaci": 128, "todo_list": 128, "prime_numb": 128, "all_my_list": 128, "some_list": 128, "yugoslavia": 128, "scheme": [128, 154], "japan": 128, "kenya": 128, "republ": 128, "list_nam": 128, "belgium": [128, 163], "grammarian": 128, "prestigi": 128, "long_word": 128, "first_four": 128, "last_thre": 128, "last_three_again": 128, "every_other_numb": 128, "congratul": [128, 135, 166], "other_list": 128, "short_list": 129, "long_list": 129, "long_list_2": 129, "dispar": 129, "mutat": 129, "ins": 129, "item1": 129, "item2": 129, "itemn": 129, "123": [129, 144], "n4": 129, "b2": 129, "bytes_object": 129, "bytearray_object": 129, "x00": 129, "compactli": 129, "string_el": 129, "items": 129, "wchar_t": 129, "utf": [129, 139, 143, 144], "111": 129, "double_arrai": 129, "fileiter": 129, "file_handl": 129, "readlin": 129, "giant_fil": 129, "1000000000": 129, "6914394581690431": 129, "num_arrai": 129, "3694779579527676": 129, "dip": [129, 176], "readinto": 129, "memoryview": 129, "list_numb": 129, "first_thre": 129, "stream": [129, 131, 138], "memoryview_numb": 129, "tolist": 129, "ndarrai": 129, "counterpart": 129, "apolog": [129, 143], "elapsed_tim": 129, "597": 129, "729": 129, "585": [129, 168], "051": 129, "hadamard": 130, "465": 130, "matrix_multiply_elementwis": 130, "tf": 130, "airplan": 130, "multipi": 130, "rember": 130, "prone": 130, "get_test_matrix": 130, "dimmens": 130, "tender": 131, "sqllite3": [131, 143, 161], "redowan": 131, "delowar": 131, "doggi": 131, "mors": 131, "whimsic": 131, "notabl": 131, "gunicorn": 131, "proxi": 131, "wishlist": 131, "kindl": 132, "704": 132, "unruli": 132, "drunken": 132, "eleph": 132, "jupysql": 132, "poster": 132, "ruffl": 132, "begun": [133, 155, 171, 176], "laundri": 133, "nickel": 133, "dime": 133, "harsh": [133, 146], "epdb": 133, "pgadmin": 133, "notori": 133, "ctype": 133, "dll": [133, 174, 175], "zillion": [133, 179], "nubmber": 134, "Will": 134, "exponent": 134, "nearest": [134, 152], "peanut": 134, "butter": 134, "jelli": 134, "nameerror": [134, 140], "shakespear": 134, "flashback": 134, "b_list": 134, "another_list": 134, "critical_object": 134, "hoorai": [134, 162], "1operatoroperand": 134, "2resultdiscussiontrueandtruetruefalseandtruefalseshort": 134, "circuitstrueandfalsefalsefalseandfalsefalseshort": 134, "circuitstrueortruetrueshort": 134, "circuitsfalseortruetruetrueortruetrueshort": 134, "circuitsfalseortruetruen": 134, "anottruefalsesimpl": 134, "negationn": 134, "anotfalsetruesimpl": 134, "idiom": [134, 169, 177, 179], "some_kei": 134, "some_dictionari": 134, "my_object": 134, "do_someth": [134, 143], "some_object": 134, "early_primes_set": 134, "early_primes_list": 134, "0b": [134, 165], "0011": 134, "0101": 134, "0001": 134, "0111": 134, "0b0011": 134, "0b0101": 134, "0b1101": 134, "0b1000": 134, "1101": 134, "complement": [134, 150, 163], "unari": 134, "sixteen": 134, "tusk": 134, "wheel": [135, 176], "build_meta": 135, "518": 135, "hellosetup": [135, 175], "hello_setuptool": 135, "module1": 135, "get_article_url": 135, "rude": [135, 156], "humbl": 135, "test_hellosetup": 135, "sensibl": 135, "test_get_article_url": 135, "package_dir": 135, "install_requir": 135, "twine": [135, 175], "whl": 135, "tar": [135, 139, 150], "gz": [135, 150], "hellosetuptools_test": 135, "rhetor": 135, "cooler": 135, "mate": 135, "regist": 135, "fridg": 135, "beverag": 135, "slick": 135, "long_descript": 135, "long_description_content_typ": 135, "bsd": 135, "project_url": 135, "ream": 135, "dba": 136, "ripe": 136, "mysql": [136, 160], "hibern": 136, "h2": 136, "misconcept": [136, 168], "ddl": 136, "brainstorm": 137, "clich\u00e9": 137, "truism": 137, "acut": 137, "presuppos": 137, "intim": 137, "crystal": 137, "teaser": 137, "entertain": 137, "justif": 137, "qt": 137, "orc": [138, 171], "pa": 138, "df_taxi": 138, "lenox": 138, "west": 138, "un": [138, 156], "turtl": 138, "bai": 138, "manhattan": 138, "cash": 138, "villag": 138, "hudson": 138, "sq": 138, "yorkvil": 138, "midtown": 138, "from_": 138, "arrow_taxi": 138, "from_panda": 138, "48": 138, "58": 138, "criteria": 138, "high_far": 138, "130": 138, "143": 138, "doublescalar": 138, "getsizeof": 138, "3019880": 138, "982757": 138, "operationspeedfil": 138, "sizedf_taxi": 138, "ms191": 138, "788panda": 138, "msdf_taxi": 138, "ms275": 138, "765panda": 138, "to_feather2": 138, "ms428": 138, "818panda": 138, "read_feather1": 138, "to_orc7": 138, "ms751": 138, "897panda": 138, "read_orc5": 138, "to_excel874": 138, "ms540": 138, "683panda": 138, "read_excel560": 138, "to_csv32": 138, "ms900": 138, "405panda": 138, "read_csv8": 138, "worst": [138, 179, 181], "191": 138, "788": 138, "4x": 138, "stabil": [138, 142], "flight": [138, 163], "odbc": 138, "jdbc": 138, "detractor": 139, "relianc": 139, "winreg": 139, "putenv": 139, "getcwd": 139, "chdir": 139, "darwin": [139, 171], "win32": 139, "version_info": 139, "getopt": 139, "win32_edit": 139, "mac_ver": 139, "tempfil": 139, "copytre": 139, "filecmp": 139, "difflib": 139, "gzip": 139, "bz2": 139, "lzma": 139, "tarfil": 139, "sword": 139, "subprocess_demo": 139, "file_list": 139, "lister": [139, 177], "call_subprocess": 139, "capture_output": 139, "display_summari": 139, "suprocess": 139, "stderr": 139, "returncod": 139, "felin": 139, "untrust": 139, "supbrocess": 139, "completedprocess": 139, "no_such_fil": 139, "private_work": 139, "524": 139, "calledprocesserror": 139, "retcod": 139, "handle_except": [139, 143], "print_except": 139, "format_exc": 139, "print_last": 139, "stack_trac": 139, "print_cal": 139, "splitlin": 139, "automag": 139, "slist": 139, "tripl": 140, "my_str": 140, "multilinestr": 140, "indexerror": 140, "2nd": 140, "nslice": 140, "5th": 140, "hel": 140, "nmy": 140, "operationoperatorassign": 140, "membership": [140, 169], "checkinginnot": 140, "inescap": 140, "str1": 140, "str2": 140, "nthi": 140, "str3": 140, "str4": 140, "helloworld": 140, "memebership": 140, "nhello": 140, "printabl": 140, "operatordescript": 140, "dsign": 140, "uunsign": 140, "ccharact": 140, "sstring": 140, "ffloat": 140, "560000": 140, "functiondescript": 140, "stringstr": 140, "incomprehens": 140, "itisnot_str": 140, "nthe": 140, "methoddescript": 140, "letterlow": 140, "stringupp": 140, "stringencod": 140, "stringreplac": 140, "insidesplit": 140, "leftjoin": 140, "stringtitl": 140, "stringindex": 140, "wanna": 140, "innput": 140, "getpass": 140, "str_name": 140, "phrase": 140, "wooow": 140, "split_str": 140, "ndisplai": [140, 170], "whitespac": [140, 168, 177, 181], "first_char": 140, "last_char": 140, "except_first": 140, "except_last": 140, "321": 140, "join_str": 140, "\u0441ompar": 140, "queen_str": 140, "strengthen": [140, 182], "youtu": [141, 149], "b_j": 141, "ix0caha": 141, "cheapskat": 142, "mathemetician": 142, "3x2": 142, "nx1": 142, "perpetu": 142, "readtabl": 142, "variablenam": 142, "usercount": 142, "shameless": 142, "tiob": [142, 150, 177], "outrank": 142, "kotlin": [142, 177, 181], "mathwork": 142, "149": [142, 152, 163], "overnight": 142, "froze": 142, "piecem": 142, "prod_siz": 142, "tensorprod": 142, "disp": 142, "fprintf": 142, "5f": 142, "etim": 142, "tensor_cas": 142, "tensordot": 142, "testpythonmatlab2": 142, "455": 142, "246312": 142, "285": 142, "122052": 142, "547162": 142, "2135averag": 142, "315": 142, "5000": 142, "matrix_cas": 142, "matix": 142, "testpythonmatlaboctave2": 142, "214": 142, "708142": 142, "679952": 142, "692312": 142, "958742": 142, "672012": 142, "827182": 142, "254": 142, "665442": 142, "894962": 142, "64445averag": 142, "264": 142, "732": 142, "eigenvalu": 142, "eig": 142, "eigen_cas": 142, "eigval": 142, "benchmarkspythonmatlaboctave6": 142, "588": 142, "9087211": 142, "175746": 142, "528": 142, "4944610": 142, "413386": 142, "51610": 142, "794496": 142, "448": 142, "3791810": 142, "474836": 142, "688": 142, "3505711": 142, "88499averag": 142, "598": 142, "5310": 142, "pronounc": 142, "code_benchmark": 142, "eleven": 142, "abysm": 142, "proportion": 142, "rear": 142, "r2022b": 142, "cohen": 142, "shed": [142, 168], "lag": [142, 146, 153, 160], "instabl": 142, "textiowrapp": 143, "brag": 143, "not_pres": 143, "acquir": [143, 163], "urllib": 143, "create_connect": 143, "_close": 143, "afterward": 143, "w3": 143, "line_one_length": 143, "setdefaulttimeout": 143, "sendal": 143, "reciev": 143, "recv": 143, "ieee": 143, "754": 143, "awkward": [143, 147], "getcontext": 143, "prec": 143, "localcontext": 143, "decimalcontext": 143, "tset": 143, "tcalcul": 143, "tinsid": 143, "1428571428571428571428571429": 143, "ffrom": 143, "abstractcontextmanag": 143, "democontextmanag": 143, "raise_except": 143, "houston": 143, "ex_typ": 143, "ex_valu": 143, "ex_traceback": 143, "safeti": 143, "dutifulli": 143, "falsi": 143, "dcm": 143, "eat_except": 143, "mcm": 143, "illumin": 143, "wholesal": 143, "__aenter__": 143, "resource_aquir": 143, "__aexit__": 143, "resource_releas": 143, "contextmanag": 143, "asynccontextmanag": 143, "managed_resourc": 143, "resource_manag": 143, "resourcemanag": 143, "resource_avail": 143, "tdid": 143, "WITH": 143, "unmanag": 143, "litter": 143, "sqlite3": 143, "mang": 143, "putvalu": 143, "getvalu": 143, "db_file": 143, "keyvalu": 143, "do_setup": 143, "varchar": 143, "fetchon": 143, "checker": [143, 168], "urlopen": 143, "getcod": 143, "erro": 143, "needless": [143, 178], "suppressor": 143, "chicken_littl": 143, "sky": 143, "discern": 143, "silent": 143, "shuffl": 144, "slot": [144, 169], "sanit": 144, "cryptograph": 144, "genuin": 144, "cryptographi": 144, "seeded_1": 144, "seeded_2": 144, "randomly_seed": 144, "655": 144, "956": 144, "coincident": 144, "506": 144, "systemrandom": 144, "getstat": 144, "setstat": 144, "urandom": 144, "betewen": 144, "gaussian": 144, "iq": 144, "legitim": 144, "gauss": 144, "121": 144, "94": 144, "106": 144, "ascii_lett": 144, "four_digit": 144, "ten_mixed_cas": 144, "assort": [144, 162], "twenty_assort": 144, "8782": 144, "plzyoxfloq": 144, "mnsksf": 144, "jcg": 144, "token_byt": 144, "x05p": 144, "xc6a": 144, "x87": 144, "xf9": 144, "xa9": 144, "codepoint": 144, "token_hex": 144, "529af33afcc8acab096a": 144, "token_urlsaf": 144, "base64": 144, "shorten": [144, 177], "gfn2ngjo7izmpyxs5tvu": 144, "widespread": [144, 150], "collis": 144, "vanishingli": 144, "967909e3": 144, "7231": 144, "4040": 144, "aae4": 144, "8b6b2fb96a0b": 144, "uuid1": 144, "uuid4": 144, "122": [144, 181], "trillion": 144, "bfc89f3e": 144, "e6ab": 144, "11ec": 144, "abfc": 144, "4a9b744d17b8": 144, "025586c2": 144, "50ed": 144, "41a6": 144, "ae31": 144, "bf96b9d79df2": 144, "auto": [144, 168], "dpi": 144, "lifer": [145, 146, 176], "meetup": 145, "alcohol": [145, 146, 147], "recoveri": [145, 146, 176], "distort": 146, "climb": 146, "steepli": 146, "swamp": 146, "criticsm": 146, "alchol": 146, "spiral": 146, "badli": 146, "angri": 146, "victim": 146, "aa": [146, 147, 158], "fellowship": 146, "sober": 146, "uncondit": 146, "interplai": 146, "ego": 146, "unworthi": [146, 163], "miscreant": 146, "imperfect": [146, 171], "anxieti": 146, "linger": 146, "therapi": 146, "stigma": 147, "interlink": 147, "pb": 147, "withdraw": 147, "alevi": 147, "identif": 147, "sobrieti": [148, 158], "7jbdhtlpinu": 149, "unpopular": 150, "steeper": 150, "clang": [150, 171], "xcode": 150, "mitig": 150, "clion": 150, "microbit": 150, "gdb": 150, "m2": 150, "gcc_make_tutori": 150, "install_cmak": 150, "cmake_vers": 150, "wget": 150, "kitwar": 150, "ref": 150, "xfvz": 150, "gcc_cmake": 150, "ahem": 150, "AS": 150, "gcc_cmake_tutori": 150, "truncat": 150, "buildx": 150, "larger_log": 150, "buildkit_step_log_max_s": 150, "50000000": 150, "gcc_make_tutorial_sourc": 150, "c3aa841b06c8": 150, "step5": 150, "mathfunct": 150, "tutorialconfig": 150, "cxx": 150, "pallet": 150, "step_2": 150, "cppdbg": 150, "workspaceroot": 150, "step2_build": 150, "stopatentri": 150, "filedirnam": 150, "externalconsol": 150, "mimod": 150, "setupcommand": 150, "ignorefailur": 150, "disassembli": [150, 168], "annoyingli": 150, "flawlessli": [150, 170], "sought": 151, "grief": 151, "fsolv": 151, "f_scipy_difference_of_squar": 151, "cancel": [151, 162], "f_scipy_quadrat": 151, "quadadrat": 151, "solvabl": 151, "75361538": 151, "75361533": 151, "lm": 151, "1966": 151, "maslow": 151, "esteem": 151, "intact": [151, 169], "misbegotten": 151, "corollari": 151, "cure": 151, "unequivoc": 151, "scipy32": 151, "438": 151, "sympy427": 151, "sagemath835": 151, "finer": 151, "gist": 152, "githubusercont": 152, "256c7e3d37f132ff23f9b49b4ea34f71": 152, "4d938fd1f81b8d2a6d44b26f6e0b5563104f5cbf": 152, "145": 152, "146": 152, "148": 152, "petal_length": 152, "petal_width": 152, "selector": 152, "sepal_length": 152, "target_nam": 152, "sepal_width": 152, "mast": 152, "fell": [153, 163], "edutool": 153, "cachet": 153, "fleet": 153, "consumpt": 154, "infrequ": 154, "franticli": 154, "retweet": 154, "mindlessli": 154, "jalape\u00f1o": 154, "salt": 154, "webmast": 154, "reciproc": 154, "king": 154, "facebook": [154, 155, 157, 158, 163], "ev": [154, 155], "denial": 154, "bait": 154, "perceiv": 155, "snapchat": 155, "instagram": 155, "frustrat": 155, "bogu": 155, "grate": 155, "commenc": 155, "sangha": 155, "recreation": 155, "rss": 155, "buddhism": 155, "diet": 155, "crank": 155, "masterpiec": 155, "narcissist": 155, "introspect": 155, "defunct": [156, 157], "kidmil": [156, 157], "ill": 156, "vultur": 156, "hunch": 156, "neck": 156, "luddit": 156, "mall": 156, "brisk": 156, "pace": [156, 163, 182], "mile": [156, 157, 182], "toler": 156, "worn": 156, "clinic": 156, "diagnosi": 156, "carv": 156, "blast": 156, "cubevil": 156, "fret": 157, "readership": 157, "daughter": 157, "waffl": 157, "foggi": 157, "weather": 157, "detract": 157, "blocker": [157, 158], "clickbait": 157, "facelinktweet": 157, "leftov": 157, "cigarett": [157, 158], "inertia": 157, "psycholog": 157, "inconveni": [157, 160], "huff": 158, "nightclub": 158, "graciou": 158, "rub": 158, "nose": 158, "newfound": 158, "anybodi": 158, "zuckerberg": 158, "convict": 158, "jack": 158, "theirs": [158, 169], "unemploi": 158, "disavow": 158, "forevermor": 158, "lifelong": 158, "german": 158, "hermit": 158, "trickl": 158, "metaphor": [158, 179], "farmvil": 158, "postcard": 158, "mail": 158, "gather": 159, "1970": 160, "backbon": 160, "sixth": [160, 169], "mindshar": 160, "to_sql": 160, "myisam": 160, "innodb": 160, "dialect": 160, "sqldf": 160, "earn": [160, 171], "desc": [160, 171], "top_tip": 160, "oltp": 160, "ipython_sql": 160, "sqlmagic": 160, "autopanda": 160, "displaycon": 160, "somefil": 160, "titan": 160, "disast": 160, "camaraderi": 160, "catastroph": 160, "survivors_by_far": 160, "all_passeng": 160, "percent_surviv": 160, "egalitarian": 160, "resultset": 160, "survivors_by_fare_r": 160, "df_survivor": 160, "reentrant": 160, "shut": [160, 176], "endless": 161, "selfi": 161, "post_tabl": 161, "declarativebas": 161, "mapped_column": 161, "mappedasdataclass": 161, "__tablename__": 161, "primary_kei": 161, "pancak": 161, "flapjack": 161, "foreign": [161, 163], "posts_tabl": 161, "foreignkei": 161, "posts_to_categori": 161, "category_id": 161, "post_id": 161, "back_popul": 161, "create_engin": 161, "sqllite": 161, "pysqlit": 161, "create_t": 161, "__table__": 161, "checkfirst": 161, "get_categories_from_json": 161, "get_posts_from_json": 161, "save_categori": 161, "save_post": 161, "post_categori": 161, "overwrit": [161, 171], "43": 161, "save_categrori": 161, "noteworthi": 162, "appeal": 162, "preconfigur": 162, "delici": [162, 175], "polynomi": 162, "some_express": 162, "mathjax": 162, "print_latex": [162, 170], "tractabl": [162, 176], "liberti": 162, "srepr": 162, "pow": 162, "nurtur": 163, "vehicl": 163, "constitut": 163, "ism": 163, "ageism": 163, "WIth": 163, "ring": 163, "punch": 163, "extravag": 163, "millionair": 163, "sal": 163, "quizz": 163, "gamifi": 163, "overst": 163, "lend": 163, "frighten": [163, 179], "parenthood": 163, "fourteenth": 163, "ninth": 163, "finnei": 163, "leaf": 163, "clep": 163, "texa": 163, "ce": 163, "amusingli": 163, "sympath": 163, "trigonometr": 163, "abandon": 163, "troll": 163, "econom": 163, "semest": 163, "deck": 163, "whoever": 163, "woman": [163, 166], "nasa": 163, "katherin": 163, "glenn": 163, "trajectori": 163, "apolo": 163, "apollo": 163, "crew": 163, "women": 163, "repli": 163, "presidenti": 163, "psychologist": 163, "carol": 163, "dweck": 163, "fierc": 163, "protect": [163, 172], "chines": 163, "talent": 163, "hardwir": 163, "pew": 163, "malta": 163, "slovenia": 163, "incent": 163, "maltes": 163, "pete": 163, "wildflow": 163, "wheatfield": 163, "weed": 163, "dispel": 163, "advent": 163, "trait": 163, "karen": 163, "upset": 163, "pimsleur": 163, "158": 163, "bachelor": 163, "680": 163, "statista": 163, "lollygag": 163, "foolish": 163, "masteri": 163, "courag": 163, "ardent": 163, "etsi": 163, "norman": 163, "conquest": 163, "resign": 163, "adventur": [165, 166, 178], "reus": 165, "compartment": 165, "clase": 165, "parameter_1": 165, "parameter_n": 165, "statement_1": 165, "statement_n": 165, "stricter": 165, "log_info": 165, "n1": 165, "log_result": 165, "octal": 165, "int_to_str": 165, "target_bas": 165, "0x": 165, "0d": 165, "0o": 165, "1010": 165, "ff": 165, "innermost": 165, "12345": 165, "number_as_str": 165, "count_sales_over_one_hund": 165, "count_high_dollar": 165, "count_low_dollar": 165, "implicitli": 165, "freecodecamp": 166, "outfit": 166, "beaver": 166, "100daysofcod": 166, "finit": 166, "hype": 166, "imit": 166, "exorbit": 166, "sizzl": 166, "steak": 166, "fat": 166, "sheesh": 167, "parenthesi": [167, 168], "unbalanc": 167, "f7": 167, "infer": 168, "crutch": 168, "reassign": 168, "show_variable_us": 168, "load_const": 168, "store_fast": 168, "load_fast": 168, "return_valu": 168, "ython": 168, "soapbox": [168, 179], "unfairli": 168, "lstrip": 168, "maketran": 168, "partit": 168, "trim_left": 168, "get_us": 168, "set_shipping_opt": 168, "greet_us": 168, "484": 168, "forbid": 168, "conform": 168, "333": 168, "wavi": 168, "signal": 168, "foolproof": 168, "get_list": 168, "get_blog_info": 168, "list_of_int": 168, "cf": 168, "first_fiv": 168, "2025": 168, "aliasnam": 168, "mapinttoint": 168, "mapstringtoint": 168, "get_ag": 168, "dad": 168, "show_expir": 168, "expir": 168, "2059": 168, "some_funct": 168, "aptli": 168, "compare_str": 168, "my_list": 169, "setvalu": 169, "foghorn": 169, "cat_in_the_hat_charact": 169, "thing_1": 169, "thing_2": 169, "frozenset": 169, "underground": 169, "triplet": 169, "middle_initi": 169, "address_line_1": 169, "address_line_2": 169, "necessit": 169, "person1": 169, "person2": 169, "field_nam": 169, "a_point_dict": 169, "p3": 169, "default_factori": 169, "fifo": 169, "lifoqueu": 169, "priorityqueu": 169, "prioriti": 169, "sortabl": 169, "maxsiz": 169, "timeout": 169, "producer_funct": 169, "consumer_funct": 169, "dequ": 169, "hallmark": 169, "bizarr": 169, "breviti": 169, "config_set": 169, "data_cent": 169, "atlanta": 169, "log_level": 169, "app_nam": 169, "command_lin": 169, "hyperglobalmeganet": 169, "charlott": [169, 176], "config_map": 169, "overrod": [169, 172], "kindergarten": 169, "venn": 169, "scari": 169, "low_subset": 169, "codeequival": 169, "resulttest": 169, "low2": 169, "high2": 169, "hightruefalsetruefind": 169, "isdisjoint": 169, "falsefind": 169, "amp": 169, "lowlow": 169, "low_subsetlow_subset": 169, "issubset": 169, "issuperset": 169, "truetruecombin": 169, "low_subsethigh": 169, "symmetric_differ": 169, "emptylen": 169, "0len": 169, "0falsetru": 169, "defrost": 169, "microwav": 169, "glossari": 169, "citat": 169, "typeset": 170, "latexifi": 170, "lim_": 170, "to0": 170, "discontinu": 170, "usepackag": 170, "amsmath": 170, "lll": 170, "tex": 170, "pdf": 170, "jupyterlab_latex": 170, "mapto": 170, "5x": 170, "bmatrix": 170, "arraytyp": 170, "one_d_arrai": 170, "as_row": 170, "as_column": 170, "sparksess": 171, "jdk": 171, "jre": 171, "java_hom": 171, "____": 171, "_____": 171, "sparkcontext": 171, "pyspark_parquet": 171, "crossjoin": 171, "getorcr": 171, "current_d": 171, "saniti": 171, "printschema": 171, "commonplac": 171, "sparksql": 171, "cabbi": 171, "top_far": 171, "createorreplaceglobaltempview": 171, "global_temp": 171, "ish": 171, "satisfactori": 171, "conf": 171, "eagerev": 171, "taxis_panda": 171, "pandas_api": 171, "emul": 171, "dataframewrit": 171, "sidebar": 171, "topanda": 171, "top_fares_panda": 171, "taxis_by_pickup_borough": 171, "partitionbi": 171, "unpartit": 171, "91": 171, "saveast": 171, "taxis_by_pickup": 171, "rdbm": 171, "total_far": 171, "createt": 171, "runner": 172, "parameter": 172, "bingo": 172, "pom": 172, "contextconfigur": 172, "springframework": 172, "asserttru": 172, "simpletest": 172, "sometest": 172, "runwith": 172, "abstracttestngspringcontexttext": 172, "junit4": 172, "springjunit4classrunn": 172, "autowir": 172, "applicationcontext": 172, "userstori": 172, "contexttest": 172, "suppresswarn": 172, "springjavaautowiringinspect": 172, "getbean": 172, "testusernotnul": 172, "assertnotnul": 172, "getus": 172, "testuserstorynotfromcontext": 172, "assertnul": 172, "testnonspringuserdefaultrol": 172, "getrol": 172, "supergeniu": 172, "wile": 172, "coyot": 172, "testuserroleisasexpect": 172, "pentaho": 173, "provision": 173, "vm": 173, "ami": 173, "virtualbox": 173, "ador": 173, "cento": 173, "vagrantfil": 173, "playbook": 173, "inventori": 173, "vagantfil": 173, "forwarded_port": 173, "private_network": 173, "192": 173, "168": 173, "ansible_loc": 173, "inventory_path": 173, "ansible_connect": 173, "misunderstand": 174, "javac": [174, 177], "cod": 174, "bashrc": 174, "pyclean": 174, "mojo": 174, "rusti": 174, "namespac": 175, "package_demo": 175, "package1": 175, "mymodul": 175, "package2": 175, "package3": 175, "package4": 175, "pathinfo": [175, 177], "pathprint": 175, "package5": 175, "some_crazy_random_nam": 175, "my_project": 175, "status_cod": 175, "reactiv": 175, "sooner": 175, "affection": 175, "lessen": 175, "python310": 175, "some_depend": 175, "lamba": 175, "conceit": 176, "absent": 176, "fifteen": 176, "podcast": 176, "radioambulant": 176, "insofar": 176, "generalist": 176, "penal": 176, "eschew": 176, "fritter": 176, "unorgan": 176, "primordi": 176, "relentless": 176, "parad": 176, "arcan": 176, "undocu": 176, "voodoo": 176, "mishmash": 176, "wxwidget": 176, "thwart": 176, "ungraci": 176, "slint": 176, "joplin": 176, "conven": 176, "hodg": 176, "podg": 176, "quip": 177, "misl": 177, "unremark": 177, "eclect": 177, "rubbish": 177, "1995": 177, "outgrowth": 177, "quantit": 177, "financi": 177, "spawn": [177, 181], "sagemak": 177, "stretch": 177, "sojourn": 177, "dogfood": 177, "botocor": 177, "tandem": 177, "unglamor": 177, "conduct": 177, "predomin": 177, "eras": 177, "multicor": 177, "applet": 177, "activex": 177, "android": 177, "hinder": 177, "disclaim": 178, "matricul": 178, "scour": 178, "codger": 178, "codgerli": 178, "mah": 178, "requisit": 178, "traumat": 178, "delic": 178, "gpa": 178, "shenanigan": 178, "panti": 178, "waist": 178, "wit": 178, "hasten": 179, "reassur": 179, "ranoutofsometh": 179, "cupboard": 179, "nomoresomethingexcept": 179, "cap": 179, "boat": 179, "inconsider": 179, "ex1": 179, "ex2": 179, "juic": 179, "downstream": 179, "customiz": 179, "systemexit": 179, "keyboardinterrupt": 179, "impli": 179, "chameleon": 179, "dozen": 179, "404": 179, "boto3error": 179, "grunt": 179, "felloffsoapboxerror": 179, "heartbreak": 180, "psoriasi": 180, "tape": 180, "shirt": 180, "negoti": 180, "euphem": 180, "amateur": 180, "unpaid": 180, "dumber": 180, "anger": 181, "allegedli": 181, "616": 181, "185": 181, "613": 181, "obvious": 181, "ecmascript": 181, "coffeescript": 181, "consecut": 182}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"A": [0, 6, 7, 8, 9, 26, 39, 40, 41, 49, 53, 59, 61, 66, 72, 75, 79, 87, 93, 99, 102, 104, 106, 108, 110, 111, 113, 114, 116, 118, 123, 125, 127, 128, 137, 143, 150, 162, 168], "coop": [0, 91, 108], "code": [0, 13, 26, 27, 40, 43, 50, 51, 53, 55, 60, 64, 70, 76, 78, 79, 103, 108, 113, 133, 134, 143, 150, 153, 166, 168, 170, 174, 175], "bootcamp": [0, 91], "apach": 1, "airflow": 1, "python": [1, 3, 6, 7, 9, 19, 20, 21, 22, 23, 24, 25, 30, 32, 39, 41, 43, 45, 46, 48, 49, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 82, 87, 91, 93, 95, 100, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 161, 162, 163, 165, 167, 168, 169, 170, 171, 174, 175, 177, 179, 181, 182], "etl": 1, "schedul": 1, "made": [1, 143, 144, 162], "easi": [1, 58, 70, 73, 143, 144, 162, 169], "introduct": [1, 3, 6, 9, 26, 35, 40, 43, 65, 72, 110, 113, 114, 117, 118, 120, 123, 128, 137, 140, 144, 150, 152, 165, 168, 171], "system": [1, 4, 100, 113], "requir": [1, 101], "instal": [1, 39, 56, 61, 64, 65, 66, 67, 100, 101, 104, 111, 135, 138, 162, 167, 171, 175], "The": [1, 4, 5, 6, 9, 26, 29, 35, 37, 41, 45, 46, 50, 52, 53, 56, 58, 61, 67, 68, 73, 75, 76, 77, 78, 79, 86, 89, 91, 92, 93, 98, 99, 110, 112, 113, 114, 115, 117, 118, 119, 120, 124, 125, 126, 127, 130, 134, 135, 137, 139, 143, 144, 146, 151, 152, 158, 161, 165, 166, 167, 168, 169, 171, 172, 175, 177, 178, 179, 182], "web": [1, 6, 9, 28, 29, 32, 68, 92, 93, 132, 137], "interfac": [1, 35, 133], "understand": [1, 43, 53, 112, 168, 175], "how": [1, 8, 35, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 78, 86, 98, 101, 112, 113, 119, 124, 125, 129, 130, 133, 139, 140, 144, 149, 171, 174, 175], "dag": 1, "task": [1, 103, 113], "ar": [1, 6, 7, 35, 45, 58, 67, 70, 72, 77, 119, 120, 124, 128, 134, 137, 140, 144, 169, 174], "relat": [1, 43, 113], "2": [1, 35, 64, 100, 109, 160, 175], "0": 1, "taskflow": 1, "api": [1, 74, 75], "mix": 1, "style": [1, 68, 119], "legaci": 1, "an": [1, 26, 35, 40, 49, 69, 72, 78, 96, 98, 99, 106, 108, 110, 113, 117, 119, 124, 126, 127, 134, 135, 137, 143, 151, 165, 170, 176], "exampl": [1, 7, 44, 96, 99, 112, 115, 117, 118, 134, 135, 139, 140, 143, 161, 165, 172, 173], "discuss": [1, 6, 41, 127, 138, 163], "directori": [1, 4, 117, 150], "configur": [1, 4, 43, 52, 61, 71, 73, 106, 110, 135, 169], "revisit": [1, 151], "log": 1, "close": [1, 3, 6, 26, 43, 52, 53, 56, 61, 73, 75, 87, 113, 117, 119, 121, 127, 138, 142, 143, 144, 160, 161, 162, 167, 171, 177, 179], "thought": [1, 3, 6, 26, 35, 39, 41, 43, 52, 53, 56, 58, 59, 61, 68, 73, 75, 79, 87, 101, 103, 104, 106, 113, 117, 119, 121, 127, 138, 142, 143, 144, 161, 162, 167, 171, 175, 177, 179], "site": [2, 20, 34], "index": [2, 20, 42, 96, 126, 152], "altern": [3, 75, 162], "panda": [3, 18, 42, 52, 55, 59, 62, 70, 75, 98, 99, 111, 138, 152, 160], "polar": [3, 75], "advantag": [3, 112, 124, 142], "over": 3, "transit": 3, "from": [3, 4, 8, 35, 42, 48, 58, 67, 69, 70, 71, 76, 99, 106, 112, 116, 117, 125, 127, 139, 150, 165, 172], "creat": [3, 4, 5, 39, 40, 41, 52, 71, 88, 96, 98, 99, 101, 106, 113, 114, 115, 117, 128, 135, 140, 150, 161, 175, 179], "displai": [3, 41, 119, 168, 171], "datafram": [3, 42, 70, 75, 98, 99, 138, 160, 171], "load": [3, 75, 99, 117, 161], "data": [3, 9, 41, 42, 52, 59, 62, 68, 70, 75, 76, 98, 99, 111, 112, 114, 152, 161], "file": [3, 4, 43, 61, 75, 96, 98, 100, 117, 127, 170, 171, 174], "convert": [3, 55], "get": [3, 4, 26, 39, 42, 50, 51, 53, 66, 67, 98, 99, 100, 101, 105, 106, 113, 117, 126, 168], "basic": [3, 4, 43, 56, 61, 66, 71, 82, 88, 99, 105, 106, 113, 116, 119, 121, 139, 143, 161, 168], "inform": [3, 35, 41], "about": [3, 9, 54, 57, 91, 102], "gener": [3, 19, 68, 76, 103, 113, 119, 124, 142, 144], "comparison": [3, 7, 134], "overlap": 3, "select": [3, 61, 69, 99, 152], "In": [3, 7, 48, 52, 58, 67, 70, 78, 86, 110, 113, 116, 117, 118, 126, 134, 137, 139, 143, 163, 165, 170, 174, 179], "learn": [4, 13, 26, 35, 57, 68, 70, 76, 77, 78, 101, 149, 163], "command": [4, 53, 61, 66, 106, 139, 141], "line": [4, 53, 62, 87, 88, 106, 139], "skill": 4, "rock": 4, "your": [4, 52, 57, 58, 59, 67, 71, 86, 90, 100, 101, 143, 153, 175, 181], "workflow": [4, 66], "core": [4, 59], "start": [4, 39, 40, 42, 57, 58, 66, 67, 69, 78, 99, 101, 105, 106, 162, 168], "termin": [4, 65], "session": 4, "open": 4, "prompt": 4, "comput": [4, 35, 68], "editor": [4, 103, 142], "id": [4, 68, 72, 103, 167], "navig": 4, "where": [4, 77, 169, 175, 177], "am": 4, "i": [4, 5, 26, 27, 35, 45, 49, 52, 53, 54, 55, 61, 67, 68, 69, 70, 72, 77, 78, 97, 98, 100, 101, 102, 103, 104, 108, 112, 118, 119, 124, 125, 130, 134, 136, 137, 139, 151, 153, 163, 165, 168, 171, 175, 176, 177], "folder": [4, 117, 174], "move": [4, 39, 172], "around": [4, 28, 29, 32, 92, 93, 131, 132, 137], "home": [4, 79, 117, 163], "work": [4, 52, 59, 70, 78, 96, 99, 106, 117, 119, 124, 127, 137, 139, 143, 147, 162, 163], "With": [4, 5, 6, 39, 41, 48, 50, 52, 53, 54, 59, 61, 66, 67, 70, 72, 75, 99, 105, 112, 113, 114, 115, 118, 121, 122, 126, 127, 128, 133, 135, 138, 143, 144, 150, 160, 162, 163, 167, 169, 171, 172, 174], "environ": [4, 39, 40, 58, 64, 65, 68, 70, 75, 101, 105, 133, 135, 141, 175], "variabl": [4, 117, 120, 168], "set": [4, 58, 59, 66, 73, 74, 75, 99, 133, 169, 172, 175], "path": [4, 78, 100, 117, 175], "ad": [4, 26, 41, 52, 70, 71, 100, 113, 135, 143], "user": [4, 41, 54, 116, 117, 177, 179], "window": [4, 64, 65, 100, 141], "": [4, 5, 8, 33, 52, 53, 66, 70, 78, 85, 93, 106, 111, 113, 116, 117, 124, 139, 142, 150, 168, 171, 175, 178], "mac": [4, 66, 141, 167], "linux": [4, 141], "explor": [4, 46, 49, 62, 82, 112, 117, 130, 168], "Their": 4, "content": [4, 98], "copi": [4, 121], "list": [4, 48, 68, 70, 114, 117, 118, 120, 124, 128, 129, 168], "all": [4, 9, 45, 61], "discov": 4, "shell": [4, 139], "run": [4, 26, 53, 61, 67, 68, 69, 72, 100, 107, 108, 111, 115, 136, 139, 149, 150], "program": [4, 53, 57, 63, 76, 97, 102, 139, 147, 153, 181], "batch": 4, "help": [4, 133, 168], "tool": [4, 24, 39, 53, 59, 68, 70, 76, 100, 101, 110, 111, 130, 139], "most": [4, 167, 169], "us": [4, 5, 6, 7, 34, 40, 41, 45, 49, 52, 53, 54, 55, 56, 61, 62, 65, 66, 72, 74, 77, 85, 95, 96, 98, 99, 100, 101, 105, 106, 109, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 127, 129, 130, 138, 143, 144, 150, 152, 160, 162, 167, 168, 169, 170, 171, 172, 175, 177], "v": [4, 5, 39, 40, 43, 49, 50, 53, 69, 75, 86, 88, 100, 101, 103, 112, 113, 114, 118, 119, 129, 134, 138, 142, 144, 150, 151, 153, 156, 162, 168, 170, 171, 179], "my": [5, 66, 119, 124, 142, 176], "journei": 5, "beauti": [5, 45], "document": [5, 121, 168], "jupyterbook": 5, "why": [5, 57, 100, 103, 108, 111, 124, 136, 137, 151, 168, 174, 175, 177], "thi": [5, 41, 57, 60, 97, 130, 137, 151], "import": [5, 40, 61, 170, 175, 177], "To": [5, 8, 49, 53, 54, 56, 57, 58, 60, 61, 70, 77, 78, 79, 114, 119, 127, 133, 137, 163, 171], "me": [5, 125], "sphinx": 5, "repositori": [5, 43, 71, 174], "github": [5, 40, 51, 64, 71, 78, 91], "page": [5, 71], "starter": [5, 26, 61, 94, 111], "resolv": 5, "issu": [5, 104, 137], "cookiecutt": 5, "book": [5, 34, 59, 132, 163], "result": [5, 6, 101], "so": 5, "far": 5, "benchmark": [6, 53, 97, 142], "rust": 6, "async": 6, "server": [6, 73], "perform": [6, 69, 104, 129, 142], "jmeter": 6, "brief": [6, 26, 39, 53, 102], "applic": [6, 26, 61], "test": [6, 9, 26, 60, 68, 101, 104, 133, 135, 136, 164, 171, 172], "function": [6, 21, 35, 45, 46, 53, 87, 96, 98, 106, 113, 118, 120, 121, 122, 123, 124, 140, 162, 165, 168], "2m": 6, "delai": 6, "fibonacci": 6, "number": [6, 82, 119, 144], "handler": 6, "That": [6, 139], "lightli": 6, "cpu": [6, 53], "bound": 6, "boolean": [7, 134, 152], "express": [7, 124, 134], "beginn": [7, 20, 68, 76, 78, 103, 106, 114, 116, 119, 120, 128, 137, 140, 167, 168], "expert": [7, 49, 76, 96, 99, 116, 119], "simpl": [7, 8, 43, 61, 79, 96, 104, 112, 126, 134, 172, 173], "constant": [7, 35], "oper": [7, 45, 96, 99, 134, 140, 152, 169], "negat": 7, "Not": [7, 41, 49, 52, 110, 116, 130, 134, 163, 167, 169, 177, 181], "If": [7, 54, 73, 111, 121, 140], "els": 7, "handl": [7, 42, 113, 116, 139, 143, 169], "more": [7, 53, 61, 66, 77, 114, 119, 133, 144], "than": [7, 53, 70, 103, 124, 129, 144], "two": [7, 26, 35, 40, 72, 78, 96, 97, 98, 99, 100, 113], "case": [7, 40, 74, 104, 150, 175, 177], "elif": 7, "equal": [7, 54], "check": [7, 54, 82, 112, 168], "none": [7, 120], "what": [7, 8, 26, 35, 41, 45, 49, 54, 55, 65, 72, 77, 78, 91, 93, 98, 100, 111, 112, 118, 119, 124, 125, 134, 137, 140, 147, 163, 165, 171, 174, 175], "compound": [7, 134], "truth": [7, 134], "tabl": [7, 134, 138, 161, 171], "preced": [7, 134], "rule": [7, 113], "For": [7, 41, 118, 124, 126, 129], "practic": [7, 23, 49, 58, 59, 96, 112, 118, 121, 133, 137, 140, 179], "question": [7, 72, 96, 99], "you": [7, 9, 26, 27, 44, 45, 46, 48, 49, 53, 57, 59, 60, 66, 69, 70, 72, 73, 75, 78, 79, 86, 88, 96, 97, 98, 99, 100, 101, 102, 104, 106, 111, 113, 114, 117, 118, 120, 121, 124, 127, 128, 133, 134, 137, 140, 143, 144, 153, 163, 165, 167, 169, 173, 174, 177, 179], "mai": [7, 9, 27, 44, 45, 46, 48, 49, 59, 69, 70, 75, 79, 97, 98, 104, 106, 113, 114, 117, 118, 120, 121, 124, 127, 128, 129, 134, 137, 140, 143, 144, 153, 165, 167, 169, 173, 174, 177], "also": [7, 9, 27, 44, 45, 46, 48, 49, 59, 69, 70, 72, 75, 79, 88, 97, 98, 104, 106, 113, 114, 117, 118, 120, 121, 124, 127, 128, 134, 137, 140, 141, 143, 144, 153, 165, 167, 169, 173, 174, 177], "like": [7, 9, 46, 54, 59, 69, 70, 75, 88, 104, 106, 114, 124, 128, 153, 169, 174, 177], "build": [8, 26, 41, 58, 59, 61, 71, 115, 118, 134, 135, 150], "docker": [8, 11, 61, 95, 115, 133, 136, 150], "golang": [8, 97], "contain": [8, 40, 61, 115, 128, 133, 150], "complex": [8, 48], "naiv": [8, 113], "approach": [8, 26, 75, 125, 163], "wrong": 8, "fix": [8, 135], "It": [8, 50, 52, 61, 79, 86, 91, 106, 116, 119, 121, 125, 130, 150, 169, 174, 179, 180], "multi": [8, 143, 150], "stage": [8, 53, 150], "best": [9, 27, 68, 110, 112, 118, 121, 179], "career": [9, 125], "new": [9, 28, 29, 32, 52, 91, 92, 93, 131, 132], "research": 9, "reveal": 9, "top": [9, 68, 100, 110, 139, 158], "field": [9, 57, 112], "summari": [9, 35, 42, 62, 88, 98, 134, 138, 152], "option": [9, 91, 110, 160], "analyst": 9, "scientist": 9, "engin": 9, "aw": [9, 105, 106], "cloud": [9, 52, 68, 105], "variou": [9, 74], "titl": [9, 41], "develop": [9, 61, 64, 65, 68, 69, 70, 89, 103, 105, 133, 150, 177, 180], "front": 9, "end": 9, "full": [9, 120], "stack": 9, "microservic": 9, "role": 9, "autom": [9, 68, 112], "technic": 9, "support": [9, 56, 72, 103, 143], "do": [9, 65, 66, 116, 121, 124, 134, 163, 175], "statist": [9, 53], "tell": 9, "whole": 9, "stori": [9, 66], "c": [10, 40, 77, 133, 150], "articl": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 41, 47, 76, 93], "jupyt": [12, 41, 53, 70, 71, 72, 73, 111, 142, 162, 168, 170], "math": [14, 15, 22, 63, 67, 80, 86, 87, 102, 130, 151, 162, 163, 170, 178], "softwar": [15, 67, 89, 163], "other": [16, 31, 34, 39, 41, 45, 54, 55, 58, 66, 68, 69, 103, 104, 117, 133, 134, 138, 143, 170, 177], "newslett": [17, 28, 29, 30, 31, 32, 92, 93, 131, 132], "scienc": [22, 34, 38, 59, 68, 76, 102], "chemist": 25, "strongli": 25, "addict": 25, "cmake": [26, 150], "project": [26, 35, 52, 53, 94, 111, 133, 135, 137], "part": [26, 35, 64, 65, 72, 78, 99], "review": [26, 36, 99, 113], "tutori": [26, 39, 49, 76, 113, 118, 126, 140, 141, 150, 162, 165], "ll": [26, 65, 98, 171], "first": [26, 41, 49, 50, 56, 61, 76, 77, 101, 104, 120, 128, 150, 154, 162, 167, 181], "our": [26, 75, 112, 135, 161], "librari": [26, 41, 55, 69, 110, 113], "depend": [26, 172, 175], "next": [26, 34, 111], "step": [26, 41, 61, 66, 76, 100, 111, 150, 162, 167], "pride": 27, "medicin": 27, "enjoi": [27, 44, 45, 48, 49, 72, 79, 97, 98, 113, 117, 118, 120, 121, 127, 134, 137, 140, 143, 144, 165, 167, 173], "codesolid": [28, 29, 30, 31, 32, 92, 93, 131, 132], "11": [28, 92, 138], "29": 28, "2022": [28, 29, 30, 31, 32, 91, 92], "On": [28, 29, 33, 67, 92, 93, 119, 126, 131, 132, 137, 167, 178], "12": 29, "13": [29, 138], "novemb": 30, "1": [30, 65, 100, 109, 137, 160, 175], "octob": 31, "25": 31, "read": [31, 33, 34, 35, 106, 127, 168, 171], "decemb": 32, "28": 32, "featur": [32, 47, 70, 103, 116, 132, 142, 143], "dennett": 33, "conscious": 33, "explain": 33, "cognit": [34, 35, 38], "resourc": [34, 120, 135, 142, 143, 163, 170], "cours": [34, 59, 86, 91, 125, 163], "video": [34, 65, 141, 149], "talk": 34, "note": [35, 36, 163], "synaps": [35, 36], "neuron": [35, 36], "brain": [35, 36], "week": 35, "One": [35, 72, 96, 98, 99, 155], "five": [35, 101], "excit": 35, "thing": [35, 50, 51, 75], "connectom": 35, "brainbow": 35, "machin": [35, 56, 67, 68, 119], "optogenet": 35, "blue": 35, "simul": 35, "doctrin": 35, "input": 35, "output": [35, 98, 170], "devic": 35, "axon": 35, "dendrit": 35, "type": [35, 46, 54, 75, 112, 116, 120, 121, 128, 168], "three": [35, 98], "electrifi": 35, "passiv": 35, "electr": 35, "signal": 35, "cell": [35, 99], "rc": 35, "circuit": [35, 134], "voltag": 35, "equat": [35, 162], "membran": 35, "time": [35, 53, 55, 75, 99, 113], "tempor": 35, "summat": 35, "rest": 35, "potenti": 35, "synapt": 35, "conduct": 35, "batteri": 35, "ii": [35, 78], "epsp": 35, "ipsp": 35, "four": 35, "activ": [35, 53, 175], "spike": 35, "hodgkin": 35, "huxlei": 35, "experi": 35, "current": [35, 113, 117], "underli": 35, "model": 35, "h": 35, "refratori": 35, "period": 35, "plastic": 35, "dynam": [35, 128, 168], "outlin": [35, 43, 123], "mechan": 35, "subserv": 35, "memori": [35, 53, 129, 169], "possibl": 35, "structur": [35, 110, 112, 117], "neurogenesi": 35, "six": 35, "cabl": 35, "theori": [35, 49, 82], "level": [35, 129], "singl": [35, 53, 117, 121], "fundament": 35, "rall": 35, "transient": 35, "recent": 35, "breakthrough": 35, "person": [35, 66], "7": 35, "cortic": 35, "network": 35, "out": [35, 93, 134, 180], "column": [35, 42, 55, 70, 98, 99], "mous": 35, "human": 35, "percept": 35, "action": 35, "emot": 35, "sensori": 35, "transduct": 35, "earli": [35, 146, 165], "process": [35, 112], "guid": [35, 66, 102, 106, 120, 124, 168], "motion": 35, "higher": 35, "order": [35, 48, 112, 128], "free": [35, 59, 68, 163], "Will": [35, 91, 163], "did": 35, "we": [35, 54, 65, 68, 91, 98, 120, 163, 171, 175], "neuro": 35, "ethic": 35, "interact": [35, 41], "veget": 35, "state": [35, 121], "farewel": 35, "word": 35, "secret": [37, 144], "life": 37, "mind": [37, 121, 156], "conda": [39, 56, 100, 105, 111, 138, 160, 171], "pip": [39, 56, 66, 100, 101, 111, 135, 138, 160, 171, 175], "venv": [39, 171], "pyenv": [39, 56, 66], "simplic": [39, 57, 153], "win": 39, "some": [39, 41, 61, 97, 99, 104, 106, 114, 133, 135, 142, 165], "background": [39, 77], "pro": 39, "con": 39, "compar": [39, 54, 88, 142], "packag": [39, 53, 59, 68, 70, 100, 101, 135, 169, 170, 175], "save": [39, 98, 113, 169], "share": [39, 133], "re": [39, 78, 86, 102], "final": [39, 41, 58, 59, 68, 79, 101, 103, 104, 106, 175], "dev": [40, 150], "custom": [40, 71, 112, 127, 179], "special": [40, 150], "extens": [40, 77, 150], "quick": [40, 162], "default": [40, 65, 66, 71, 112, 120, 143, 165], "codespac": 40, "plot": [41, 62, 70, 85, 87, 88], "matplotlib": [41, 87, 88], "road": [41, 110], "ahead": [41, 78], "cover": [41, 171], "taken": [41, 110], "choic": [41, 144], "lab": [41, 72, 73, 111, 112, 142, 168], "visual": [41, 43, 51, 62, 64], "control": [41, 174, 175], "ipywidet": 41, "fring": 41, "benefit": [41, 77], "plu": 41, "ipywidget": 41, "clean": 42, "drop": 42, "frame": 42, "row": [42, 70, 75, 99], "renam": 42, "name": [42, 121, 135], "null": 42, "valu": [42, 112, 120, 139, 144, 165, 169], "chang": [42, 71, 140, 143, 175], "find": [42, 48, 57, 96, 98, 113, 117, 175], "duplic": [42, 48], "element": [42, 55, 128], "string": [42, 55, 96, 119, 140, 144], "remov": [42, 48, 73, 174], "unnecessari": 42, "capit": 42, "whitespac": 42, "charact": [42, 140], "debug": [43, 133], "introduc": [43, 67, 109, 168], "companion": [43, 162], "studio": [43, 51, 64], "left": [43, 170], "hand": [43, 82, 126, 130, 167], "panel": 43, "bottom": 43, "directoryinfo": 44, "dunder": 45, "method": [45, 53, 98, 114, 119, 128, 140, 152, 171], "ugliest": 45, "awesom": [45, 108], "sauc": 45, "constructor": [45, 113], "ugli": 45, "__repr__": [45, 112], "__str__": 45, "overload": 45, "integr": [45, 70, 77, 162], "good": [45, 50, 137, 139, 163], "design": [45, 97, 179], "implement": [45, 58, 75, 104, 112, 161], "iter": [45, 98, 114, 118, 124, 128, 140], "avail": [45, 168], "object": [46, 48, 49, 55, 113, 127, 168], "dir": [46, 164, 168], "solut": [46, 60, 96, 122], "when": [48, 49, 78, 91, 114, 126, 158], "doesn": 48, "t": [48, 57, 91, 116, 125, 130, 151, 174, 179], "matter": 48, "preserv": 48, "count": 48, "entri": 48, "class": [49, 99, 112, 113, 116, 124, 127, 143, 168, 169, 179], "zero": 49, "exercis": [49, 76, 79, 99, 114, 118, 122, 126, 128, 137, 140], "break": 49, "orient": 49, "inherit": 49, "abstract": 49, "base": [49, 61, 98, 116], "languag": [49, 69, 72, 76, 103, 142, 160, 181], "addit": [49, 135, 142, 170], "topic": [49, 76, 114], "done": [50, 51, 70], "dendron": 50, "look": [50, 113], "bad": 50, "indiffer": 50, "overal": 50, "impress": [50, 104], "try": [50, 57, 116], "yourself": [50, 163], "markdown": [51, 170], "googl": 52, "sheet": 52, "devil": 52, "detail": [52, 53], "setup": [52, 66, 105], "welcom": 52, "servic": 52, "account": [52, 106, 135, 176], "kei": 52, "spreadsheet": 52, "gspread": 52, "credenti": 52, "write": [52, 76, 121, 124, 127, 143, 171, 179], "profil": 53, "overview": [53, 65, 103, 110, 112, 127, 134, 139, 142, 161], "late": 53, "determinist": 53, "wall": 53, "clock": 53, "scenario": 53, "cprofil": 53, "modul": [53, 77, 113, 117, 127, 139, 144, 168, 175], "short": [53, 134], "timeit": 53, "ipython": [53, 160], "notebook": [53, 68, 70, 71, 72, 73, 168], "line_profil": 53, "call": [53, 106, 120], "go": [53, 163], "prun": 53, "magic": 53, "lprun": 53, "conveni": 53, "kernprof": 53, "usag": [53, 66], "memory_profil": 53, "memit": 53, "mprun": 53, "graphic": 53, "scalen": 53, "honor": 53, "mention": 53, "yappi": 53, "dictionari": [54, 110, 114, 118, 127], "consist": 54, "caution": 54, "compat": 54, "need": [54, 143, 163, 179], "stronger": 54, "collect": [54, 168, 169], "defin": [54, 116, 117, 169, 179], "datetim": [55, 113], "format": [55, 98, 113, 119, 138, 140], "access": [55, 129, 140, 150], "zone": [55, 113], "date": [55, 113], "present": 55, "differ": [55, 58, 67, 70, 72, 78, 98, 113, 175], "dateutil": [55, 113], "maya": 55, "arrow": [55, 138], "back": [55, 160], "integ": 55, "float": 55, "conclus": [55, 65, 72, 74, 140, 168], "same": [56, 67, 72, 117], "anaconda": [56, 72, 100], "miniconda": [56, 100], "both": [56, 77], "think": 57, "small": 57, "befor": 57, "bui": [57, 125], "mother": 57, "probabl": 57, "alreadi": 57, "told": 57, "kick": 57, "doubt": 57, "curb": 57, "don": [57, 91, 116, 130], "Be": [57, 65, 70, 91, 98, 121, 124, 143, 167], "afraid": 57, "mentor": 57, "make": [57, 58, 65, 71, 78, 79, 96, 99, 121, 130, 144, 158, 168, 169, 175, 176], "friend": [57, 153], "habit": 58, "No": [58, 121, 143, 165, 180], "up": [58, 72, 74, 75, 133, 155, 172, 173, 175], "success": [58, 77, 134], "intent": [58, 121], "reward": 58, "onlin": [59, 67, 72, 107, 149, 163], "sampl": [59, 98, 99], "can": [59, 70, 86, 124, 125, 128, 139], "own": 59, "dataset": [59, 62, 74], "separ": [60, 69], "sourc": [60, 61, 150, 162, 170, 175], "have": [60, 111, 121, 163], "seen": [60, 137], "puzzl": 60, "imag": [61, 115], "compos": 61, "concept": 61, "flask": 61, "dockerfil": 61, "django": [61, 133], "postgr": [61, 95, 133, 136], "And": [61, 67, 75, 112, 142, 144], "yaml": [61, 110], "util": [61, 143], "script": [61, 68, 139], "put": 61, "togeth": 61, "scatter": [62, 88], "bar": [62, 88], "area": [62, 177], "box": [62, 88], "pie": 62, "chart": 62, "densiti": 62, "hexbin": 62, "git": [64, 65, 78, 91], "cli": [64, 106], "transcript": 65, "valid": [65, 100], "bash": [65, 139], "By": [65, 98, 130], "tip": [66, 129], "cleaner": 66, "team": [66, 78], "enough": 66, "motiv": 66, "let": [66, 151], "begin": 66, "version": [66, 68, 97, 104, 174, 175], "global": 66, "should": [66, 78, 100, 101, 112, 181], "cleanup": 66, "sage": [67, 115], "symbol": [67, 151], "twist": 67, "ye": [68, 117], "answer": [68, 72], "manag": [68, 70, 100, 143], "scientif": [68, 119, 177], "virtual": [68, 101, 105, 135, 141, 175], "slow": 69, "myth": 69, "fact": 69, "java": 69, "long": 69, "speed": [69, 75], "cold": 69, "runtim": 69, "interpret": [69, 174], "gil": 69, "self": 69, "inflict": 69, "wound": 69, "futur": [69, 113], "improv": [69, 171], "julia": 70, "easili": [70, 112, 127], "comprehens": [70, 114, 118, 128], "better": [70, 77, 101, 103], "subset": 70, "similar": 70, "queri": [70, 152, 160, 171], "simplifi": 70, "slice": [70, 96, 126, 128, 140], "rang": [70, 118], "grasp": 70, "transform": [70, 98], "straightforward": 70, "faster": [70, 104, 124], "increment": 70, "lite": 71, "browser": 71, "serverless": [71, 133], "add": [71, 113, 119], "ani": [71, 128, 163], "websit": 71, "jupyterlit": 71, "serv": 71, "subdomain": 71, "dn": 71, "local": [71, 72, 143, 150, 173], "acknowledg": 71, "complet": [72, 113, 114, 117, 118, 120, 124, 126, 128], "colab": 72, "who": 72, "disadvanatag": 72, "doe": [72, 117, 124, 134, 163, 174], "As": [72, 78, 98, 108, 117, 130, 160], "between": [72, 113, 129, 169, 175], "pycharm": [72, 103, 153], "might": [72, 88], "password": 73, "forget": 73, "kaggl": 74, "intro": 74, "its": [74, 77], "download": 74, "multipl": [74, 116, 130, 165], "onc": [74, 120, 124], "larg": 75, "optim": 75, "fast": [75, 97, 136], "slick": 75, "lazi": 75, "mode": 75, "dask": 75, "showdown": 75, "intermedi": [76, 137], "experienc": 76, "programm": 76, "perfect": 77, "duo": 77, "challeng": 77, "which": [77, 101, 103, 117], "cython": 77, "numpi": [77, 96, 129, 130, 177], "6": 77, "know": [78, 91, 133, 169], "public": 78, "individu": 78, "master": 79, "take": [79, 86, 163], "checklist": 79, "shine": 79, "problem": [79, 82, 101, 163], "journal": 80, "solv": [82, 101, 162], "sympi": [82, 85, 109, 130, 151, 162, 170], "circl": [84, 120], "graph": [84, 87, 88, 162], "itself": 84, "geometri": 85, "euclid": 85, "enter": [85, 102], "calculu": [86, 162], "sixti": 86, "preliminari": [86, 97], "terror": 86, "just": [86, 106], "right": [86, 125, 175], "ag": [86, 163], "fun": 86, "credit": 86, "ac": 86, "anoth": [86, 102], "beyond": [86, 119, 138, 146], "coordin": 87, "non": 87, "linear": 87, "seaborn": [88, 99], "histogram": 88, "violin": 88, "legend": 88, "middl": 89, "wai": [89, 114, 127, 175], "header": 90, "here": 90, "great": 91, "introductori": [91, 165], "price": [91, 142], "readi": 91, "15": 92, "cool": 92, "stuff": 92, "trick": 92, "trap": [92, 134], "come": [92, 120], "soon": 92, "januari": [93, 132], "17": [93, 138], "2023": [93, 131, 132], "shout": 93, "popular": [93, 142, 177], "node": 94, "client": 95, "host": [95, 150], "dimension": 96, "arrai": [96, 129], "multidimension": 96, "vector": [96, 102], "s3": 97, "updat": 97, "goroutin": 97, "trip": 97, "necessari": 97, "groupbi": 98, "split": 98, "group": 98, "specif": 98, "through": [98, 118, 140], "percentag": 98, "built": [98, 110, 116, 140, 179], "aggreg": 98, "filter": 98, "appli": [98, 152], "csv": [98, 99], "excel": 98, "seri": [99, 111, 123, 137], "prerequisit": 100, "pc": 100, "py": 100, "3": [100, 109, 175], "4": [100, 175], "virtualenv": 100, "pipenv": 101, "under": 101, "minut": 101, "Into": 101, "txt": 101, "pin": 101, "freez": 101, "tri": 101, "translat": 102, "vex": 102, "sooth": 102, "scalar": 102, "dimens": [102, 130], "bonu": 102, "prize": 102, "wherein": [102, 176], "reconcil": 102, "religion": 102, "edit": 103, "remot": [103, 133], "ha": 103, "advanc": [103, 106, 114, 137, 168], "heavyweight": 103, "pypi": [104, 135], "evalu": [104, 120], "kit": 105, "cdk": 105, "lambda": 106, "definit": [106, 112], "spoiler": 106, "publish": [106, 135, 175], "consol": 106, "boto3": 106, "further": [106, 121, 179], "react": 107, "app": 107, "clear": 107, "roadblock": 107, "boot": 108, "camp": 108, "cooper": 108, "idea": [108, 133], "chemistri": 109, "chempi": 109, "ch4": 109, "o2": 109, "co2": 109, "h2o": 109, "ca": 109, "oh": [109, 142], "h3": 109, "po4": 109, "third": [110, 113], "parti": [110, 113], "common": [110, 114, 134], "configpars": 110, "pick": [110, 125], "tomllib": 110, "toml": [110, 135], "json": [110, 127], "analysi": 111, "recommend": 111, "includ": 111, "dataclass": [112, 161], "decor": 112, "__eq__": 112, "static": [112, 168], "mypi": [112, 168], "pattern": 112, "match": 112, "namedtupl": [112, 169], "overrid": [112, 169], "post": [112, 151], "init": 112, "exclud": 112, "mainten": 112, "closer": 113, "awar": 113, "instanc": 113, "arbitrari": 113, "zoneinfo": 113, "past": 113, "manipul": 113, "timedelta": 113, "dai": [113, 166, 182], "subtract": 113, "calcul": [113, 162, 163], "remain": 113, "until": 113, "christma": 113, "pars": 113, "strftime": 113, "strptime": 113, "iso": 113, "8601": 113, "standard": 113, "calendar": 113, "parser": 113, "smart": 113, "rel": 113, "offset": 113, "relativedelta": 113, "recur": 113, "event": 113, "rrule": 113, "recurr": 113, "lesson": [114, 128], "append": 114, "less": [114, 129], "deal": [114, 174], "miss": [114, 169], "slightli": 114, "defaultdict": [114, 169], "sagemath": [115, 162, 170], "rational": 115, "jupyterlab": [115, 170, 171], "error": [116, 139], "except": [116, 143, 179], "syntax": [116, 118, 168], "indent": 116, "bug": 116, "block": [116, 134, 143, 170], "caveat": [116, 162, 170], "rais": [116, 179], "cookbook": 117, "search": 117, "pathlib": 117, "recurs": [117, 174], "absolut": 117, "execut": 117, "But": [117, 163], "exist": [117, 174], "pythonpath": 117, "sy": 117, "filenam": 117, "wa": 117, "loop": [118, 126, 128, 129], "while": 118, "enumer": 118, "f": [119, 140], "str": 119, "specifi": 119, "mani": [119, 161], "decim": 119, "octal": 119, "hexadecim": 119, "binari": 119, "notat": 119, "expon": 119, "automat": 119, "comma": 119, "align": [119, 170], "sign": 119, "old": 119, "argument": [120, 165], "paramet": [120, 121, 165], "keyword": [120, 165], "instead": 120, "posit": [120, 126, 165], "hint": [120, 121, 168], "onli": [120, 124], "mutabl": [120, 169], "arg": 120, "kwarg": 120, "still": 120, "without": 120, "ve": 120, "respons": 121, "clarifi": 121, "choos": [121, 129], "carefulli": 121, "docstr": 121, "prefer": 121, "accept": 121, "side": 121, "effect": 121, "return": [121, 139, 165], "mutat": 121, "obviou": 121, "assert": 121, "contract": 121, "draft": 123, "equival": 124, "asynchron": [124, 143], "tech": 125, "hobbyist": 125, "profession": 125, "suggest": 125, "beatl": 125, "song": 125, "monei": 125, "love": 125, "hard": [125, 136], "anywai": 125, "neg": 126, "steroid": 126, "assign": [126, 134, 168], "behavior": [126, 179], "easiest": 127, "serial": 127, "directli": 127, "to_json": 127, "from_json": 127, "jsonencod": 127, "jsondecod": 127, "item": 128, "modifi": [128, 135, 140], "them": 129, "101": 129, "timer": 129, "low": [129, 163], "buffer": 129, "matrix": 130, "behind": [130, 168], "matmul": 130, "multipli": 130, "matric": 130, "commut": 130, "mistak": [130, 136, 158], "februari": 131, "22": 131, "interweb": 131, "31": 132, "independ": 133, "show": 133, "want": 133, "arithmet": 134, "ident": 134, "logic": 134, "combin": 134, "watch": [134, 149], "These": 134, "membership": 134, "bitwis": 134, "AND": 134, "OR": 134, "walru": 134, "setuptool": 135, "pyproject": 135, "org": 135, "meaning": 136, "unit": 136, "databas": [136, 160], "appl": 136, "product": [136, 154], "plan": 137, "parquet": [138, 171], "pyarrow": 138, "pickup": 138, "timestamp": 138, "n": 138, "dropoff": 138, "pandaspickup": 138, "2019": 138, "03": 138, "23": 138, "20": 138, "21": 138, "09": 138, "000000000": 138, "04": 138, "16": 138, "55": 138, "27": 138, "53": 138, "01": 138, "10": 138, "59": 138, "30": 138, "42": 138, "storag": [138, 160], "strength": 139, "nineteen": 139, "subprocess": 139, "extern": 139, "statement": [140, 143, 175], "see": 141, "matlab": 142, "octav": 142, "cost": [142, 163], "live": 142, "context": 143, "lock": 143, "thread": [143, 169], "temporarili": 143, "fulli": 143, "contextlib": 143, "random": 144, "pseudo": 144, "alik": 144, "thei": 144, "seem": 144, "randint": 144, "randrang": 144, "distribut": 144, "secur": 144, "uuid": 144, "uniqu": 144, "charlott": 145, "secular": 145, "sobrieti": [145, 146], "judgement": 146, "steep": 146, "hill": 146, "fellowship": 147, "recoveri": 148, "limit": [150, 162], "cross": 150, "platform": 150, "isol": 150, "volum": 150, "mount": 150, "scipi": [151, 162], "u": 151, "never": 151, "speak": 151, "again": 151, "superior": 151, "law": 151, "instrument": 151, "isn": [151, 174], "anti": 151, "iloc": 152, "loc": 152, "iat": 152, "mask": 152, "teach": [153, 163], "principl": 154, "minim": 154, "give": 155, "social": [155, 157, 158, 159], "media": [155, 157, 158, 159], "month": 155, "later": 155, "technologi": 156, "withdraw": 157, "peopl": 158, "quit": 158, "sql": [160, 171], "pandassql": 160, "medium": 160, "duckdb": 160, "persist": 160, "connect": 160, "sqlalchemi": 161, "relationship": 161, "latex": [162, 170], "almost": 162, "differenti": 162, "techniqu": 163, "cheap": 163, "mathemat": 163, "studi": [163, 175], "At": 163, "well": 163, "anyth": 163, "m": 163, "particular": 163, "market": 166, "geniu": 166, "100": [166, 182], "thonni": 167, "friendli": 167, "could": 167, "simpler": 167, "debugg": 167, "weakli": 168, "scene": 168, "disassembl": 168, "explicit": 168, "alias": 168, "union": 168, "liter": 168, "gracefulli": 169, "queue": 169, "pass": 169, "chainmap": 169, "immut": 169, "sequenc": 169, "center": 170, "inlin": 170, "mathjax": 170, "pyspark": 171, "eleg": 171, "spark": 171, "partit": 171, "testng": 172, "spring": 172, "junit": 172, "maven": 172, "abstracttestngspringcontexttest": 172, "vagrant": 173, "ansibl": 173, "pyc": 174, "pycach": 174, "compil": 174, "ignor": 174, "cach": 174, "modulenotfounderror": 175, "sure": 175, "correct": 175, "deactiv": 175, "hell": 175, "whereabout": 176, "eas": 177, "Of": 177, "readabl": 177, "influenc": 177, "commun": 177, "Being": [178, 180], "world": 178, "oldest": 178, "major": 178, "__init__": 179, "yagni": 179, "ain": 179, "gonna": 179, "decis": 179, "stop": 180, "junior": 180, "serious": 180, "cut": 180, "javascript": 181, "strang": 182, "zen": 182}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"A Coop Coding Bootcamp": [[0, "a-coop-coding-bootcamp"]], "Apache Airflow:  Python ETL and Scheduling Made Easy": [[1, "apache-airflow-python-etl-and-scheduling-made-easy"]], "Introduction": [[1, "introduction"], [3, "introduction"], [9, "introduction"], [26, "introduction"], [43, "introduction"], [110, "introduction"], [113, "introduction"], [114, "introduction"], [117, "introduction"], [120, "introduction"], [128, "introduction"], [140, "introduction"], [144, "introduction"], [150, "introduction"], [165, "introduction"], [168, "introduction"], [171, "introduction"]], "System Requirements and Installing Airflow": [[1, "system-requirements-and-installing-airflow"]], "The Airflow Web Interface": [[1, "the-airflow-web-interface"]], "Understanding How DAG Tasks Are Related": [[1, "understanding-how-dag-tasks-are-related"]], "Apache Airflow 2.0 and the TaskFlow API": [[1, "apache-airflow-2-0-and-the-taskflow-api"]], "Mixing Apache Airflow 2.0 Style Tasks with Legacy Tasks - An Example": [[1, "mixing-apache-airflow-2-0-style-tasks-with-legacy-tasks-an-example"]], "Discussion": [[1, "discussion"], [6, "discussion"], [41, "discussion"], [138, "discussion"]], "Scheduling, The Dags Directory, and Configuration": [[1, "scheduling-the-dags-directory-and-configuration"]], "Revisiting Airflow Logging": [[1, "revisiting-airflow-logging"]], "Closing Thoughts": [[1, "closing-thoughts"], [3, "closing-thoughts"], [6, "closing-thoughts"], [43, "closing-thoughts"], [52, "closing-thoughts"], [53, "closing-thoughts"], [61, "closing-thoughts"], [73, "closing-thoughts"], [75, "closing-thoughts"], [87, "closing-thoughts"], [113, "closing-thoughts"], [117, "closing-thoughts"], [119, "closing-thoughts"], [127, "closing-thoughts"], [143, "closing-thoughts"], [144, "closing-thoughts"], [161, "closing-thoughts"], [162, "closing-thoughts"], [167, "closing-thoughts"], [171, "closing-thoughts"], [177, "closing-thoughts"], [179, "closing-thoughts"]], "Site Index": [[2, "site-index"]], "Site Index:": [[2, null], [20, null]], "Alternatives to Pandas:  Python Polars": [[3, "alternatives-to-pandas-python-polars"]], "Polars Advantages Over Pandas": [[3, "polars-advantages-over-pandas"]], "Pandas Advantages Over Polars": [[3, "pandas-advantages-over-polars"]], "Transitioning from Pandas to Polars": [[3, "transitioning-from-pandas-to-polars"]], "Creating and Displaying DataFrames and Loading Data from Files": [[3, "creating-and-displaying-dataframes-and-loading-data-from-files"]], "Converting DataFrames": [[3, "converting-dataframes"]], "Getting Basic Information About a DataFrame": [[3, "getting-basic-information-about-a-dataframe"]], "General Comparison and Overlap": [[3, "general-comparison-and-overlap"]], "Selecting Data In Polars": [[3, "selecting-data-in-polars"]], "Learn Basic Command Line Skills and Rock Your Workflow": [[4, "learn-basic-command-line-skills-and-rock-your-workflow"]], "The Core Command Line Skills": [[4, "the-core-command-line-skills"]], "Starting a Terminal Session": [[4, "starting-a-terminal-session"]], "Opening a Command Prompt From Your Computer": [[4, "opening-a-command-prompt-from-your-computer"]], "Opening a Command Prompt From Your Editor or IDE": [[4, "opening-a-command-prompt-from-your-editor-or-ide"]], "Navigating the File System from the Command Line": [[4, "navigating-the-file-system-from-the-command-line"]], "Where Am I?": [[4, "where-am-i"]], "Creating Folders and Moving Around": [[4, "creating-folders-and-moving-around"]], "Navigating to Your Home Directory from the Command Line": [[4, "navigating-to-your-home-directory-from-the-command-line"]], "Working With Environment Variables and Setting the Path": [[4, "working-with-environment-variables-and-setting-the-path"]], "Adding a Path to the User Path on Windows": [[4, "adding-a-path-to-the-user-path-on-windows"]], "Adding a Path to the User\u2019s Path on Mac or Linux": [[4, "adding-a-path-to-the-user-s-path-on-mac-or-linux"]], "Exploring Folders and Files and Their Contents": [[4, "exploring-folders-and-files-and-their-contents"]], "Copying and Moving Files and Directories": [[4, "copying-and-moving-files-and-directories"]], "Listing All Files and Discovering Shell Configuration Files": [[4, "listing-all-files-and-discovering-shell-configuration-files"]], "Creating and Running Basic Command Line Programs": [[4, "creating-and-running-basic-command-line-programs"]], "Windows Batch Files": [[4, "windows-batch-files"]], "Getting Help for Command Line Tools": [[4, "getting-help-for-command-line-tools"]], "Most Useful Shell Commands: Windows vs. Mac and Linux": [[4, "most-useful-shell-commands-windows-vs-mac-and-linux"]], "My Journey to Beautiful Documentation With JupyterBook": [[5, "my-journey-to-beautiful-documentation-with-jupyterbook"]], "Why This Is Important To Me": [[5, "why-this-is-important-to-me"]], "JupyterBook vs Sphinx": [[5, "jupyterbook-vs-sphinx"]], "Creating the Repository for GitHub Pages": [[5, "creating-the-repository-for-github-pages"]], "Using JupyterBook to Create the Starter Pages": [[5, "using-jupyterbook-to-create-the-starter-pages"]], "Resolving Issues with JupyterBook\u2019s Documentation and Cookiecutter Book": [[5, "resolving-issues-with-jupyterbook-s-documentation-and-cookiecutter-book"]], "The Results So Far": [[5, "the-results-so-far"]], "Benchmarking Python and Rust Async Web Server Performance": [[6, "benchmarking-python-and-rust-async-web-server-performance"]], "Using JMeter (A Brief Introduction)": [[6, "using-jmeter-a-brief-introduction"]], "The Rust Application": [[6, "the-rust-application"]], "The Python Application": [[6, "the-python-application"]], "Test Results": [[6, "test-results"]], "Async Function With 2ms Delay": [[6, "async-function-with-2ms-delay"]], "Fibonacci Numbers \u2013 Async Handlers That Are (Lightly) CPU-Bound": [[6, "fibonacci-numbers-async-handlers-that-are-lightly-cpu-bound"]], "Boolean Expressions in Python: Beginner to Expert": [[7, "boolean-expressions-in-python-beginner-to-expert"]], "A Simple Boolean Example in Python": [[7, "a-simple-boolean-example-in-python"]], "Boolean Constants and Expressions in Python": [[7, "boolean-constants-and-expressions-in-python"]], "Python Comparison Operators": [[7, "python-comparison-operators"], [134, "python-comparison-operators"]], "Negation Using Not": [[7, "negation-using-not"]], "If and Else In Python": [[7, "if-and-else-in-python"]], "Handling More Than Two Cases in Python: Elif": [[7, "handling-more-than-two-cases-in-python-elif"]], "Equality Checks and Checking for None": [[7, "equality-checks-and-checking-for-none"]], "What Are Compound Boolean Expressions in Python?": [[7, "what-are-compound-boolean-expressions-in-python"]], "A Truth Table for Python Boolean Expressions": [[7, "a-truth-table-for-python-boolean-expressions"]], "What Are the Precedence Rules For Python Boolean Expressions?": [[7, "what-are-the-precedence-rules-for-python-boolean-expressions"]], "Python If/Else and Booleans: Examples and Practice Questions": [[7, "python-if-else-and-booleans-examples-and-practice-questions"]], "You May Also Like": [[7, "you-may-also-like"], [9, "you-may-also-like"], [46, "you-may-also-like"], [59, "you-may-also-like"], [69, "you-may-also-like"], [70, "you-may-also-like"], [75, "you-may-also-like"], [104, "you-may-also-like"], [106, "you-may-also-like"], [114, "you-may-also-like"], [124, "you-may-also-like"], [128, "you-may-also-like"], [153, "you-may-also-like"], [169, "you-may-also-like"], [174, "you-may-also-like"], [177, "you-may-also-like"]], "Building a Docker Golang Container": [[8, "building-a-docker-golang-container"]], "From Simple to Complex": [[8, "from-simple-to-complex"]], "A Naive Approach": [[8, "a-naive-approach"]], "What\u2019s Wrong with the Naive Approach, and How To Fix It": [[8, "whats-wrong-with-the-naive-approach-and-how-to-fix-it"]], "Multi-stage Builds": [[8, "multi-stage-builds"]], "Best Python Careers: New Research Reveals Top Fields": [[9, "best-python-careers-new-research-reveals-top-fields"]], "About The Data": [[9, "about-the-data"]], "A Summary of Python Career Options": [[9, "a-summary-of-python-career-options"]], "The Careers": [[9, "the-careers"]], "Data Analyst / Data Scientist": [[9, "data-analyst-data-scientist"]], "Data Engineer": [[9, "data-engineer"]], "AWS Cloud (Various Titles)": [[9, "aws-cloud-various-titles"]], "Web Developer: Front End Developer, Full Stack Developer, Microservices (All Roles)": [[9, "web-developer-front-end-developer-full-stack-developer-microservices-all-roles"]], "Test Automation (All Roles)": [[9, "test-automation-all-roles"]], "Technical Support (All Roles)": [[9, "technical-support-all-roles"]], "Do Statistics Tell the Whole Story About Python Careers?": [[9, "do-statistics-tell-the-whole-story-about-python-careers"]], "C and C++": [[10, "c-and-c"]], "Articles:": [[10, null], [11, null], [12, null], [13, null], [14, null], [15, null], [16, null], [17, null], [18, null], [19, null], [21, null], [22, null], [23, null], [24, null]], "Docker": [[11, "docker"]], "Jupyter": [[12, "jupyter"]], "Learn to Code": [[13, "learn-to-code"]], "Math": [[14, "math"]], "Math and Math Software": [[15, "math-and-math-software"]], "Other": [[16, "other"], [34, "other"], [34, "id1"]], "Newsletter": [[17, "newsletter"]], "Pandas": [[18, "pandas"]], "Python (General)": [[19, "python-general"]], "Python for Beginners": [[20, "python-for-beginners"]], "Python Functions": [[21, "python-functions"]], "Python Math and Science": [[22, "python-math-and-science"]], "Python Practice": [[23, "python-practice"]], "Python Tools": [[24, "python-tools"]], "Chemists Strongly Addicted to Python!": [[25, "chemists-strongly-addicted-to-python"]], "A CMake Starter Project": [[26, "a-cmake-starter-project"]], "Part I: A Brief Review of the CMake Tutorial": [[26, "part-i-a-brief-review-of-the-cmake-tutorial"]], "What You\u2019ll Learn in Part Two": [[26, "what-you-ll-learn-in-part-two"]], "The CMake Starter Project: A Test First Approach": [[26, "the-cmake-starter-project-a-test-first-approach"]], "Building and Running Our Tests": [[26, "building-and-running-our-tests"]], "Adding a Library": [[26, "adding-a-library"]], "Adding an Application with a Library Dependency": [[26, "adding-an-application-with-a-library-dependency"]], "Closing Thoughts and Next Steps": [[26, "closing-thoughts-and-next-steps"]], "Get the Code": [[26, "get-the-code"]], "Code Pride is the Best Medicine": [[27, "code-pride-is-the-best-medicine"]], "You May Also Enjoy": [[27, "you-may-also-enjoy"], [44, "you-may-also-enjoy"], [45, "you-may-also-enjoy"], [48, "you-may-also-enjoy"], [49, "you-may-also-enjoy"], [79, "you-may-also-enjoy"], [97, "you-may-also-enjoy"], [98, "you-may-also-enjoy"], [113, "you-may-also-enjoy"], [117, "you-may-also-enjoy"], [118, "you-may-also-enjoy"], [120, "you-may-also-enjoy"], [121, "you-may-also-enjoy"], [127, "you-may-also-enjoy"], [134, "you-may-also-enjoy"], [137, "you-may-also-enjoy"], [140, "you-may-also-enjoy"], [143, "you-may-also-enjoy"], [144, "you-may-also-enjoy"], [165, "you-may-also-enjoy"], [167, "you-may-also-enjoy"], [173, "you-may-also-enjoy"]], "CodeSolid Newsletter, 11/29/2022": [[28, "codesolid-newsletter-11-29-2022"]], "New On CodeSolid": [[28, "new-on-codesolid"], [29, "new-on-codesolid"], [92, "new-on-codesolid"], [131, "new-on-codesolid"]], "New Around the Web": [[28, "new-around-the-web"]], "CodeSolid Newsletter 12/13/2022": [[29, "codesolid-newsletter-12-13-2022"]], "Around The Web": [[29, "around-the-web"], [93, "around-the-web"]], "CodeSolid Python Newsletter:  November 1, 2022": [[30, "codesolid-python-newsletter-november-1-2022"]], "": [[30, "id1"], [30, "id2"], [31, "id1"], [31, "id2"], [53, "id1"], [60, "id1"], [69, "id1"], [99, "id1"], [129, "id1"]], "CodeSolid Newsletter:  October 25, 2022": [[31, "codesolid-newsletter-october-25-2022"]], "Other Reading": [[31, "other-reading"]], "CodeSolid Python Newsletter:  December 28, 2022": [[32, "codesolid-python-newsletter-december-28-2022"]], "New and Featured on CodeSolid": [[32, "new-and-featured-on-codesolid"]], "Python Around the Web": [[32, "python-around-the-web"]], "On Reading Dennett\u2019s Consciousness Explained": [[33, "on-reading-dennett-s-consciousness-explained"]], "Cognitive Science Resources": [[34, "cognitive-science-resources"]], "Books": [[34, "books"], [132, "books"]], "Reading / Read": [[34, "reading-read"]], "Read Next?": [[34, "read-next"]], "Courses": [[34, "courses"]], "Video Talks": [[34, "video-talks"]], "Useful Sites": [[34, "useful-sites"]], "Notes on Synapses, Neurons, and Brains": [[35, "notes-on-synapses-neurons-and-brains"]], "Week One": [[35, "week-one"]], "Five exciting things:": [[35, "five-exciting-things"]], "Connectomics": [[35, "connectomics"]], "BrainBow": [[35, "brainbow"]], "Brain Machine Interface": [[35, "brain-machine-interface"]], "Optogenetics": [[35, "optogenetics"]], "Blue Brain Project - Brain Simulation": [[35, "blue-brain-project-brain-simulation"]], "Week Two": [[35, "week-two"]], "The Neuron": [[35, "the-neuron"]], "The Neuron Doctrine": [[35, "the-neuron-doctrine"]], "The neuron as an input / output device": [[35, "the-neuron-as-an-input-output-device"]], "The Axon": [[35, "the-axon"]], "The Dendrite": [[35, "the-dendrite"]], "Neuron Types": [[35, "neuron-types"]], "The Synapse": [[35, "the-synapse"]], "The Neuron as Output Device: Part 2": [[35, "the-neuron-as-output-device-part-2"]], "Week Three - Electrifying Brains \u2013 Passive Electrical SIgnals": [[35, "week-three-electrifying-brains-passive-electrical-signals"]], "The Cell as an RC Circuit": [[35, "the-cell-as-an-rc-circuit"]], "The voltage equation for the passive cell": [[35, "the-voltage-equation-for-the-passive-cell"]], "The Membrane Time Constant": [[35, "the-membrane-time-constant"]], "Temporal Summation": [[35, "temporal-summation"]], "The Resting Potential": [[35, "the-resting-potential"]], "The Synaptic Potential, Part I": [[35, "the-synaptic-potential-part-i"]], "The Synaptic Conductance": [[35, "the-synaptic-conductance"]], "The Synaptic Battery": [[35, "the-synaptic-battery"]], "The Synaptic Potential, Part II": [[35, "the-synaptic-potential-part-ii"]], "The Voltage Equation for the Synapse and EPSP and IPSP": [[35, "the-voltage-equation-for-the-synapse-and-epsp-and-ipsp"]], "Summary": [[35, "summary"], [42, "summary"], [62, "summary"], [88, "summary"], [98, "summary"], [138, "summary"], [152, "summary"]], "Week Four:  Electrifying Brains - Active Electrical Spikes": [[35, "week-four-electrifying-brains-active-electrical-spikes"]], "The Hodgkin Huxley Experiments": [[35, "the-hodgkin-huxley-experiments"]], "Membrane Currents Underlying the Spike": [[35, "membrane-currents-underlying-the-spike"]], "Modeling the Membrane Currents": [[35, "modeling-the-membrane-currents"]], "The H&H Spike Model": [[35, "the-h-h-spike-model"]], "The Refratory period:": [[35, "the-refratory-period"]], "Week Five - Neurons as Plastic/Dynamic Devices": [[35, "week-five-neurons-as-plastic-dynamic-devices"]], "Outline and Introduction": [[35, "outline-and-introduction"]], "Mechanisms Subserving Learning and Memory": [[35, "mechanisms-subserving-learning-and-memory"]], "Possible neuronal mechanisms underlying learning & memory:": [[35, "possible-neuronal-mechanisms-underlying-learning-memory"]], "Functional Plasticity": [[35, "functional-plasticity"]], "Structural Plasticity": [[35, "structural-plasticity"]], "Neurogenesis and Learning": [[35, "neurogenesis-and-learning"]], "Week Six: Cable Theory and Dendritic Computations": [[35, "week-six-cable-theory-and-dendritic-computations"]], "The Brain Computes": [[35, "the-brain-computes"]], "Computation at the level of Single Neuron": [[35, "computation-at-the-level-of-single-neuron"]], "Fundamentals of Dendritic Cable Theory": [[35, "fundamentals-of-dendritic-cable-theory"]], "Rall Cable Theory for Dendrites": [[35, "rall-cable-theory-for-dendrites"]], "Transient synapses": [[35, "transient-synapses"]], "Dendritic Computation": [[35, "dendritic-computation"]], "Recent Breakthroughs": [[35, "recent-breakthroughs"]], "Personal note": [[35, "personal-note"]], "Week 7 Cortical Networks - Out of the Blue Project": [[35, "week-7-cortical-networks-out-of-the-blue-project"]], "Cortical networks - out of the blue project.": [[35, "cortical-networks-out-of-the-blue-project"]], "The Blue Brain Project": [[35, "the-blue-brain-project"]], "The Cortical Column": [[35, "the-cortical-column"]], "The Cortical Column Network": [[35, "the-cortical-column-network"]], "Blue Brain Project": [[35, "blue-brain-project"]], "Blue Brain Simulations": [[35, "blue-brain-simulations"]], "From Mouse to Human": [[35, "from-mouse-to-human"]], "The Human Brain Project": [[35, "the-human-brain-project"]], "Perception, action, cognition, emotion": [[35, "perception-action-cognition-emotion"]], "Sensory Transduction": [[35, "sensory-transduction"], [35, "id1"]], "Early Processing of Sensory Information": [[35, "early-processing-of-sensory-information"]], "How Sensory Information Guides Motion": [[35, "how-sensory-information-guides-motion"]], "Higher Order Processes of Sensory Information": [[35, "higher-order-processes-of-sensory-information"]], "Emotions": [[35, "emotions"]], "From Synapses to Free Will": [[35, "from-synapses-to-free-will"]], "What Did We Learn?": [[35, "what-did-we-learn"]], "What Did We Learn": [[35, "id2"]], "Free will and neuro-ethics": [[35, "free-will-and-neuro-ethics"]], "Reading Thoughts": [[35, "reading-thoughts"]], "Brain Reading Part 2": [[35, "brain-reading-part-2"]], "Interacting with the Brain in Vegetative States": [[35, "interacting-with-the-brain-in-vegetative-states"]], "Free Will": [[35, "free-will"]], "How Free Are We?": [[35, "how-free-are-we"]], "Farewell Words": [[35, "farewell-words"]], "Review Notes for Synapses, Neurons, and Brains": [[36, "review-notes-for-synapses-neurons-and-brains"]], "The Secret Life of the Mind": [[37, "the-secret-life-of-the-mind"]], "Cognitive Science": [[38, "cognitive-science"]], "Conda vs. Pip, Venv, and Pyenv \u2013 Simplicity Wins": [[39, "conda-vs-pip-venv-and-pyenv-simplicity-wins"]], "Moving to Conda": [[39, "moving-to-conda"]], "Getting Started With Conda": [[39, "getting-started-with-conda"]], "Conda vs. Other Tools": [[39, "conda-vs-other-tools"]], "Conda vs. PyEnv": [[39, "conda-vs-pyenv"]], "Some Background": [[39, "some-background"]], "Conda vs Pyenv: Pros and Cons": [[39, "conda-vs-pyenv-pros-and-cons"]], "Pros of Pyenv Compared to Conda": [[39, "pros-of-pyenv-compared-to-conda"]], "Pros of Conda Compared to Pyenv": [[39, "pros-of-conda-compared-to-pyenv"]], "Conda vs. Venv": [[39, "conda-vs-venv"]], "Pros and Cons of Conda vs Venv": [[39, "pros-and-cons-of-conda-vs-venv"]], "Installing Python Packages: Conda and Pip": [[39, "installing-python-packages-conda-and-pip"]], "A Brief Conda Tutorial": [[39, "a-brief-conda-tutorial"]], "Creating Environments and Installing Packages": [[39, "creating-environments-and-installing-packages"]], "Saving, Sharing, and Re-Creating Saved Environments": [[39, "saving-sharing-and-re-creating-saved-environments"]], "Final Thoughts": [[39, "final-thoughts"], [58, "final-thoughts"], [59, "final-thoughts"], [68, "final-thoughts"], [79, "final-thoughts"], [101, "final-thoughts"], [103, "final-thoughts"], [106, "final-thoughts"]], "C++ Dev Containers:  Custom Environments for VS Code": [[40, "c-dev-containers-custom-environments-for-vs-code"]], "Dev Containers in VS Code: An Introduction": [[40, "dev-containers-in-vs-code-an-introduction"]], "Dev Containers for C++: A Special Case": [[40, "dev-containers-for-c-a-special-case"]], "Two important dev container extensions in VS Code": [[40, "two-important-dev-container-extensions-in-vs-code"]], "Quick Start: A \u201cDefault\u201d C++ Dev Container": [[40, "quick-start-a-default-c-dev-container"]], "Creating a Custom Dev Container": [[40, "creating-a-custom-dev-container"]], "Using a Dev Container in GitHub CodeSpaces": [[40, "using-a-dev-container-in-github-codespaces"]], "Creating a Python Interactive Plot Using Matplotlib in Jupyter": [[41, "creating-a-python-interactive-plot-using-matplotlib-in-jupyter"]], "Python Libraries For Interactive Plots": [[41, "python-libraries-for-interactive-plots"]], "The Road Ahead: What This Article Covers": [[41, "the-road-ahead-what-this-article-covers"]], "The Road Not Taken: Other Choices for Interactive Plots": [[41, "the-road-not-taken-other-choices-for-interactive-plots"]], "Matplotlib and in Jupyter Lab: First Steps": [[41, "matplotlib-and-in-jupyter-lab-first-steps"]], "Building the Plot": [[41, "building-the-plot"]], "Displaying Information in the Title": [[41, "displaying-information-in-the-title"]], "Interactive Data Visualization: Adding User Controls With Ipywidets": [[41, "interactive-data-visualization-adding-user-controls-with-ipywidets"]], "Interactive Plots: A Fringe Benefit": [[41, "interactive-plots-a-fringe-benefit"]], "Matplotlib Plus IPywidgets: Some Final Thoughts": [[41, "matplotlib-plus-ipywidgets-some-final-thoughts"]], "Data cleaning in Pandas": [[42, "data-cleaning-in-pandas"]], "Getting Started with Data cleaning in Pandas": [[42, "getting-started-with-data-cleaning-in-pandas"]], "Dropping column from data frame in Pandas": [[42, "dropping-column-from-data-frame-in-pandas"]], "Dropping rows from the data frame in pandas": [[42, "dropping-rows-from-the-data-frame-in-pandas"]], "Renaming column names in Pandas": [[42, "renaming-column-names-in-pandas"]], "Handling NULL values in Pandas": [[42, "handling-null-values-in-pandas"]], "Changing the indexing of the data frame": [[42, "changing-the-indexing-of-the-data-frame"]], "Finding duplicate elements in the data frame": [[42, "finding-duplicate-elements-in-the-data-frame"]], "Cleaning strings in Pandas data frame": [[42, "cleaning-strings-in-pandas-data-frame"]], "Removing unnecessary capitalization": [[42, "removing-unnecessary-capitalization"]], "Remove Whitespace in a DataFrame": [[42, "remove-whitespace-in-a-dataframe"]], "Removing characters from the columns": [[42, "removing-characters-from-the-columns"]], "Debugging Python in VS Code": [[43, "debugging-python-in-vs-code"]], "Outline and Introducing the Companion Repository": [[43, "outline-and-introducing-the-companion-repository"]], "Basic Python Debugging in VS Code": [[43, "basic-python-debugging-in-vs-code"]], "Debugging a Simple Python File": [[43, "debugging-a-simple-python-file"]], "Visual Studio Code: Understanding the Left-Hand Debugging Panel": [[43, "visual-studio-code-understanding-the-left-hand-debugging-panel"]], "VS Code: Bottom Debugging Related Panels": [[43, "vs-code-bottom-debugging-related-panels"]], "Visual Studio Code Debug Configuration Files": [[43, "visual-studio-code-debug-configuration-files"]], "DirectoryInfo Example": [[44, "directoryinfo-example"]], "Python Dunder Methods:  The Ugliest Awesome Sauce": [[45, "python-dunder-methods-the-ugliest-awesome-sauce"]], "Python Constructors are Dunder Methods": [[45, "python-constructors-are-dunder-methods"]], "Ugly is Beautiful: __repr__ and __str__": [[45, "ugly-is-beautiful-repr-and-str"]], "Operator Overloading and Dunder Methods": [[45, "operator-overloading-and-dunder-methods"]], "Dunder Methods to Integrate Other Python Functions": [[45, "dunder-methods-to-integrate-other-python-functions"]], "Are Dunder Methods in Python a Good Design?": [[45, "are-dunder-methods-in-python-a-good-design"]], "Implementing Python Iterators Using Dunder Methods": [[45, "implementing-python-iterators-using-dunder-methods"]], "What Are All the Available Dunder Methods?": [[45, "what-are-all-the-available-dunder-methods"]], "Exploring Python Objects with the dir and type functions": [[46, "exploring-python-objects-with-the-dir-and-type-functions"]], "The Solution": [[46, "the-solution"]], "Featured Articles": [[47, "featured-articles"]], "How to Find Duplicates In a List in Python": [[48, "how-to-find-duplicates-in-a-list-in-python"]], "Finding Duplicates in a List When Order Doesn\u2019t Matter": [[48, "finding-duplicates-in-a-list-when-order-doesn-t-matter"]], "Removing Duplicates from a List With Order Preserved": [[48, "removing-duplicates-from-a-list-with-order-preserved"]], "Removing Duplicates in a List of Complex Objects": [[48, "removing-duplicates-in-a-list-of-complex-objects"]], "Find Duplicates in a List to Count the Entries": [[48, "find-duplicates-in-a-list-to-count-the-entries"]], "Python Classes Zero to Expert: A Tutorial with Exercises": [[49, "python-classes-zero-to-expert-a-tutorial-with-exercises"]], "Classes vs. Objects": [[49, "classes-vs-objects"]], "A First Python Class": [[49, "a-first-python-class"]], "Theory Break: What Is Object Orientation?": [[49, "theory-break-what-is-object-orientation"]], "Inheritance in Python Classes": [[49, "inheritance-in-python-classes"]], "When To Use Inheritance in Python, and When Not To": [[49, "when-to-use-inheritance-in-python-and-when-not-to"]], "Python Abstract Base Classes": [[49, "python-abstract-base-classes"]], "Is Python an Object-Oriented Language?": [[49, "is-python-an-object-oriented-language"]], "Practice Exercises for Python Classes and Objects": [[49, "practice-exercises-for-python-classes-and-objects"]], "Additional Topics to Explore": [[49, "additional-topics-to-explore"]], "Getting Things Done With Dendron and VS Code \u2013 First Look": [[50, "getting-things-done-with-dendron-and-vs-code-first-look"]], "The Good": [[50, "the-good"]], "The Bad": [[50, "the-bad"]], "The Indifferent": [[50, "the-indifferent"]], "Overall Impressions": [[50, "overall-impressions"]], "Try It Yourself": [[50, "try-it-yourself"]], "Getting Things Done with GitHub, Markdown, and Visual Studio Code": [[51, "getting-things-done-with-github-markdown-and-visual-studio-code"]], "How to Work With Google Sheets In Python and Pandas": [[52, "how-to-work-with-google-sheets-in-python-and-pandas"]], "The Devil is Not in the Details, It\u2019s In the Setup.": [[52, "the-devil-is-not-in-the-details-it-s-in-the-setup"]], "Welcome to the Google Cloud": [[52, "welcome-to-the-google-cloud"]], "Configuring a Project": [[52, "configuring-a-project"]], "Creating a Service Account": [[52, "creating-a-service-account"]], "Adding a Key": [[52, "adding-a-key"]], "Configure Your Spreadsheet and Gspread to Use The New Credentials": [[52, "configure-your-spreadsheet-and-gspread-to-use-the-new-credentials"]], "Writing Data": [[52, "writing-data"]], "Using Google Sheets With Pandas": [[52, "using-google-sheets-with-pandas"]], "How To Profile Python Code": [[53, "how-to-profile-python-code"]], "Python Profiling Tool Overview": [[53, "python-profiling-tool-overview"]], "Profiling is a Late-Stage Activity": [[53, "profiling-is-a-late-stage-activity"]], "Profiling vs. Benchmarking": [[53, "profiling-vs-benchmarking"]], "Deterministic Profiling vs. Statistical Profiling": [[53, "deterministic-profiling-vs-statistical-profiling"]], "Wall clock time vs. CPU Time": [[53, "wall-clock-time-vs-cpu-time"]], "A Profiling Scenario": [[53, "a-profiling-scenario"]], "Profiling using Python\u2019s cProfile Module": [[53, "profiling-using-python-s-cprofile-module"]], "Running the cProfile Python profiler at the command line": [[53, "running-the-cprofile-python-profiler-at-the-command-line"]], "Running cProfile Python profiler in a short program": [[53, "running-cprofile-python-profiler-in-a-short-program"]], "Benchmarking in Python using timeit": [[53, "benchmarking-in-python-using-timeit"]], "Running Timeit as a Command": [[53, "running-timeit-as-a-command"]], "Using the Timeit Module in a Program": [[53, "using-the-timeit-module-in-a-program"]], "Benchmarking in IPython and Jupyter Notebook: %time and %timeit": [[53, "benchmarking-in-ipython-and-jupyter-notebook-time-and-timeit"]], "Getting More Detail than cProfile: The line_profiler Project": [[53, "getting-more-detail-than-cprofile-the-line-profiler-project"]], "Line Profiling in Jupyter": [[53, "line-profiling-in-jupyter"]], "Profile Python Function Calls as You Go: Using the %prun magic method": [[53, "profile-python-function-calls-as-you-go-using-the-prun-magic-method"]], "Using %lprun: More Convenient than Kernprof": [[53, "using-lprun-more-convenient-than-kernprof"]], "Understanding Memory Usage with the memory_profiler Package": [[53, "understanding-memory-usage-with-the-memory-profiler-package"]], "Memory Profiling for Single Lines of Python Code with %memit": [[53, "memory-profiling-for-single-lines-of-python-code-with-memit"]], "Memory Profiling Functions %mprun": [[53, "memory-profiling-functions-mprun"]], "Profiling CPU and Memory Graphically With Scalene": [[53, "profiling-cpu-and-memory-graphically-with-scalene"]], "A Brief Honorable Mention: Yappi": [[53, "a-brief-honorable-mention-yappi"]], "How To Compare Python Dictionaries": [[54, "how-to-compare-python-dictionaries"]], "Python Is Consistent": [[54, "python-is-consistent"]], "Compare Dictionaries Like Other Types": [[54, "compare-dictionaries-like-other-types"]], "Use Caution With Equality-Compatible Types": [[54, "use-caution-with-equality-compatible-types"]], "What If We Need a Stronger Check for Equality?": [[54, "what-if-we-need-a-stronger-check-for-equality"]], "Using \u201c==\u201d for Other Python Collections": [[54, "using-for-other-python-collections"]], "What About User-Defined Types?": [[54, "what-about-user-defined-types"]], "How to Convert a String to Datetime in Python?": [[55, "how-to-convert-a-string-to-datetime-in-python"]], "What is Python Datetime?": [[55, "what-is-python-datetime"]], "Converting Strings to Datetime Objects": [[55, "converting-strings-to-datetime-objects"]], "Python Datetime Format Codes": [[55, "python-datetime-format-codes"]], "String to Datetime Object": [[55, "string-to-datetime-object"]], "Accessing Datetime Objects\u2019 Elements": [[55, "accessing-datetime-objects-elements"]], "Datetime and Time Zones": [[55, "datetime-and-time-zones"]], "String to Date Object": [[55, "string-to-date-object"]], "Presenting Date Objects in Different Formats": [[55, "presenting-date-objects-in-different-formats"]], "String to Time Object": [[55, "string-to-time-object"]], "Presenting Time Objects in Different Formats": [[55, "presenting-time-objects-in-different-formats"]], "Converting a Pandas Column to Datetime": [[55, "converting-a-pandas-column-to-datetime"]], "Converting a String to Datetime Using Other Python Libraries": [[55, "converting-a-string-to-datetime-using-other-python-libraries"]], "String to Datetime with Dateutil": [[55, "string-to-datetime-with-dateutil"]], "String to Datetime with Maya": [[55, "string-to-datetime-with-maya"]], "String to Datetime with Arrow": [[55, "string-to-datetime-with-arrow"]], "Converting Datetime Back into Integer, Float, or Strings": [[55, "converting-datetime-back-into-integer-float-or-strings"]], "Conclusion": [[55, "conclusion"], [72, "conclusion"], [74, "conclusion"], [140, "conclusion"], [168, "conclusion"]], "How To Install Pip and Conda on the Same Machine": [[56, "how-to-install-pip-and-conda-on-the-same-machine"]], "The Basics First: Pip, Pyenv, Anaconda and Miniconda": [[56, "the-basics-first-pip-pyenv-anaconda-and-miniconda"]], "Using Pyenv to Support Both Pip and Miniconda": [[56, "using-pyenv-to-support-both-pip-and-miniconda"]], "Closing Thoughts on Pyenv": [[56, "closing-thoughts-on-pyenv"]], "How to Learn To Program": [[57, "how-to-learn-to-program"]], "Think About Your \u201cWhy\u201d": [[57, "think-about-your-why"]], "Start Small and Try Before You Buy": [[57, "start-small-and-try-before-you-buy"]], "Your Mother Probably Already Told You This": [[57, "your-mother-probably-already-told-you-this"]], "Kick Your Doubt To the Curb": [[57, "kick-your-doubt-to-the-curb"]], "Don\u2019t Be Afraid of Simplicity": [[57, "don-t-be-afraid-of-simplicity"]], "Find a Mentor / Make a Friend in the Field": [[57, "find-a-mentor-make-a-friend-in-the-field"]], "How To Practice Python": [[58, "how-to-practice-python"]], "Python Habits Are No Different From Other Habits": [[58, "python-habits-are-no-different-from-other-habits"]], "Setting Up Your Environment for Success": [[58, "setting-up-your-environment-for-success"]], "The Python Practice Implementation Intention": [[58, "the-python-practice-implementation-intention"]], "START!": [[58, "start"]], "Making Your Python Practice Easy": [[58, "making-your-python-practice-easy"]], "Build In a Reward for Your Practice": [[58, "build-in-a-reward-for-your-practice"]], "Other Rewards": [[58, "other-rewards"]], "How to Practice Python: Data Science and Pandas": [[59, "how-to-practice-python-data-science-and-pandas"]], "Core Packages for Python Data Science": [[59, "core-packages-for-python-data-science"]], "Online Tools for Practicing Python Data Science": [[59, "online-tools-for-practicing-python-data-science"]], "Books for Python Data Science": [[59, "books-for-python-data-science"]], "A Free Online Pandas Course": [[59, "a-free-online-pandas-course"]], "Sample Data Sets You Can Work With": [[59, "sample-data-sets-you-can-work-with"]], "Build Your Own Dataset": [[59, "build-your-own-dataset"]], "How To Separate Source and Tests in Python": [[60, "how-to-separate-source-and-tests-in-python"]], "Solution? Code Python in Python.": [[60, "solution-code-python-in-python"]], "Have You Seen This Puzzle?": [[60, "have-you-seen-this-puzzle"]], "How To Use Docker Python Images and Docker Compose With Python": [[61, "how-to-use-docker-python-images-and-docker-compose-with-python"]], "Is Docker Important for Python Development": [[61, "is-docker-important-for-python-development"]], "First Steps: Installing and Configuring Docker": [[61, "first-steps-installing-and-configuring-docker"]], "Basic Docker Concepts": [[61, "basic-docker-concepts"]], "Running Python Flask in a Docker Container": [[61, "running-python-flask-in-a-docker-container"]], "Selecting a Base Docker Image for Python": [[61, "selecting-a-base-docker-image-for-python"]], "A Simple Flask Dockerfile": [[61, "a-simple-flask-dockerfile"]], "Building and Running the Flask Image and Python Docker Container": [[61, "building-and-running-the-flask-image-and-python-docker-container"]], "Running Django and Postgres Using Docker Compose": [[61, "running-django-and-postgres-using-docker-compose"]], "A Django And Docker-Compose Starter Application": [[61, "a-django-and-docker-compose-starter-application"]], "A docker-compose.yaml file for Postgres and Django": [[61, "a-docker-compose-yaml-file-for-postgres-and-django"]], "The Django Dockerfile and Source": [[61, "the-django-dockerfile-and-source"]], "Some Django Utility Scripts for Docker": [[61, "some-django-utility-scripts-for-docker"]], "A Simple Django Dockerfile": [[61, "a-simple-django-dockerfile"]], "Putting It All Together": [[61, "putting-it-all-together"]], "More Useful Docker Commands": [[61, "more-useful-docker-commands"]], "How to Visualize Data Using Pandas": [[62, "how-to-visualize-data-using-pandas"]], "Exploring the Dataset": [[62, "exploring-the-dataset"]], "Visualize Data Using Pandas": [[62, "visualize-data-using-pandas"]], "Line plots in Pandas": [[62, "line-plots-in-pandas"]], "Scatter plots in Python": [[62, "scatter-plots-in-python"]], "Bar plots in Pandas": [[62, "bar-plots-in-pandas"]], "Area plots in Pandas": [[62, "area-plots-in-pandas"]], "Box plots in Pandas": [[62, "box-plots-in-pandas"]], "Pie charts in Pandas": [[62, "pie-charts-in-pandas"]], "Density plots in Pandas": [[62, "density-plots-in-pandas"]], "Hexbin plots in Pandas": [[62, "hexbin-plots-in-pandas"]], "Math \u2229 Programming": [[63, "math-programming"]], "Installing a Python and Git Development Environment on Windows, Part 2": [[64, "installing-a-python-and-git-development-environment-on-windows-part-2"]], "Installing Visual Studio Code": [[64, "installing-visual-studio-code"]], "Installing the GitHub CLI for Windows": [[64, "installing-the-github-cli-for-windows"]], "Installing a Python and Git Development Environment on Windows": [[65, "installing-a-python-and-git-development-environment-on-windows"]], "Video": [[65, "video"]], "Transcript Introduction": [[65, "transcript-introduction"]], "Overview of What We\u2019ll Be Doing": [[65, "overview-of-what-we-ll-be-doing"]], "Installing Windows Terminal": [[65, "installing-windows-terminal"]], "Installing Python for Windows": [[65, "installing-python-for-windows"]], "Validating the Python Install": [[65, "validating-the-python-install"]], "Installing Git for Windows": [[65, "installing-git-for-windows"]], "Making Windows Terminal Use Git Bash By Default": [[65, "making-windows-terminal-use-git-bash-by-default"]], "Conclusion of Part 1": [[65, "conclusion-of-part-1"]], "Installing Pyenv on a Mac (A Setup Guide With Usage Tips)": [[66, "installing-pyenv-on-a-mac-a-setup-guide-with-usage-tips"]], "My Pyenv Story - A Cleaner Personal Workflow": [[66, "my-pyenv-story-a-cleaner-personal-workflow"]], "Using Pyenv on a Team": [[66, "using-pyenv-on-a-team"]], "Enough Motivation \u2013 Let\u2019s Begin the Installation": [[66, "enough-motivation-let-s-begin-the-installation"]], "Getting Started With Pyenv": [[66, "getting-started-with-pyenv"]], "Setting a Python Version Using Pyenv": [[66, "setting-a-python-version-using-pyenv"]], "Setting a Global Default": [[66, "setting-a-global-default"]], "Using Pyenv With Pip": [[66, "using-pyenv-with-pip"]], "More Basic Pyenv Commands": [[66, "more-basic-pyenv-commands"]], "Should You Do Other \u201cCleanup\u201d Steps?": [[66, "should-you-do-other-cleanup-steps"]], "Introducing Sage Math:  Symbolic Math Software In Python": [[67, "introducing-sage-math-symbolic-math-software-in-python"]], "Getting Started With Sage": [[67, "getting-started-with-sage"]], "Running Sage Online": [[67, "running-sage-online"]], "Installing Sage Math On Your Machine": [[67, "installing-sage-math-on-your-machine"]], "Sage Is \u201cPython With a Twist\u201d": [[67, "sage-is-python-with-a-twist"]], "How Sage Is Different From Python": [[67, "how-sage-is-different-from-python"]], "How Sage And Python Are The Same": [[67, "how-sage-and-python-are-the-same"]], "Is Python Free?  Yes!  We List the Best Free Tools": [[68, "is-python-free-yes-we-list-the-best-free-tools"]], "The Answers": [[68, "the-answers"]], "Python IDEs and Managing Python Versions": [[68, "python-ides-and-managing-python-versions"]], "Top IDEs for Beginners": [[68, "top-ides-for-beginners"]], "Other Tools for Running and Developing in Python": [[68, "other-tools-for-running-and-developing-in-python"]], "Notebook Style Tools for Data Science": [[68, "notebook-style-tools-for-data-science"]], "Python Testing Tools": [[68, "python-testing-tools"]], "Python Tools for Data Science": [[68, "python-tools-for-data-science"]], "Python Scientific and Machine Learning Tools": [[68, "python-scientific-and-machine-learning-tools"]], "Tools for Cloud Computing": [[68, "tools-for-cloud-computing"]], "Tools for Web Development": [[68, "tools-for-web-development"]], "Package Tools and Virtual Environments": [[68, "package-tools-and-virtual-environments"]], "Python Tools for General Scripting and Automation": [[68, "python-tools-for-general-scripting-and-automation"]], "Is Python Slow?  Separating the Myths from the Facts": [[69, "is-python-slow-separating-the-myths-from-the-facts"]], "Python vs. Java Performance: Long Running Speed vs Cold Start": [[69, "python-vs-java-performance-long-running-speed-vs-cold-start"]], "Development Speed vs Runtime Speed": [[69, "development-speed-vs-runtime-speed"]], "Python Is an \u201cInterpreted\u201d Language": [[69, "python-is-an-interpreted-language"]], "Python and the GIL": [[69, "python-and-the-gil"]], "Library Selection and Other Self-Inflicted Wounds": [[69, "library-selection-and-other-self-inflicted-wounds"]], "Future Improvements": [[69, "future-improvements"]], "Is Julia Easy to Learn for Python Developers?": [[70, "is-julia-easy-to-learn-for-python-developers"]], "Julia Easily Integrates With Jupyter Notebook": [[70, "julia-easily-integrates-with-jupyter-notebook"]], "Julia List Comprehensions Work Like Python\u2019s": [[70, "julia-list-comprehensions-work-like-python-s"]], "Julia Manages Packages and Environments Better": [[70, "julia-manages-packages-and-environments-better"]], "Like Python, Julia Features DataFrames": [[70, "like-python-julia-features-dataframes"]], "Subsets of Data in Julia Are Similar To Pandas": [[70, "subsets-of-data-in-julia-are-similar-to-pandas"]], "Julia Packages Can Be Added in Code": [[70, "julia-packages-can-be-added-in-code"]], "Julia\u2019s Query Tool Simplifies Querying DataFrames": [[70, "julia-s-query-tool-simplifies-querying-dataframes"]], "Julia Slicing Ranges Differ from Python\u2019s": [[70, "julia-slicing-ranges-differ-from-python-s"]], "Julia\u2019s Query Package is Easy to Grasp": [[70, "julia-s-query-package-is-easy-to-grasp"]], "Transforming Rows into Columns in Julia": [[70, "transforming-rows-into-columns-in-julia"]], "Plotting Data In Julia is Straightforward": [[70, "plotting-data-in-julia-is-straightforward"]], "Julia Is Faster Than Python": [[70, "julia-is-faster-than-python"]], "Julia From Python Can Be Done Incrementally": [[70, "julia-from-python-can-be-done-incrementally"]], "Jupyter Lite:  Python in the Browser with Serverless Jupyter": [[71, "jupyter-lite-python-in-the-browser-with-serverless-jupyter"]], "Add Jupyter Notebook to Any Website": [[71, "add-jupyter-notebook-to-any-website"]], "Creating the JupyterLite Repository": [[71, "creating-the-jupyterlite-repository"]], "Serving JupyterLite from a Subdomain of Your Website": [[71, "serving-jupyterlite-from-a-subdomain-of-your-website"]], "Create the Subdomain in DNS": [[71, "create-the-subdomain-in-dns"]], "Configuring Your Subdomain in GitHub Pages": [[71, "configuring-your-subdomain-in-github-pages"]], "Making Changes and Basic Customizations": [[71, "making-changes-and-basic-customizations"]], "Building and Serving JupyterLite Notebooks Locally": [[71, "building-and-serving-jupyterlite-notebooks-locally"]], "Adding a Default Page": [[71, "adding-a-default-page"]], "Acknowledgments": [[71, "acknowledgments"]], "Jupyter Notebook: A Complete Introduction": [[72, "jupyter-notebook-a-complete-introduction"]], "Part One: Up and Running": [[72, "part-one-up-and-running"]], "Running Online With Colab": [[72, "running-online-with-colab"]], "Running Jupyter Lab Locally": [[72, "running-jupyter-lab-locally"]], "Part Two: Jupyter Notebook Questions and Answers": [[72, "part-two-jupyter-notebook-questions-and-answers"]], "Who Uses Jupyter Notebook?": [[72, "who-uses-jupyter-notebook"]], "What are the Disadvanatages of Jupyter Notebooks": [[72, "what-are-the-disadvanatages-of-jupyter-notebooks"]], "What Languages Does Jupyter Support?": [[72, "what-languages-does-jupyter-support"]], "Is Jupyter Notebook the Same As Anaconda?": [[72, "is-jupyter-notebook-the-same-as-anaconda"]], "Is Jupyter Notebook an IDE?": [[72, "is-jupyter-notebook-an-ide"]], "What is the Difference Between PyCharm and Jupyter?": [[72, "what-is-the-difference-between-pycharm-and-jupyter"]], "You Might Also Enjoy": [[72, "you-might-also-enjoy"]], "Jupyter Password: Easy Notebook and Lab Configuration": [[73, "jupyter-password-easy-notebook-and-lab-configuration"]], "Jupyter Notebook Password or Jupyter Server Password?": [[73, "jupyter-notebook-password-or-jupyter-server-password"]], "Setting the Password": [[73, "setting-the-password"]], "If You Forget The Password": [[73, "if-you-forget-the-password"]], "Removing The Password": [[73, "removing-the-password"]], "Using the Kaggle Datasets API in Python": [[74, "using-the-kaggle-datasets-api-in-python"]], "Intro to Kaggle and its Datasets": [[74, "intro-to-kaggle-and-its-datasets"]], "Setting up the Kaggle API": [[74, "setting-up-the-kaggle-api"]], "Downloading Kaggle Datasets Using the API": [[74, "downloading-kaggle-datasets-using-the-api"]], "Downloading Multiple Datasets at Once": [[74, "downloading-multiple-datasets-at-once"]], "Using Kaggle Datasets in Various Cases": [[74, "using-kaggle-datasets-in-various-cases"]], "Large Data Sets in Python:  Pandas And The Alternatives": [[75, "large-data-sets-in-python-pandas-and-the-alternatives"]], "Approaches to Optimizing DataFrame Load Times": [[75, "approaches-to-optimizing-dataframe-load-times"]], "Setting Up Our Environment": [[75, "setting-up-our-environment"]], "Polars: A Fast DataFrame implementation with a Slick API": [[75, "polars-a-fast-dataframe-implementation-with-a-slick-api"]], "Large Data Sets With Alternate File Types": [[75, "large-data-sets-with-alternate-file-types"]], "Speeding Things Up With Lazy Mode": [[75, "speeding-things-up-with-lazy-mode"]], "Dask vs. Polars: Lazy Mode Showdown": [[75, "dask-vs-polars-lazy-mode-showdown"]], "Lazy Loading of Rows in Dask": [[75, "lazy-loading-of-rows-in-dask"]], "Lazy Mode in Polars": [[75, "lazy-mode-in-polars"]], "Learn Python: Tutorials from Beginner to Expert": [[76, "learn-python-tutorials-from-beginner-to-expert"]], "Python Programming for Beginners": [[76, "python-programming-for-beginners"]], "Tools and First Steps for Writing Python Code": [[76, "tools-and-first-steps-for-writing-python-code"]], "Python Beginner Tutorials and Exercises": [[76, "python-beginner-tutorials-and-exercises"]], "General Beginner Programming Topics": [[76, "general-beginner-programming-topics"]], "Learn Python Data Science": [[76, "learn-python-data-science"]], "The Python Programming Language: Articles for The Intermediate and Experienced Programmer": [[76, "the-python-programming-language-articles-for-the-intermediate-and-experienced-programmer"]], "Learning C++ and Python: The Perfect Duo for Success": [[77, "learning-c-and-python-the-perfect-duo-for-success"]], "What is C++ and what are its uses": [[77, "what-is-c-and-what-are-its-uses"]], "What is Python and what are its uses": [[77, "what-is-python-and-what-are-its-uses"]], "What are the benefits of learning both C++ and Python": [[77, "what-are-the-benefits-of-learning-both-c-and-python"]], "The challenges of learning both C++ and Python": [[77, "the-challenges-of-learning-both-c-and-python"]], "Python or C++ First?": [[77, "python-or-c-first"]], "Which Is Better To Learn C++ or Python?": [[77, "which-is-better-to-learn-c-or-python"]], "Integrating C++ and Python": [[77, "integrating-c-and-python"]], "Background": [[77, "background"]], "C Extension Modules": [[77, "c-extension-modules"]], "Cython": [[77, "cython"]], "NumPy": [[77, "numpy"]], "6. Where to learn more": [[77, "where-to-learn-more"]], "Learning Git: What To Know When You\u2019re a Beginner": [[78, "learning-git-what-to-know-when-you-re-a-beginner"]], "Git and GitHub: What\u2019s The Difference?": [[78, "git-and-github-what-s-the-difference"]], "Should You Learn Git As a Beginner?": [[78, "should-you-learn-git-as-a-beginner"]], "The Path Ahead: Learn Git In Two Parts": [[78, "the-path-ahead-learn-git-in-two-parts"]], "Part I: Coding in Public as an Individual": [[78, "part-i-coding-in-public-as-an-individual"]], "Part II: Working in Git as Part of a Team": [[78, "part-ii-working-in-git-as-part-of-a-team"]], "How to Make a Start": [[78, "how-to-make-a-start"]], "Mastering The Take-Home Coding Exercise: A Simple Checklist To Make It Shine": [[79, "mastering-the-take-home-coding-exercise-a-simple-checklist-to-make-it-shine"]], "Take Home Coding Problem Checklist": [[79, "take-home-coding-problem-checklist"]], "Math Journal": [[80, "math-journal"]], "Exploring Basic Number Theory in Python": [[82, "exploring-basic-number-theory-in-python"]], "Solving a problem by hand and checking it in SymPy": [[82, "solving-a-problem-by-hand-and-checking-it-in-sympy"]], "Circle graph by itself": [[84, "circle-graph-by-itself"]], "Using SymPy for Plotting Geometry": [[85, "using-sympy-for-plotting-geometry"]], "Euclid\u2019s Geometry": [[85, "euclid-s-geometry"]], "Enter SymPy": [[85, "enter-sympy"]], "Can You Take Calculus In Your Sixties?": [[86, "can-you-take-calculus-in-your-sixties"]], "The Preliminary Terrors": [[86, "the-preliminary-terrors"]], "You\u2019re Just the Right Age": [[86, "you-re-just-the-right-age"]], "Taking Calculus for Fun vs. Taking It for Credit": [[86, "taking-calculus-for-fun-vs-taking-it-for-credit"]], "How to Ace Calculus \u2013 or Another Math Course \u2013 in Your Sixties and Beyond": [[86, "how-to-ace-calculus-or-another-math-course-in-your-sixties-and-beyond"]], "Matplotlib Coordinates:  Graphing Math Functions in Python": [[87, "matplotlib-coordinates-graphing-math-functions-in-python"]], "Plotting a Line in Matplotlib": [[87, "plotting-a-line-in-matplotlib"]], "A Non-Linear Plot in Matplotlib": [[87, "a-non-linear-plot-in-matplotlib"]], "Matplotlib vs. Seaborn": [[88, "matplotlib-vs-seaborn"]], "Comparing Matplotlib and Seaborn": [[88, "comparing-matplotlib-and-seaborn"]], "Basic Plots in Matplotlib vs. Seaborn": [[88, "basic-plots-in-matplotlib-vs-seaborn"]], "Scatter Plots": [[88, "scatter-plots"]], "Line Graphs": [[88, "line-graphs"]], "Histogram Plots": [[88, "histogram-plots"]], "Box Plots": [[88, "box-plots"]], "Violin Plots": [[88, "violin-plots"]], "Bar Plots": [[88, "bar-plots"]], "Creating Legends": [[88, "creating-legends"]], "You Might Also Like": [[88, "you-might-also-like"]], "The Middle Way of Software Development": [[89, "the-middle-way-of-software-development"]], "Your Header here": [[90, "your-header-here"]], "New for 2022:  Python, Git, GitHub BootCamp Course": [[91, "new-for-2022-python-git-github-bootcamp-course"]], "What We Know": [[91, "what-we-know"]], "What Will It Be About?": [[91, "what-will-it-be-about"]], "Great Introductory Pricing": [[91, "great-introductory-pricing"]], "When Will It Be Ready?": [[91, "when-will-it-be-ready"]], "The Coop Bootcamp option": [[91, "the-coop-bootcamp-option"]], "What We Don\u2019t Know": [[91, "what-we-don-t-know"]], "Newsletter, 11/15/2022": [[92, "newsletter-11-15-2022"]], "Cool Stuff Around The Web": [[92, "cool-stuff-around-the-web"]], "New Tricks, New Traps, and Coming Soon": [[92, "new-tricks-new-traps-and-coming-soon"]], "Python Newsletter, January 17, 2023": [[93, "python-newsletter-january-17-2023"]], "What\u2019s New On CodeSolid": [[93, "whats-new-on-codesolid"]], "A Shout-Out to a Popular Article": [[93, "a-shout-out-to-a-popular-article"]], "Node Starter Projects": [[94, "node-starter-projects"]], "Using Postgres, Python, and Docker": [[95, "using-postgres-python-and-docker"]], "Postgres Docker / Client on the Host": [[95, "postgres-docker-client-on-the-host"]], "NumPy Examples \u2013  Practice Questions Make You an Expert": [[96, "numpy-examples-practice-questions-make-you-an-expert"]], "Finding the Solutions": [[96, "finding-the-solutions"]], "Creating Simple One-Dimensional NumPy Arrays": [[96, "creating-simple-one-dimensional-numpy-arrays"]], "Creating and Using Multidimensional Arrays": [[96, "creating-and-using-multidimensional-arrays"]], "Indexing and Slicing Two-Dimensional Arrays": [[96, "indexing-and-slicing-two-dimensional-arrays"]], "Vectorized Operations": [[96, "vectorized-operations"]], "Working with Files": [[96, "working-with-files"]], "NumPy String Functions": [[96, "numpy-string-functions"]], "Fast S3 Updates with Golang and Goroutines": [[97, "fast-s3-updates-with-golang-and-goroutines"]], "Is This Trip Necessary?": [[97, "is-this-trip-necessary"]], "Some Preliminaries": [[97, "some-preliminaries"]], "Program Design": [[97, "program-design"]], "Benchmarking the Two Versions": [[97, "benchmarking-the-two-versions"]], "How to Use the Pandas Groupby Method?": [[98, "how-to-use-the-pandas-groupby-method"]], "Contents": [[98, "contents"]], "What is The Pandas Groupby Function?": [[98, "what-is-the-pandas-groupby-function"]], "Sample Data We\u2019ll Be Using": [[98, "sample-data-we-ll-be-using"]], "Splitting Data into Groups Using Pandas Groupby": [[98, "splitting-data-into-groups-using-pandas-groupby"]], "Creating a Group Based on One Column": [[98, "creating-a-group-based-on-one-column"]], "Creating Groups Based on Two Columns": [[98, "creating-groups-based-on-two-columns"]], "Grouping By Three Columns": [[98, "grouping-by-three-columns"]], "Getting a Specific Group": [[98, "getting-a-specific-group"]], "Pandas Groupby Output Format": [[98, "pandas-groupby-output-format"]], "Iterating Through Groups in Pandas Groupby": [[98, "iterating-through-groups-in-pandas-groupby"]], "Finding the Percentage of Grouped Data": [[98, "finding-the-percentage-of-grouped-data"]], "Different Built-in Functions": [[98, "different-built-in-functions"]], "Aggregation": [[98, "aggregation"]], "Filtering": [[98, "filtering"]], "Transformation": [[98, "transformation"]], "Apply": [[98, "apply"]], "Saving Grouped Pandas DataFrame in Different Formats": [[98, "saving-grouped-pandas-dataframe-in-different-formats"]], "Saving a Pandas DataFrame As a CSV File": [[98, "saving-a-pandas-dataframe-as-a-csv-file"]], "Saving Pandas DataFrame as an Excel file": [[98, "saving-pandas-dataframe-as-an-excel-file"]], "Pandas Examples and Review Questions to Make You an Expert": [[99, "pandas-examples-and-review-questions-to-make-you-an-expert"]], "Part One: Examples": [[99, "part-one-examples"]], "Getting Started": [[99, "getting-started"], [168, "getting-started"]], "The Series Class": [[99, "the-series-class"]], "The DataFrame Class": [[99, "the-dataframe-class"]], "Working With Sample Seaborn Data Sets": [[99, "working-with-sample-seaborn-data-sets"]], "Selecting Rows and Columns": [[99, "selecting-rows-and-columns"]], "Part Two: Pandas Review Questions": [[99, "part-two-pandas-review-questions"]], "Creating A Pandas DataFrame and Using Sample Data Sets": [[99, "creating-a-pandas-dataframe-and-using-sample-data-sets"]], "Loading Data From CSV": [[99, "loading-data-from-csv"]], "Basic Operations on Data": [[99, "basic-operations-on-data"]], "Selecting Rows, Columns, and Cells": [[99, "selecting-rows-columns-and-cells"]], "Some Exercises Using Time Series": [[99, "some-exercises-using-time-series"]], "Pip vs. Conda: Two Top Tools for Managing Python Packages": [[100, "pip-vs-conda-two-top-tools-for-managing-python-packages"]], "What is pip?": [[100, "what-is-pip"]], "Installing pip on Windows": [[100, "installing-pip-on-windows"]], "Prerequisites:": [[100, "prerequisites"]], "Install pip on your PC:": [[100, "install-pip-on-your-pc"]], "Step 1. Getting the get-pip.py file": [[100, "step-1-getting-the-get-pip-py-file"]], "Step 2: Running get-pip.py": [[100, "step-2-running-get-pip-py"]], "Step-3: Validating the Installation": [[100, "step-3-validating-the-installation"]], "Step 4: Adding pip to the system PATH": [[100, "step-4-adding-pip-to-the-system-path"]], "What is Virtualenv?": [[100, "what-is-virtualenv"]], "What is conda?": [[100, "what-is-conda"]], "Why Should You Use Conda?": [[100, "why-should-you-use-conda"]], "What is miniconda?": [[100, "what-is-miniconda"]], "What is Anaconda?": [[100, "what-is-anaconda"]], "Conda vs. Miniconda vs. Anaconda": [[100, "conda-vs-miniconda-vs-anaconda"]], "Conda vs Pip": [[100, "conda-vs-pip"]], "Pip vs Pipenv: Which is better and which to learn first?": [[101, "pip-vs-pipenv-which-is-better-and-which-to-learn-first"]], "Getting Started with Pip and Virtual Environments": [[101, "getting-started-with-pip-and-virtual-environments"]], "Your First Virtual Environment in Under Five Minutes": [[101, "your-first-virtual-environment-in-under-five-minutes"]], "Using Pip to Install Packages Into a Virtual Environment": [[101, "using-pip-to-install-packages-into-a-virtual-environment"]], "Testing the Pip Install Results": [[101, "testing-the-pip-install-results"]], "How to Use \u201crequirements.txt\u201d": [[101, "how-to-use-requirements-txt"]], "Creating requirements.txt and Using Pinned Requirements": [[101, "creating-requirements-txt-and-using-pinned-requirements"]], "Should You Create requirements.txt Using Pip Freeze?": [[101, "should-you-create-requirements-txt-using-pip-freeze"]], "Problems that Pipenv Tries to Solve": [[101, "problems-that-pipenv-tries-to-solve"]], "Pip-tools vs Pipenv": [[101, "pip-tools-vs-pipenv"]], "Programming and Math:  A Brief Translation Guide": [[102, "programming-and-math-a-brief-translation-guide"]], "Vexed by Vectors": [[102, "vexed-by-vectors"]], "Soothed by Scalars": [[102, "soothed-by-scalars"]], "You\u2019re About to Enter Another Dimension": [[102, "you-re-about-to-enter-another-dimension"]], "Bonus Prize, Wherein I Reconcile Science and Religion": [[102, "bonus-prize-wherein-i-reconcile-science-and-religion"]], "PyCharm vs. VS Code: Which Is Better and Why?": [[103, "pycharm-vs-vs-code-which-is-better-and-why"]], "Overview": [[103, "overview"]], "Which Is the Better Beginner IDE for Python?": [[103, "which-is-the-better-beginner-ide-for-python"]], "Which is Better for General Editing Tasks?": [[103, "which-is-better-for-general-editing-tasks"]], "Which is Better for Remote Development?": [[103, "which-is-better-for-remote-development"]], "Which Has Better Support for Advanced Python Features?": [[103, "which-has-better-support-for-advanced-python-features"]], "Which Has Better Support for Languages Other Than Python?": [[103, "which-has-better-support-for-languages-other-than-python"]], "Code Editors vs Heavyweight IDEs for Python": [[103, "code-editors-vs-heavyweight-ides-for-python"]], "Is PyPy a Faster Version of Python?": [[104, "is-pypy-a-faster-version-of-python"]], "Other Python Implementations": [[104, "other-python-implementations"]], "A Simple Test Case": [[104, "a-simple-test-case"]], "PyPy First Impressions: Some Installation Issues": [[104, "pypy-first-impressions-some-installation-issues"]], "Evaluating PyPy Performance": [[104, "evaluating-pypy-performance"]], "Some Final Thoughts": [[104, "some-final-thoughts"]], "Python and AWS:  Getting Started with the Cloud Development Kit (CDK)": [[105, "python-and-aws-getting-started-with-the-cloud-development-kit-cdk"]], "Getting Started: Basic Setup for the CDK for Python": [[105, "getting-started-basic-setup-for-the-cdk-for-python"]], "Using the Python CDK With Conda": [[105, "using-the-python-cdk-with-conda"]], "Using the CDK in a Python Virtual Environment": [[105, "using-the-cdk-in-a-python-virtual-environment"]], "Python for AWS Lambda Functions: A Beginner\u2019s Guide": [[106, "python-for-aws-lambda-functions-a-beginner-s-guide"]], "Some Basic Definitions": [[106, "some-basic-definitions"]], "Creating a Lambda Function (Spoiler: It\u2019s Just a Function)": [[106, "creating-a-lambda-function-spoiler-it-s-just-a-function"]], "Getting An AWS Account and Configuring the AWS CLI": [[106, "getting-an-aws-account-and-configuring-the-aws-cli"]], "Publishing a Lambda Function from the AWS Console": [[106, "publishing-a-lambda-function-from-the-aws-console"]], "Publishing a Lambda Function Using the AWS CLI": [[106, "publishing-a-lambda-function-using-the-aws-cli"]], "Calling a Lambda Function from the Command Line": [[106, "calling-a-lambda-function-from-the-command-line"]], "Getting Started with Boto3": [[106, "getting-started-with-boto3"]], "Using Boto3 in a Lambda Function": [[106, "using-boto3-in-a-lambda-function"]], "Further Reading and Advanced Work": [[106, "further-reading-and-advanced-work"]], "Python and React:  Running Python Online in a React App": [[107, "python-and-react-running-python-online-in-a-react-app"]], "Clearing a Roadblock": [[107, "clearing-a-roadblock"]], "A Coding Boot Camp Run As a Cooperative": [[108, "a-coding-boot-camp-run-as-a-cooperative"]], "Why A Coop Coding Boot Camp Is an Awesome Idea": [[108, "why-a-coop-coding-boot-camp-is-an-awesome-idea"]], "Python Chemistry:  SymPy and ChemPy": [[109, "python-chemistry-sympy-and-chempy"]], "Using SymPy for Chemistry in Python": [[109, "using-sympy-for-chemistry-in-python"]], "Introducing ChemPy": [[109, "introducing-chempy"]], "{\u2018CH4\u2019: 1, \u2018O2\u2019: 2}\n{\u2018CO2\u2019: 1, \u2018H2O\u2019: 2}": [[109, "ch4-1-o2-2-co2-1-h2o-2"]], "Python Chemistry:  SymPy and ChemPy{\u2018Ca(OH)2\u2019: 3, \u2018H3(PO4)\u2019: 2}": [[109, "python-chemistry-sympy-and-chempy-ca-oh-2-3-h3-po4-2"]], "Python Configuration: Top Built-In and Third-Party Libraries": [[110, "python-configuration-top-built-in-and-third-party-libraries"]], "Best Python Configuration Tools: An Overview": [[110, "best-python-configuration-tools-an-overview"]], "Python Dictionaries: A Common Structure": [[110, "python-dictionaries-a-common-structure"]], "The Python Dictionary as a Configuration Option": [[110, "the-python-dictionary-as-a-configuration-option"]], "Python Built-in Configuration: ConfigParser": [[110, "python-built-in-configuration-configparser"]], "Top Picks: Tomllib and Toml": [[110, "top-picks-tomllib-and-toml"]], "The Road Not Taken: JSON and YAML": [[110, "the-road-not-taken-json-and-yaml"]], "Python Data Analysis Starter Project": [[111, "python-data-analysis-starter-project"]], "Installing the Tools for the Pandas Series": [[111, "installing-the-tools-for-the-pandas-series"]], "Why A Data Analysis Starter Project?": [[111, "why-a-data-analysis-starter-project"]], "Installing the Project Tools": [[111, "installing-the-project-tools"]], "Using Pip: (Recommended If You Have Python Installed)": [[111, "using-pip-recommended-if-you-have-python-installed"]], "Using Conda": [[111, "using-conda"]], "Running and Using Jupyter Lab": [[111, "running-and-using-jupyter-lab"]], "What\u2019s Included in the Starter Project": [[111, "what-s-included-in-the-starter-project"]], "Next Steps": [[111, "next-steps"]], "Python Dataclass:  Easily Automate Class Best Practices": [[112, "python-dataclass-easily-automate-class-best-practices"]], "What is the Python Dataclass Decorator?": [[112, "what-is-the-python-dataclass-decorator"]], "Dataclass Example and Exploration Lab": [[112, "dataclass-example-and-exploration-lab"]], "The Advantages of Dataclasses": [[112, "the-advantages-of-dataclasses"]], "Python Dataclass Example: Class Definition": [[112, "python-dataclass-example-class-definition"]], "Exploring Our Dataclass": [[112, "exploring-our-dataclass"]], "__repr__": [[112, "repr"]], "__eq__": [[112, "eq"]], "Dataclass Static Type Checking With MyPy": [[112, "dataclass-static-type-checking-with-mypy"]], "Dataclasses And Python Structural Pattern Matching": [[112, "dataclasses-and-python-structural-pattern-matching"]], "Overview and Example": [[112, "overview-and-example"]], "How Dataclasses Implement Pattern Matching": [[112, "how-dataclasses-implement-pattern-matching"]], "Understanding and Using Data Class Default Values": [[112, "understanding-and-using-data-class-default-values"]], "Dataclass vs. Namedtuple": [[112, "dataclass-vs-namedtuple"]], "Dataclass Fields": [[112, "dataclass-fields"]], "Simple Field Customization: Overriding a Default Value": [[112, "simple-field-customization-overriding-a-default-value"]], "Post Init Processing": [[112, "post-init-processing"]], "Excluding Fields from Ordering": [[112, "excluding-fields-from-ordering"]], "Should I Use a Python Dataclass: Maintenance": [[112, "should-i-use-a-python-dataclass-maintenance"]], "Python Date and Time Functions: The Complete Tutorial": [[113, "python-date-and-time-functions-the-complete-tutorial"]], "The DateTime Module: Basic Tasks": [[113, "the-datetime-module-basic-tasks"]], "How to Get the Current Time in Python": [[113, "how-to-get-the-current-time-in-python"]], "How to Get the Current Date in Python": [[113, "how-to-get-the-current-date-in-python"]], "The Python Datetime Module: A Closer Look": [[113, "the-python-datetime-module-a-closer-look"]], "Aware vs. Naive Datetimes": [[113, "aware-vs-naive-datetimes"]], "How to Create Time Zone Aware Datetime and Time Instances": [[113, "how-to-create-time-zone-aware-datetime-and-time-instances"]], "Getting the System Time Zone": [[113, "getting-the-system-time-zone"]], "Creating an Arbitrary Time Zone: The Zoneinfo Module": [[113, "creating-an-arbitrary-time-zone-the-zoneinfo-module"]], "Getting a Future Date or Past Date in Python": [[113, "getting-a-future-date-or-past-date-in-python"]], "Using a Date or Datetime Constructor": [[113, "using-a-date-or-datetime-constructor"]], "Manipulating Dates and Times With Timedelta": [[113, "manipulating-dates-and-times-with-timedelta"]], "How to Add Days to a Date Object In Python": [[113, "how-to-add-days-to-a-date-object-in-python"]], "Adding or Subtracting Time": [[113, "adding-or-subtracting-time"]], "Finding the Difference Between Two Dates": [[113, "finding-the-difference-between-two-dates"]], "Calculate Remaining Days Until Christmas in Python": [[113, "calculate-remaining-days-until-christmas-in-python"]], "Formatting and Parsing Dates and Times in Python": [[113, "formatting-and-parsing-dates-and-times-in-python"]], "Formatting Dates and Times with Strftime": [[113, "formatting-dates-and-times-with-strftime"]], "Strftime Formatting Codes Review": [[113, "strftime-formatting-codes-review"]], "Parsing Dates and Times with Strptime": [[113, "parsing-dates-and-times-with-strptime"]], "Saving and Parsing Dates in ISO 8601 Format": [[113, "saving-and-parsing-dates-in-iso-8601-format"]], "Date and Time Related Standard Library Modules": [[113, "date-and-time-related-standard-library-modules"]], "The Python Calendar Module": [[113, "the-python-calendar-module"]], "The Python Time Module": [[113, "the-python-time-module"]], "Dateutil: A Python Third-Party DateTime Library": [[113, "dateutil-a-python-third-party-datetime-library"]], "Dateutil\u2019s General Date and Time Parser Class": [[113, "dateutil-s-general-date-and-time-parser-class"]], "Smart Relative Date/Time Offsets with Dateutil\u2019s Relativedelta": [[113, "smart-relative-date-time-offsets-with-dateutil-s-relativedelta"]], "Handling Recurring Events With Dateutil\u2019s Rrule (Recurrence Rule)": [[113, "handling-recurring-events-with-dateutil-s-rrule-recurrence-rule"]], "Python Dictionaries for Beginners:  A Complete Lesson With Exercises": [[114, "python-dictionaries-for-beginners-a-complete-lesson-with-exercises"]], "Creating Python Dictionaries": [[114, "creating-python-dictionaries"]], "The Append Method in Python Dictionaries?": [[114, "the-append-method-in-python-dictionaries"]], "A Less Common Way to Create a Dictionary": [[114, "a-less-common-way-to-create-a-dictionary"]], "Python Dictionaries vs. Python Lists": [[114, "python-dictionaries-vs-python-lists"]], "Dealing With Missing Data": [[114, "dealing-with-missing-data"]], "Iterating Dictionaries": [[114, "iterating-dictionaries"]], "Some Slightly More Advanced Dictionary Topics": [[114, "some-slightly-more-advanced-dictionary-topics"]], "When To Use Python Defaultdict": [[114, "when-to-use-python-defaultdict"]], "Dictionary Comprehensions": [[114, "dictionary-comprehensions"]], "Python Dictionary Exercises": [[114, "python-dictionary-exercises"]], "Python Docker Examples:  SageMath in a Container": [[115, "python-docker-examples-sagemath-in-a-container"]], "The Rationale: Using Sage With JupyterLab": [[115, "the-rationale-using-sage-with-jupyterlab"]], "Creating and Building the Docker Image": [[115, "creating-and-building-the-docker-image"]], "Running the Container": [[115, "running-the-container"]], "Python Errors: Exception Handling from Beginner to Expert": [[116, "python-errors-exception-handling-from-beginner-to-expert"]], "Syntax Errors in Python": [[116, "syntax-errors-in-python"]], "Indentation Errors": [[116, "indentation-errors"]], "Exceptions, Errors, and Bugs": [[116, "exceptions-errors-and-bugs"]], "Exceptions and Errors": [[116, "exceptions-and-errors"]], "It\u2019s Not a Feature; It\u2019s a Bug": [[116, "it-s-not-a-feature-it-s-a-bug"]], "Try Block Basics: Handling Exceptions in Python": [[116, "try-block-basics-handling-exceptions-in-python"]], "Handling Built-In Exceptions": [[116, "handling-built-in-exceptions"]], "Handling Base Class Exception Types": [[116, "handling-base-class-exception-types"]], "Handling Multiple Exception Types": [[116, "handling-multiple-exception-types"]], "Handling Base Class Exceptions: A Caveat": [[116, "handling-base-class-exceptions-a-caveat"]], "Raising Built-In and User-Defined Exceptions": [[116, "raising-built-in-and-user-defined-exceptions"]], "Python Error Handling: Do\u2019s and Don\u2019ts": [[116, "python-error-handling-do-s-and-don-ts"]], "Find Files in Python:  Complete Cookbook for Searching Files and Folders": [[117, "find-files-in-python-complete-cookbook-for-searching-files-and-folders"]], "The PathLib Module: Defining the Path Structure": [[117, "the-pathlib-module-defining-the-path-structure"]], "Finding Files in the Current Directory": [[117, "finding-files-in-the-current-directory"]], "Searching for Files Recursively in Python": [[117, "searching-for-files-recursively-in-python"]], "Finding a Single File Recursively": [[117, "finding-a-single-file-recursively"]], "Finding an Absolute Path": [[117, "finding-an-absolute-path"]], "Getting the Directory of the Currently Executing File": [[117, "getting-the-directory-of-the-currently-executing-file"]], "Creating a File In the Same Directory As a Python File": [[117, "creating-a-file-in-the-same-directory-as-a-python-file"]], "Yes, But Does the File Exist?": [[117, "yes-but-does-the-file-exist"]], "Working with Files and Directories": [[117, "working-with-files-and-directories"]], "Example: Recursively Listing Files and Directories in Python:": [[117, "example-recursively-listing-files-and-directories-in-python"]], "Finding Other Files and Directories": [[117, "finding-other-files-and-directories"]], "Get the User\u2019s Home Directory in Python": [[117, "get-the-user-s-home-directory-in-python"]], "Getting the Current Working Directory": [[117, "getting-the-current-working-directory"]], "Example: Creating a Directory in the User Home Directory in Python": [[117, "example-creating-a-directory-in-the-user-home-directory-in-python"]], "Finding Python Module Paths and Files": [[117, "finding-python-module-paths-and-files"]], "Exploring the PYTHONPATH and sys.path Variables": [[117, "exploring-the-pythonpath-and-sys-path-variables"]], "Finding the Filename from Which a Python Module Was Loaded": [[117, "finding-the-filename-from-which-a-python-module-was-loaded"]], "The Python For Loop:  Complete Tutorial and Practice Exercises": [[118, "the-python-for-loop-complete-tutorial-and-practice-exercises"]], "Introduction: What is a For Loop In Python": [[118, "introduction-what-is-a-for-loop-in-python"]], "Python For Loop Syntax: Iterating Through a List": [[118, "python-for-loop-syntax-iterating-through-a-list"]], "A For Loop Best Practice": [[118, "a-for-loop-best-practice"]], "Python For Loop Example: Building a List Using the Range Function": [[118, "python-for-loop-example-building-a-list-using-the-range-function"]], "For Loops vs. Comprehensions": [[118, "for-loops-vs-comprehensions"]], "Using a For Loop With a Python Dictionary": [[118, "using-a-for-loop-with-a-python-dictionary"]], "For Loops vs. While Loops": [[118, "for-loops-vs-while-loops"]], "Using the Enumerate Function": [[118, "using-the-enumerate-function"]], "For Loop Practice Exercises": [[118, "for-loop-practice-exercises"]], "Python Format Strings: Beginner to Expert": [[119, "python-format-strings-beginner-to-expert"]], "String Formatting for Beginners": [[119, "string-formatting-for-beginners"]], "Beyond the Basics: The Format Method vs. F Strings": [[119, "beyond-the-basics-the-format-method-vs-f-strings"]], "Python F Strings": [[119, "python-f-strings"]], "str.format": [[119, "str-format"]], "How to Format a String Using F-Strings": [[119, "how-to-format-a-string-using-f-strings"]], "Specifying How Many Decimals Are Displayed": [[119, "specifying-how-many-decimals-are-displayed"]], "More Numbers Formatting: Octal, Hexadecimal, Binary": [[119, "more-numbers-formatting-octal-hexadecimal-binary"]], "Scientific Notation in Python: General Format vs. Exponent Format": [[119, "scientific-notation-in-python-general-format-vs-exponent-format"]], "How to Automatically Add Commas To a Number": [[119, "how-to-automatically-add-commas-to-a-number"]], "\u201cIt Works On My Machine?\u201d": [[119, "it-works-on-my-machine"]], "How to Align Signed Numbers in Python": [[119, "how-to-align-signed-numbers-in-python"]], "Python String Alignment": [[119, "python-string-alignment"]], "How to Format a String Using the Format Method": [[119, "how-to-format-a-string-using-the-format-method"]], "Using an F String vs. the String Format Method": [[119, "using-an-f-string-vs-the-string-format-method"]], "What Is Old-Style String Formatting?": [[119, "what-is-old-style-string-formatting"]], "Python Function Arguments: The Complete Guide": [[120, "python-function-arguments-the-complete-guide"]], "Function Parameters and Arguments for Beginners": [[120, "function-parameters-and-arguments-for-beginners"]], "Using Keyword Arguments Instead of Positional Arguments": [[120, "using-keyword-arguments-instead-of-positional-arguments"]], "Type Hints": [[120, "type-hints"]], "Default Parameters": [[120, "default-parameters"], [165, "default-parameters"]], "Default Parameters Are Only Evaluated Once": [[120, "default-parameters-are-only-evaluated-once"]], "Using None as a Default Argument for Mutable Values": [[120, "using-none-as-a-default-argument-for-mutable-values"]], "Variable Parameters in Python: *args and **kwargs": [[120, "variable-parameters-in-python-args-and-kwargs"]], "Variable Positional Arguments Only": [[120, "variable-positional-arguments-only"]], "Calling Variable Positional Arguments with a List": [[120, "calling-variable-positional-arguments-with-a-list"]], "Variable Keyword Arguments": [[120, "variable-keyword-arguments"]], "Positional Arguments Still Come First": [[120, "positional-arguments-still-come-first"]], "Keyword-Only Parameters": [[120, "keyword-only-parameters"]], "Keyword-Only Parameters Without Variable Positional Arguments": [[120, "keyword-only-parameters-without-variable-positional-arguments"]], "Positional-only Parameters": [[120, "positional-only-parameters"]], "We\u2019ve Come Full Circle": [[120, "we-ve-come-full-circle"]], "Resources": [[120, "resources"]], "Python Function Best Practices": [[121, "python-function-best-practices"]], "Write Functions that Have a Single Responsibility": [[121, "write-functions-that-have-a-single-responsibility"]], "Use Functions to Clarify Intent": [[121, "use-functions-to-clarify-intent"]], "Choose Function and Parameter Names Carefully": [[121, "choose-function-and-parameter-names-carefully"]], "Document Function Parameters With Type Hints": [[121, "document-function-parameters-with-type-hints"]], "Use Docstrings to Further Document Functions": [[121, "use-docstrings-to-further-document-functions"]], "Prefer Functions that Accept Basic Python Types": [[121, "prefer-functions-that-accept-basic-python-types"]], "Prefer Functions with No Side Effects": [[121, "prefer-functions-with-no-side-effects"]], "Prefer Returning a Copy to Mutating a Parameter": [[121, "prefer-returning-a-copy-to-mutating-a-parameter"]], "If You Do Mutate a Parameter, Make It Obvious": [[121, "if-you-do-mutate-a-parameter-make-it-obvious"]], "Use Asserts to Document the Function Contract": [[121, "use-asserts-to-document-the-function-contract"]], "Closing Thoughts: Be Mindful of State": [[121, "closing-thoughts-be-mindful-of-state"]], "Python Function Exercises With Solutions": [[122, "python-function-exercises-with-solutions"]], "Python Functions: Introduction to the Series": [[123, "python-functions-introduction-to-the-series"]], "A Draft Outline": [[123, "a-draft-outline"]], "Python Generator Functions: The Complete Guide": [[124, "python-generator-functions-the-complete-guide"]], "What are Python Generators?": [[124, "what-are-python-generators"]], "What are Python Generators Used For?": [[124, "what-are-python-generators-used-for"]], "Are Generators Faster Than Lists in Python?": [[124, "are-generators-faster-than-lists-in-python"]], "How Do I Write a Python Generator?": [[124, "how-do-i-write-a-python-generator"]], "What Is a Generator Function?": [[124, "what-is-a-generator-function"]], "How do Python Generators Work?": [[124, "how-do-python-generators-work"]], "What Is a Generator Expression?": [[124, "what-is-a-generator-expression"]], "Can a Python Class Be a Generator?": [[124, "can-a-python-class-be-a-generator"]], "Why Does My Generator Only Work Once?": [[124, "why-does-my-generator-only-work-once"]], "What\u2019s the Equivalent of Iterable in Python?": [[124, "what-s-the-equivalent-of-iterable-in-python"]], "What Are the Advantages of Generators in Python?": [[124, "what-are-the-advantages-of-generators-in-python"]], "What Is an Asynchronous Generator?": [[124, "what-is-an-asynchronous-generator"]], "A Tech Career in Python:  From Hobbyist to Professional": [[125, "a-tech-career-in-python-from-hobbyist-to-professional"]], "Approach: What The Course Suggests": [[125, "approach-what-the-course-suggests"]], "Picking the Right Beatles Song: Money Can\u2019t Buy Me Love": [[125, "picking-the-right-beatles-song-money-can-t-buy-me-love"]], "How Hard Is It Anyway": [[125, "how-hard-is-it-anyway"]], "Python Indexing and Slicing: Complete Tutorial With Hands-On Exercises": [[126, "python-indexing-and-slicing-complete-tutorial-with-hands-on-exercises"]], "Simple Positive Indexing": [[126, "simple-positive-indexing"]], "Negative Indexing In Python": [[126, "negative-indexing-in-python"]], "Getting an Index in a Python For Loop": [[126, "getting-an-index-in-a-python-for-loop"]], "Python Slices: The Index on Steroids": [[126, "python-slices-the-index-on-steroids"]], "Assignment Behavior When Slicing": [[126, "assignment-behavior-when-slicing"]], "Python Indexing and Slicing Exercises": [[126, "python-indexing-and-slicing-exercises"]], "Python JSON: Easily Work With  Dictionaries, Files, and Custom Objects": [[127, "python-json-easily-work-with-dictionaries-files-and-custom-objects"]], "An Overview of the Python JSON Module": [[127, "an-overview-of-the-python-json-module"]], "The Easiest Way To Use JSON: The Python Dictionary Object": [[127, "the-easiest-way-to-use-json-the-python-dictionary-object"]], "Reading and Writing JSON files in Python": [[127, "reading-and-writing-json-files-in-python"]], "Writing A Python Dictionary to a JSON File": [[127, "writing-a-python-dictionary-to-a-json-file"]], "Reading A JSON File to a Python Dictionary": [[127, "reading-a-json-file-to-a-python-dictionary"]], "Reading and Writing Custom Python Classes to JSON": [[127, "reading-and-writing-custom-python-classes-to-json"]], "Serializing Python Classes To and From JSON Directly": [[127, "serializing-python-classes-to-and-from-json-directly"]], "Discussion: to_json": [[127, "discussion-to-json"]], "Discussion: from_json": [[127, "discussion-from-json"]], "Using JSONEncoder and JSONDecoder to Serialize Python Classes": [[127, "using-jsonencoder-and-jsondecoder-to-serialize-python-classes"]], "Custom JSONEncoder and JSONDecoder Discussion": [[127, "custom-jsonencoder-and-jsondecoder-discussion"]], "Python Lists for Beginners: A Complete Lesson With Exercises": [[128, "python-lists-for-beginners-a-complete-lesson-with-exercises"]], "Creating a list in Python": [[128, "creating-a-list-in-python"]], "Lists can contain items of any Python type": [[128, "lists-can-contain-items-of-any-python-type"]], "Python Lists are Ordered": [[128, "python-lists-are-ordered"]], "Iterating a list with a for loop": [[128, "iterating-a-list-with-a-for-loop"]], "Modifying the List Elements": [[128, "modifying-the-list-elements"]], "Creating a List Dynamically - First Method (Loops)": [[128, "creating-a-list-dynamically-first-method-loops"]], "Creating A List Dynamically (List Comprehensions)": [[128, "creating-a-list-dynamically-list-comprehensions"]], "Slicing": [[128, "slicing"]], "Python List Exercises for Beginners": [[128, "python-list-exercises-for-beginners"]], "Python Lists vs. Arrays:  How to Choose Between Them": [[129, "python-lists-vs-arrays-how-to-choose-between-them"]], "Python Lists 101": [[129, "python-lists-101"]], "Python Arrays": [[129, "python-arrays"]], "Arrays May Use Less Memory Than Lists": [[129, "arrays-may-use-less-memory-than-lists"]], "Performance Timers: Array and List Loop Performance": [[129, "performance-timers-array-and-list-loop-performance"]], "Tip: Use Arrays For Low Level Buffer Access": [[129, "tip-use-arrays-for-low-level-buffer-access"]], "NumPy Arrays and Performance": [[129, "numpy-arrays-and-performance"]], "Python Matrix Multiplication: NumPy, SymPy, and the Math Behind It": [[130, "python-matrix-multiplication-numpy-sympy-and-the-math-behind-it"]], "NumPy Matrix Multiplication: Use @ or Matmul": [[130, "numpy-matrix-multiplication-use-or-matmul"]], "How to Multiply Matrices in SymPy": [[130, "how-to-multiply-matrices-in-sympy"]], "The Math Behind Matrix Multiplication": [[130, "the-math-behind-matrix-multiplication"]], "Matrix Multiplication is Not Commutative": [[130, "matrix-multiplication-is-not-commutative"]], "Matrix Dimensions": [[130, "matrix-dimensions"]], "Matrix Multiplication By Hand": [[130, "matrix-multiplication-by-hand"]], "Don\u2019t Make This Mistake": [[130, "don-t-make-this-mistake"]], "Python As a Matrix Exploration Tool": [[130, "python-as-a-matrix-exploration-tool"]], "Python Newsletter February 22, 2023": [[131, "python-newsletter-february-22-2023"]], "Around the Python Interwebs": [[131, "around-the-python-interwebs"]], "Python Newsletter, January 31, 2023": [[132, "python-newsletter-january-31-2023"]], "New and Featured On CodeSolid": [[132, "new-and-featured-on-codesolid"]], "Around the Web": [[132, "around-the-web"]], "Python Practice:  More Python on Docker Project Ideas": [[133, "python-practice-more-python-on-docker-project-ideas"]], "Setting Up Python Tests Independently of Code": [[133, "setting-up-python-tests-independently-of-code"]], "Showing How To Debug Python Containers": [[133, "showing-how-to-debug-python-containers"]], "Other Containers to Help With Postgres and Django Development": [[133, "other-containers-to-help-with-postgres-and-django-development"]], "Containers for Remote Shared Python Development Environments": [[133, "containers-for-remote-shared-python-development-environments"]], "Interfacing Python and C++ or C": [[133, "interfacing-python-and-c-or-c"]], "Serverless C++? You Know You Want Some": [[133, "serverless-c-you-know-you-want-some"]], "Python Operators:  The Building Blocks of Successful Code": [[134, "python-operators-the-building-blocks-of-successful-code"]], "Operators in Python: An Overview": [[134, "operators-in-python-an-overview"]], "Arithmetic Operators": [[134, "arithmetic-operators"]], "Python Arithmetic Operators Example": [[134, "python-arithmetic-operators-example"]], "What Does % Do in Python?": [[134, "what-does-do-in-python"]], "Assignment Operators": [[134, "assignment-operators"]], "Simple Assignment": [[134, "simple-assignment"]], "Operator Precedence": [[134, "operator-precedence"]], "What Are Compound Assignment Operators in Python": [[134, "what-are-compound-assignment-operators-in-python"]], "Assignment vs. Comparison: = vs. == in Python": [[134, "assignment-vs-comparison-vs-in-python"]], "Python Identity Operators: Is and Is Not": [[134, "python-identity-operators-is-and-is-not"]], "Logical Operators: Combining Boolean Expressions": [[134, "logical-operators-combining-boolean-expressions"]], "Python Operators that Short Circuit": [[134, "python-operators-that-short-circuit"]], "Logical Operators: Summary Truth Table": [[134, "logical-operators-summary-truth-table"]], "Watch Out for These Common Short Circuit Traps": [[134, "watch-out-for-these-common-short-circuit-traps"]], "Membership Operators": [[134, "membership-operators"]], "What Does the In Operator Do In Python?": [[134, "what-does-the-in-operator-do-in-python"]], "Bitwise Operators": [[134, "bitwise-operators"]], "Bitwise AND and OR": [[134, "bitwise-and-and-or"]], "Other Bitwise Operators": [[134, "other-bitwise-operators"]], "Compound Bitwise Assignment Operators": [[134, "compound-bitwise-assignment-operators"]], "What Is the Python Walrus Operator?": [[134, "what-is-the-python-walrus-operator"]], "Python Package Example: Setuptools": [[135, "python-package-example-setuptools"]], "Creating a Virtual Environment": [[135, "creating-a-virtual-environment"]], "Pyproject.toml": [[135, "pyproject-toml"]], "Creating the Package": [[135, "creating-the-package"]], "Adding Some Tests": [[135, "adding-some-tests"]], "Fixing Package Names": [[135, "fixing-package-names"]], "Setuptools Configuration": [[135, "setuptools-configuration"]], "Building The Project": [[135, "building-the-project"]], "Installing Our Setuptools Package With Pip": [[135, "installing-our-setuptools-package-with-pip"]], "Creating an Account on Pypi.org": [[135, "creating-an-account-on-pypi-org"]], "Publishing a Package to Pypi.org": [[135, "publishing-a-package-to-pypi-org"]], "Modifying the Setuptools Configuration": [[135, "modifying-the-setuptools-configuration"]], "Additional Resources": [[135, "additional-resources"]], "Python, Postgres, and Docker:  Running Fast, Meaningful Unit Tests": [[136, "python-postgres-and-docker-running-fast-meaningful-unit-tests"]], "Why Testing Databases Is Hard": [[136, "why-testing-databases-is-hard"]], "Database Testing Mistakes": [[136, "database-testing-mistakes"]], "Unit Testing Apples, Running Apples in Production": [[136, "unit-testing-apples-running-apples-in-production"]], "What Are Good Projects To Practice In Python?": [[137, "what-are-good-projects-to-practice-in-python"]], "Introduction: Why Is This a Series?": [[137, "introduction-why-is-this-a-series"]], "The Plan": [[137, "the-plan"]], "Issue #1": [[137, "issue-1"]], "A Beginner Exercise": [[137, "a-beginner-exercise"]], "An Intermediate / Advanced Exercise": [[137, "an-intermediate-advanced-exercise"]], "Seen Around The Web": [[137, "seen-around-the-web"]], "What Are You Working On?": [[137, "what-are-you-working-on"]], "Python Parquet and Arrow:  Using PyArrow with Pandas": [[138, "python-parquet-and-arrow-using-pyarrow-with-pandas"]], "Arrow Tables vs. Pandas DataFrames": [[138, "arrow-tables-vs-pandas-dataframes"], [138, "id1"]], "Installing Using Pip or Conda": [[138, "installing-using-pip-or-conda"]], "Using Arrow With Pandas": [[138, "using-arrow-with-pandas"]], "pyarrow.Table\npickup: timestamp[ns]\ndropoff: timestamp[ns]": [[138, "pyarrow-table-pickup-timestamp-ns-dropoff-timestamp-ns"]], "Python Parquet and Arrow:  Using PyArrow with Pandaspickup: [[2019-03-23 20:21:09.000000000,2019-03-04 16:11:55.000000000,2019-03-27 17:53:01.000000000,2019-03-10 01:23:59.000000000,2019-03-30 13:27:42.000000000]]": [[138, "python-parquet-and-arrow-using-pyarrow-with-pandaspickup-2019-03-23-20-21-09-000000000-2019-03-04-16-11-55-000000000-2019-03-27-17-53-01-000000000-2019-03-10-01-23-59-000000000-2019-03-30-13-27-42-000000000"]], "Parquet vs. Other Storage Formats for Pandas": [[138, "parquet-vs-other-storage-formats-for-pandas"]], "Closing Thoughts: PyArrow Beyond Pandas": [[138, "closing-thoughts-pyarrow-beyond-pandas"]], "Python Shell Programming: Overview and Top Tools": [[139, "python-shell-programming-overview-and-top-tools"]], "Is Python Good for Shell Scripting?": [[139, "is-python-good-for-shell-scripting"]], "The Strengths of Shell Scripts": [[139, "the-strengths-of-shell-scripts"]], "Python as a Shell Scripting Tool": [[139, "python-as-a-shell-scripting-tool"]], "How can I Run Shell Commands from Python?": [[139, "how-can-i-run-shell-commands-from-python"]], "The Top Nineteen Modules for Python Shell Programming": [[139, "the-top-nineteen-modules-for-python-shell-programming"]], "The Subprocess Module: Run External Programs In Python": [[139, "the-subprocess-module-run-external-programs-in-python"]], "Python\u2019s Subprocess Module: Basic Example": [[139, "python-s-subprocess-module-basic-example"]], "Subprocess Run: Return Values and Error Handling": [[139, "subprocess-run-return-values-and-error-handling"]], "Python Command-Line Tools That Work with Bash": [[139, "python-command-line-tools-that-work-with-bash"]], "Python String Examples:  Tutorial and Practice Exercises": [[140, "python-string-examples-tutorial-and-practice-exercises"]], "What Are Python Strings?": [[140, "what-are-python-strings"]], "How to Create Strings in Python?": [[140, "how-to-create-strings-in-python"]], "How to Access Characters in Python Strings?": [[140, "how-to-access-characters-in-python-strings"]], "String Slicing": [[140, "string-slicing"]], "How to Modify or Change a String in Python?": [[140, "how-to-modify-or-change-a-string-in-python"]], "String Operators in Python": [[140, "string-operators-in-python"]], "String formatting in Python": [[140, "string-formatting-in-python"]], "f-strings": [[140, "f-strings"]], "Built-in Python String Functions": [[140, "built-in-python-string-functions"]], "Built-in Python String Methods": [[140, "built-in-python-string-methods"]], "If-Statements with Strings in Python": [[140, "if-statements-with-strings-in-python"]], "Iterating Through Strings in Python": [[140, "iterating-through-strings-in-python"]], "Python String Exercises for Beginners": [[140, "python-string-exercises-for-beginners"]], "Python Virtual Environments: Video Tutorial": [[141, "python-virtual-environments-video-tutorial"]], "Virtual Environment Commands (Mac and Linux)": [[141, "virtual-environment-commands-mac-and-linux"]], "Virtual Environment Commands (Windows)": [[141, "virtual-environment-commands-windows"]], "See Also:": [[141, "see-also"]], "Python vs. MATLAB: Price, Performance, Features": [[142, "python-vs-matlab-price-performance-features"]], "Python and MATLAB (And Octave, Oh My!)": [[142, "python-and-matlab-and-octave-oh-my"]], "MATLAB vs. Python Language Overview": [[142, "matlab-vs-python-language-overview"]], "General Language Features": [[142, "general-language-features"]], "MATLAB\u2019s Advantages Compared to Python": [[142, "matlab-s-advantages-compared-to-python"]], "Python\u2019s Advantages Compared to MATLAB": [[142, "python-s-advantages-compared-to-matlab"]], "Popularity": [[142, "popularity"]], "Cost": [[142, "cost"]], "MATLAB\u2019s Live Editor vs. Python\u2019s Jupyter Lab": [[142, "matlab-s-live-editor-vs-python-s-jupyter-lab"]], "MATLAB, Python, and Octave: Some Performance Benchmarks": [[142, "matlab-python-and-octave-some-performance-benchmarks"]], "Closing Thoughts and Additional Resources": [[142, "closing-thoughts-and-additional-resources"]], "Python With: Using and Writing Context Managers in Python": [[143, "python-with-using-and-writing-context-managers-in-python"]], "Basic Features of The With Statement in Python": [[143, "basic-features-of-the-with-statement-in-python"]], "Handling Exceptions In a With Statement Code Block": [[143, "handling-exceptions-in-a-with-statement-code-block"]], "Other Uses of the Context Manager in Python": [[143, "other-uses-of-the-context-manager-in-python"]], "Managing Resources that Need to Be Closed": [[143, "managing-resources-that-need-to-be-closed"]], "Managing Locks in Multi-Threaded Code": [[143, "managing-locks-in-multi-threaded-code"]], "Temporarily Change a Thread-Local Context": [[143, "temporarily-change-a-thread-local-context"]], "Adding Support for With to Your Classes With a Context Manager": [[143, "adding-support-for-with-to-your-classes-with-a-context-manager"]], "A Fully Worked Python Context Manager Example": [[143, "a-fully-worked-python-context-manager-example"]], "Using the Defaults With No Exceptions": [[143, "using-the-defaults-with-no-exceptions"]], "Python Context Managers Made Easy With Contextlib": [[143, "python-context-managers-made-easy-with-contextlib"]], "An Asynchronous Context Manager Example": [[143, "an-asynchronous-context-manager-example"]], "Other Contextlib Utilities": [[143, "other-contextlib-utilities"]], "Random Python:  Secrets and Random Values Made Easy": [[144, "random-python-secrets-and-random-values-made-easy"]], "Random vs. Pseudo-Random Values": [[144, "random-vs-pseudo-random-values"]], "Random and Secrets: More Alike Than They Seem!": [[144, "random-and-secrets-more-alike-than-they-seem"]], "The Random Module": [[144, "the-random-module"]], "The Secrets Module": [[144, "the-secrets-module"]], "Generating Random Numbers": [[144, "generating-random-numbers"]], "Randint and Randrange": [[144, "randint-and-randrange"]], "Generating Random Distributions": [[144, "generating-random-distributions"]], "Making Random Choices in Python": [[144, "making-random-choices-in-python"]], "How to Generate Random Strings With Python": [[144, "how-to-generate-random-strings-with-python"]], "Secure Random Strings Using the Secrets Module": [[144, "secure-random-strings-using-the-secrets-module"]], "Using UUIDs: Generating Values that are Random And Unique in Python": [[144, "using-uuids-generating-values-that-are-random-and-unique-in-python"]], "Charlotte Secular Sobriety": [[145, "charlotte-secular-sobriety"]], "Judgements in Sobriety": [[146, "judgements-in-sobriety"]], "The Steep Early Hill and Beyond": [[146, "the-steep-early-hill-and-beyond"]], "What Works: Program or Fellowship?": [[147, "what-works-program-or-fellowship"]], "Recovery": [[148, "recovery"]], "Run Python Online: Watch the Video to Learn How": [[149, "run-python-online-watch-the-video-to-learn-how"]], "Running the CMake Tutorial in a VS Code Dev Container": [[150, "running-the-cmake-tutorial-in-a-vs-code-dev-container"]], "Limits of C/C++ for Cross-Platform Development": [[150, "limits-of-c-c-for-cross-platform-development"]], "A Special Use Case": [[150, "a-special-use-case"]], "First Steps: Building CMake from Source in Docker": [[150, "first-steps-building-cmake-from-source-in-docker"]], "Isolating the Tutorial Source With a Multi-Stage Build": [[150, "isolating-the-tutorial-source-with-a-multi-stage-build"]], "Accessing the Tutorial from the Container and the Host": [[150, "accessing-the-tutorial-from-the-container-and-the-host"]], "Creating a Volume in a Local Directory and Mounting It": [[150, "creating-a-volume-in-a-local-directory-and-mounting-it"]], "Using VS Code\u2019s Dev Container Extension": [[150, "using-vs-code-s-dev-container-extension"]], "SciPy vs. SymPy for Symbolic Math:  Let Us Never Speak of This Again": [[151, "scipy-vs-sympy-for-symbolic-math-let-us-never-speak-of-this-again"]], "Why SymPy is Superior for Symbolic Math": [[151, "why-sympy-is-superior-for-symbolic-math"]], "The Law of the Instrument, Revisited": [[151, "the-law-of-the-instrument-revisited"]], "Why This Isn\u2019t An Anti-SciPy Post": [[151, "why-this-isn-t-an-anti-scipy-post"]], "Selecting Data in Pandas": [[152, "selecting-data-in-pandas"]], "Introduction to Selecting Data in Pandas": [[152, "introduction-to-selecting-data-in-pandas"]], "Using the [] Operator": [[152, "using-the-operator"]], "The iloc[] and loc[] methods": [[152, "the-iloc-and-loc-methods"]], "Using boolean indexing": [[152, "using-boolean-indexing"]], "The query() method for selecting data": [[152, "the-query-method-for-selecting-data"]], "Using the at() and iat() methods for data selection": [[152, "using-the-at-and-iat-methods-for-data-selection"]], "Using the apply() method to select data": [[152, "using-the-apply-method-to-select-data"]], "Using the mask() method to select data": [[152, "using-the-mask-method-to-select-data"]], "Simplicity is your Friend:  PyCharm vs. VS Code for Teaching Programming": [[153, "simplicity-is-your-friend-pycharm-vs-vs-code-for-teaching-programming"]], "First Principles of Productive Minimalism": [[154, "first-principles-of-productive-minimalism"]], "Giving Up Social Media, One Month Later": [[155, "giving-up-social-media-one-month-later"]], "Mindfulness vs. Technology": [[156, "mindfulness-vs-technology"]], "Social Media Withdrawal": [[157, "social-media-withdrawal"]], "The Top Mistakes People Make When Quitting Social Media": [[158, "the-top-mistakes-people-make-when-quitting-social-media"]], "Social Media": [[159, "social-media"]], "Using SQL With Pandas:  PandasSQL and IPython-SQL": [[160, "using-sql-with-pandas-pandassql-and-ipython-sql"]], "SQL Databases as a \u201cStorage Medium\u201d": [[160, "sql-databases-as-a-storage-medium"]], "SQL As a Query Language": [[160, "sql-as-a-query-language"]], "Pandas With SQL Option 1: PandasSQL": [[160, "pandas-with-sql-option-1-pandassql"]], "Pandas With SQL Option 2: Using IPython-SQL and DuckDB": [[160, "pandas-with-sql-option-2-using-ipython-sql-and-duckdb"]], "Using DuckDB and Pandas: Conda or Pip": [[160, "using-duckdb-and-pandas-conda-or-pip"]], "Querying a Pandas DataFrame Using SQL with IPython-SQL and DuckDB": [[160, "querying-a-pandas-dataframe-using-sql-with-ipython-sql-and-duckdb"]], "Persisting DataFrames back to DuckDB.": [[160, "persisting-dataframes-back-to-duckdb"]], "Closing Database Connections": [[160, "closing-database-connections"]], "SQLAlchemy DataClass Example": [[161, "sqlalchemy-dataclass-example"]], "Python Dataclasses Overview": [[161, "python-dataclasses-overview"]], "SQLAlchemy Overview": [[161, "sqlalchemy-overview"]], "The Data for Our Example": [[161, "the-data-for-our-example"]], "Creating the Basic SQLAlchemy Dataclasses": [[161, "creating-the-basic-sqlalchemy-dataclasses"]], "Implementing a Many-to-Many Relationship": [[161, "implementing-a-many-to-many-relationship"]], "Creating the Tables and Loading the Data": [[161, "creating-the-tables-and-loading-the-data"]], "SymPy:  Solving Math Equations in Python and Jupyter": [[162, "sympy-solving-math-equations-in-python-and-jupyter"]], "SymPy Alternatives": [[162, "sympy-alternatives"]], "SymPy vs. SciPy": [[162, "sympy-vs-scipy"]], "SymPy vs. SageMath": [[162, "sympy-vs-sagemath"]], "Using SymPy and Jupyter: A Quick Start Tutorial": [[162, "using-sympy-and-jupyter-a-quick-start-tutorial"]], "Installing SymPy": [[162, "installing-sympy"]], "SymPy First Steps": [[162, "sympy-first-steps"]], "Solving Equations and Working With Math Functions": [[162, "solving-equations-and-working-with-math-functions"]], "SymPy as a Python Graphing Calculator": [[162, "sympy-as-a-python-graphing-calculator"]], "SymPy and LaTeX": [[162, "sympy-and-latex"]], "SymPy and LaTeX: A Caveat": [[162, "sympy-and-latex-a-caveat"]], "Python Calculus Made (Almost) Easy": [[162, "python-calculus-made-almost-easy"]], "Limits": [[162, "limits"]], "Differentiation and Integration": [[162, "differentiation-and-integration"]], "Companion Source": [[162, "companion-source"]], "Teach Yourself Math: Resources, Techniques, and Approach": [[163, "teach-yourself-math-resources-techniques-and-approach"]], "What We Will Discuss": [[163, "what-we-will-discuss"]], "Go Cheap or Go Home": [[163, "go-cheap-or-go-home"]], "Taking Notes and Working Problems": [[163, "taking-notes-and-working-problems"]], "Free Online Math Courses and Resources": [[163, "free-online-math-courses-and-resources"]], "Low-Cost Books for Mathematics Study": [[163, "low-cost-books-for-mathematics-study"]], "Calculators and Software": [[163, "calculators-and-software"]], "Learning Math At Any Age": [[163, "learning-math-at-any-age"]], "Learn Math At Any, Well, Anything": [[163, "learn-math-at-any-well-anything"]], "\u201cBut I\u2019m Not Good At Math\u201d": [[163, "but-i-m-not-good-at-math"]], "What Does Math Have To Do With Python?": [[163, "what-does-math-have-to-do-with-python"]], "What You Need to Learn Anything": [[163, "what-you-need-to-learn-anything"]], "What You Need To Learn Mathematics In Particular": [[163, "what-you-need-to-learn-mathematics-in-particular"]], "Test Dir": [[164, "test-dir"]], "The Function In Python: An Introductory Tutorial": [[165, "the-function-in-python-an-introductory-tutorial"]], "What Is a Function in Python?": [[165, "what-is-a-function-in-python"]], "Python Functions: Some Examples": [[165, "python-functions-some-examples"]], "Keyword Arguments and Positional Arguments": [[165, "keyword-arguments-and-positional-arguments"]], "Return Values": [[165, "return-values"]], "Early Returns from a Function": [[165, "early-returns-from-a-function"]], "Multiple Return Values from a Python Function": [[165, "multiple-return-values-from-a-python-function"]], "Functions with No Return Value": [[165, "functions-with-no-return-value"]], "The Marketing Genius of 100 Days of Code": [[166, "the-marketing-genius-of-100-days-of-code"]], "Thonny: The Most Beginner Friendly Python IDE": [[167, "thonny-the-most-beginner-friendly-python-ide"]], "Installing Thonny Could Not Be Simpler": [[167, "installing-thonny-could-not-be-simpler"]], "Installing Thonny on the Mac": [[167, "installing-thonny-on-the-mac"]], "First Steps in the Thonny IDE": [[167, "first-steps-in-the-thonny-ide"]], "Using The Thonny Debugger": [[167, "using-the-thonny-debugger"]], "Hands-On With the Thonny Debugger": [[167, "hands-on-with-the-thonny-debugger"]], "Understanding Python Types and Type Hints": [[168, "understanding-python-types-and-type-hints"]], "Is Python Weakly-Typed?": [[168, "is-python-weakly-typed"]], "Weakly Typed vs. Dynamically Typed": [[168, "weakly-typed-vs-dynamically-typed"]], "Behind the Scenes of Variable Assignment Using Python\u2019s Disassembler": [[168, "behind-the-scenes-of-variable-assignment-using-python-s-disassembler"]], "Exploring Python Variables and Types: A Guide for Beginners": [[168, "exploring-python-variables-and-types-a-guide-for-beginners"]], "The Python Type Function: Displaying the Object Class of a Variable": [[168, "the-python-type-function-displaying-the-object-class-of-a-variable"]], "Listing the Available Functions in Python with Dir": [[168, "listing-the-available-functions-in-python-with-dir"]], "Getting Help: Reading the Function Documentation": [[168, "getting-help-reading-the-function-documentation"]], "Python Type Hints: Making Types Explicit": [[168, "python-type-hints-making-types-explicit"]], "Why Python Introduced Type Hints": [[168, "why-python-introduced-type-hints"]], "Type Hint Typing Module and Basic Syntax": [[168, "type-hint-typing-module-and-basic-syntax"]], "Static Type Checking in Python": [[168, "static-type-checking-in-python"]], "Using MyPy for Static Type Checking": [[168, "using-mypy-for-static-type-checking"]], "Using MyPy with VS Code": [[168, "using-mypy-with-vs-code"]], "Using MyPy with Jupyter Notebook / Jupyter Lab": [[168, "using-mypy-with-jupyter-notebook-jupyter-lab"]], "Advanced Type Hints and the Python Typing Module": [[168, "advanced-type-hints-and-the-python-typing-module"]], "Collections Types and Type Aliases": [[168, "collections-types-and-type-aliases"]], "Union Types": [[168, "union-types"]], "Literal Types": [[168, "literal-types"]], "Useful Collection Classes in Python You May Not Know": [[169, "useful-collection-classes-in-python-you-may-not-know"]], "Where Are Python Collections Defined": [[169, "where-are-python-collections-defined"]], "Saving Memory with Namedtuple": [[169, "saving-memory-with-namedtuple"]], "Using Defaultdict to Gracefully Handle Missing Values": [[169, "using-defaultdict-to-gracefully-handle-missing-values"]], "The Python Queue Package Makes It Easy to Pass Values Between Threads": [[169, "the-python-queue-package-makes-it-easy-to-pass-values-between-threads"]], "Overridable Python Configuration With ChainMap": [[169, "overridable-python-configuration-with-chainmap"]], "Python Sets and Set Operations": [[169, "python-sets-and-set-operations"]], "Most Useful Operations on Python Sets": [[169, "most-useful-operations-on-python-sets"]], "Mutable and Immutable Collections and Sequences in Python": [[169, "mutable-and-immutable-collections-and-sequences-in-python"]], "Using LaTeX In Python": [[170, "using-latex-in-python"]], "LaTeX in Jupyter Markdown": [[170, "latex-in-jupyter-markdown"]], "Centering Math Output": [[170, "centering-math-output"]], "Left-Aligning and Inline LaTeX Blocks": [[170, "left-aligning-and-inline-latex-blocks"]], "An Important Caveat: MathJax vs. LaTeX": [[170, "an-important-caveat-mathjax-vs-latex"]], "LaTeX Files in JupyterLab": [[170, "latex-files-in-jupyterlab"]], "LaTeX in SageMath and SymPy": [[170, "latex-in-sagemath-and-sympy"]], "Other Packages in Python": [[170, "other-packages-in-python"]], "Source Code and Additional Resources": [[170, "source-code-and-additional-resources"]], "PySpark and Parquet: Elegant Python DataFrames and SQL": [[171, "pyspark-and-parquet-elegant-python-dataframes-and-sql"]], "What We\u2019ll Cover": [[171, "what-we-ll-cover"]], "What Is PySpark?": [[171, "what-is-pyspark"]], "Installing PySpark and JupyterLab": [[171, "installing-pyspark-and-jupyterlab"]], "Installing With Pip and Venv": [[171, "installing-with-pip-and-venv"]], "Installing with Conda": [[171, "installing-with-conda"]], "Testing The Installation": [[171, "testing-the-installation"]], "Reading Parquet Files in PySpark": [[171, "reading-parquet-files-in-pyspark"]], "Using Spark\u2019s Read Method": [[171, "using-spark-s-read-method"]], "Querying a File with Spark SQL": [[171, "querying-a-file-with-spark-sql"]], "How To Improve PySpark\u2019s DataFrames Display": [[171, "how-to-improve-pyspark-s-dataframes-display"]], "Writing Parquet Files": [[171, "writing-parquet-files"]], "Partitioning Parquet Files": [[171, "partitioning-parquet-files"]], "Parquet vs. PySpark Tables": [[171, "parquet-vs-pyspark-tables"]], "Using TestNG With Spring": [[172, "using-testng-with-spring"]], "Moving to TestNG from JUnit": [[172, "moving-to-testng-from-junit"]], "Setting Up The Maven Dependency for TestNG": [[172, "setting-up-the-maven-dependency-for-testng"]], "Simple AbstractTestNGSpringContextTests Test Examples": [[172, "simple-abstracttestngspringcontexttests-test-examples"]], "Simple Vagrant Ansible Local Example": [[173, "simple-vagrant-ansible-local-example"]], "Vagrant Up": [[173, "vagrant-up"]], "What Are pyc Files and pycache folders In Python ?": [[174, "what-are-pyc-files-and-pycache-folders-in-python"]], "Why does Python Compile Files? Isn\u2019t It Interpreted?": [[174, "why-does-python-compile-files-isn-t-it-interpreted"]], "Ignoring Python Cache Files in Version Control": [[174, "ignoring-python-cache-files-in-version-control"]], "Dealing With Existing Code Repositories": [[174, "dealing-with-existing-code-repositories"]], "How to Remove Cached Python Files Recursively": [[174, "how-to-remove-cached-python-files-recursively"]], "What Is a Python Package?": [[175, "what-is-a-python-package"]], "What\u2019s the Difference Between a Python Package and a Module?": [[175, "what-s-the-difference-between-a-python-package-and-a-module"]], "How do I use the Import Statement in Python?": [[175, "how-do-i-use-the-import-statement-in-python"]], "Understanding ModuleNotFoundError": [[175, "understanding-modulenotfounderror"]], "How to Install Python Packages": [[175, "how-to-install-python-packages"]], "Making Sure Your Pip Version Is Correct": [[175, "making-sure-your-pip-version-is-correct"]], "How to Install Packages (The Right Way)": [[175, "how-to-install-packages-the-right-way"]], "1. Creating the Virtual Environment:": [[175, "creating-the-virtual-environment"]], "2. Activating the Virtual Environment:": [[175, "activating-the-virtual-environment"]], "3. Using the Virtual Environment:": [[175, "using-the-virtual-environment"]], "4. Deactivating the Virtual Environment:": [[175, "deactivating-the-virtual-environment"]], "Dependency Hell \u2013 Why We Set Up Virtual Environments": [[175, "dependency-hell-why-we-set-up-virtual-environments"]], "How Python Finds Packages": [[175, "how-python-finds-packages"]], "Changing the Python Path and Controlling Where Pip Installs Packages (Case Study)": [[175, "changing-the-python-path-and-controlling-where-pip-installs-packages-case-study"]], "How Do I Publish a Package in Python?": [[175, "how-do-i-publish-a-package-in-python"]], "Final Thoughts and Source Code": [[175, "final-thoughts-and-source-code"]], "Wherein I Make an Account of My Whereabouts": [[176, "wherein-i-make-an-account-of-my-whereabouts"]], "Why Is Python Popular?# Why Is Python Popular": [[177, "why-is-python-popular-why-is-python-popular"]], "Ease Of Use: The Developer Is the User": [[177, "ease-of-use-the-developer-is-the-user"]], "Readability": [[177, "readability"]], "NumPy and the Influence of the Scientific Community": [[177, "numpy-and-the-influence-of-the-scientific-community"]], "Other Important Use Cases": [[177, "other-important-use-cases"]], "Areas Where Python Is Not Popular": [[177, "areas-where-python-is-not-popular"]], "On Being The World\u2019s Oldest Math Major": [[178, "on-being-the-world-s-oldest-math-major"]], "Writing a Python Custom Exception": [[179, "writing-a-python-custom-exception"]], "Creating Custom Exceptions": [[179, "creating-custom-exceptions"]], "The Custom Exception Class": [[179, "the-custom-exception-class"]], "Raising Custom Exceptions": [[179, "raising-custom-exceptions"]], "Further Customizing Exception Behavior with __init__:": [[179, "further-customizing-exception-behavior-with-init"]], "Python Custom Exception Best Practices": [[179, "python-custom-exception-best-practices"]], "User Defined Exceptions vs. Built-In Exceptions": [[179, "user-defined-exceptions-vs-built-in-exceptions"]], "YAGNI: You Ain\u2019t Gonna Need It": [[179, "yagni-you-ain-t-gonna-need-it"]], "Design Decisions": [[179, "design-decisions"]], "Stop Being a Junior Developer.  No, Seriously, Cut It Out.": [[180, "stop-being-a-junior-developer-no-seriously-cut-it-out"]], "Your First Programming Language Should be Python, Not JavaScript": [[181, "your-first-programming-language-should-be-python-not-javascript"]], "The Strange Zen of 100 Days of Python": [[182, "the-strange-zen-of-100-days-of-python"]]}, "indexentries": {}})