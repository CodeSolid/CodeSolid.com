Search.setIndex({"docnames": ["a-coop-coding-bootcamp", "airflow-python-etl", "all_files", "alternatives-to-pandas-python-polars", "basic-command-line-skills-to-rock-your-development-world", "beautiful-documentation-with-jupyterbook", "benchmarking-python-and-rust-async-web-server-performance", "boolean-expressions-python", "building-a-docker-golang-container", "career-paths-for-python-programmers", "chemists-strongly-addicted-to-python", "cmake-starter-project", "code-pride-is-the-best-medicine", "codesolid-newsletter-11-29-2022", "codesolid-newsletter-12-13-2022", "codesolid-newsletter-november-1-2022", "codesolid-newsletter-october-25-2022", "codesolid-python-newsletter-december-28-2022", "cognitive_science/OnReadingConsciousnessExplained", "cognitive_science/Resources", "cognitive_science/SynapsesNeuronsAndBrainsNotes", "cognitive_science/SynapseseNeuronsAndBrainsReviewNotes", "cognitive_science/TheSecretLifeOfTheMind", "cognitive_science/index", "conda-vs-pip", "cpp-dev-containers", "creating-a-python-interactive-plot", "data-cleaning-in-pandas", "debugging-python-in-vs-code", "directoryinfo-example", "dunder-methods-in-python-the-ugliest-awesome-sauce", "exploring-python-objects-with-the-dir-and-type-functions", "featured", "finding-duplicates-in-a-list-in-python", "getting-started-with-python-classes", "getting-things-done-with-dendron-and-vs-code-first-look", "getting-things-done-with-github-markdown-and-visual-studio-code", "google-sheets-in-python-and-pandas", "heymoe", "how-do-i-profile-python-code", "how-to-compare-python-dictionaries", "how-to-convert-a-string-to-datetime-in-python", "how-to-install-pip-and-conda-on-the-same-machine", "how-to-learn-to-program", "how-to-practice-python", "how-to-practice-python-data-science-and-pandas", "how-to-separate-tests-and-source-for-python-tests", "how-to-use-docker-with-python", "how-to-visualize-data-using-pandas", "images/a-coop-coding-bootcamp/index", "images/airflow-python-etl/index", "images/alternatives-to-pandas-python-polars/index", "images/basic-command-line-skills-to-rock-your-development-world/index", "images/beautiful-documentation-with-jupyterbook/index", "images/benchmarking-python-and-rust-async-web-server-performance/index", "images/boolean-expressions-python/index", "images/building-a-docker-golang-container/index", "images/career-paths-for-python-programmers/index", "images/chemists-strongly-addicted-to-python/index", "images/cmake-starter-project/index", "images/code-pride-is-the-best-medicine/index", "images/codesolid-newsletter-11-29-2022/index", "images/codesolid-newsletter-12-13-2022/index", "images/codesolid-newsletter-october-25-2022/index", "images/codesolid-python-newsletter-december-28-2022/index", "images/conda-vs-pip/index", "images/cpp-dev-containers/index", "images/creating-a-python-interactive-plot/index", "images/data-cleaning-in-pandas/index", "images/debugging-python-in-vs-code/index", "images/directoryinfo-example/index", "images/dunder-methods-in-python-the-ugliest-awesome-sauce/index", "images/exploring-python-objects-with-the-dir-and-type-functions/index", "images/finding-duplicates-in-a-list-in-python/index", "images/getting-started-with-python-classes/index", "images/getting-things-done-with-dendron-and-vs-code-first-look/index", "images/getting-things-done-with-github-markdown-and-visual-studio-code/index", "images/google-sheets-in-python-and-pandas/index", "images/heymoe/index", "images/how-do-i-profile-python-code/index", "images/how-to-compare-python-dictionaries/index", "images/how-to-convert-a-string-to-datetime-in-python/index", "images/how-to-install-pip-and-conda-on-the-same-machine/index", "images/how-to-learn-to-program/index", "images/how-to-practice-python-data-science-and-pandas/index", "images/how-to-practice-python/index", "images/how-to-separate-tests-and-source-for-python-tests/index", "images/how-to-use-docker-with-python/index", "images/how-to-visualize-data-using-pandas/index", "images/installing-a-python-and-git-development-environment-on-windows-part-2/index", "images/installing-a-python-development-environment-on-windows/index", "images/installing-pyenv-on-a-mac/index", "images/introducing-sage-math-python-based-mathematics/index", "images/is-python-free-with-list-of-tools/index", "images/is-python-slow/index", "images/julia-vs-python-now-for-something-completely-different/index", "images/jupyter-lite-python-in-the-browser-with-serverless-jupyter/index", "images/jupyter-notebook-a-complete-introduction/index", "images/jupyter-password/index", "images/kaggle-datasets/index", "images/large-data-sets-in-python-pandas-and-the-alternatives/index", "images/learn-python/index", "images/learning-c-and-python-the-perfect-duo-for-success/index", "images/learning-git-what-to-know-when-youre-a-beginner/index", "images/mastering-the-take-home-coding-exercise-final-steps/index", "images/matplotlib-coordinates-toward-a-python-graphing-calculator/index", "images/matplotlib-vs-seaborn/index", "images/middle-way-of-software-development/index", "images/new-for-2022-python-git-github-bootcamp-course/index", "images/newsletter-11-15-2022/index", "images/newsletter-january-17-2023/index", "images/node-starter-projects/index", "images/notes-on-using-postgres-python-and-docker/index", "images/numpy-practice-questions-to-make-you-an-expert/index", "images/optimizing-aws-s3-uploads-with-golang-and-goroutines/index", "images/pandas-groupby/index", "images/pandas-practice-examples/index", "images/pip-vs-conda-two-top-tools-for-managing-python-packages/index", "images/pip-vs-pipenv-which-is-better-and-which-to-learn-first/index", "images/programming-and-math-a-brief-translation-guide/index", "images/pycharm-vs-vs-code/index", "images/pypy-first-look-a-faster-version-of-python/index", "images/python-and-aws-getting-started-with-the-cloud-development-kit-cdk/index", "images/python-and-aws-lambda-functions/index", "images/python-and-react-running-python-online-in-a-react-app/index", "images/python-boot-camp-a-co-operative-approach/index", "images/python-chemistry/index", "images/python-configuration/index", "images/python-data-analysis-starter-project/index", "images/python-dataclasses/index", "images/python-date-tutorial/index", "images/python-dictionaries-with-exercises/index", "images/python-docker-examples-sagemath-in-a-container/index", "images/python-errors/index", "images/python-files-from-beginner-to-expert/index", "images/python-for-loop-a-complete-tutorial-with-exercises/index", "images/python-format-strings/index", "images/python-function-arguments-and-parameters-examples/index", "images/python-function-best-practices/index", "images/python-function-exercises/index", "images/python-functions/index", "images/python-generators-questions-and-answers/index", "images/python-hobbyist-to-professional/index", "images/python-indexing-slicing-exercises/index", "images/python-json-easily-work-with-dictionaries-files-and-custom-objects/index", "images/python-linear-algebra/index", "images/python-lists-vs-arrays/index", "images/python-lists/index", "images/python-matrix-multiplication/index", "images/python-newsletter-february-22-2023/index", "images/python-newsletter-january-31-2023/index", "images/python-on-docker-practice-ideas/index", "images/python-operators/index", "images/python-package-example-setuptools/index", "images/python-postgres-and-docker-running-fast-meaningful-unit-tests/index", "images/python-practice-projects/index", "images/python-pyarrow-and-parquet/index", "images/python-shell-programming/index", "images/python-string-examples-tutorial-and-practice-exercises/index", "images/python-virtual-environments-video-tutorial/index", "images/python-vs-matlab/index", "images/python-with-using-and-writing-context-managers-in-python/index", "images/random-python-secrets-and-random-values-made-easy/index", "images/run-python-online-with-jupyterlite/index", "images/running-the-cmake-tutorial-in-a-vs-code-dev-container/index", "images/scipy-vs-sympy-for-symbolic-math-let-us-never-speak-of-this-again/index", "images/selecting-data-in-pandas/index", "images/simplicity-is-your-friend-python-vs-vs-code-for-teaching-software/index", "images/sql-with-pandas/index", "images/sqlalchemy-dataclass-example/index", "images/sympy-solving-math-equations-in-python/index", "images/teach-yourself-math/index", "images/the-function-in-python-introductory-tutorial/index", "images/the-marketing-genius-of-100-days-of-code/index", "images/thonny-the-most-beginner-friendly-python-ide/index", "images/understanding-python-types-and-type-hints/index", "images/useful-collection-classes-in-python-you-may-not-know/index", "images/using-latex-in-python/index", "images/using-pyspark-and-parquet/index", "images/using-testng-with-spring/index", "images/vagrant-ansible-local/index", "images/what-are-those-pyc-files-in-a-python-project/index", "images/what-is-a-python-package/index", "images/wherein-i-make-an-account-of-my-whereabouts/index", "images/why-is-python-popular/index", "images/write-for-us/index", "images/writing-a-python-custom-exception/index", "images/your-first-development-job/index", "images/your-first-programming-language-should-be-python-not-javascript/index", "images/zen-of-100-days-of-python/index", "index", "installing-a-python-and-git-development-environment-on-windows-part-2", "installing-a-python-development-environment-on-windows", "installing-pyenv-on-a-mac", "introducing-sage-math-python-based-mathematics", "is-python-free-with-list-of-tools", "is-python-slow", "julia-vs-python-now-for-something-completely-different", "jupyter-lite-python-in-the-browser-with-serverless-jupyter", "jupyter-notebook-a-complete-introduction", "jupyter-password", "kaggle-datasets", "large-data-sets-in-python-pandas-and-the-alternatives", "learn-python", "learning-c-and-python-the-perfect-duo-for-success", "learning-git-what-to-know-when-youre-a-beginner", "mastering-the-take-home-coding-exercise-final-steps", "math/Derivatives", "math/DoubleAndHalfAngleFormulas", "math/EvenOddAndPythagoreanIdentities", "math/Journal", "math/LearningTheUnitCircle", "math/Limits", "math/LinearAlgebraBeginnings", "math/LogReview", "math/LogarithmsAndExponents", "math/Math271Test1_Problems", "math/ProblemsToWorkOnForCalc1", "math/SyllabusAndJournal", "math/TrigFunctionsAndUnitCircle", "math/UsingTheUnitCircleInTrigonometry", "math/index", "math/testing", "matplotlib-coordinates-toward-a-python-graphing-calculator", "matplotlib-vs-seaborn", "middle-way-of-software-development", "mystnb-template", "new-for-2022-python-git-github-bootcamp-course", "newsletter-11-15-2022", "newsletter-january-17-2023", "node-starter-projects", "notes-on-using-postgres-python-and-docker", "numpy-practice-questions-to-make-you-an-expert", "optimizing-aws-s3-uploads-with-golang-and-goroutines", "pandas-groupby", "pandas-practice-examples", "pip-vs-conda-two-top-tools-for-managing-python-packages", "pip-vs-pipenv-which-is-better-and-which-to-learn-first", "programming-and-math-a-brief-translation-guide", "pycharm-vs-vs-code", "pypy-first-look-a-faster-version-of-python", "python-and-aws-getting-started-with-the-cloud-development-kit-cdk", "python-and-aws-lambda-functions", "python-and-react-running-python-online-in-a-react-app", "python-boot-camp-a-co-operative-approach", "python-chemistry", "python-configuration", "python-data-analysis-starter-project", "python-dataclasses", "python-date-tutorial", "python-dictionaries-with-exercises", "python-docker-examples-sagemath-in-a-container", "python-errors", "python-files-from-beginner-to-expert", "python-for-loop-a-complete-tutorial-with-exercises", "python-format-strings", "python-function-arguments-and-parameters-examples", "python-function-best-practices", "python-function-exercises", "python-functions", "python-generators-questions-and-answers", "python-hobbyist-to-professional", "python-indexing-slicing-exercises", "python-json-easily-work-with-dictionaries-files-and-custom-objects", "python-lists", "python-lists-vs-arrays", "python-matrix-multiplication", "python-newsletter-february-22-2023", "python-newsletter-january-31-2023", "python-on-docker-practice-ideas", "python-operators", "python-package-example-setuptools", "python-postgres-and-docker-running-fast-meaningful-unit-tests", "python-practice-projects", "python-pyarrow-and-parquet", "python-shell-programming", "python-string-examples-tutorial-and-practice-exercises", "python-virtual-environments-video-tutorial", "python-vs-matlab", "python-with-using-and-writing-context-managers-in-python", "random-python-secrets-and-random-values-made-easy", "recovery/CharlotteSecularSobriety", "recovery/JudgementsInSobriety", "recovery/OutlineForProgramOrFellowship", "recovery/index", "run-python-online-with-jupyterlite", "running-the-cmake-tutorial-in-a-vs-code-dev-container", "scipy-vs-sympy-for-symbolic-math-let-us-never-speak-of-this-again", "selecting-data-in-pandas", "simplicity-is-your-friend-python-vs-vs-code-for-teaching-software", "socialmedia/FirstPrinciplesOfProductiveMinimalism", "socialmedia/GivingUpSocialMediaReviewOne", "socialmedia/MindfulnessVersusTechnology", "socialmedia/SocialMediaWithdrawal", "socialmedia/TopMistakesInGivingUpSocialMedia", "socialmedia/index", "sql-with-pandas", "sqlalchemy-dataclass-example", "sympy-solving-math-equations-in-python", "teach-yourself-math", "test-dir", "the-function-in-python-introductory-tutorial", "the-marketing-genius-of-100-days-of-code", "thonny-the-most-beginner-friendly-python-ide", "understanding-python-types-and-type-hints", "useful-collection-classes-in-python-you-may-not-know", "using-latex-in-python", "using-pyspark-and-parquet", "using-testng-with-spring", "vagrant-ansible-local", "what-are-those-pyc-files-in-a-python-project", "what-is-a-python-package", "wherein-i-make-an-account-of-my-whereabouts", "why-is-python-popular", "worlds-oldest-math-major", "writing-a-python-custom-exception", "your-first-development-job", "your-first-programming-language-should-be-python-not-javascript", "zen-of-100-days-of-python"], "filenames": ["a-coop-coding-bootcamp.md", "airflow-python-etl.md", "all_files.rst", "alternatives-to-pandas-python-polars.md", "basic-command-line-skills-to-rock-your-development-world.md", "beautiful-documentation-with-jupyterbook.md", "benchmarking-python-and-rust-async-web-server-performance.md", "boolean-expressions-python.md", "building-a-docker-golang-container.md", "career-paths-for-python-programmers.md", "chemists-strongly-addicted-to-python.md", "cmake-starter-project.md", "code-pride-is-the-best-medicine.md", "codesolid-newsletter-11-29-2022.md", "codesolid-newsletter-12-13-2022.md", "codesolid-newsletter-november-1-2022.md", "codesolid-newsletter-october-25-2022.md", "codesolid-python-newsletter-december-28-2022.md", "cognitive_science/OnReadingConsciousnessExplained.md", "cognitive_science/Resources.md", "cognitive_science/SynapsesNeuronsAndBrainsNotes.md", "cognitive_science/SynapseseNeuronsAndBrainsReviewNotes.md", "cognitive_science/TheSecretLifeOfTheMind.md", "cognitive_science/index.rst", "conda-vs-pip.md", "cpp-dev-containers.md", "creating-a-python-interactive-plot.md", "data-cleaning-in-pandas.md", "debugging-python-in-vs-code.md", "directoryinfo-example.md", "dunder-methods-in-python-the-ugliest-awesome-sauce.md", "exploring-python-objects-with-the-dir-and-type-functions.md", "featured.rst", "finding-duplicates-in-a-list-in-python.md", "getting-started-with-python-classes.md", "getting-things-done-with-dendron-and-vs-code-first-look.md", "getting-things-done-with-github-markdown-and-visual-studio-code.md", "google-sheets-in-python-and-pandas.md", "heymoe.md", "how-do-i-profile-python-code.md", "how-to-compare-python-dictionaries.md", "how-to-convert-a-string-to-datetime-in-python.md", "how-to-install-pip-and-conda-on-the-same-machine.md", "how-to-learn-to-program.md", "how-to-practice-python.md", "how-to-practice-python-data-science-and-pandas.md", "how-to-separate-tests-and-source-for-python-tests.md", "how-to-use-docker-with-python.md", "how-to-visualize-data-using-pandas.md", "images/a-coop-coding-bootcamp/index.md", "images/airflow-python-etl/index.md", "images/alternatives-to-pandas-python-polars/index.md", "images/basic-command-line-skills-to-rock-your-development-world/index.md", "images/beautiful-documentation-with-jupyterbook/index.md", "images/benchmarking-python-and-rust-async-web-server-performance/index.md", "images/boolean-expressions-python/index.md", "images/building-a-docker-golang-container/index.md", "images/career-paths-for-python-programmers/index.md", "images/chemists-strongly-addicted-to-python/index.md", "images/cmake-starter-project/index.md", "images/code-pride-is-the-best-medicine/index.md", "images/codesolid-newsletter-11-29-2022/index.md", "images/codesolid-newsletter-12-13-2022/index.md", "images/codesolid-newsletter-october-25-2022/index.md", "images/codesolid-python-newsletter-december-28-2022/index.md", "images/conda-vs-pip/index.md", "images/cpp-dev-containers/index.md", "images/creating-a-python-interactive-plot/index.md", "images/data-cleaning-in-pandas/index.md", "images/debugging-python-in-vs-code/index.md", "images/directoryinfo-example/index.md", "images/dunder-methods-in-python-the-ugliest-awesome-sauce/index.md", "images/exploring-python-objects-with-the-dir-and-type-functions/index.md", "images/finding-duplicates-in-a-list-in-python/index.md", "images/getting-started-with-python-classes/index.md", "images/getting-things-done-with-dendron-and-vs-code-first-look/index.md", "images/getting-things-done-with-github-markdown-and-visual-studio-code/index.md", "images/google-sheets-in-python-and-pandas/index.md", "images/heymoe/index.md", "images/how-do-i-profile-python-code/index.md", "images/how-to-compare-python-dictionaries/index.md", "images/how-to-convert-a-string-to-datetime-in-python/index.md", "images/how-to-install-pip-and-conda-on-the-same-machine/index.md", "images/how-to-learn-to-program/index.md", "images/how-to-practice-python-data-science-and-pandas/index.md", "images/how-to-practice-python/index.md", "images/how-to-separate-tests-and-source-for-python-tests/index.md", "images/how-to-use-docker-with-python/index.md", "images/how-to-visualize-data-using-pandas/index.md", "images/installing-a-python-and-git-development-environment-on-windows-part-2/index.md", "images/installing-a-python-development-environment-on-windows/index.md", "images/installing-pyenv-on-a-mac/index.md", "images/introducing-sage-math-python-based-mathematics/index.md", "images/is-python-free-with-list-of-tools/index.md", "images/is-python-slow/index.md", "images/julia-vs-python-now-for-something-completely-different/index.md", "images/jupyter-lite-python-in-the-browser-with-serverless-jupyter/index.md", "images/jupyter-notebook-a-complete-introduction/index.md", "images/jupyter-password/index.md", "images/kaggle-datasets/index.md", "images/large-data-sets-in-python-pandas-and-the-alternatives/index.md", "images/learn-python/index.md", "images/learning-c-and-python-the-perfect-duo-for-success/index.md", "images/learning-git-what-to-know-when-youre-a-beginner/index.md", "images/mastering-the-take-home-coding-exercise-final-steps/index.md", "images/matplotlib-coordinates-toward-a-python-graphing-calculator/index.md", "images/matplotlib-vs-seaborn/index.md", "images/middle-way-of-software-development/index.md", "images/new-for-2022-python-git-github-bootcamp-course/index.md", "images/newsletter-11-15-2022/index.md", "images/newsletter-january-17-2023/index.md", "images/node-starter-projects/index.md", "images/notes-on-using-postgres-python-and-docker/index.md", "images/numpy-practice-questions-to-make-you-an-expert/index.md", "images/optimizing-aws-s3-uploads-with-golang-and-goroutines/index.md", "images/pandas-groupby/index.md", "images/pandas-practice-examples/index.md", "images/pip-vs-conda-two-top-tools-for-managing-python-packages/index.md", "images/pip-vs-pipenv-which-is-better-and-which-to-learn-first/index.md", "images/programming-and-math-a-brief-translation-guide/index.md", "images/pycharm-vs-vs-code/index.md", "images/pypy-first-look-a-faster-version-of-python/index.md", "images/python-and-aws-getting-started-with-the-cloud-development-kit-cdk/index.md", "images/python-and-aws-lambda-functions/index.md", "images/python-and-react-running-python-online-in-a-react-app/index.md", "images/python-boot-camp-a-co-operative-approach/index.md", "images/python-chemistry/index.md", "images/python-configuration/index.md", "images/python-data-analysis-starter-project/index.md", "images/python-dataclasses/index.md", "images/python-date-tutorial/index.md", "images/python-dictionaries-with-exercises/index.md", "images/python-docker-examples-sagemath-in-a-container/index.md", "images/python-errors/index.md", "images/python-files-from-beginner-to-expert/index.md", "images/python-for-loop-a-complete-tutorial-with-exercises/index.md", "images/python-format-strings/index.md", "images/python-function-arguments-and-parameters-examples/index.md", "images/python-function-best-practices/index.md", "images/python-function-exercises/index.md", "images/python-functions/index.md", "images/python-generators-questions-and-answers/index.md", "images/python-hobbyist-to-professional/index.md", "images/python-indexing-slicing-exercises/index.md", "images/python-json-easily-work-with-dictionaries-files-and-custom-objects/index.md", "images/python-linear-algebra/index.md", "images/python-lists-vs-arrays/index.md", "images/python-lists/index.md", "images/python-matrix-multiplication/index.md", "images/python-newsletter-february-22-2023/index.md", "images/python-newsletter-january-31-2023/index.md", "images/python-on-docker-practice-ideas/index.md", "images/python-operators/index.md", "images/python-package-example-setuptools/index.md", "images/python-postgres-and-docker-running-fast-meaningful-unit-tests/index.md", "images/python-practice-projects/index.md", "images/python-pyarrow-and-parquet/index.md", "images/python-shell-programming/index.md", "images/python-string-examples-tutorial-and-practice-exercises/index.md", "images/python-virtual-environments-video-tutorial/index.md", "images/python-vs-matlab/index.md", "images/python-with-using-and-writing-context-managers-in-python/index.md", "images/random-python-secrets-and-random-values-made-easy/index.md", "images/run-python-online-with-jupyterlite/index.md", "images/running-the-cmake-tutorial-in-a-vs-code-dev-container/index.md", "images/scipy-vs-sympy-for-symbolic-math-let-us-never-speak-of-this-again/index.md", "images/selecting-data-in-pandas/index.md", "images/simplicity-is-your-friend-python-vs-vs-code-for-teaching-software/index.md", "images/sql-with-pandas/index.md", "images/sqlalchemy-dataclass-example/index.md", "images/sympy-solving-math-equations-in-python/index.md", "images/teach-yourself-math/index.md", "images/the-function-in-python-introductory-tutorial/index.md", "images/the-marketing-genius-of-100-days-of-code/index.md", "images/thonny-the-most-beginner-friendly-python-ide/index.md", "images/understanding-python-types-and-type-hints/index.md", "images/useful-collection-classes-in-python-you-may-not-know/index.md", "images/using-latex-in-python/index.md", "images/using-pyspark-and-parquet/index.md", "images/using-testng-with-spring/index.md", "images/vagrant-ansible-local/index.md", "images/what-are-those-pyc-files-in-a-python-project/index.md", "images/what-is-a-python-package/index.md", "images/wherein-i-make-an-account-of-my-whereabouts/index.md", "images/why-is-python-popular/index.md", "images/write-for-us/index.md", "images/writing-a-python-custom-exception/index.md", "images/your-first-development-job/index.md", "images/your-first-programming-language-should-be-python-not-javascript/index.md", "images/zen-of-100-days-of-python/index.md", "index.rst", "installing-a-python-and-git-development-environment-on-windows-part-2.md", "installing-a-python-development-environment-on-windows.md", "installing-pyenv-on-a-mac.md", "introducing-sage-math-python-based-mathematics.md", "is-python-free-with-list-of-tools.md", "is-python-slow.md", "julia-vs-python-now-for-something-completely-different.md", "jupyter-lite-python-in-the-browser-with-serverless-jupyter.md", "jupyter-notebook-a-complete-introduction.md", "jupyter-password.md", "kaggle-datasets.md", "large-data-sets-in-python-pandas-and-the-alternatives.md", "learn-python.md", "learning-c-and-python-the-perfect-duo-for-success.md", "learning-git-what-to-know-when-youre-a-beginner.md", "mastering-the-take-home-coding-exercise-final-steps.md", "math/Derivatives.ipynb", "math/DoubleAndHalfAngleFormulas.md", "math/EvenOddAndPythagoreanIdentities.md", "math/Journal.md", "math/LearningTheUnitCircle.ipynb", "math/Limits.ipynb", "math/LinearAlgebraBeginnings.ipynb", "math/LogReview.ipynb", "math/LogarithmsAndExponents.md", "math/Math271Test1_Problems.md", "math/ProblemsToWorkOnForCalc1.md", "math/SyllabusAndJournal.ipynb", "math/TrigFunctionsAndUnitCircle.ipynb", "math/UsingTheUnitCircleInTrigonometry.md", "math/index.rst", "math/testing.md", "matplotlib-coordinates-toward-a-python-graphing-calculator.md", "matplotlib-vs-seaborn.md", "middle-way-of-software-development.md", "mystnb-template.md", "new-for-2022-python-git-github-bootcamp-course.md", "newsletter-11-15-2022.md", "newsletter-january-17-2023.md", "node-starter-projects.md", "notes-on-using-postgres-python-and-docker.md", "numpy-practice-questions-to-make-you-an-expert.md", "optimizing-aws-s3-uploads-with-golang-and-goroutines.md", "pandas-groupby.md", "pandas-practice-examples.md", "pip-vs-conda-two-top-tools-for-managing-python-packages.md", "pip-vs-pipenv-which-is-better-and-which-to-learn-first.md", "programming-and-math-a-brief-translation-guide.md", "pycharm-vs-vs-code.md", "pypy-first-look-a-faster-version-of-python.md", "python-and-aws-getting-started-with-the-cloud-development-kit-cdk.md", "python-and-aws-lambda-functions.md", "python-and-react-running-python-online-in-a-react-app.md", "python-boot-camp-a-co-operative-approach.md", "python-chemistry.md", "python-configuration.md", "python-data-analysis-starter-project.md", "python-dataclasses.md", "python-date-tutorial.md", "python-dictionaries-with-exercises.md", "python-docker-examples-sagemath-in-a-container.md", "python-errors.md", "python-files-from-beginner-to-expert.md", "python-for-loop-a-complete-tutorial-with-exercises.md", "python-format-strings.md", "python-function-arguments-and-parameters-examples.md", "python-function-best-practices.md", "python-function-exercises.md", "python-functions.md", "python-generators-questions-and-answers.md", "python-hobbyist-to-professional.md", "python-indexing-slicing-exercises.md", "python-json-easily-work-with-dictionaries-files-and-custom-objects.md", "python-lists.md", "python-lists-vs-arrays.md", "python-matrix-multiplication.md", "python-newsletter-february-22-2023.md", "python-newsletter-january-31-2023.md", "python-on-docker-practice-ideas.md", "python-operators.md", "python-package-example-setuptools.md", "python-postgres-and-docker-running-fast-meaningful-unit-tests.md", "python-practice-projects.md", "python-pyarrow-and-parquet.md", "python-shell-programming.md", "python-string-examples-tutorial-and-practice-exercises.md", "python-virtual-environments-video-tutorial.md", "python-vs-matlab.md", "python-with-using-and-writing-context-managers-in-python.md", "random-python-secrets-and-random-values-made-easy.md", "recovery/CharlotteSecularSobriety.rst", "recovery/JudgementsInSobriety.md", "recovery/OutlineForProgramOrFellowship.md", "recovery/index.rst", "run-python-online-with-jupyterlite.md", "running-the-cmake-tutorial-in-a-vs-code-dev-container.md", "scipy-vs-sympy-for-symbolic-math-let-us-never-speak-of-this-again.md", "selecting-data-in-pandas.md", "simplicity-is-your-friend-python-vs-vs-code-for-teaching-software.md", "socialmedia/FirstPrinciplesOfProductiveMinimalism.md", "socialmedia/GivingUpSocialMediaReviewOne.md", "socialmedia/MindfulnessVersusTechnology.md", "socialmedia/SocialMediaWithdrawal.md", "socialmedia/TopMistakesInGivingUpSocialMedia.md", "socialmedia/index.rst", "sql-with-pandas.md", "sqlalchemy-dataclass-example.md", "sympy-solving-math-equations-in-python.md", "teach-yourself-math.md", "test-dir.md", "the-function-in-python-introductory-tutorial.md", "the-marketing-genius-of-100-days-of-code.md", "thonny-the-most-beginner-friendly-python-ide.md", "understanding-python-types-and-type-hints.md", "useful-collection-classes-in-python-you-may-not-know.md", "using-latex-in-python.md", "using-pyspark-and-parquet.md", "using-testng-with-spring.md", "vagrant-ansible-local.md", "what-are-those-pyc-files-in-a-python-project.md", "what-is-a-python-package.md", "wherein-i-make-an-account-of-my-whereabouts.md", "why-is-python-popular.md", "worlds-oldest-math-major.md", "writing-a-python-custom-exception.md", "your-first-development-job.md", "your-first-programming-language-should-be-python-not-javascript.md", "zen-of-100-days-of-python.md"], "titles": ["A Coop Coding Bootcamp", "Apache Airflow:  Python ETL and Scheduling Made Easy", "Site Index", "Alternatives to Pandas:  Python Polars", "Learn Basic Command Line Skills and Rock Your Workflow", "My Journey to Beautiful Documentation With JupyterBook", "Benchmarking Python and Rust Async Web Server Performance", "Boolean Expressions in Python: Beginner to Expert", "Building a Docker Golang Container", "Best Python Careers: New Research Reveals Top Fields", "Chemists Strongly Addicted to Python!", "A CMake Starter Project", "Code Pride is the Best Medicine", "CodeSolid Newsletter, 11/29/2022", "CodeSolid Newsletter 12/13/2022", "CodeSolid Python Newsletter:  November 1, 2022", "CodeSolid Newsletter:  October 25, 2022", "CodeSolid Python Newsletter:  December 28, 2022", "On Reading Dennett\u2019s <em>Consciousness Explained</em>", "Cognitive Science Resources", "Notes on Synapses, Neurons, and Brains", "Review Notes for Synapses, Neurons, and Brains", "The Secret Life of the Mind", "Cognitive Science", "Conda vs. Pip, Venv, and Pyenv \u2013 Simplicity Wins", "C++ Dev Containers:  Custom Environments for VS Code", "Creating a Python Interactive Plot Using Matplotlib in Jupyter", "Data cleaning in Pandas", "Debugging Python in VS Code", "DirectoryInfo Example", "Python Dunder Methods:  The Ugliest Awesome Sauce", "Exploring Python Objects with the dir and type functions", "Featured Articles", "How to Find Duplicates In a List in Python", "Python Classes Zero to Expert: A Tutorial with Exercises", "Getting Things Done With Dendron and VS Code \u2013 First Look", "Getting Things Done with GitHub, Markdown, and Visual Studio Code", "How to Work With Google Sheets In Python and Pandas", "Delme", "How To Profile Python Code", "How To Compare Python Dictionaries", "How to Convert a String to Datetime in Python?", "How To Install Pip and Conda on the Same Machine", "How to Learn To Program", "How To Practice Python", "How to Practice Python: Data Science and Pandas", "How To Separate Source and Tests in Python", "How To Use Docker Python Images and Docker Compose With Python", "How to Visualize Data Using Pandas", "&lt;no title&gt;", "Introduction", "Introduction", "The Core Command Line Skills", "Why This Is Important To Me", "Using JMeter (A Brief Introduction)", "A Simple Boolean Example in Python", "From Simple to Complex", "Introduction", "&lt;no title&gt;", "Introduction", "You May Also Enjoy", "New On CodeSolid", "New On CodeSolid", "Hello from CodeSolid,", "New and Featured on CodeSolid", "Moving to Conda", "Dev Containers in VS Code: An Introduction", "Python Libraries For Interactive Plots", "Getting Started with Data cleaning in Pandas", "Introduction", "You May Also Enjoy", "Python Constructors are Dunder Methods", "The Solution", "Finding Duplicates in a List When Order Doesn\u2019t Matter", "Classes vs. Objects", "The Good", "&lt;no title&gt;", "The Devil is Not in the Details, It\u2019s In the Setup.", "&lt;no title&gt;", "Python Profiling Tool Overview", "Python Is Consistent", "What is Python Datetime?", "The Basics First: Pip, Pyenv, Anaconda and Miniconda", "Think About Your \u201cWhy\u201d", "Core Packages for Python Data Science", "Python Habits Are No Different From Other Habits", "Solution? Code Python in Python.", "Is Docker Important for Python Development", "Exploring the Dataset", "Installing Visual Studio Code", "Video", "My Pyenv Story - A Cleaner Personal Workflow", "Getting Started With Sage", "The Answers", "Python vs. Java Performance: Long Running Speed vs Cold Start", "Julia Easily Integrates With Jupyter Notebook", "Add Jupyter Notebook to Any Website", "Part One: Up and Running", "Jupyter Notebook Password or Jupyter Server Password?", "Intro to Kaggle and its Datasets", "Approaches to Optimizing DataFrame Load Times", "Python Programming for Beginners", "What is C++ and what are its uses", "Git and GitHub: What\u2019s The Difference?", "Take Home Coding Problem Checklist", "Plotting a Line in Matplotlib", "Comparing Matplotlib and Seaborn", "&lt;no title&gt;", "What We Know", "New On CodeSolid", "What\u2019s New On CodeSolid", "&lt;no title&gt;", "Postgres Docker / Client on the Host", "Finding the Solutions", "Is This Trip Necessary?", "Contents", "Part One: Examples", "What is pip?", "Getting Started with Pip and Virtual Environments", "Vexed by Vectors", "Overview", "Other Python Implementations", "Getting Started: Basic Setup for the CDK for Python", "Some Basic Definitions", "Clearing a Roadblock", "<em>Why A Coop Coding Boot Camp Is an Awesome Idea</em>", "Using SymPy for Chemistry in Python", "Introduction", "Installing the Tools for the Pandas Series", "What is the Python Dataclass Decorator?", "Introduction", "Introduction", "The Rationale: Using Sage With JupyterLab", "Syntax Errors in Python", "Introduction", "Introduction: What is a For Loop In Python", "String Formatting for Beginners", "Introduction", "Write Functions that Have a Single Responsibility", "&lt;no title&gt;", "A Draft Outline", "What are Python Generators?", "Approach: What The Course Suggests", "Simple Positive Indexing", "An Overview of the Python JSON Module", "&lt;no title&gt;", "Python Lists 101", "Introduction", "NumPy Matrix Multiplication: Use &#64; or Matmul", "New On CodeSolid", "New and Featured On CodeSolid", "Setting Up Python Tests Independently of Code", "Operators in Python: An Overview", "Creating a Virtual Environment", "Why Testing Databases Is Hard", "Introduction: Why Is This a Series?", "Arrow Tables vs. Pandas DataFrames", "Is Python Good for Shell Scripting?", "Introduction", "Virtual Environment Commands (Mac and Linux)", "Python and MATLAB (And Octave, Oh My!)", "Basic Features of The With Statement in Python", "Introduction", "&lt;no title&gt;", "Introduction", "Why SymPy is Superior for Symbolic Math", "Introduction to Selecting Data in Pandas", "You May Also Like", "SQL Databases as a \u201cStorage Medium\u201d", "Python Dataclasses Overview", "SymPy Alternatives", "What We Will Discuss", "Introduction", "&lt;no title&gt;", "Installing Thonny Could Not Be Simpler", "Introduction", "Where Are Python Collections Defined", "LaTeX in Jupyter Markdown", "Introduction", "Moving to TestNG from JUnit", "Vagrant Up", "Why does Python Compile Files? Isn\u2019t It Interpreted?", "What\u2019s the Difference Between a Python Package and a Module?", "&lt;no title&gt;", "Why Is Python Popular", "To Apply / Learn More", "Creating Custom Exceptions", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Math \u2229 Programming", "Installing a Python and Git Development Environment on Windows, Part 2", "Installing a Python and Git Development Environment on Windows", "Installing Pyenv on a Mac (A Setup Guide With Usage Tips)", "Introducing Sage Math:  Symbolic Math Software In Python", "Is Python Free?  Yes!  We List the Best Free Tools", "Is Python Slow?  Separating the Myths from the Facts", "Is Julia Easy to Learn for Python Developers?", "Jupyter Lite:  Python in the Browser with Serverless Jupyter", "Jupyter Notebook: A Complete Introduction", "Jupyter Password: Easy Notebook and Lab Configuration", "Using the Kaggle Datasets API in Python", "Large Data Sets in Python:  Pandas And The Alternatives", "Learn Python: Tutorials from Beginner to Expert", "Learning C++ and Python: The Perfect Duo for Success", "Learning Git: What To Know When You\u2019re a Beginner", "Mastering The Take-Home Coding Exercise: A Simple Checklist To Make It Shine", "Derivatives Review and Practice", "Double and Half Angle Formulas (Summary)", "Even and Odd and Pythagorean Identities", "Math Journal", "How I Learned the Unit Circle", "Limits", "Interesting Linear Algebra Stuff", "Logarithms", "Logarithms and Exponents", "Math 271 Test 1 Problems", "Problems to Work On", "Johnsin University", "Using the Unit Circle in Trigonometry", "Trig functions", "Math Notes", "&lt;no title&gt;", "Matplotlib Coordinates:  Graphing Math Functions in Python", "Matplotlib vs. Seaborn", "The Middle Way of Software Development", "Your Header here", "New for 2022:  Python, Git, GitHub BootCamp Course", "Newsletter, 11/15/2022", "Python Newsletter, January 17, 2023", "Node Starter Projects", "Using Postgres, Python, and Docker", "NumPy Examples \u2013  Practice Questions Make You an Expert", "Fast S3 Updates with Golang and Goroutines", "How to Use the Pandas Groupby Method?", "Pandas Examples and Review Questions to Make You an Expert", "Pip vs. Conda: Two Top Tools for Managing Python Packages", "Pip vs Pipenv: Which is better and which to learn first?", "Programming and Math:  A Brief Translation Guide", "PyCharm vs. VS Code: Which Is Better and Why?", "Is PyPy a Faster Version of Python?", "Python and AWS:  Getting Started with the Cloud Development Kit (CDK)", "Python for AWS Lambda Functions: A Beginner\u2019s Guide", "Python and React:  Running Python Online in a React App", "A Coding Boot Camp Run As a Cooperative", "Python Chemistry:  SymPy and ChemPy", "Python Configuration: Top Built-In and Third-Party Libraries", "Python Data Analysis Starter Project", "Python Dataclass:  Easily Automate Class Best Practices", "Python Date and Time Functions: The Complete Tutorial", "Python Dictionaries for Beginners:  A Complete Lesson With Exercises", "Python Docker Examples:  SageMath in a Container", "Python Errors: Exception Handling from Beginner to Expert", "Find Files in Python:  Complete Cookbook for Searching Files and Folders", "The Python For Loop:  Complete Tutorial and Practice Exercises", "Python Format Strings: Beginner to Expert", "Python Function Arguments: The Complete Guide", "Python Function Best Practices", "Python Function Exercises With Solutions", "Python Functions: Introduction to the Series", "Python Generator Functions: The Complete Guide", "A Tech Career in Python:  From Hobbyist to Professional", "Python Indexing and Slicing: Complete Tutorial With Hands-On Exercises", "Python JSON: Easily Work With  Dictionaries, Files, and Custom Objects", "Python Lists for Beginners: A Complete Lesson With Exercises", "Python Lists vs. Arrays:  How to Choose Between Them", "Python Matrix Multiplication: NumPy, SymPy, and the Math Behind It", "Python Newsletter February 22, 2023", "Python Newsletter, January 31, 2023", "Python Practice:  More Python on Docker Project Ideas", "Python Operators:  The Building Blocks of Successful Code", "Python Package Example: Setuptools", "Python, Postgres, and Docker:  Running Fast, Meaningful Unit Tests", "What Are Good Projects To Practice In Python?", "Python Parquet and Arrow:  Using PyArrow with Pandas", "Python Shell Programming: Overview and Top Tools", "Python String Examples:  Tutorial and Practice Exercises", "Python Virtual Environments: Video Tutorial", "Python vs. MATLAB: Price, Performance, Features", "Python With: Using and Writing Context Managers in Python", "Random Python:  Secrets and Random Values Made Easy", "Charlotte Secular Sobriety", "Judgements in Sobriety", "What Works: Program or Fellowship?", "Recovery", "Run Python Online: Watch the Video to Learn How", "Running the CMake Tutorial in a VS Code Dev Container", "SciPy vs. SymPy for Symbolic Math:  Let Us Never Speak of This Again", "Selecting Data in Pandas", "Simplicity is your Friend:  PyCharm vs. VS Code for Teaching Programming", "First Principles of Productive Minimalism", "Giving Up Social Media, One Month Later", "Mindfulness vs. Technology", "Social Media Withdrawal", "The Top Mistakes People Make When Quitting Social Media", "Social Media", "Using SQL With Pandas:  PandasSQL and IPython-SQL", "SQLAlchemy DataClass Example", "SymPy:  Solving Math Equations in Python and Jupyter", "Teach Yourself Math: Resources, Techniques, and Approach", "Test Dir", "The Function In Python: An Introductory Tutorial", "The Marketing Genius of 100 Days of Code", "Thonny: The Most Beginner Friendly Python IDE", "Understanding Python Types and Type Hints", "Useful Collection Classes in Python You May Not Know", "Using LaTeX In Python", "PySpark and Parquet: Elegant Python DataFrames and SQL", "Using TestNG With Spring", "Simple Vagrant Ansible Local Example", "What Are pyc Files and <strong>pycache</strong> folders In Python ?", "What Is a Python Package?", "Wherein I Make an Account of My Whereabouts", "Why Is Python Popular?# Why Is Python Popular", "On Being The World\u2019s Oldest Math Major", "Writing a Python Custom Exception", "Stop Being a Junior Developer.  No, Seriously, Cut It Out.", "Your First Programming Language Should be Python, Not JavaScript", "The Strange Zen of 100 Days of Python"], "terms": {"i": [0, 1, 2, 3, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 31, 33, 35, 36, 42, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 75, 76, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 96, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 118, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 146, 147, 149, 150, 151, 153, 156, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 173, 174, 176, 177, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198, 200, 201, 202, 203, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 235, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 256, 257, 258, 259, 262, 263, 264, 265, 267, 268, 269, 271, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 302, 303, 305, 306, 308, 309, 310, 314, 315, 316, 317, 318], "recent": [3, 4, 5, 6, 8, 11, 13, 14, 15, 18, 22, 24, 25, 31, 39, 42, 44, 45, 46, 47, 51, 52, 53, 54, 56, 59, 61, 62, 65, 66, 72, 79, 82, 84, 85, 86, 87, 90, 93, 95, 97, 98, 101, 103, 110, 113, 114, 119, 120, 121, 123, 124, 125, 128, 129, 132, 133, 137, 142, 149, 150, 151, 152, 153, 155, 157, 160, 164, 165, 167, 171, 173, 175, 177, 178, 180, 182, 183, 184, 192, 195, 197, 199, 200, 203, 205, 229, 232, 233, 238, 239, 240, 242, 243, 244, 247, 248, 251, 252, 256, 261, 267, 268, 269, 270, 271, 273, 275, 278, 286, 287, 289, 291, 294, 299, 302, 304, 306, 307, 309, 311, 312, 313], "finish": [5, 7, 10, 11, 18, 25, 28, 37, 39, 44, 45, 53, 55, 58, 59, 66, 69, 77, 79, 84, 85, 89, 90, 95, 96, 104, 113, 123, 126, 141, 147, 153, 157, 165, 170, 174, 176, 186, 191, 192, 197, 198, 206, 210, 216, 232, 242, 245, 260, 264, 271, 275, 287, 294, 298, 303, 305, 315], "an": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 17, 18, 19, 22, 24, 26, 27, 28, 30, 31, 33, 35, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 68, 69, 71, 72, 73, 75, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 126, 128, 129, 131, 132, 133, 135, 137, 138, 139, 140, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 160, 162, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 206, 210, 212, 215, 216, 217, 218, 219, 223, 224, 225, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 250, 251, 252, 254, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 272, 274, 275, 276, 278, 280, 281, 282, 283, 286, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 314, 315, 316, 318], "engag": [18, 43, 44, 83, 85, 106, 224], "brilliant": [18, 19], "book": [3, 16, 18, 20, 22, 34, 40, 43, 44, 51, 63, 74, 80, 83, 85, 97, 101, 102, 103, 125, 130, 131, 138, 155, 168, 174, 175, 176, 199, 203, 204, 205, 210, 244, 249, 250, 257, 273, 291, 296, 303, 304, 305], "philosph": 18, "mind": [1, 4, 6, 7, 8, 9, 11, 17, 18, 19, 25, 26, 39, 42, 43, 50, 52, 54, 55, 56, 57, 59, 64, 66, 67, 79, 82, 83, 94, 116, 119, 120, 125, 129, 136, 143, 147, 151, 153, 160, 161, 162, 164, 168, 174, 175, 177, 179, 182, 184, 188, 196, 211, 235, 238, 239, 244, 248, 255, 262, 264, 269, 271, 278, 279, 280, 286, 291, 294, 296, 303, 304, 306, 308, 311, 313, 317], "daniel": [18, 19], "The": [0, 2, 3, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 23, 24, 25, 27, 28, 29, 33, 34, 36, 40, 41, 45, 46, 48, 49, 51, 55, 56, 58, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 76, 80, 81, 84, 86, 88, 89, 90, 91, 94, 95, 96, 97, 99, 100, 104, 105, 106, 107, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 126, 133, 135, 137, 138, 139, 140, 141, 146, 147, 149, 150, 151, 152, 156, 158, 160, 164, 167, 168, 170, 171, 172, 173, 177, 180, 181, 183, 187, 189, 190, 191, 192, 193, 196, 197, 198, 199, 201, 207, 209, 210, 212, 215, 216, 218, 219, 223, 224, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 245, 252, 257, 258, 259, 264, 265, 267, 268, 269, 274, 276, 278, 283, 286, 289, 290, 291, 293, 296, 298, 299, 306, 309, 310, 312, 316], "central": [9, 17, 18, 20, 22, 34, 36, 57, 64, 74, 76, 103, 115, 148, 205, 219, 234, 266], "mission": [18, 20, 92, 155, 194, 273], "dismantl": 18, "cartesian": [18, 26, 67], "theater": 18, "replac": [3, 6, 12, 15, 18, 24, 25, 27, 28, 51, 54, 60, 65, 66, 68, 69, 97, 101, 114, 127, 131, 133, 135, 136, 141, 143, 146, 153, 157, 158, 175, 179, 182, 199, 203, 233, 246, 250, 252, 254, 255, 260, 262, 265, 271, 275, 276, 290, 294, 304, 308, 311], "singl": [1, 3, 4, 6, 7, 9, 14, 15, 18, 19, 24, 26, 27, 34, 45, 47, 48, 50, 51, 52, 54, 55, 57, 62, 65, 67, 68, 74, 84, 87, 88, 94, 100, 103, 105, 106, 111, 113, 115, 116, 117, 118, 119, 129, 131, 136, 137, 139, 140, 144, 146, 147, 148, 149, 152, 153, 155, 158, 161, 165, 166, 167, 169, 174, 175, 176, 177, 178, 180, 181, 182, 184, 186, 189, 196, 202, 205, 223, 224, 230, 232, 234, 235, 236, 237, 238, 248, 250, 255, 256, 258, 259, 263, 264, 265, 266, 267, 270, 271, 273, 276, 279, 287, 288, 289, 297, 303, 304, 305, 306, 307, 309, 310, 311, 313, 315, 318], "non": [4, 8, 9, 18, 20, 24, 25, 26, 28, 36, 37, 44, 47, 52, 56, 57, 65, 66, 67, 69, 76, 77, 85, 87, 91, 92, 93, 94, 97, 100, 101, 104, 114, 119, 127, 129, 130, 133, 136, 137, 138, 139, 141, 144, 146, 148, 154, 157, 158, 160, 165, 167, 168, 170, 176, 177, 179, 184, 185, 193, 194, 195, 196, 199, 202, 203, 206, 212, 216, 233, 238, 246, 248, 249, 252, 255, 256, 257, 258, 260, 263, 265, 266, 272, 275, 276, 278, 287, 289, 296, 298, 305, 306, 308, 313, 314], "materi": [1, 5, 10, 16, 18, 20, 21, 34, 36, 41, 43, 44, 50, 53, 58, 63, 74, 76, 81, 83, 85, 97, 101, 102, 108, 113, 125, 126, 140, 157, 177, 199, 203, 204, 227, 232, 244, 245, 259, 275, 306], "observ": [18, 27, 48, 68, 88, 106, 224], "idea": [2, 4, 5, 9, 10, 11, 14, 18, 19, 20, 30, 34, 36, 39, 43, 44, 47, 52, 53, 57, 58, 59, 62, 71, 74, 76, 79, 83, 85, 87, 91, 93, 94, 95, 97, 99, 101, 102, 106, 107, 110, 113, 114, 115, 120, 121, 126, 127, 129, 130, 133, 136, 138, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 165, 167, 168, 171, 172, 173, 177, 179, 182, 185, 186, 189, 193, 195, 196, 197, 199, 201, 203, 204, 224, 225, 229, 232, 233, 234, 239, 240, 245, 246, 248, 249, 252, 255, 257, 264, 265, 266, 270, 271, 272, 273, 274, 275, 278, 279, 280, 287, 289, 294, 296, 299, 301, 302, 306, 308, 311, 315, 318], "multipl": [2, 8, 18, 20, 24, 27, 33, 34, 39, 42, 47, 48, 56, 65, 68, 73, 74, 79, 82, 87, 88, 91, 93, 94, 95, 97, 106, 115, 116, 117, 120, 122, 128, 136, 140, 146, 152, 160, 164, 166, 176, 177, 193, 195, 196, 197, 199, 211, 224, 234, 235, 236, 239, 241, 247, 255, 259, 265, 270, 278, 286, 288, 305, 306], "draft": [18, 35, 36, 75, 76, 91, 114, 193, 211, 233], "theori": [18, 19, 92, 131, 160, 171, 194, 210, 212, 213, 250, 278, 299], "wherein": [2, 18], "self": [9, 11, 18, 19, 28, 30, 33, 34, 39, 44, 57, 59, 69, 71, 73, 74, 79, 85, 93, 100, 107, 129, 138, 139, 141, 142, 144, 146, 149, 161, 165, 167, 171, 176, 186, 195, 202, 225, 248, 257, 258, 260, 261, 263, 265, 267, 279, 282, 283, 287, 289, 290, 299, 305, 315], "emerg": [18, 20], "sort": [7, 10, 11, 18, 20, 26, 39, 44, 55, 58, 59, 67, 79, 85, 90, 93, 95, 97, 99, 105, 108, 110, 116, 121, 122, 125, 126, 129, 134, 135, 138, 143, 157, 160, 162, 168, 170, 171, 175, 176, 178, 184, 187, 192, 195, 197, 199, 201, 223, 227, 229, 235, 240, 241, 244, 245, 248, 253, 254, 257, 262, 275, 278, 280, 296, 298, 299, 304, 305, 307, 313, 316], "mirag": 18, "aris": [18, 104, 127, 150, 181, 206, 246, 268, 310], "from": [0, 1, 2, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 24, 25, 26, 28, 30, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 66, 67, 69, 71, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 195, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 254, 255, 256, 257, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 285, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 315, 317], "variou": [5, 7, 10, 17, 18, 20, 27, 28, 39, 40, 41, 45, 47, 48, 53, 55, 58, 64, 68, 69, 79, 80, 81, 84, 87, 88, 91, 93, 97, 101, 102, 106, 115, 117, 123, 126, 127, 128, 129, 130, 134, 136, 141, 143, 148, 152, 155, 156, 157, 158, 161, 162, 166, 170, 171, 174, 176, 184, 193, 195, 199, 203, 204, 214, 215, 219, 221, 224, 234, 236, 242, 245, 246, 247, 248, 249, 253, 255, 260, 262, 266, 270, 273, 274, 275, 276, 279, 280, 284, 288, 298, 299, 303, 305, 313], "perceputu": 18, "system": [0, 8, 9, 10, 11, 14, 17, 18, 19, 20, 24, 25, 28, 29, 33, 34, 35, 36, 39, 45, 47, 48, 49, 56, 57, 58, 59, 62, 64, 65, 66, 69, 70, 73, 74, 75, 76, 79, 84, 87, 88, 90, 91, 92, 93, 95, 96, 100, 102, 103, 106, 123, 126, 127, 132, 133, 134, 148, 151, 152, 153, 157, 162, 164, 165, 167, 168, 170, 175, 177, 178, 181, 182, 184, 186, 192, 193, 194, 195, 197, 198, 202, 204, 205, 224, 242, 245, 246, 251, 252, 253, 266, 269, 270, 271, 275, 280, 286, 287, 289, 292, 296, 298, 304, 306, 307, 310, 311, 313, 315], "semi": [4, 18, 30, 52, 71, 160, 278], "independ": [6, 18, 20, 26, 47, 54, 67, 87, 103, 106, 115, 117, 121, 130, 136, 138, 156, 157, 160, 183, 205, 224, 234, 236, 240, 249, 255, 257, 274, 275, 278, 312], "agenc": 18, "distribut": [4, 8, 15, 18, 20, 24, 42, 47, 48, 52, 56, 65, 82, 87, 88, 93, 94, 97, 103, 106, 110, 113, 117, 118, 130, 132, 153, 173, 174, 177, 178, 184, 195, 196, 199, 205, 224, 229, 232, 236, 237, 249, 251, 271, 302, 303, 306, 307, 313], "throughout": [10, 18, 20, 36, 47, 58, 76, 87, 90, 126, 130, 136, 171, 178, 192, 245, 249, 255, 299, 307], "brain": [18, 19, 22, 23, 35, 43, 44, 75, 83, 85, 155, 273, 282], "One": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 24, 26, 27, 30, 33, 34, 39, 42, 44, 45, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 71, 73, 74, 79, 82, 84, 85, 87, 88, 93, 95, 99, 100, 102, 103, 106, 110, 112, 119, 120, 123, 124, 125, 126, 127, 129, 130, 132, 135, 137, 138, 139, 141, 144, 146, 147, 150, 152, 155, 156, 157, 160, 161, 162, 164, 166, 168, 169, 171, 175, 176, 177, 178, 181, 182, 183, 184, 187, 188, 195, 197, 201, 202, 204, 205, 207, 210, 211, 218, 219, 224, 229, 231, 238, 239, 242, 243, 244, 245, 246, 248, 249, 251, 254, 256, 257, 258, 260, 263, 264, 265, 268, 270, 273, 274, 275, 278, 279, 280, 286, 288, 296, 297, 299, 304, 305, 306, 307, 310, 311, 312, 313, 316, 317], "dai": [1, 2, 5, 8, 9, 12, 18, 20, 35, 39, 41, 43, 44, 45, 47, 50, 53, 56, 57, 60, 75, 79, 81, 83, 84, 85, 87, 91, 94, 96, 97, 101, 109, 111, 113, 116, 120, 123, 125, 127, 133, 136, 137, 149, 160, 162, 167, 171, 173, 175, 182, 183, 186, 189, 193, 196, 198, 199, 203, 210, 212, 216, 218, 228, 230, 232, 235, 239, 242, 244, 246, 252, 255, 256, 267, 278, 280, 289, 290, 291, 293, 294, 299, 304, 311, 312, 314, 315], "dure": [4, 8, 18, 20, 47, 52, 56, 87, 95, 96, 100, 127, 129, 133, 161, 171, 176, 184, 197, 198, 202, 207, 218, 246, 248, 252, 279, 294, 299, 305, 313], "took": [6, 9, 17, 18, 35, 39, 45, 54, 57, 64, 75, 79, 84, 95, 100, 101, 102, 105, 107, 119, 121, 130, 142, 148, 156, 160, 170, 171, 173, 176, 178, 197, 202, 203, 204, 211, 223, 225, 238, 240, 249, 261, 266, 274, 278, 294, 298, 299, 302, 305, 307, 314], "time": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 24, 25, 26, 27, 28, 30, 33, 34, 35, 37, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 210, 211, 216, 218, 219, 221, 223, 224, 225, 227, 228, 230, 232, 233, 236, 237, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 278, 279, 280, 281, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 310, 311, 312, 313, 315, 317], "realli": [5, 6, 7, 8, 9, 10, 11, 13, 16, 18, 20, 25, 26, 28, 30, 33, 35, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 58, 59, 61, 63, 66, 67, 69, 71, 73, 75, 82, 83, 84, 85, 86, 87, 89, 90, 93, 94, 95, 100, 104, 105, 107, 109, 110, 111, 113, 117, 120, 121, 123, 133, 134, 137, 138, 141, 142, 146, 151, 152, 155, 157, 160, 161, 162, 164, 165, 167, 168, 171, 172, 174, 175, 176, 177, 178, 179, 182, 183, 186, 187, 188, 191, 192, 195, 196, 197, 202, 206, 211, 212, 216, 223, 225, 228, 229, 230, 232, 236, 239, 240, 242, 252, 253, 256, 257, 260, 261, 265, 269, 270, 273, 275, 278, 279, 280, 286, 287, 289, 290, 293, 294, 296, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 315, 316, 317], "try": [1, 4, 5, 7, 9, 11, 12, 13, 15, 16, 17, 18, 20, 24, 25, 27, 28, 30, 33, 34, 36, 37, 39, 40, 42, 44, 45, 46, 47, 50, 52, 53, 55, 57, 59, 60, 61, 63, 64, 65, 66, 68, 69, 71, 73, 74, 76, 77, 79, 80, 82, 84, 85, 86, 87, 90, 91, 92, 93, 95, 98, 100, 101, 103, 104, 105, 109, 111, 113, 115, 118, 120, 121, 122, 123, 124, 127, 128, 129, 131, 135, 136, 137, 138, 139, 141, 143, 144, 146, 147, 148, 151, 153, 155, 156, 157, 158, 160, 161, 162, 164, 165, 167, 169, 170, 171, 174, 175, 177, 178, 180, 182, 183, 184, 186, 192, 193, 194, 195, 197, 200, 202, 203, 205, 206, 207, 210, 211, 212, 216, 218, 223, 228, 230, 232, 234, 237, 239, 240, 241, 242, 243, 246, 247, 248, 250, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 269, 271, 273, 274, 275, 276, 278, 279, 280, 286, 287, 289, 291, 292, 293, 294, 297, 298, 299, 303, 304, 306, 307, 309, 311, 312, 313, 315], "pai": [0, 9, 18, 26, 28, 43, 46, 47, 49, 57, 67, 69, 83, 86, 87, 93, 94, 107, 118, 120, 123, 132, 142, 173, 185, 195, 196, 211, 225, 237, 239, 242, 251, 261, 290, 302], "more": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 24, 25, 26, 27, 28, 30, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 192, 194, 195, 196, 197, 198, 199, 201, 202, 203, 205, 206, 210, 211, 216, 223, 224, 225, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 285, 286, 287, 288, 289, 290, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317], "attent": [9, 17, 18, 20, 26, 43, 46, 57, 64, 67, 83, 86, 93, 94, 130, 134, 138, 151, 171, 178, 184, 195, 196, 249, 253, 257, 269, 290, 292, 299, 307, 313], "than": [1, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 24, 26, 27, 28, 30, 33, 34, 35, 36, 40, 42, 43, 44, 45, 47, 48, 50, 51, 52, 54, 56, 57, 59, 60, 61, 62, 65, 67, 68, 69, 71, 73, 74, 75, 76, 80, 82, 83, 84, 85, 87, 88, 90, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 111, 113, 114, 115, 116, 117, 118, 119, 121, 123, 125, 127, 129, 130, 132, 133, 134, 135, 136, 138, 139, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 182, 183, 184, 185, 186, 187, 192, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 210, 215, 219, 223, 224, 225, 230, 232, 233, 234, 235, 236, 237, 238, 240, 242, 244, 246, 248, 249, 251, 252, 253, 254, 255, 257, 258, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 282, 283, 286, 287, 288, 290, 293, 294, 296, 297, 298, 299, 301, 303, 304, 305, 307, 308, 311, 312, 313, 314, 315, 316], "usual": [7, 12, 17, 18, 20, 24, 26, 35, 37, 39, 47, 48, 55, 60, 64, 65, 67, 75, 77, 79, 87, 88, 93, 95, 100, 106, 109, 110, 113, 118, 127, 130, 132, 136, 137, 143, 147, 148, 151, 152, 153, 156, 157, 161, 164, 165, 168, 170, 172, 176, 181, 182, 183, 195, 197, 202, 210, 219, 224, 228, 229, 232, 237, 246, 249, 251, 255, 256, 262, 264, 266, 269, 270, 271, 274, 275, 279, 286, 287, 296, 298, 301, 305, 310, 311, 312], "while": [3, 5, 6, 9, 10, 11, 13, 14, 15, 18, 20, 24, 25, 26, 28, 30, 33, 34, 35, 36, 37, 39, 41, 44, 47, 48, 51, 53, 54, 57, 58, 59, 61, 62, 65, 66, 67, 69, 71, 73, 74, 75, 76, 77, 79, 81, 85, 87, 88, 90, 93, 95, 96, 97, 98, 100, 101, 102, 103, 106, 107, 109, 112, 114, 116, 117, 119, 120, 121, 125, 126, 128, 129, 130, 131, 133, 134, 136, 137, 139, 141, 143, 146, 149, 151, 152, 153, 154, 157, 160, 161, 162, 165, 167, 169, 170, 171, 174, 175, 176, 178, 182, 183, 184, 186, 192, 195, 197, 198, 199, 200, 202, 203, 204, 205, 224, 225, 228, 231, 233, 235, 236, 238, 239, 240, 244, 245, 247, 248, 249, 250, 252, 253, 255, 256, 258, 260, 262, 265, 267, 269, 270, 271, 272, 275, 278, 279, 280, 287, 289, 291, 292, 293, 297, 298, 299, 303, 304, 305, 307, 311, 312, 313, 314, 315], "medit": [18, 291, 292], "notic": [1, 4, 6, 9, 11, 14, 18, 24, 25, 26, 27, 28, 39, 47, 48, 50, 52, 54, 57, 59, 62, 65, 66, 67, 68, 69, 79, 87, 88, 91, 92, 95, 96, 100, 105, 115, 116, 117, 118, 119, 123, 124, 129, 130, 132, 134, 136, 138, 144, 147, 148, 150, 156, 157, 161, 166, 168, 171, 177, 178, 180, 182, 183, 193, 194, 197, 198, 202, 223, 234, 235, 236, 237, 238, 242, 243, 248, 249, 251, 253, 255, 257, 263, 264, 266, 268, 274, 275, 279, 288, 292, 294, 296, 299, 306, 307, 309, 311, 312], "how": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 26, 27, 28, 30, 31, 34, 35, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 146, 147, 149, 150, 152, 153, 155, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 180, 183, 186, 187, 188, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 210, 214, 215, 216, 218, 219, 223, 224, 225, 227, 228, 229, 232, 233, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 256, 257, 258, 259, 262, 263, 264, 267, 268, 270, 271, 273, 274, 277, 278, 279, 283, 286, 287, 288, 289, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 309, 312, 315, 316, 317], "mani": [0, 1, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 30, 33, 34, 37, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 73, 74, 77, 79, 81, 82, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 113, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 134, 135, 137, 138, 139, 141, 142, 143, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 160, 161, 162, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 182, 184, 186, 187, 188, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 211, 221, 224, 225, 227, 229, 232, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 252, 253, 254, 256, 257, 258, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 274, 275, 276, 278, 279, 280, 282, 286, 287, 288, 292, 296, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 313, 315, 316, 317], "mental": [18, 43, 44, 83, 85, 124, 130, 210, 243, 249, 293], "event": [1, 15, 18, 20, 26, 39, 44, 50, 67, 79, 85, 94, 101, 104, 123, 196, 203, 206, 242], "even": [0, 1, 3, 4, 6, 7, 8, 9, 11, 17, 18, 19, 20, 24, 25, 26, 27, 28, 30, 33, 34, 37, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 67, 68, 69, 71, 73, 74, 77, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 108, 114, 116, 118, 120, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 141, 143, 144, 146, 147, 148, 152, 153, 155, 156, 157, 158, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 223, 224, 227, 233, 235, 237, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 260, 262, 263, 264, 265, 266, 270, 271, 273, 274, 275, 276, 278, 279, 280, 283, 286, 287, 289, 291, 294, 296, 297, 298, 299, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316], "physic": [16, 18, 19, 20, 63, 92, 162, 171, 194, 280, 293, 299], "ones": [3, 4, 7, 16, 18, 20, 28, 39, 51, 52, 55, 63, 69, 79, 104, 109, 113, 115, 120, 127, 133, 134, 142, 151, 152, 153, 157, 160, 169, 175, 177, 179, 183, 206, 214, 215, 216, 228, 232, 234, 239, 246, 252, 253, 261, 269, 270, 271, 275, 278, 297, 304, 306, 308, 312], "like": [0, 1, 3, 4, 5, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 30, 33, 34, 35, 37, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 101, 103, 104, 105, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 182, 183, 186, 187, 188, 191, 192, 193, 194, 195, 198, 199, 200, 201, 203, 205, 206, 207, 210, 211, 212, 214, 215, 216, 220, 223, 225, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 306, 307, 309, 311, 312, 314, 315, 316, 317], "sip": 18, "my": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 90, 92, 93, 94, 95, 96, 97, 100, 102, 103, 107, 109, 110, 111, 113, 114, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 134, 138, 142, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 164, 165, 167, 170, 171, 174, 179, 180, 181, 182, 183, 184, 187, 188, 192, 194, 195, 196, 197, 198, 199, 202, 204, 205, 210, 212, 218, 221, 225, 228, 229, 230, 232, 233, 237, 238, 239, 240, 242, 243, 244, 247, 248, 249, 251, 253, 257, 261, 264, 266, 267, 268, 269, 271, 272, 273, 275, 276, 286, 287, 289, 290, 291, 292, 293, 294, 298, 299, 303, 308, 309, 310, 311, 313, 314, 316, 317], "coffe": [18, 30, 71, 137, 161, 186, 256, 279, 294, 315], "were": [1, 3, 4, 5, 6, 9, 10, 13, 18, 20, 24, 25, 26, 28, 30, 34, 36, 39, 43, 44, 45, 47, 50, 51, 52, 53, 54, 57, 58, 61, 65, 66, 67, 69, 71, 74, 76, 79, 83, 84, 85, 87, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 106, 109, 110, 111, 116, 118, 119, 123, 126, 127, 129, 130, 131, 133, 134, 136, 137, 138, 139, 141, 142, 148, 152, 153, 154, 156, 157, 160, 162, 164, 165, 168, 170, 171, 175, 176, 180, 182, 184, 187, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 211, 218, 224, 228, 229, 230, 235, 237, 238, 242, 245, 246, 248, 249, 250, 252, 253, 255, 256, 257, 258, 260, 261, 266, 270, 271, 272, 274, 275, 278, 280, 286, 287, 290, 292, 294, 296, 298, 299, 304, 305, 309, 311, 313, 316], "happen": [1, 4, 11, 12, 18, 20, 24, 25, 30, 39, 40, 44, 46, 47, 50, 52, 59, 60, 65, 66, 71, 79, 80, 85, 86, 87, 96, 97, 105, 107, 109, 110, 113, 117, 129, 130, 131, 133, 137, 141, 160, 161, 172, 174, 175, 176, 182, 184, 186, 198, 199, 212, 223, 225, 228, 229, 232, 236, 248, 249, 250, 252, 256, 260, 278, 279, 283, 301, 303, 304, 305, 311, 313, 315], "larg": [2, 3, 6, 8, 9, 13, 15, 18, 19, 20, 39, 40, 45, 48, 51, 54, 56, 57, 61, 79, 80, 84, 88, 93, 97, 99, 109, 110, 113, 125, 130, 136, 138, 140, 141, 144, 146, 150, 156, 160, 162, 164, 169, 176, 177, 178, 181, 184, 195, 199, 201, 207, 228, 229, 232, 244, 249, 255, 257, 259, 260, 263, 265, 268, 274, 278, 280, 286, 297, 305, 306, 307, 310, 313], "beyond": [9, 11, 13, 15, 16, 18, 19, 22, 26, 39, 44, 45, 46, 57, 59, 61, 63, 67, 79, 84, 85, 86, 92, 93, 95, 100, 101, 103, 123, 128, 150, 151, 153, 157, 160, 161, 170, 174, 176, 184, 194, 195, 197, 202, 203, 205, 242, 247, 268, 269, 271, 275, 278, 279, 298, 303, 305, 313], "consciou": [18, 19, 20, 22], "control": [1, 4, 7, 18, 28, 42, 44, 50, 52, 55, 69, 82, 85, 101, 102, 103, 106, 113, 117, 129, 130, 133, 135, 136, 139, 144, 148, 152, 161, 167, 169, 170, 177, 179, 184, 186, 203, 204, 205, 224, 232, 236, 248, 249, 252, 254, 255, 258, 263, 266, 270, 279, 289, 297, 298, 306, 308, 313, 315], "hi": [3, 9, 15, 18, 19, 20, 30, 34, 36, 44, 45, 51, 57, 71, 74, 76, 84, 85, 92, 103, 107, 136, 137, 142, 149, 150, 153, 155, 158, 167, 168, 171, 184, 194, 205, 219, 225, 255, 256, 261, 267, 268, 271, 273, 276, 289, 296, 299, 313], "remind": [1, 18, 20, 44, 46, 50, 85, 86, 91, 93, 113, 116, 156, 174, 186, 193, 195, 232, 235, 274, 293, 303, 315], "me": [0, 1, 3, 4, 6, 8, 9, 12, 13, 16, 17, 18, 19, 20, 24, 25, 30, 33, 34, 35, 36, 37, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 56, 57, 60, 61, 63, 64, 65, 66, 71, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 103, 104, 107, 109, 113, 116, 118, 119, 120, 125, 129, 130, 132, 139, 144, 146, 148, 149, 150, 151, 153, 155, 160, 161, 162, 164, 165, 167, 171, 173, 174, 179, 183, 184, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 211, 219, 221, 225, 228, 232, 235, 237, 238, 239, 244, 248, 249, 251, 258, 263, 265, 266, 267, 268, 269, 271, 273, 278, 279, 280, 286, 287, 289, 291, 292, 293, 294, 299, 302, 303, 308, 312, 313, 314, 315, 316], "buddhist": [18, 44, 85, 107, 225, 291, 292], "concept": [1, 7, 10, 12, 18, 19, 39, 41, 50, 55, 58, 60, 79, 81, 93, 101, 102, 126, 134, 176, 180, 195, 203, 204, 218, 245, 253, 305, 309], "anatta": 18, "unchang": [18, 113, 139, 166, 232, 258, 288], "perman": [18, 27, 68, 164, 171, 286, 299], "can": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 146, 148, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 280, 282, 285, 286, 288, 289, 290, 292, 293, 294, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "found": [3, 4, 7, 8, 9, 10, 11, 14, 16, 17, 18, 20, 26, 30, 34, 35, 39, 41, 44, 45, 46, 47, 51, 52, 55, 56, 57, 58, 59, 62, 63, 64, 67, 71, 74, 75, 79, 81, 84, 85, 86, 87, 91, 93, 94, 95, 96, 100, 101, 110, 113, 117, 119, 121, 123, 124, 126, 127, 128, 129, 130, 131, 133, 136, 139, 141, 143, 144, 148, 150, 151, 155, 156, 157, 160, 161, 165, 168, 170, 171, 179, 183, 184, 186, 193, 195, 196, 197, 198, 202, 203, 210, 211, 229, 232, 236, 238, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 255, 258, 260, 262, 263, 266, 268, 269, 273, 274, 275, 278, 279, 287, 290, 291, 293, 296, 298, 299, 308, 312, 313, 315], "ani": [1, 3, 4, 6, 7, 8, 10, 11, 18, 20, 24, 25, 26, 27, 28, 30, 33, 34, 35, 37, 39, 41, 42, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 79, 81, 82, 84, 86, 87, 88, 90, 91, 93, 94, 98, 99, 100, 101, 102, 103, 104, 106, 111, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 144, 146, 148, 152, 153, 155, 157, 158, 160, 161, 162, 163, 165, 168, 170, 172, 173, 175, 176, 177, 178, 182, 184, 185, 186, 188, 192, 193, 195, 196, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 217, 224, 230, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 263, 265, 266, 270, 271, 273, 275, 276, 278, 279, 280, 282, 285, 287, 291, 293, 294, 296, 298, 301, 302, 304, 305, 306, 307, 311, 313, 315, 317], "phenomenon": [18, 20], "within": [6, 11, 18, 20, 24, 25, 26, 54, 59, 65, 66, 67, 93, 96, 97, 99, 113, 120, 135, 136, 148, 151, 161, 162, 164, 169, 175, 176, 186, 195, 198, 199, 201, 232, 239, 254, 255, 266, 269, 279, 280, 286, 291, 297, 304, 305, 315], "extern": [4, 11, 18, 20, 47, 52, 59, 87, 90, 127, 138, 169, 178, 182, 192, 246, 257, 297, 307, 311], "don": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 19, 20, 24, 25, 26, 27, 28, 30, 33, 34, 35, 37, 39, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 141, 143, 144, 147, 151, 153, 155, 156, 157, 159, 160, 161, 162, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 216, 219, 223, 224, 225, 228, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 260, 262, 263, 264, 269, 271, 273, 274, 275, 277, 278, 279, 280, 286, 287, 289, 291, 292, 294, 295, 296, 297, 299, 301, 302, 303, 304, 306, 308, 310, 311, 312, 314, 315, 316, 317], "t": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 30, 34, 35, 37, 39, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 211, 212, 214, 215, 216, 218, 219, 223, 224, 225, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 286, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317], "suggest": [7, 9, 10, 11, 14, 18, 20, 25, 35, 41, 44, 47, 55, 57, 58, 59, 62, 66, 75, 81, 85, 87, 90, 91, 95, 100, 103, 104, 117, 123, 126, 134, 138, 141, 150, 151, 165, 175, 182, 192, 193, 197, 202, 205, 206, 236, 242, 245, 253, 257, 260, 268, 269, 287, 291, 292, 304, 311], "thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 27, 28, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 283, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "seriou": [3, 4, 9, 11, 18, 51, 52, 57, 59, 91, 94, 104, 107, 120, 123, 133, 182, 193, 196, 206, 225, 239, 242, 252, 311], "influenc": [11, 18, 19, 20, 59, 138, 176, 257, 282, 305], "wai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 18, 20, 23, 24, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 183, 184, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 210, 211, 212, 214, 215, 216, 220, 223, 224, 228, 229, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 264, 265, 266, 268, 269, 271, 272, 273, 274, 275, 276, 278, 279, 280, 286, 287, 288, 289, 290, 291, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 310, 312, 313, 314, 315], "relationship": [18, 20, 26, 34, 36, 48, 67, 74, 76, 88, 99, 122, 130, 160, 201, 241, 249, 278], "between": [2, 3, 4, 6, 7, 9, 14, 18, 20, 24, 26, 27, 28, 30, 33, 34, 39, 41, 42, 44, 47, 48, 51, 52, 54, 55, 57, 62, 65, 67, 68, 69, 71, 73, 74, 79, 81, 82, 85, 87, 88, 91, 92, 94, 95, 100, 101, 102, 103, 105, 106, 107, 113, 115, 116, 117, 118, 119, 120, 122, 127, 131, 133, 134, 136, 137, 138, 141, 146, 149, 152, 156, 157, 158, 160, 162, 164, 167, 168, 169, 170, 172, 184, 186, 187, 193, 194, 196, 197, 202, 203, 204, 205, 223, 224, 225, 232, 234, 235, 236, 237, 238, 239, 241, 246, 250, 252, 253, 255, 256, 257, 260, 267, 270, 274, 275, 276, 278, 280, 282, 286, 289, 296, 297, 298, 301, 313, 315, 316], "two": [1, 2, 3, 4, 5, 6, 8, 9, 10, 13, 14, 15, 17, 18, 24, 26, 27, 28, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 61, 62, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 191, 192, 194, 195, 197, 198, 200, 201, 202, 203, 204, 206, 210, 211, 212, 216, 219, 220, 223, 224, 225, 228, 229, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 286, 287, 288, 289, 291, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315], "all": [0, 1, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 215, 216, 219, 220, 223, 224, 225, 228, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 245, 246, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 286, 288, 289, 290, 291, 293, 294, 296, 297, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317], "explicit": [18, 20, 39, 44, 79, 85, 96, 100, 130, 132, 138, 143, 170, 171, 172, 184, 198, 202, 249, 251, 257, 262, 298, 299, 301, 313], "howev": [0, 1, 3, 4, 5, 6, 7, 9, 11, 13, 14, 18, 20, 24, 25, 26, 27, 28, 30, 33, 34, 35, 37, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 62, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 79, 81, 83, 84, 85, 86, 87, 88, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 144, 146, 147, 148, 151, 152, 153, 156, 157, 158, 160, 161, 162, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 181, 182, 184, 185, 186, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 214, 218, 223, 224, 225, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 263, 264, 265, 266, 269, 270, 271, 274, 275, 276, 278, 279, 280, 282, 286, 287, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 310, 311, 313, 315], "doe": [3, 4, 7, 9, 10, 11, 12, 18, 20, 24, 25, 26, 27, 30, 33, 34, 35, 39, 41, 42, 46, 47, 48, 51, 52, 55, 57, 58, 59, 60, 65, 66, 67, 68, 71, 73, 74, 75, 79, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 104, 105, 110, 113, 114, 118, 120, 121, 123, 126, 127, 130, 132, 133, 137, 138, 139, 143, 144, 146, 151, 156, 157, 160, 161, 164, 165, 166, 167, 168, 170, 172, 174, 175, 176, 177, 178, 182, 183, 184, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 206, 212, 217, 223, 229, 232, 233, 237, 239, 240, 242, 245, 246, 249, 251, 252, 256, 257, 258, 262, 263, 265, 269, 274, 275, 278, 279, 283, 286, 287, 288, 289, 291, 293, 296, 298, 301, 303, 304, 305, 306, 307, 311, 312, 313, 315, 317], "strike": [18, 30, 34, 71, 74, 123, 141, 143, 150, 164, 168, 242, 260, 262, 268, 286, 296], "thei": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 18, 20, 22, 24, 25, 26, 28, 30, 33, 34, 35, 37, 39, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 67, 69, 71, 73, 74, 75, 77, 79, 83, 84, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 152, 154, 155, 156, 157, 160, 161, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 181, 182, 183, 186, 187, 188, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 205, 206, 212, 218, 219, 221, 223, 224, 225, 228, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 270, 272, 273, 274, 275, 278, 279, 288, 289, 290, 291, 292, 296, 297, 298, 299, 301, 303, 304, 305, 306, 310, 311, 312, 314, 315, 316, 317], "both": [1, 3, 4, 6, 7, 9, 10, 11, 14, 15, 17, 18, 20, 24, 25, 26, 27, 28, 30, 31, 33, 34, 37, 39, 41, 43, 44, 45, 47, 50, 51, 52, 54, 55, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 79, 81, 83, 84, 85, 87, 91, 92, 93, 94, 95, 96, 98, 100, 101, 103, 105, 106, 110, 112, 113, 114, 115, 116, 117, 118, 120, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 144, 146, 147, 148, 151, 152, 154, 155, 156, 157, 160, 161, 162, 164, 165, 166, 169, 170, 171, 172, 174, 175, 176, 177, 178, 181, 182, 184, 186, 188, 193, 194, 195, 196, 197, 198, 200, 202, 203, 205, 212, 216, 223, 224, 229, 231, 232, 233, 234, 235, 236, 237, 239, 245, 246, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 269, 270, 272, 273, 274, 275, 278, 279, 280, 282, 286, 287, 288, 291, 294, 297, 298, 299, 301, 303, 304, 305, 306, 307, 310, 311, 313, 315, 317], "share": [0, 3, 4, 9, 11, 15, 17, 18, 20, 25, 26, 30, 34, 35, 37, 39, 45, 46, 47, 49, 51, 52, 57, 59, 64, 66, 67, 71, 74, 75, 77, 79, 84, 86, 87, 90, 91, 92, 93, 94, 97, 100, 101, 103, 108, 110, 114, 116, 120, 123, 124, 130, 132, 138, 144, 150, 153, 160, 161, 162, 170, 171, 173, 176, 179, 180, 184, 186, 188, 192, 193, 194, 195, 196, 199, 202, 203, 205, 227, 229, 233, 235, 239, 242, 243, 249, 251, 257, 263, 268, 271, 278, 279, 280, 282, 294, 298, 299, 302, 305, 308, 309, 313, 315, 317], "view": [1, 3, 4, 13, 18, 20, 24, 26, 28, 30, 35, 37, 39, 50, 51, 52, 61, 65, 67, 69, 71, 75, 77, 79, 90, 92, 95, 98, 102, 107, 110, 113, 116, 120, 123, 127, 137, 142, 143, 144, 146, 147, 151, 153, 160, 164, 170, 171, 174, 177, 178, 182, 192, 194, 197, 200, 204, 210, 225, 229, 232, 235, 239, 242, 246, 256, 261, 262, 263, 264, 265, 269, 271, 278, 286, 291, 298, 299, 303, 306, 307, 311], "individu": [1, 5, 9, 18, 20, 40, 41, 48, 50, 53, 57, 80, 81, 88, 107, 108, 117, 120, 122, 131, 146, 148, 156, 157, 158, 182, 187, 225, 227, 236, 239, 241, 250, 265, 266, 274, 275, 276, 283, 311, 316], "ident": [7, 9, 10, 18, 33, 39, 55, 57, 58, 73, 79, 90, 93, 101, 123, 126, 127, 129, 130, 131, 146, 148, 192, 195, 203, 242, 245, 246, 248, 249, 250, 265, 266], "some": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 25, 27, 28, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 68, 69, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 210, 212, 214, 215, 219, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316], "respect": [1, 3, 6, 7, 9, 18, 19, 20, 24, 30, 34, 46, 47, 48, 50, 51, 54, 55, 57, 65, 71, 74, 86, 87, 88, 91, 93, 94, 95, 101, 106, 117, 125, 127, 131, 134, 138, 139, 143, 152, 157, 160, 162, 166, 171, 177, 193, 195, 196, 197, 203, 224, 236, 244, 246, 250, 253, 257, 258, 262, 270, 275, 278, 280, 288, 299, 306], "illusori": [18, 20], "There": [1, 4, 5, 7, 8, 9, 10, 11, 16, 18, 19, 20, 24, 26, 27, 28, 30, 34, 43, 44, 45, 47, 48, 50, 52, 53, 55, 56, 57, 58, 59, 63, 65, 67, 68, 69, 71, 74, 83, 84, 85, 87, 88, 90, 92, 93, 94, 95, 96, 97, 100, 102, 103, 106, 109, 110, 111, 116, 118, 119, 120, 121, 123, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 142, 143, 144, 146, 147, 151, 152, 153, 154, 158, 162, 168, 170, 171, 172, 174, 175, 176, 177, 178, 181, 182, 184, 186, 188, 192, 194, 195, 196, 197, 198, 199, 202, 204, 205, 216, 224, 228, 229, 230, 235, 237, 238, 239, 240, 242, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 261, 262, 263, 264, 265, 269, 270, 271, 272, 276, 280, 282, 293, 294, 296, 298, 299, 301, 303, 304, 305, 306, 307, 310, 311, 313, 315, 317], "aspect": [10, 12, 18, 20, 22, 45, 58, 60, 84, 102, 126, 128, 133, 154, 155, 175, 184, 186, 204, 210, 211, 245, 247, 252, 272, 273, 304, 313, 315], "love": [0, 5, 9, 10, 15, 18, 24, 25, 30, 42, 43, 44, 45, 49, 53, 57, 58, 65, 66, 71, 82, 83, 84, 85, 90, 93, 94, 97, 101, 102, 105, 106, 109, 120, 126, 138, 139, 147, 149, 152, 153, 155, 157, 170, 171, 183, 186, 192, 195, 196, 199, 203, 204, 223, 224, 228, 239, 245, 257, 258, 264, 267, 270, 271, 273, 275, 298, 299, 312, 315], "other": [1, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 22, 25, 27, 28, 33, 34, 36, 37, 39, 42, 43, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 66, 68, 69, 73, 74, 76, 77, 79, 82, 83, 84, 86, 87, 88, 90, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 178, 181, 182, 183, 186, 187, 188, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 211, 212, 214, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 232, 233, 234, 235, 236, 237, 238, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 278, 280, 281, 282, 286, 287, 288, 289, 290, 292, 293, 294, 296, 297, 298, 299, 301, 303, 304, 305, 307, 310, 311, 312, 314, 315, 316, 317], "hand": [1, 2, 3, 6, 7, 9, 10, 18, 20, 24, 30, 33, 34, 39, 43, 44, 45, 50, 51, 54, 55, 57, 58, 65, 71, 73, 74, 79, 83, 84, 85, 92, 93, 94, 95, 96, 97, 100, 101, 102, 105, 106, 107, 113, 116, 119, 120, 123, 126, 129, 133, 134, 135, 136, 138, 141, 142, 143, 147, 151, 152, 153, 154, 157, 158, 160, 161, 162, 164, 165, 166, 169, 170, 171, 186, 194, 195, 196, 197, 198, 199, 202, 203, 204, 210, 212, 218, 219, 221, 223, 224, 225, 232, 235, 238, 239, 242, 245, 248, 252, 253, 254, 255, 257, 260, 261, 264, 269, 270, 271, 272, 275, 276, 278, 279, 280, 286, 287, 288, 297, 298, 299, 315], "fair": [1, 3, 6, 9, 11, 18, 24, 37, 44, 45, 50, 51, 54, 57, 59, 65, 77, 84, 85, 92, 94, 95, 100, 103, 118, 120, 121, 123, 129, 142, 160, 165, 169, 170, 171, 184, 188, 194, 196, 197, 202, 205, 211, 237, 239, 240, 242, 248, 261, 278, 287, 297, 298, 299, 313, 317], "sai": [1, 3, 4, 5, 7, 9, 11, 12, 18, 20, 24, 27, 28, 34, 39, 42, 43, 46, 47, 50, 51, 52, 53, 55, 57, 59, 60, 65, 68, 69, 74, 79, 82, 83, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 103, 104, 105, 113, 117, 118, 119, 120, 129, 130, 131, 133, 136, 137, 142, 143, 146, 147, 148, 152, 153, 157, 161, 162, 168, 170, 171, 172, 175, 176, 178, 181, 182, 184, 187, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 214, 215, 219, 223, 232, 236, 237, 238, 239, 248, 249, 250, 252, 255, 256, 261, 262, 264, 265, 266, 270, 271, 275, 279, 280, 283, 293, 294, 296, 298, 299, 301, 304, 305, 307, 310, 311, 313, 314, 316], "have": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 214, 215, 218, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "ag": [18, 20, 28, 69, 100, 110, 136, 158, 164, 168, 176, 202, 229, 255, 276, 286, 296, 305], "well": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 34, 35, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 116, 117, 118, 120, 121, 122, 126, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 146, 148, 149, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 170, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 199, 202, 203, 204, 205, 206, 210, 212, 219, 223, 224, 227, 228, 229, 232, 235, 236, 237, 239, 240, 241, 245, 249, 250, 251, 252, 253, 254, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 286, 287, 288, 289, 291, 292, 293, 294, 296, 298, 301, 302, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 317], "especi": [0, 1, 3, 4, 5, 6, 9, 11, 15, 18, 20, 25, 37, 39, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 66, 77, 79, 82, 85, 86, 87, 88, 90, 93, 99, 100, 101, 102, 103, 104, 106, 118, 120, 123, 129, 130, 131, 133, 134, 136, 137, 143, 144, 148, 150, 153, 155, 156, 157, 161, 162, 164, 170, 171, 175, 177, 179, 184, 192, 195, 201, 202, 203, 204, 205, 206, 207, 210, 224, 237, 239, 242, 248, 249, 250, 252, 253, 255, 256, 262, 263, 266, 268, 271, 273, 274, 275, 279, 280, 282, 286, 294, 298, 299, 304, 306, 308, 313], "those": [0, 1, 4, 5, 7, 9, 10, 11, 17, 18, 20, 24, 25, 26, 27, 28, 30, 33, 34, 36, 37, 39, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 55, 57, 58, 59, 64, 65, 66, 67, 68, 69, 71, 73, 74, 76, 77, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 100, 101, 102, 103, 105, 107, 108, 109, 110, 113, 116, 117, 118, 119, 120, 126, 127, 128, 129, 130, 132, 134, 136, 137, 138, 141, 143, 146, 147, 148, 151, 152, 153, 155, 157, 160, 161, 162, 164, 167, 168, 170, 171, 172, 175, 176, 179, 181, 182, 183, 186, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 223, 225, 227, 228, 229, 232, 235, 236, 237, 238, 239, 245, 246, 247, 248, 249, 251, 253, 255, 256, 257, 260, 262, 264, 265, 266, 269, 270, 271, 273, 275, 278, 279, 280, 286, 289, 290, 291, 294, 296, 298, 299, 301, 304, 305, 308, 310, 311, 312, 315], "around": [0, 3, 5, 6, 9, 11, 15, 18, 20, 25, 30, 34, 36, 39, 44, 45, 49, 51, 53, 54, 57, 59, 66, 71, 74, 76, 79, 84, 85, 90, 91, 93, 94, 96, 100, 101, 103, 105, 106, 113, 117, 120, 123, 124, 125, 129, 130, 138, 146, 148, 153, 160, 161, 162, 164, 167, 171, 184, 192, 193, 195, 196, 198, 202, 203, 205, 209, 210, 212, 223, 224, 232, 236, 239, 242, 243, 244, 248, 249, 257, 265, 266, 271, 278, 279, 280, 286, 289, 291, 292, 299, 313], "ai": [18, 19, 20, 25, 44, 66, 85, 117, 236], "comput": [6, 10, 11, 18, 25, 26, 37, 42, 43, 44, 47, 54, 58, 59, 66, 67, 77, 82, 83, 85, 87, 92, 94, 99, 100, 102, 105, 115, 117, 119, 123, 126, 130, 138, 152, 156, 157, 160, 165, 170, 171, 177, 182, 184, 188, 194, 196, 201, 202, 204, 211, 223, 234, 236, 238, 242, 245, 249, 257, 270, 274, 275, 278, 287, 292, 293, 294, 298, 299, 306, 311, 313, 314, 317], "gener": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 13, 15, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 34, 39, 43, 44, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 61, 65, 66, 67, 68, 69, 70, 71, 74, 79, 83, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 102, 105, 106, 107, 110, 115, 117, 118, 119, 121, 122, 123, 126, 128, 129, 131, 133, 134, 135, 137, 138, 142, 143, 144, 146, 148, 149, 150, 151, 152, 155, 157, 161, 165, 169, 170, 171, 172, 174, 175, 176, 177, 179, 181, 182, 184, 186, 192, 193, 194, 196, 197, 198, 199, 200, 204, 210, 218, 219, 223, 224, 225, 229, 234, 236, 237, 238, 240, 241, 242, 245, 247, 248, 250, 252, 253, 254, 256, 257, 261, 262, 263, 265, 266, 267, 268, 269, 270, 273, 275, 279, 287, 297, 298, 299, 301, 303, 304, 305, 306, 308, 310, 311, 313, 315], "No": [2, 7, 8, 9, 18, 19, 20, 27, 36, 39, 45, 46, 55, 56, 57, 68, 76, 79, 84, 86, 93, 100, 101, 127, 128, 129, 133, 141, 157, 164, 171, 175, 195, 202, 203, 210, 246, 247, 248, 252, 260, 275, 286, 292, 294, 299, 304, 314], "one": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 24, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 210, 212, 215, 216, 219, 220, 223, 224, 225, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 286, 287, 288, 289, 291, 292, 293, 294, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317], "mention": [0, 1, 3, 4, 5, 9, 11, 12, 13, 18, 20, 24, 26, 34, 35, 41, 44, 45, 46, 47, 49, 50, 51, 52, 53, 57, 59, 60, 61, 65, 67, 74, 75, 81, 84, 85, 86, 87, 93, 95, 98, 103, 107, 120, 124, 129, 130, 138, 143, 146, 148, 150, 152, 157, 160, 161, 162, 164, 170, 171, 174, 177, 178, 183, 195, 197, 200, 205, 210, 225, 239, 243, 248, 249, 257, 262, 265, 266, 268, 270, 275, 278, 279, 280, 286, 291, 298, 299, 303, 306, 307, 312], "wordstar": 18, "exampl": [2, 3, 4, 5, 6, 8, 9, 10, 11, 18, 20, 24, 25, 26, 27, 28, 30, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 51, 52, 53, 54, 56, 57, 58, 59, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 126, 127, 130, 131, 132, 133, 136, 137, 138, 139, 141, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 160, 162, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 186, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 210, 217, 223, 224, 225, 229, 230, 233, 234, 236, 237, 238, 239, 241, 242, 243, 245, 246, 249, 250, 252, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 278, 280, 282, 286, 287, 288, 289, 296, 298, 299, 303, 304, 305, 306, 307, 310, 311, 312, 313, 315], "certainli": [4, 11, 18, 30, 34, 44, 47, 52, 59, 71, 74, 85, 87, 119, 129, 133, 138, 148, 156, 157, 160, 165, 168, 171, 172, 173, 175, 216, 238, 248, 252, 257, 266, 274, 275, 278, 287, 296, 299, 301, 302, 304, 314], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 26, 27, 28, 30, 31, 33, 34, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 229, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 296, 297, 298, 301, 303, 304, 305, 306, 308, 309, 310, 312, 313, 315, 316], "longer": [3, 4, 8, 12, 17, 18, 19, 20, 27, 28, 51, 52, 56, 60, 64, 68, 69, 93, 98, 118, 120, 129, 136, 139, 146, 148, 154, 161, 164, 177, 179, 184, 195, 200, 237, 239, 248, 255, 258, 265, 266, 272, 279, 286, 306, 308, 313], "think": [1, 5, 6, 9, 13, 15, 17, 18, 20, 22, 24, 25, 26, 30, 31, 33, 34, 35, 39, 44, 46, 47, 50, 53, 54, 57, 61, 64, 65, 66, 67, 71, 72, 73, 74, 75, 79, 85, 86, 87, 89, 93, 94, 95, 100, 101, 102, 104, 107, 111, 112, 113, 114, 116, 118, 119, 120, 121, 123, 127, 129, 131, 135, 136, 138, 139, 141, 142, 144, 146, 149, 150, 151, 155, 160, 162, 164, 165, 167, 168, 174, 175, 176, 182, 184, 186, 187, 188, 191, 195, 196, 197, 202, 203, 204, 206, 212, 214, 215, 225, 230, 231, 232, 233, 235, 237, 238, 239, 240, 242, 246, 248, 250, 254, 255, 257, 258, 260, 261, 263, 265, 267, 268, 269, 273, 278, 280, 286, 287, 289, 290, 292, 294, 296, 303, 304, 305, 311, 313, 315, 316, 317], "applic": [4, 8, 9, 10, 17, 18, 26, 39, 52, 56, 57, 58, 64, 67, 79, 92, 93, 95, 97, 102, 117, 122, 124, 126, 127, 129, 130, 133, 138, 151, 154, 155, 157, 162, 170, 171, 176, 177, 179, 184, 186, 194, 195, 197, 199, 204, 236, 241, 243, 245, 246, 248, 249, 252, 257, 269, 272, 273, 275, 280, 298, 299, 305, 306, 308, 313, 315], "virtual": [2, 5, 13, 18, 24, 28, 37, 45, 47, 53, 61, 65, 69, 77, 84, 87, 91, 95, 96, 100, 101, 102, 117, 121, 123, 128, 149, 150, 156, 157, 168, 169, 170, 178, 181, 193, 197, 198, 202, 203, 204, 210, 236, 240, 242, 247, 267, 268, 274, 275, 296, 297, 298, 307, 310], "machin": [1, 2, 4, 6, 9, 11, 18, 19, 24, 25, 30, 34, 37, 44, 45, 47, 50, 52, 54, 57, 59, 65, 66, 71, 74, 77, 82, 84, 85, 87, 90, 91, 94, 95, 97, 99, 100, 101, 102, 103, 112, 116, 117, 121, 123, 128, 130, 132, 148, 151, 154, 156, 157, 160, 162, 164, 168, 178, 180, 181, 182, 184, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 231, 235, 236, 240, 242, 247, 249, 251, 266, 269, 272, 274, 275, 278, 280, 286, 296, 307, 309, 310, 311, 313], "Of": [3, 7, 9, 10, 11, 12, 18, 20, 24, 26, 30, 33, 34, 37, 39, 40, 42, 44, 51, 55, 57, 58, 59, 60, 65, 67, 71, 73, 74, 77, 79, 80, 82, 85, 91, 92, 93, 95, 96, 97, 100, 101, 107, 114, 117, 119, 120, 121, 123, 125, 126, 127, 129, 131, 134, 148, 151, 153, 156, 157, 161, 162, 164, 170, 171, 178, 179, 186, 188, 193, 194, 195, 197, 198, 199, 202, 203, 209, 225, 233, 236, 238, 239, 240, 242, 244, 245, 246, 248, 250, 253, 266, 269, 271, 274, 275, 279, 280, 286, 294, 298, 299, 307, 308, 315, 317], "cours": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 18, 20, 21, 23, 25, 26, 30, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 47, 50, 51, 52, 53, 55, 56, 58, 59, 60, 66, 67, 71, 73, 74, 75, 76, 77, 79, 80, 82, 83, 85, 87, 90, 91, 92, 93, 95, 96, 97, 98, 100, 102, 103, 107, 108, 113, 114, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 134, 136, 137, 143, 144, 146, 148, 151, 153, 155, 156, 157, 160, 161, 162, 164, 165, 167, 168, 169, 170, 173, 176, 178, 179, 183, 184, 186, 188, 192, 193, 194, 195, 197, 198, 199, 200, 202, 204, 205, 209, 210, 211, 213, 218, 221, 225, 232, 233, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 253, 255, 256, 262, 263, 265, 266, 269, 271, 273, 274, 275, 278, 279, 280, 286, 287, 289, 291, 294, 296, 297, 298, 302, 305, 307, 308, 312, 313, 315, 317], "anyth": [3, 7, 9, 18, 19, 25, 27, 28, 34, 37, 39, 43, 44, 47, 51, 55, 57, 66, 68, 69, 74, 77, 79, 83, 85, 87, 90, 91, 92, 93, 95, 104, 110, 118, 120, 121, 123, 130, 133, 136, 137, 139, 157, 160, 161, 168, 169, 173, 174, 175, 186, 192, 193, 194, 195, 197, 206, 210, 211, 212, 216, 229, 237, 239, 240, 242, 249, 252, 255, 256, 258, 275, 278, 279, 290, 294, 296, 297, 302, 303, 304, 315], "involv": [1, 9, 11, 18, 20, 24, 26, 30, 37, 39, 40, 50, 57, 59, 65, 67, 71, 77, 79, 80, 91, 94, 95, 100, 101, 104, 117, 120, 123, 127, 128, 133, 136, 144, 146, 151, 152, 153, 155, 160, 161, 174, 184, 193, 196, 197, 202, 203, 206, 210, 236, 239, 242, 246, 247, 252, 255, 263, 265, 269, 270, 271, 273, 278, 279, 303, 313], "get": [1, 2, 5, 6, 7, 8, 9, 10, 12, 13, 14, 18, 20, 22, 25, 26, 28, 30, 31, 33, 34, 37, 41, 42, 43, 44, 45, 46, 47, 48, 50, 53, 54, 55, 56, 57, 58, 60, 61, 62, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 113, 114, 119, 120, 121, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 214, 215, 216, 220, 223, 224, 228, 232, 233, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 285, 286, 287, 288, 289, 291, 292, 294, 296, 297, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317], "date": [1, 2, 4, 9, 14, 18, 27, 35, 50, 52, 57, 62, 68, 75, 95, 97, 99, 101, 108, 111, 116, 127, 129, 131, 136, 147, 164, 175, 177, 197, 199, 201, 203, 227, 230, 235, 246, 248, 250, 255, 264, 286, 304, 306], "quit": [0, 3, 4, 8, 10, 11, 16, 18, 19, 20, 24, 25, 28, 35, 36, 39, 43, 44, 47, 49, 51, 52, 56, 58, 59, 63, 65, 66, 69, 75, 76, 79, 83, 85, 87, 90, 92, 94, 95, 96, 101, 102, 105, 111, 120, 123, 126, 130, 133, 136, 138, 144, 146, 149, 150, 152, 156, 161, 162, 164, 165, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 186, 187, 192, 194, 196, 197, 198, 203, 204, 210, 223, 230, 239, 242, 245, 249, 252, 255, 257, 263, 265, 267, 268, 270, 274, 279, 280, 286, 287, 291, 292, 296, 297, 298, 299, 301, 305, 306, 307, 308, 309, 315, 316], "quickli": [1, 5, 7, 9, 18, 20, 24, 26, 28, 33, 39, 50, 53, 55, 57, 65, 67, 69, 73, 79, 90, 93, 94, 100, 102, 103, 109, 110, 112, 114, 117, 118, 120, 123, 128, 129, 131, 133, 140, 144, 148, 153, 154, 155, 157, 160, 161, 162, 165, 169, 170, 171, 172, 174, 175, 177, 179, 192, 195, 196, 202, 204, 205, 228, 229, 231, 233, 236, 237, 239, 242, 247, 248, 250, 252, 259, 263, 266, 271, 272, 273, 275, 278, 279, 280, 287, 297, 298, 299, 301, 303, 304, 306, 308], "ask": [3, 10, 12, 18, 20, 30, 33, 40, 43, 44, 45, 46, 51, 58, 60, 71, 73, 80, 83, 84, 85, 86, 90, 91, 93, 97, 98, 100, 104, 107, 113, 118, 123, 126, 127, 130, 131, 134, 139, 141, 149, 150, 151, 152, 155, 157, 171, 174, 175, 184, 185, 186, 192, 193, 195, 199, 200, 202, 206, 212, 225, 232, 237, 242, 245, 246, 249, 250, 253, 258, 260, 267, 268, 269, 270, 273, 275, 283, 294, 299, 303, 304, 313, 315], "anyon": [3, 8, 10, 12, 18, 22, 25, 26, 39, 51, 56, 58, 60, 66, 67, 79, 93, 99, 126, 129, 130, 137, 138, 152, 160, 173, 195, 201, 245, 248, 249, 256, 257, 270, 278, 302], "who": [4, 5, 6, 7, 9, 10, 12, 14, 16, 18, 19, 20, 22, 24, 25, 26, 28, 30, 33, 34, 36, 37, 39, 40, 42, 43, 44, 45, 52, 53, 54, 55, 57, 58, 60, 62, 63, 65, 66, 67, 69, 71, 73, 74, 76, 77, 79, 80, 82, 83, 84, 85, 90, 92, 93, 94, 96, 99, 101, 103, 105, 106, 107, 108, 109, 110, 112, 114, 116, 120, 126, 128, 129, 130, 131, 133, 136, 138, 139, 141, 142, 143, 150, 151, 152, 154, 157, 160, 161, 162, 164, 167, 168, 170, 171, 173, 174, 175, 179, 183, 184, 185, 186, 187, 188, 190, 192, 194, 195, 196, 198, 201, 203, 205, 211, 223, 224, 225, 227, 228, 229, 231, 233, 235, 239, 245, 247, 248, 249, 250, 252, 255, 257, 258, 260, 261, 262, 268, 269, 270, 272, 275, 278, 279, 280, 282, 286, 289, 290, 292, 294, 296, 298, 299, 302, 303, 304, 308, 312, 313, 315, 316, 317], "ever": [13, 14, 18, 25, 30, 36, 61, 62, 66, 71, 76, 94, 98, 99, 101, 112, 117, 120, 129, 136, 146, 150, 153, 161, 171, 174, 175, 186, 196, 200, 201, 203, 231, 236, 239, 248, 255, 265, 268, 271, 279, 299, 303, 304, 315], "tri": [1, 3, 6, 18, 20, 35, 39, 50, 51, 54, 75, 79, 92, 95, 96, 100, 109, 113, 121, 130, 132, 134, 137, 148, 160, 165, 174, 175, 177, 194, 197, 198, 202, 210, 211, 228, 232, 240, 249, 251, 253, 256, 266, 278, 287, 303, 304, 306], "sell": [18, 43, 83, 107, 108, 142, 171, 173, 225, 227, 261, 294, 299, 302], "program": [2, 5, 7, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 25, 26, 28, 30, 33, 34, 37, 44, 45, 53, 55, 57, 58, 59, 60, 61, 62, 63, 66, 67, 69, 71, 73, 74, 77, 83, 84, 85, 89, 90, 92, 93, 94, 95, 97, 102, 103, 106, 107, 108, 112, 117, 119, 120, 122, 123, 124, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 152, 155, 158, 160, 161, 162, 164, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 181, 182, 184, 186, 188, 191, 192, 194, 195, 196, 197, 199, 204, 205, 212, 224, 225, 227, 231, 236, 239, 241, 242, 243, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 270, 273, 276, 278, 279, 280, 286, 297, 298, 299, 301, 302, 303, 304, 305, 306, 310, 311, 313, 315], "languag": [2, 3, 5, 6, 7, 9, 10, 12, 17, 18, 19, 20, 22, 24, 25, 27, 30, 33, 39, 43, 44, 45, 46, 51, 53, 54, 55, 57, 58, 60, 64, 65, 66, 68, 71, 73, 79, 83, 84, 85, 86, 90, 92, 93, 95, 102, 104, 110, 113, 116, 117, 119, 121, 122, 123, 124, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 143, 146, 147, 150, 152, 154, 155, 156, 157, 161, 162, 164, 167, 170, 171, 172, 173, 174, 175, 176, 177, 181, 182, 183, 184, 186, 188, 192, 194, 195, 197, 204, 206, 229, 232, 235, 236, 238, 240, 241, 242, 243, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 260, 262, 264, 265, 268, 270, 272, 273, 274, 275, 279, 280, 286, 289, 292, 298, 299, 301, 302, 303, 304, 305, 306, 310, 311, 312, 313, 315], "softwar": [0, 2, 4, 8, 9, 12, 18, 24, 26, 33, 34, 39, 45, 47, 49, 52, 56, 57, 60, 65, 67, 73, 74, 79, 84, 87, 89, 90, 92, 93, 95, 97, 98, 102, 103, 104, 107, 108, 117, 123, 132, 133, 138, 142, 151, 154, 167, 170, 173, 176, 186, 187, 191, 192, 195, 197, 199, 200, 204, 205, 206, 218, 227, 236, 242, 251, 252, 257, 261, 269, 272, 289, 291, 298, 302, 305, 314, 315, 316], "librari": [2, 3, 6, 8, 9, 13, 15, 17, 18, 19, 24, 39, 40, 42, 45, 46, 47, 51, 54, 56, 57, 61, 64, 65, 79, 80, 82, 84, 86, 87, 90, 91, 93, 95, 97, 99, 100, 101, 102, 105, 106, 110, 113, 116, 117, 119, 121, 122, 123, 124, 127, 129, 133, 134, 144, 146, 148, 149, 150, 156, 157, 160, 161, 162, 164, 166, 168, 169, 170, 171, 174, 175, 176, 177, 178, 182, 184, 186, 192, 193, 195, 197, 199, 201, 202, 203, 204, 210, 211, 223, 224, 229, 232, 235, 236, 238, 240, 241, 242, 243, 248, 252, 253, 263, 265, 266, 267, 268, 274, 275, 278, 279, 280, 286, 288, 291, 296, 297, 298, 299, 303, 304, 305, 306, 307, 311, 313, 315], "few": [1, 3, 4, 6, 8, 9, 13, 15, 17, 18, 20, 24, 25, 28, 35, 37, 39, 40, 43, 44, 45, 47, 48, 50, 51, 52, 54, 56, 57, 61, 64, 65, 66, 69, 75, 77, 79, 80, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 105, 107, 108, 111, 113, 116, 117, 118, 120, 121, 123, 124, 129, 130, 134, 136, 138, 141, 146, 148, 149, 153, 155, 156, 157, 158, 160, 161, 162, 164, 167, 168, 169, 170, 171, 174, 175, 176, 177, 179, 180, 182, 183, 184, 186, 188, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 210, 211, 223, 225, 227, 230, 232, 235, 236, 237, 239, 240, 242, 243, 248, 249, 253, 255, 257, 260, 265, 266, 267, 271, 273, 274, 275, 276, 278, 279, 280, 286, 289, 291, 292, 294, 296, 297, 298, 299, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 317], "year": [3, 9, 10, 11, 12, 17, 18, 19, 20, 24, 30, 41, 44, 45, 51, 57, 58, 59, 60, 64, 65, 71, 81, 84, 85, 93, 94, 101, 103, 105, 107, 108, 110, 111, 115, 116, 119, 120, 121, 123, 125, 126, 130, 133, 136, 141, 142, 154, 158, 160, 164, 168, 169, 170, 171, 173, 174, 177, 182, 183, 184, 186, 188, 189, 195, 196, 203, 205, 211, 223, 225, 227, 229, 230, 234, 235, 238, 239, 240, 242, 244, 245, 249, 252, 255, 260, 261, 272, 276, 278, 286, 290, 291, 292, 293, 296, 297, 298, 299, 302, 303, 306, 311, 312, 313, 314, 315, 317, 318], "later": [1, 3, 4, 6, 8, 9, 10, 11, 18, 19, 20, 24, 26, 27, 28, 36, 41, 42, 43, 45, 46, 47, 50, 51, 52, 54, 56, 57, 58, 59, 65, 67, 68, 69, 76, 81, 82, 83, 84, 86, 87, 89, 90, 91, 93, 94, 95, 97, 100, 113, 115, 116, 120, 126, 127, 128, 129, 130, 132, 136, 137, 141, 152, 155, 160, 167, 171, 172, 174, 175, 176, 182, 184, 186, 187, 191, 192, 193, 195, 196, 197, 199, 202, 210, 211, 219, 232, 234, 235, 239, 245, 246, 247, 248, 249, 251, 255, 256, 260, 270, 273, 278, 289, 290, 299, 301, 303, 304, 305, 311, 313, 315, 316], "did": [0, 1, 5, 6, 8, 9, 11, 14, 16, 18, 24, 26, 28, 30, 34, 39, 41, 42, 44, 46, 47, 49, 50, 53, 54, 56, 57, 59, 62, 63, 65, 67, 69, 71, 74, 79, 81, 82, 85, 86, 87, 89, 91, 92, 93, 95, 97, 100, 101, 105, 106, 107, 110, 114, 116, 118, 119, 120, 121, 123, 124, 129, 130, 132, 134, 135, 139, 143, 147, 148, 158, 160, 161, 162, 164, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 182, 191, 193, 194, 195, 197, 199, 202, 203, 207, 210, 211, 212, 216, 219, 220, 223, 224, 225, 229, 233, 235, 237, 238, 239, 240, 242, 243, 248, 249, 251, 253, 254, 258, 262, 264, 266, 276, 278, 279, 280, 286, 294, 296, 297, 298, 299, 302, 303, 304, 305, 307, 308, 311, 314], "prompt": [5, 18, 24, 25, 28, 42, 47, 53, 65, 66, 69, 82, 87, 89, 90, 91, 95, 97, 98, 117, 128, 132, 134, 153, 156, 157, 164, 169, 174, 182, 191, 192, 193, 197, 199, 200, 236, 247, 251, 253, 271, 274, 275, 286, 297, 303, 311], "do": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 191, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 211, 212, 214, 215, 216, 218, 223, 224, 225, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 278, 279, 280, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 315, 317, 318], "still": [1, 3, 5, 8, 9, 10, 11, 13, 14, 18, 20, 24, 25, 28, 30, 33, 34, 35, 37, 39, 44, 47, 50, 51, 53, 56, 57, 58, 59, 61, 62, 65, 66, 69, 71, 73, 74, 75, 77, 79, 85, 87, 90, 91, 92, 93, 94, 95, 96, 97, 100, 102, 103, 106, 108, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 126, 129, 133, 135, 136, 138, 139, 141, 142, 143, 144, 146, 148, 151, 153, 156, 157, 160, 161, 162, 164, 165, 168, 169, 170, 171, 172, 175, 176, 177, 178, 180, 181, 182, 184, 186, 188, 192, 193, 194, 195, 196, 197, 198, 199, 202, 204, 205, 216, 224, 227, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 245, 248, 252, 254, 255, 257, 258, 260, 261, 262, 263, 265, 266, 269, 271, 274, 275, 278, 279, 280, 282, 286, 287, 290, 291, 292, 293, 294, 296, 297, 298, 299, 301, 304, 305, 306, 307, 309, 310, 311, 313, 315, 317], "preliminari": [10, 18, 20, 36, 58, 76, 124, 126, 218, 243, 245], "cursori": [18, 105, 223], "experi": [4, 5, 6, 9, 11, 18, 22, 24, 31, 34, 35, 44, 45, 47, 52, 53, 54, 57, 59, 65, 72, 74, 75, 84, 85, 87, 90, 92, 93, 94, 97, 101, 103, 109, 111, 116, 117, 120, 123, 124, 129, 133, 138, 142, 147, 148, 152, 154, 160, 164, 167, 169, 170, 171, 183, 184, 185, 187, 192, 194, 195, 196, 199, 203, 205, 211, 228, 230, 235, 236, 239, 242, 243, 248, 252, 257, 261, 264, 266, 270, 272, 278, 283, 286, 289, 290, 291, 292, 294, 297, 298, 299, 312, 313, 316], "modern": [11, 18, 20, 21, 44, 59, 85, 100, 117, 121, 130, 136, 150, 152, 155, 188, 202, 236, 240, 249, 255, 268, 270, 273, 317], "knowledg": [9, 10, 18, 19, 20, 34, 37, 57, 58, 74, 77, 102, 113, 115, 126, 128, 130, 136, 152, 154, 155, 158, 171, 204, 218, 232, 234, 245, 247, 249, 255, 270, 272, 273, 276, 299], "ha": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 30, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 156, 157, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 181, 182, 183, 184, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 211, 212, 215, 223, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 274, 275, 278, 279, 280, 286, 287, 289, 291, 294, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 310, 311, 312, 313, 315, 317], "yet": [1, 4, 5, 7, 8, 9, 11, 12, 18, 19, 20, 24, 25, 26, 27, 30, 33, 34, 35, 44, 47, 50, 52, 53, 55, 56, 57, 59, 60, 65, 66, 67, 68, 71, 73, 74, 75, 85, 87, 89, 90, 91, 93, 94, 95, 100, 103, 104, 106, 108, 121, 123, 128, 129, 130, 132, 138, 142, 147, 148, 150, 153, 154, 155, 156, 161, 165, 170, 175, 176, 178, 184, 188, 191, 192, 193, 195, 196, 197, 202, 205, 206, 210, 212, 216, 224, 227, 240, 242, 247, 248, 249, 251, 257, 261, 264, 266, 268, 271, 272, 273, 274, 279, 287, 291, 294, 298, 304, 305, 307, 313, 317], "serious": [2, 3, 18, 30, 44, 51, 71, 85, 93, 102, 125, 184, 186, 195, 204, 244, 290, 292, 294, 313, 315], "model": [0, 1, 10, 18, 19, 24, 27, 30, 34, 40, 47, 49, 50, 58, 65, 68, 71, 74, 80, 87, 94, 99, 101, 106, 119, 126, 127, 133, 162, 169, 171, 175, 176, 186, 196, 201, 203, 224, 238, 245, 246, 252, 280, 297, 299, 304, 305, 315], "human": [9, 11, 18, 19, 30, 33, 34, 44, 57, 59, 71, 73, 74, 85, 100, 127, 133, 156, 202, 246, 252, 274, 282, 290, 314], "though": [0, 1, 3, 4, 5, 9, 11, 13, 17, 18, 19, 20, 24, 25, 26, 30, 33, 34, 37, 39, 43, 44, 47, 49, 50, 51, 52, 53, 57, 59, 61, 64, 65, 66, 67, 71, 73, 74, 77, 79, 83, 85, 87, 91, 92, 93, 94, 95, 96, 97, 100, 101, 104, 105, 107, 118, 120, 121, 123, 127, 129, 131, 138, 141, 142, 143, 146, 148, 153, 154, 155, 157, 160, 161, 162, 164, 167, 168, 169, 171, 176, 180, 181, 182, 183, 184, 185, 193, 194, 195, 196, 197, 198, 199, 202, 203, 206, 207, 216, 223, 225, 237, 239, 240, 242, 246, 248, 250, 257, 260, 261, 262, 265, 266, 271, 272, 273, 275, 278, 279, 280, 286, 289, 296, 297, 299, 305, 309, 310, 311, 312, 313, 314], "see": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 30, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 73, 74, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 214, 217, 218, 223, 224, 225, 228, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 294, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 317], "imposs": [12, 18, 24, 44, 60, 65, 85, 120, 133, 137, 156, 239, 252, 256, 274], "onc": [1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 15, 18, 24, 25, 26, 27, 28, 34, 35, 37, 39, 43, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 65, 66, 67, 68, 69, 74, 75, 77, 79, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 117, 120, 121, 123, 126, 127, 129, 135, 136, 138, 139, 143, 144, 147, 148, 150, 152, 153, 154, 155, 157, 161, 162, 168, 169, 170, 171, 172, 174, 175, 176, 177, 180, 181, 186, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 211, 220, 223, 224, 227, 228, 229, 232, 233, 234, 236, 239, 240, 242, 245, 246, 248, 254, 255, 257, 258, 262, 263, 264, 266, 268, 270, 271, 272, 273, 275, 279, 280, 282, 296, 297, 298, 299, 301, 303, 304, 305, 306, 309, 310, 314, 315], "abov": [1, 4, 6, 7, 10, 11, 18, 20, 24, 25, 26, 27, 28, 30, 33, 34, 35, 37, 39, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 58, 59, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 79, 81, 82, 84, 85, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 101, 105, 106, 113, 115, 116, 117, 118, 123, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 139, 141, 143, 144, 146, 147, 148, 152, 157, 160, 161, 162, 164, 168, 171, 172, 174, 175, 176, 178, 182, 186, 187, 193, 195, 196, 197, 198, 199, 200, 201, 203, 212, 214, 215, 219, 223, 224, 232, 234, 235, 236, 237, 242, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 258, 260, 262, 263, 264, 265, 266, 270, 275, 278, 279, 280, 286, 292, 296, 299, 301, 303, 304, 305, 307, 311, 315, 316], "made": [2, 5, 9, 16, 18, 19, 20, 24, 25, 34, 39, 43, 44, 50, 53, 57, 63, 65, 66, 74, 79, 83, 85, 90, 91, 93, 94, 97, 101, 102, 103, 104, 107, 113, 114, 117, 119, 120, 121, 123, 124, 133, 134, 136, 138, 141, 144, 147, 150, 151, 154, 155, 165, 171, 175, 176, 184, 192, 193, 195, 196, 199, 203, 204, 205, 206, 210, 225, 232, 233, 236, 238, 239, 240, 242, 243, 252, 253, 255, 257, 260, 263, 264, 268, 269, 272, 273, 287, 299, 304, 305, 313], "want": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 18, 20, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 180, 181, 182, 183, 186, 187, 188, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 211, 219, 223, 224, 225, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 286, 287, 288, 289, 292, 294, 296, 297, 298, 299, 301, 304, 305, 306, 307, 309, 310, 311, 312, 315, 316, 317], "learn": [0, 1, 2, 3, 5, 7, 9, 10, 12, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 28, 30, 34, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 60, 63, 64, 65, 66, 68, 69, 71, 74, 79, 81, 82, 83, 84, 85, 87, 88, 92, 94, 95, 97, 99, 100, 104, 105, 106, 107, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 166, 168, 169, 172, 173, 174, 175, 176, 178, 182, 183, 184, 188, 194, 196, 199, 201, 202, 206, 210, 218, 223, 224, 225, 228, 229, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 286, 288, 294, 296, 297, 301, 302, 303, 304, 305, 307, 311, 312, 313, 314, 317], "about": [0, 1, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 39, 41, 42, 44, 45, 46, 47, 49, 50, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 79, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 114, 115, 116, 117, 118, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 223, 224, 225, 228, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 283, 284, 285, 286, 287, 288, 292, 293, 294, 296, 297, 298, 299, 301, 303, 304, 305, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317], "vast": [7, 18, 34, 55, 74, 136, 255], "interdisciplinari": 18, "field": [0, 2, 3, 10, 12, 18, 19, 20, 26, 28, 30, 33, 37, 44, 45, 49, 51, 57, 58, 60, 67, 69, 71, 73, 77, 84, 85, 93, 103, 119, 123, 126, 130, 136, 138, 142, 144, 156, 160, 162, 169, 171, 175, 176, 179, 188, 195, 205, 238, 242, 245, 249, 255, 257, 261, 263, 274, 278, 280, 297, 299, 304, 305, 308, 317], "cognit": [18, 22, 43, 83, 124, 243], "scienc": [0, 2, 9, 10, 18, 20, 24, 26, 30, 39, 42, 44, 49, 57, 58, 65, 67, 71, 79, 82, 85, 92, 94, 95, 97, 99, 102, 105, 106, 107, 113, 116, 117, 121, 123, 126, 127, 128, 156, 157, 160, 162, 170, 171, 177, 183, 184, 188, 194, 196, 197, 199, 201, 204, 223, 224, 225, 232, 235, 236, 240, 242, 245, 246, 247, 274, 275, 278, 280, 291, 292, 298, 299, 306, 312, 313, 314, 317], "It": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 28, 30, 34, 36, 39, 40, 41, 42, 44, 45, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 76, 79, 80, 81, 82, 84, 85, 88, 90, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 141, 143, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 160, 161, 162, 165, 166, 168, 169, 170, 171, 174, 175, 177, 178, 180, 182, 183, 184, 187, 188, 190, 192, 195, 196, 197, 198, 199, 202, 203, 204, 205, 210, 212, 216, 218, 223, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 258, 260, 262, 264, 265, 267, 268, 269, 270, 271, 273, 274, 275, 278, 279, 280, 287, 288, 294, 296, 297, 298, 299, 303, 304, 306, 307, 309, 311, 312, 313, 314, 317], "also": [0, 1, 3, 4, 5, 6, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 96, 98, 99, 101, 102, 103, 107, 108, 109, 110, 113, 116, 117, 118, 119, 120, 122, 126, 127, 128, 129, 132, 133, 136, 143, 146, 148, 150, 151, 153, 154, 156, 157, 160, 163, 164, 165, 166, 168, 169, 170, 171, 175, 177, 178, 182, 185, 188, 192, 193, 194, 195, 198, 200, 201, 203, 204, 205, 208, 209, 210, 212, 214, 216, 217, 218, 220, 225, 227, 228, 229, 232, 235, 236, 237, 238, 239, 241, 245, 246, 247, 248, 251, 252, 255, 262, 265, 266, 268, 269, 271, 272, 274, 275, 278, 285, 286, 287, 288, 291, 294, 296, 297, 298, 299, 304, 306, 307, 311, 317], "sever": [0, 3, 5, 9, 10, 11, 13, 14, 16, 17, 18, 20, 24, 25, 26, 28, 33, 34, 35, 39, 42, 44, 45, 47, 49, 51, 53, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 73, 74, 75, 79, 82, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 111, 113, 115, 116, 118, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 133, 135, 136, 138, 141, 143, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 182, 184, 186, 188, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 211, 224, 225, 228, 230, 232, 234, 235, 237, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 252, 254, 255, 257, 260, 262, 264, 265, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 287, 288, 289, 291, 294, 296, 297, 298, 299, 304, 305, 306, 311, 313, 314, 315, 317], "next": [0, 1, 4, 5, 6, 8, 10, 18, 20, 24, 25, 26, 27, 28, 30, 33, 34, 35, 37, 39, 42, 43, 44, 45, 47, 49, 50, 52, 53, 54, 56, 58, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 79, 82, 83, 84, 85, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 110, 113, 114, 117, 119, 121, 122, 123, 126, 129, 130, 131, 133, 134, 136, 138, 139, 141, 143, 144, 146, 152, 153, 154, 155, 157, 160, 161, 162, 164, 165, 168, 171, 172, 175, 176, 177, 178, 179, 182, 186, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 210, 212, 214, 215, 216, 223, 229, 232, 233, 236, 238, 240, 241, 242, 245, 248, 249, 250, 252, 253, 255, 257, 258, 260, 262, 263, 265, 270, 271, 272, 273, 275, 278, 279, 280, 286, 287, 296, 299, 301, 304, 305, 306, 307, 308, 311, 315], "includ": [1, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 20, 24, 25, 26, 27, 28, 30, 39, 40, 42, 45, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 65, 66, 67, 68, 69, 71, 79, 80, 82, 84, 87, 92, 93, 95, 97, 99, 101, 102, 103, 104, 106, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 133, 134, 135, 136, 139, 143, 144, 147, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 170, 171, 174, 177, 178, 181, 182, 184, 186, 188, 194, 195, 197, 199, 201, 203, 204, 205, 206, 207, 218, 224, 228, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 252, 253, 254, 255, 258, 262, 263, 264, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 286, 287, 288, 297, 298, 299, 303, 306, 307, 310, 311, 313, 314, 315, 317], "am": [5, 9, 17, 18, 19, 20, 23, 34, 35, 36, 41, 44, 53, 57, 64, 74, 75, 76, 81, 85, 90, 94, 97, 98, 101, 108, 109, 130, 138, 151, 158, 171, 176, 179, 183, 186, 192, 196, 199, 200, 203, 227, 228, 249, 257, 269, 276, 291, 299, 305, 308, 312, 315], "strang": [1, 2, 4, 10, 18, 20, 34, 46, 50, 52, 58, 74, 86, 126, 141, 146, 213, 245, 260, 265], "loop": [1, 2, 6, 7, 18, 20, 28, 30, 39, 41, 43, 50, 54, 55, 69, 71, 79, 81, 83, 94, 95, 99, 101, 105, 106, 113, 115, 131, 133, 134, 139, 141, 152, 158, 160, 165, 174, 176, 196, 197, 201, 203, 223, 224, 232, 234, 250, 252, 253, 258, 260, 270, 276, 278, 287, 303, 305], "instinct": [18, 19], "unravel": 18, "mysteri": [11, 18, 59, 109, 138, 168, 228, 257, 296], "make": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 80, 81, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 211, 214, 215, 216, 218, 220, 223, 224, 225, 228, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 286, 287, 288, 289, 290, 296, 297, 298, 299, 301, 302, 303, 306, 307, 309, 310, 313, 315, 316, 317], "list": [1, 2, 3, 6, 7, 9, 11, 12, 15, 16, 17, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 39, 40, 41, 42, 44, 45, 47, 50, 51, 54, 55, 57, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77, 79, 80, 81, 82, 84, 85, 87, 89, 90, 91, 92, 93, 94, 97, 99, 101, 102, 105, 106, 109, 113, 114, 116, 117, 118, 119, 120, 121, 123, 127, 129, 130, 133, 136, 138, 139, 143, 148, 149, 151, 152, 155, 157, 158, 159, 161, 162, 164, 168, 169, 170, 171, 172, 174, 176, 177, 178, 180, 182, 191, 192, 193, 194, 196, 199, 201, 203, 204, 210, 223, 224, 228, 232, 233, 235, 236, 237, 238, 239, 240, 242, 246, 248, 249, 252, 255, 257, 258, 262, 266, 267, 269, 270, 273, 275, 276, 277, 279, 280, 286, 291, 296, 297, 298, 299, 301, 303, 305, 306, 307, 309, 311], "work": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 23, 24, 25, 26, 27, 28, 30, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 120, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 209, 210, 211, 212, 214, 215, 219, 223, 224, 225, 227, 228, 229, 230, 231, 234, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 286, 287, 288, 289, 290, 294, 296, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317], "thing": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 17, 19, 23, 24, 25, 26, 28, 29, 30, 33, 34, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 62, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 107, 110, 113, 116, 118, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 210, 211, 214, 215, 218, 219, 223, 225, 229, 232, 235, 237, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 286, 287, 291, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "might": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 19, 24, 25, 28, 30, 33, 34, 37, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 65, 66, 69, 71, 73, 74, 77, 79, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 104, 105, 110, 111, 113, 116, 117, 119, 120, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 144, 146, 147, 148, 149, 150, 151, 152, 155, 157, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 181, 182, 183, 184, 186, 187, 188, 193, 194, 195, 196, 197, 198, 200, 202, 204, 205, 206, 223, 229, 230, 232, 235, 236, 238, 239, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 260, 263, 264, 265, 266, 267, 268, 269, 270, 273, 275, 278, 279, 280, 286, 287, 289, 294, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 310, 311, 312, 313, 315, 316, 317], "consult": [3, 9, 11, 19, 23, 51, 57, 59, 93, 135, 137, 153, 157, 195, 254, 256, 271, 275], "through": [1, 3, 4, 5, 9, 10, 11, 12, 14, 16, 19, 20, 23, 24, 25, 26, 28, 34, 37, 39, 43, 44, 45, 47, 50, 51, 52, 53, 57, 58, 59, 60, 62, 63, 65, 66, 67, 69, 74, 77, 79, 83, 84, 85, 87, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 103, 105, 106, 107, 108, 110, 117, 121, 122, 123, 124, 126, 130, 131, 132, 134, 138, 139, 141, 142, 143, 146, 147, 148, 150, 151, 155, 157, 160, 162, 164, 168, 171, 172, 173, 174, 175, 179, 180, 186, 191, 192, 193, 194, 195, 197, 199, 200, 201, 203, 205, 210, 212, 223, 224, 225, 227, 229, 236, 240, 241, 242, 243, 245, 249, 250, 251, 253, 257, 258, 260, 261, 262, 264, 265, 266, 268, 269, 273, 275, 278, 280, 286, 291, 294, 296, 299, 301, 302, 303, 304, 308, 309, 315], "mai": [1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 17, 19, 20, 24, 25, 26, 27, 28, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 101, 102, 103, 105, 106, 109, 110, 112, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 132, 133, 136, 142, 143, 149, 150, 151, 153, 154, 156, 157, 160, 164, 165, 168, 170, 171, 173, 175, 177, 179, 182, 185, 186, 187, 189, 192, 193, 194, 195, 198, 199, 200, 203, 204, 205, 216, 223, 224, 228, 229, 231, 235, 236, 237, 238, 239, 244, 245, 246, 247, 248, 251, 252, 255, 261, 262, 267, 268, 269, 271, 272, 274, 275, 278, 282, 286, 287, 294, 296, 298, 299, 302, 304, 306, 308, 311, 314, 315, 316, 318], "link": [5, 7, 11, 14, 19, 20, 27, 28, 35, 37, 43, 44, 53, 55, 59, 62, 68, 69, 75, 77, 83, 85, 93, 94, 95, 96, 97, 101, 103, 108, 110, 113, 114, 119, 129, 132, 134, 146, 147, 150, 153, 155, 163, 164, 169, 171, 177, 181, 182, 183, 185, 195, 196, 197, 198, 199, 203, 205, 211, 218, 227, 229, 232, 233, 238, 248, 251, 253, 264, 265, 268, 271, 273, 284, 285, 286, 290, 291, 294, 297, 299, 306, 310, 311, 312], "review": [1, 2, 3, 5, 9, 10, 12, 13, 14, 19, 20, 34, 35, 46, 50, 51, 53, 57, 58, 60, 61, 62, 74, 75, 86, 100, 101, 103, 104, 113, 115, 126, 128, 133, 134, 147, 148, 150, 151, 152, 153, 160, 165, 169, 170, 171, 174, 178, 182, 184, 187, 202, 203, 205, 206, 210, 211, 214, 215, 216, 218, 219, 220, 232, 234, 245, 247, 252, 253, 264, 266, 268, 269, 270, 271, 278, 287, 297, 298, 299, 303, 307, 311, 313, 316], "summari": [3, 6, 19, 24, 45, 51, 54, 65, 84, 93, 103, 120, 121, 144, 157, 160, 161, 195, 205, 209, 210, 239, 240, 263, 275, 278, 279], "own": [9, 11, 12, 13, 17, 19, 20, 25, 26, 27, 28, 40, 43, 44, 47, 57, 59, 60, 61, 64, 66, 67, 68, 69, 80, 83, 85, 87, 91, 93, 94, 95, 96, 97, 101, 102, 103, 107, 115, 117, 120, 121, 124, 129, 132, 135, 142, 146, 147, 154, 161, 162, 164, 167, 169, 171, 174, 175, 179, 183, 184, 189, 193, 195, 196, 197, 198, 199, 203, 204, 205, 225, 234, 236, 239, 240, 243, 248, 251, 254, 261, 264, 265, 272, 279, 280, 282, 286, 289, 294, 297, 299, 303, 304, 308, 312, 313, 318], "conscious": [19, 20], "explain": [4, 5, 19, 20, 24, 28, 30, 31, 34, 40, 52, 53, 65, 69, 71, 72, 74, 80, 98, 99, 103, 104, 105, 116, 130, 169, 182, 184, 200, 201, 205, 206, 223, 235, 249, 297, 311, 313], "dennett": 19, "secret": [2, 5, 19, 20, 47, 53, 87, 99, 123, 141, 144, 153, 155, 161, 176, 186, 201, 211, 242, 260, 263, 271, 273, 279, 305, 315], "life": [7, 10, 12, 15, 19, 20, 44, 45, 55, 58, 60, 84, 85, 93, 104, 121, 126, 143, 147, 171, 175, 183, 184, 195, 206, 211, 240, 245, 262, 264, 282, 291, 293, 294, 299, 304, 312, 313], "mariano": [19, 22], "sigman": [19, 22], "emot": 19, "ar": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 93, 94, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 142, 143, 144, 146, 148, 149, 150, 151, 153, 154, 156, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 195, 196, 198, 200, 201, 202, 203, 205, 206, 210, 211, 212, 214, 215, 216, 218, 221, 223, 224, 225, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 271, 272, 274, 275, 277, 278, 279, 282, 286, 287, 288, 289, 290, 291, 292, 294, 296, 297, 298, 299, 301, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318], "lisa": 19, "feldmean": 19, "barrett": 19, "now": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 19, 20, 24, 25, 27, 28, 30, 33, 34, 35, 37, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 111, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 141, 144, 146, 147, 148, 150, 152, 153, 155, 156, 157, 158, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 182, 183, 184, 186, 187, 188, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 205, 206, 211, 214, 215, 216, 219, 223, 224, 230, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 255, 256, 257, 260, 263, 264, 265, 266, 268, 270, 271, 273, 274, 275, 276, 279, 280, 281, 282, 286, 287, 288, 289, 290, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308, 311, 312, 313, 315, 316, 317], "main": [1, 3, 5, 6, 8, 11, 19, 20, 25, 29, 39, 43, 44, 46, 47, 50, 51, 53, 54, 56, 59, 66, 70, 79, 83, 85, 86, 87, 90, 92, 94, 95, 96, 99, 102, 103, 114, 116, 120, 128, 130, 131, 136, 137, 139, 140, 141, 143, 146, 147, 157, 160, 161, 162, 164, 170, 172, 174, 175, 176, 178, 179, 184, 192, 194, 196, 197, 198, 201, 204, 205, 233, 235, 239, 247, 249, 250, 255, 256, 258, 259, 260, 262, 264, 265, 275, 278, 279, 280, 286, 298, 301, 303, 304, 305, 307, 308, 313], "construct": [7, 19, 20, 30, 39, 47, 55, 71, 79, 87, 95, 101, 106, 113, 114, 116, 129, 130, 134, 135, 141, 156, 161, 162, 169, 176, 197, 203, 224, 232, 233, 235, 248, 249, 253, 254, 260, 274, 279, 280, 297, 305], "activ": [1, 3, 5, 6, 10, 19, 24, 25, 28, 36, 37, 42, 43, 44, 45, 50, 51, 53, 54, 58, 65, 66, 69, 76, 77, 82, 83, 84, 85, 91, 95, 97, 100, 103, 117, 118, 121, 122, 126, 128, 149, 153, 156, 159, 168, 170, 171, 176, 178, 184, 193, 197, 199, 202, 205, 236, 237, 240, 241, 245, 247, 267, 271, 274, 277, 282, 294, 296, 298, 299, 305, 307, 313], "process": [1, 3, 5, 6, 8, 10, 11, 19, 25, 26, 33, 37, 39, 41, 44, 47, 50, 51, 53, 54, 56, 58, 59, 66, 67, 73, 77, 79, 81, 85, 87, 93, 94, 95, 96, 97, 100, 101, 102, 115, 116, 117, 120, 123, 126, 131, 132, 136, 141, 146, 147, 148, 149, 152, 154, 157, 162, 168, 169, 171, 175, 176, 183, 184, 195, 196, 197, 198, 199, 202, 203, 204, 216, 217, 234, 235, 236, 239, 242, 245, 250, 251, 255, 260, 264, 265, 266, 267, 270, 272, 275, 280, 282, 283, 296, 297, 299, 304, 305, 312, 313], "which": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 210, 211, 212, 214, 215, 218, 223, 224, 225, 228, 229, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 286, 287, 288, 289, 291, 292, 293, 294, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317], "our": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 151, 152, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 185, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 218, 220, 223, 224, 225, 227, 228, 229, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 269, 270, 272, 274, 275, 276, 278, 279, 280, 282, 283, 285, 286, 287, 290, 293, 294, 296, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 311, 315], "driven": [19, 20, 93, 184, 195, 313], "plai": [5, 19, 20, 28, 43, 48, 53, 69, 83, 88, 91, 92, 95, 104, 131, 132, 138, 160, 170, 172, 179, 184, 193, 194, 197, 206, 210, 250, 251, 257, 278, 298, 301, 308, 313], "role": [19, 20, 48, 88, 93, 97, 102, 123, 131, 176, 179, 184, 195, 199, 204, 242, 250, 305, 308, 313], "should": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 19, 20, 24, 25, 27, 28, 30, 33, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 65, 66, 68, 69, 71, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 109, 113, 116, 119, 120, 121, 123, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 146, 148, 149, 151, 152, 153, 154, 156, 157, 161, 162, 164, 165, 166, 167, 171, 172, 174, 175, 176, 177, 178, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 210, 211, 212, 214, 215, 218, 219, 228, 232, 235, 238, 239, 240, 242, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 265, 266, 267, 269, 270, 271, 272, 274, 275, 279, 280, 286, 287, 288, 289, 293, 294, 299, 301, 303, 304, 305, 306, 307, 310, 311, 312, 313, 315], "write": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 25, 26, 28, 30, 33, 34, 35, 39, 43, 44, 46, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 71, 73, 74, 75, 79, 83, 85, 86, 90, 91, 93, 94, 95, 96, 98, 100, 102, 104, 105, 107, 109, 113, 114, 116, 118, 119, 120, 121, 123, 125, 126, 127, 129, 130, 131, 133, 134, 135, 137, 139, 140, 143, 147, 151, 152, 155, 156, 157, 160, 161, 168, 169, 170, 171, 172, 173, 175, 176, 179, 180, 182, 183, 184, 185, 186, 192, 193, 195, 196, 197, 198, 200, 202, 204, 206, 207, 209, 212, 223, 225, 228, 232, 233, 235, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 256, 258, 259, 262, 264, 269, 270, 273, 274, 275, 278, 290, 291, 294, 296, 297, 298, 299, 301, 302, 304, 305, 308, 309, 311, 312, 313, 314], "": [1, 2, 3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 131, 132, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 219, 220, 223, 224, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 248, 250, 251, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 280, 283, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 305, 306, 308, 309, 310, 312, 313, 315, 316, 317, 318], "youtub": [19, 20, 31, 44, 72, 85, 90, 108, 163, 171, 192, 212, 227, 285, 299, 314], "dr": [9, 19, 57], "synapt": 19, "becom": [5, 6, 7, 11, 19, 20, 43, 44, 53, 54, 55, 59, 83, 85, 91, 93, 94, 119, 120, 124, 129, 136, 137, 138, 141, 143, 152, 157, 161, 164, 171, 172, 173, 174, 176, 184, 193, 195, 196, 219, 238, 239, 243, 248, 255, 256, 257, 260, 262, 270, 275, 279, 286, 299, 301, 302, 303, 305, 313, 314], "written": [6, 9, 13, 15, 17, 19, 24, 37, 39, 44, 54, 57, 61, 64, 65, 77, 79, 85, 90, 92, 93, 94, 100, 102, 103, 104, 119, 121, 122, 123, 127, 129, 135, 136, 140, 146, 151, 152, 156, 157, 160, 164, 170, 175, 176, 178, 182, 184, 186, 190, 192, 194, 195, 196, 202, 204, 205, 206, 238, 240, 241, 242, 246, 248, 254, 255, 259, 265, 269, 270, 274, 275, 278, 286, 290, 298, 304, 305, 307, 311, 313, 315], "joseph": 19, "ledoux": 19, "phd": 19, "student": [0, 7, 9, 15, 19, 20, 49, 55, 57, 100, 101, 103, 107, 108, 120, 131, 136, 152, 160, 167, 170, 171, 174, 202, 203, 205, 219, 225, 227, 239, 250, 255, 270, 278, 289, 298, 299, 303, 314], "gazzaniga": 19, "similar": [3, 5, 6, 7, 8, 11, 15, 19, 20, 24, 27, 39, 44, 46, 47, 48, 51, 53, 54, 55, 56, 59, 65, 68, 79, 85, 86, 87, 88, 92, 93, 94, 97, 100, 101, 106, 111, 113, 116, 119, 120, 123, 127, 130, 131, 136, 143, 144, 146, 150, 152, 157, 162, 166, 169, 175, 176, 178, 184, 194, 195, 196, 199, 202, 203, 220, 224, 230, 232, 235, 238, 239, 242, 246, 249, 250, 255, 262, 263, 265, 268, 270, 275, 280, 282, 288, 297, 304, 305, 307, 313], "feldman": 19, "assembl": 19, "neural": [19, 20, 43, 83, 148, 266, 283], "network": [9, 19, 47, 57, 87, 112, 148, 156, 161, 162, 180, 231, 266, 274, 279, 280, 290, 309], "grow": [1, 11, 19, 20, 26, 50, 59, 67, 92, 119, 143, 146, 168, 171, 178, 194, 238, 262, 265, 283, 296, 299, 307], "smarter": [19, 187, 316], "peter": [19, 144, 263], "robin": 19, "hiesing": 19, "neurosci": [19, 20, 22, 23, 43, 83], "explor": [1, 2, 3, 5, 6, 10, 11, 17, 19, 24, 25, 26, 28, 30, 39, 44, 45, 47, 50, 51, 53, 54, 58, 59, 64, 65, 66, 67, 69, 71, 72, 79, 84, 85, 87, 89, 90, 91, 92, 95, 97, 99, 100, 106, 110, 116, 120, 126, 137, 151, 152, 158, 160, 164, 166, 182, 191, 192, 193, 194, 197, 199, 201, 202, 218, 224, 229, 235, 239, 245, 256, 269, 270, 276, 278, 286, 288, 311], "enhanc": [11, 19, 20, 59, 117, 137, 138, 151, 164, 236, 256, 257, 269, 286], "edit": [1, 4, 5, 6, 10, 19, 20, 28, 37, 44, 50, 52, 53, 54, 58, 69, 77, 85, 89, 90, 93, 96, 97, 98, 101, 126, 127, 150, 151, 153, 160, 164, 167, 171, 174, 177, 184, 191, 192, 195, 198, 199, 200, 203, 210, 245, 246, 268, 269, 271, 278, 286, 289, 299, 303, 306, 313], "4th": [19, 158, 276, 291], "mark": [1, 4, 7, 11, 14, 19, 20, 30, 33, 39, 42, 50, 52, 55, 59, 62, 71, 73, 79, 82, 105, 108, 114, 119, 121, 158, 175, 186, 223, 227, 233, 238, 240, 276, 294, 304, 315], "bear": [19, 97, 146, 199, 265], "introduct": [2, 4, 5, 12, 19, 34, 44, 45, 52, 53, 60, 74, 84, 85, 93, 98, 101, 123, 128, 136, 141, 143, 149, 157, 177, 179, 195, 200, 203, 210, 212, 242, 247, 255, 260, 262, 267, 275, 306, 308], "avail": [1, 3, 4, 5, 7, 9, 10, 14, 16, 19, 24, 25, 26, 27, 28, 34, 39, 45, 47, 50, 51, 52, 53, 55, 57, 58, 62, 63, 65, 66, 67, 68, 69, 74, 79, 84, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 110, 114, 116, 118, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 134, 136, 137, 138, 140, 141, 143, 146, 151, 153, 156, 157, 160, 161, 162, 164, 167, 168, 170, 171, 177, 178, 182, 186, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 213, 224, 227, 229, 233, 235, 237, 239, 240, 241, 242, 245, 246, 248, 249, 250, 251, 253, 255, 256, 257, 259, 260, 262, 265, 269, 271, 274, 275, 278, 279, 280, 286, 289, 296, 298, 299, 306, 307, 311, 315], "mit": 19, "opencoursewar": 19, "biologi": 19, "standard": [3, 10, 11, 12, 19, 20, 24, 25, 26, 27, 39, 40, 41, 44, 51, 58, 59, 60, 65, 66, 67, 68, 79, 80, 81, 85, 90, 93, 101, 102, 104, 106, 110, 113, 115, 117, 119, 120, 121, 126, 127, 129, 131, 136, 137, 142, 144, 146, 147, 148, 152, 153, 157, 160, 161, 162, 165, 167, 168, 175, 176, 181, 182, 186, 192, 195, 203, 204, 206, 211, 224, 229, 232, 234, 236, 238, 239, 240, 245, 246, 248, 250, 255, 256, 261, 263, 264, 265, 266, 270, 271, 275, 278, 279, 280, 287, 289, 296, 304, 305, 310, 311, 315], "textbook": [19, 171, 299], "rather": [1, 3, 4, 10, 14, 19, 20, 24, 26, 27, 30, 34, 39, 44, 46, 47, 48, 50, 51, 52, 58, 62, 65, 67, 68, 71, 74, 79, 85, 86, 87, 88, 89, 95, 98, 99, 100, 105, 107, 111, 113, 114, 117, 118, 120, 126, 127, 129, 130, 133, 135, 136, 138, 139, 141, 142, 146, 147, 148, 149, 157, 162, 164, 166, 168, 169, 171, 175, 176, 178, 179, 182, 191, 197, 200, 201, 202, 223, 225, 230, 232, 233, 236, 237, 239, 245, 246, 248, 249, 252, 254, 255, 257, 258, 260, 261, 264, 265, 266, 267, 275, 280, 282, 283, 286, 288, 291, 294, 296, 297, 299, 304, 305, 307, 308, 311], "pricei": [19, 45, 84, 97, 171, 199, 299], "tell": [1, 4, 5, 7, 8, 10, 19, 20, 22, 24, 26, 30, 34, 35, 37, 39, 44, 46, 50, 52, 53, 55, 56, 58, 65, 67, 71, 74, 75, 77, 79, 85, 86, 91, 93, 94, 103, 104, 114, 118, 123, 126, 129, 130, 133, 134, 136, 138, 144, 147, 148, 152, 153, 157, 161, 168, 171, 173, 174, 177, 180, 182, 183, 184, 186, 187, 193, 195, 196, 205, 206, 211, 212, 233, 237, 242, 245, 248, 249, 252, 253, 255, 257, 263, 264, 266, 270, 271, 275, 279, 292, 296, 299, 302, 303, 306, 309, 311, 312, 313, 314, 315, 316], "tale": [19, 46, 86, 107, 225, 293], "A": [1, 2, 3, 4, 5, 10, 15, 16, 19, 20, 27, 30, 33, 37, 41, 44, 46, 48, 49, 50, 51, 52, 53, 58, 63, 68, 71, 73, 77, 81, 85, 86, 88, 93, 94, 97, 98, 101, 102, 103, 104, 106, 113, 115, 118, 119, 122, 126, 129, 136, 137, 139, 141, 143, 146, 148, 149, 151, 153, 157, 158, 160, 162, 165, 168, 169, 171, 172, 174, 176, 177, 179, 180, 181, 182, 184, 186, 189, 195, 196, 200, 203, 204, 205, 210, 211, 212, 218, 224, 232, 234, 237, 241, 245, 248, 255, 256, 258, 260, 262, 265, 266, 267, 269, 271, 275, 276, 278, 280, 287, 291, 296, 297, 299, 301, 303, 305, 306, 308, 309, 310, 311, 313, 315, 318], "neuroscientist": 19, "quest": 19, "what": [1, 2, 3, 4, 5, 6, 9, 10, 12, 13, 14, 15, 16, 17, 19, 22, 24, 25, 28, 31, 33, 35, 36, 37, 39, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 66, 69, 72, 73, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 104, 105, 107, 109, 111, 113, 114, 116, 118, 119, 120, 121, 122, 123, 126, 127, 130, 131, 132, 133, 134, 137, 138, 140, 143, 144, 146, 147, 148, 149, 151, 153, 156, 157, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 174, 175, 176, 177, 179, 181, 183, 184, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 207, 209, 211, 212, 214, 215, 216, 219, 223, 225, 228, 230, 232, 233, 235, 237, 238, 239, 240, 241, 242, 245, 246, 249, 250, 251, 252, 253, 256, 257, 259, 262, 263, 264, 265, 266, 267, 269, 271, 274, 275, 277, 278, 279, 280, 286, 287, 289, 291, 293, 294, 296, 297, 298, 303, 304, 305, 306, 308, 312, 313, 314, 315, 316, 317, 318], "u": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 24, 25, 26, 27, 28, 30, 33, 34, 37, 39, 41, 43, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 73, 74, 77, 79, 81, 83, 84, 85, 87, 88, 90, 91, 92, 95, 97, 99, 100, 101, 105, 106, 107, 113, 114, 115, 116, 118, 119, 120, 122, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 151, 152, 154, 155, 157, 158, 161, 162, 164, 165, 166, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 182, 185, 192, 193, 194, 197, 199, 201, 202, 203, 214, 215, 218, 223, 224, 225, 232, 233, 234, 235, 237, 238, 239, 241, 242, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 269, 270, 272, 273, 275, 276, 279, 280, 282, 286, 288, 290, 294, 296, 297, 298, 299, 303, 304, 305, 306, 307, 308, 309, 311], "fantasi": 19, "And": [2, 10, 19, 20, 35, 39, 43, 58, 75, 79, 83, 89, 90, 94, 98, 101, 107, 110, 120, 124, 126, 130, 135, 137, 165, 170, 176, 178, 184, 188, 191, 192, 196, 200, 203, 210, 212, 225, 229, 239, 243, 245, 249, 254, 256, 287, 298, 305, 307, 313, 317], "reflect": [8, 19, 47, 56, 87, 97, 107, 130, 171, 184, 199, 225, 249, 294, 299, 313], "On": [1, 2, 4, 6, 7, 15, 16, 19, 20, 24, 28, 30, 33, 34, 39, 43, 44, 47, 50, 52, 54, 55, 63, 65, 69, 71, 73, 74, 79, 83, 85, 87, 90, 95, 96, 97, 100, 101, 102, 106, 107, 118, 121, 123, 130, 132, 135, 142, 151, 152, 153, 157, 158, 160, 161, 162, 164, 166, 169, 170, 171, 173, 175, 178, 181, 182, 184, 186, 192, 197, 198, 199, 202, 203, 204, 216, 219, 224, 225, 237, 240, 242, 249, 251, 254, 261, 269, 270, 271, 275, 276, 278, 279, 280, 286, 288, 291, 294, 297, 298, 299, 302, 304, 307, 310, 311, 313, 315], "soul": 19, "hofstadt": 19, "ed": 19, "creat": [1, 2, 6, 7, 8, 10, 11, 15, 16, 17, 19, 20, 27, 28, 30, 33, 34, 35, 36, 39, 41, 42, 45, 47, 48, 50, 54, 55, 56, 58, 59, 63, 64, 67, 68, 69, 71, 73, 74, 75, 76, 79, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 105, 111, 117, 119, 120, 121, 122, 124, 126, 128, 129, 133, 135, 137, 138, 139, 141, 142, 144, 146, 148, 151, 152, 154, 155, 156, 157, 159, 160, 161, 162, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 184, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 210, 215, 218, 223, 230, 236, 238, 239, 240, 241, 243, 245, 247, 248, 252, 254, 256, 257, 258, 260, 261, 263, 265, 266, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 288, 290, 296, 298, 299, 301, 302, 303, 304, 305, 306, 307, 310, 313], "steven": 19, "pinker": 19, "evolut": [19, 20, 97, 98, 106, 119, 199, 200, 224, 238], "w": [6, 8, 19, 20, 54, 56, 113, 123, 139, 144, 147, 158, 232, 242, 258, 263, 264, 276], "techumseh": 19, "fitch": 19, "good": [0, 2, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 17, 19, 20, 21, 24, 25, 28, 34, 37, 39, 42, 43, 44, 45, 46, 47, 49, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 74, 77, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 95, 96, 98, 100, 101, 103, 104, 113, 114, 119, 120, 123, 125, 126, 129, 131, 133, 135, 136, 138, 141, 143, 144, 149, 151, 153, 155, 158, 161, 162, 164, 165, 167, 170, 172, 173, 174, 176, 177, 178, 181, 182, 183, 184, 186, 192, 193, 194, 195, 197, 198, 200, 202, 203, 205, 206, 210, 213, 232, 233, 238, 239, 242, 244, 245, 248, 250, 252, 254, 255, 257, 260, 262, 263, 267, 269, 271, 276, 279, 280, 286, 287, 289, 292, 294, 298, 301, 302, 303, 305, 306, 307, 310, 311, 312, 313, 314, 315], "overview": [2, 4, 19, 28, 42, 52, 69, 82, 92, 95, 101, 155, 186, 194, 197, 203, 273, 315], "neuron": [19, 23, 35, 43, 75, 83], "dynam": [19, 94, 101, 119, 121, 131, 133, 135, 144, 146, 176, 182, 196, 203, 238, 240, 250, 252, 254, 263, 265, 305, 311], "wulfram": 19, "gerstner": 19, "et": [19, 20], "al": [10, 19, 20, 39, 58, 79, 126, 245], "challeng": [5, 6, 7, 10, 14, 19, 20, 39, 43, 44, 53, 54, 55, 58, 62, 79, 83, 85, 100, 103, 107, 113, 116, 126, 129, 132, 147, 154, 171, 172, 202, 205, 225, 232, 235, 245, 248, 251, 264, 272, 299, 301], "theoret": [19, 20, 158, 276], "mathemat": [7, 10, 19, 20, 24, 30, 33, 55, 58, 65, 71, 73, 92, 93, 97, 105, 113, 119, 126, 138, 148, 152, 157, 160, 170, 172, 176, 177, 194, 195, 199, 210, 223, 232, 238, 245, 257, 266, 270, 275, 278, 298, 301, 305, 306, 314], "function": [1, 2, 3, 7, 9, 10, 11, 12, 15, 16, 17, 19, 21, 26, 27, 28, 33, 34, 37, 40, 41, 43, 45, 46, 47, 48, 50, 51, 55, 57, 58, 59, 60, 63, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 83, 84, 86, 87, 88, 91, 92, 93, 94, 95, 99, 100, 101, 102, 104, 105, 106, 110, 114, 116, 117, 118, 121, 122, 124, 126, 127, 129, 130, 131, 133, 134, 136, 139, 140, 143, 144, 146, 147, 148, 151, 152, 153, 155, 156, 157, 160, 161, 162, 164, 165, 166, 168, 169, 171, 174, 176, 177, 178, 181, 182, 184, 186, 193, 194, 195, 196, 197, 201, 202, 203, 204, 206, 209, 210, 211, 212, 214, 216, 217, 219, 224, 229, 233, 235, 236, 237, 240, 241, 243, 245, 246, 248, 250, 252, 253, 255, 262, 263, 264, 265, 266, 269, 270, 271, 273, 274, 275, 278, 279, 280, 286, 287, 288, 296, 297, 299, 303, 305, 306, 307, 310, 311, 313, 315], "python": [2, 4, 5, 12, 13, 14, 16, 19, 25, 27, 29, 42, 43, 50, 51, 52, 53, 58, 60, 61, 62, 63, 66, 68, 70, 72, 73, 77, 82, 83, 89, 96, 97, 99, 100, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 132, 139, 140, 142, 150, 153, 155, 156, 159, 163, 164, 165, 166, 167, 168, 173, 174, 178, 180, 183, 185, 187, 188, 189, 199, 206, 207, 210, 211, 212, 214, 224, 228, 232, 233, 234, 235, 237, 238, 244, 286, 287, 288, 289, 296, 302, 309, 312, 316], "exercis": [1, 2, 3, 5, 7, 11, 12, 15, 16, 19, 27, 28, 33, 43, 44, 47, 50, 51, 53, 55, 59, 60, 63, 68, 69, 73, 83, 85, 87, 97, 100, 102, 103, 104, 110, 113, 124, 139, 140, 144, 148, 151, 152, 161, 170, 172, 174, 175, 179, 199, 202, 204, 205, 207, 210, 216, 218, 219, 229, 232, 243, 259, 263, 266, 269, 270, 279, 291, 298, 301, 303, 304, 308], "plato": 19, "camera": 19, "captur": [1, 19, 20, 24, 50, 65, 107, 129, 133, 157, 168, 172, 175, 178, 184, 225, 248, 252, 275, 296, 301, 304, 307, 313], "landscap": [19, 95, 197], "abstract": [19, 20, 30, 47, 71, 87, 102, 122, 130, 143, 150, 157, 170, 179, 184, 204, 241, 249, 262, 268, 275, 298, 308, 313], "univers": [0, 11, 16, 19, 20, 44, 49, 59, 63, 85, 130, 156, 162, 167, 170, 171, 177, 183, 212, 249, 274, 280, 289, 298, 299, 306, 312, 314], "categor": [19, 20, 34, 48, 74, 88, 106, 224], "second": [1, 4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 19, 20, 24, 25, 28, 33, 35, 37, 39, 41, 43, 44, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 64, 65, 66, 69, 73, 75, 77, 79, 81, 83, 85, 86, 87, 88, 89, 93, 94, 95, 96, 98, 100, 105, 106, 113, 116, 120, 123, 126, 127, 129, 130, 131, 135, 136, 138, 139, 141, 143, 146, 147, 148, 152, 153, 157, 160, 161, 162, 166, 168, 170, 172, 174, 175, 177, 178, 181, 182, 186, 191, 195, 196, 197, 198, 200, 202, 214, 216, 223, 224, 232, 235, 239, 242, 245, 246, 248, 249, 250, 254, 255, 257, 258, 260, 262, 264, 265, 266, 270, 271, 275, 278, 279, 280, 288, 294, 296, 298, 301, 303, 304, 306, 307, 310, 311, 314, 315], "natur": [10, 14, 19, 20, 24, 25, 26, 34, 42, 43, 44, 47, 58, 62, 65, 66, 67, 74, 82, 83, 85, 87, 91, 94, 97, 102, 125, 126, 127, 131, 134, 137, 141, 151, 160, 166, 171, 193, 196, 199, 204, 210, 244, 245, 246, 250, 253, 256, 260, 269, 278, 288, 299], "gerald": 19, "edelman": 19, "big": [8, 13, 15, 16, 17, 19, 20, 25, 39, 43, 56, 61, 63, 64, 66, 79, 83, 94, 100, 103, 105, 107, 130, 133, 136, 149, 155, 168, 176, 178, 179, 186, 188, 196, 202, 205, 223, 225, 249, 252, 255, 267, 273, 294, 296, 305, 307, 308, 315, 317], "critic": [6, 10, 11, 19, 20, 39, 44, 54, 58, 59, 79, 85, 94, 97, 103, 116, 126, 129, 133, 138, 162, 165, 174, 175, 184, 196, 199, 205, 235, 245, 248, 252, 257, 280, 282, 287, 303, 304, 313], "contain": [1, 2, 3, 4, 7, 9, 10, 11, 14, 19, 20, 24, 26, 27, 28, 30, 33, 34, 39, 40, 41, 46, 48, 50, 51, 52, 55, 56, 57, 58, 59, 62, 65, 67, 68, 69, 71, 73, 74, 79, 80, 81, 86, 88, 92, 93, 94, 96, 97, 99, 100, 101, 103, 106, 110, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 126, 128, 130, 131, 134, 135, 138, 139, 144, 146, 152, 153, 156, 157, 158, 160, 161, 162, 166, 169, 175, 176, 177, 180, 182, 184, 194, 195, 196, 198, 199, 201, 202, 203, 205, 224, 229, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 245, 247, 249, 250, 253, 254, 257, 258, 263, 265, 270, 271, 274, 275, 276, 278, 279, 280, 288, 297, 304, 305, 306, 309, 311, 313], "entic": 19, "bit": [1, 4, 9, 11, 13, 14, 16, 19, 20, 26, 28, 33, 34, 35, 37, 39, 40, 42, 44, 45, 46, 47, 48, 50, 52, 57, 59, 61, 62, 63, 67, 69, 73, 74, 75, 77, 79, 80, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 100, 103, 104, 105, 108, 109, 111, 113, 116, 119, 121, 127, 129, 130, 131, 134, 136, 138, 143, 146, 148, 149, 150, 152, 153, 157, 160, 162, 167, 168, 169, 170, 171, 172, 174, 175, 176, 179, 180, 181, 182, 183, 184, 186, 187, 193, 194, 195, 197, 198, 199, 202, 205, 206, 210, 223, 227, 228, 230, 232, 235, 238, 240, 246, 248, 249, 250, 253, 255, 257, 262, 265, 266, 267, 268, 270, 271, 275, 278, 280, 289, 294, 296, 297, 298, 299, 301, 303, 304, 305, 308, 309, 310, 311, 312, 313, 315, 316], "thread": [5, 6, 19, 39, 44, 53, 54, 79, 85, 94, 109, 130, 149, 150, 155, 160, 171, 196, 228, 249, 267, 268, 273, 278, 294, 299], "pull": [19, 47, 87, 90, 103, 120, 124, 164, 186, 192, 205, 212, 239, 243, 286, 315], "ve": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 111, 113, 115, 116, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 211, 223, 224, 225, 230, 232, 234, 235, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315], "load": [1, 4, 6, 10, 14, 19, 27, 34, 39, 45, 47, 48, 50, 52, 54, 58, 62, 68, 74, 79, 84, 87, 88, 91, 93, 95, 99, 106, 111, 113, 117, 120, 126, 127, 138, 141, 144, 155, 156, 166, 168, 175, 176, 178, 181, 182, 184, 193, 195, 197, 201, 224, 230, 232, 236, 239, 245, 246, 257, 260, 263, 273, 274, 288, 296, 304, 305, 307, 310, 311, 313], "searl": 19, "churchland": 19, "fodor": 19, "ramachandran": 19, "them": [0, 1, 2, 3, 4, 5, 7, 9, 11, 14, 16, 17, 19, 20, 22, 24, 25, 26, 27, 28, 30, 33, 34, 35, 37, 39, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 79, 81, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 129, 130, 131, 132, 133, 136, 137, 138, 140, 141, 143, 144, 146, 148, 149, 152, 153, 155, 156, 157, 158, 159, 161, 162, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 210, 224, 225, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 248, 249, 250, 251, 252, 255, 256, 257, 259, 260, 262, 263, 266, 267, 270, 271, 273, 274, 275, 276, 277, 279, 280, 287, 294, 297, 298, 299, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 315, 316, 318], "abl": [0, 4, 6, 7, 8, 10, 16, 17, 19, 20, 24, 26, 28, 30, 34, 36, 39, 42, 45, 46, 47, 49, 52, 54, 55, 56, 58, 63, 64, 65, 67, 69, 71, 74, 76, 79, 82, 84, 86, 87, 89, 91, 92, 94, 95, 96, 97, 100, 101, 106, 107, 108, 112, 113, 116, 117, 119, 121, 124, 128, 129, 130, 131, 132, 133, 134, 141, 142, 144, 146, 149, 151, 152, 153, 154, 155, 156, 157, 161, 164, 168, 169, 170, 171, 172, 173, 176, 186, 191, 193, 194, 196, 197, 198, 199, 202, 203, 210, 212, 216, 224, 225, 227, 231, 232, 235, 236, 238, 240, 243, 247, 248, 249, 250, 251, 252, 253, 260, 261, 263, 265, 267, 269, 270, 271, 272, 273, 274, 275, 279, 286, 294, 296, 297, 298, 299, 301, 302, 305, 315], "express": [2, 3, 10, 11, 16, 19, 20, 22, 24, 28, 39, 43, 48, 51, 58, 59, 63, 65, 69, 79, 83, 88, 91, 92, 93, 95, 100, 101, 113, 122, 126, 129, 134, 136, 137, 143, 146, 147, 148, 156, 157, 161, 165, 166, 169, 170, 172, 174, 175, 177, 178, 193, 194, 195, 197, 202, 203, 212, 214, 232, 241, 245, 248, 253, 255, 256, 262, 264, 265, 266, 274, 275, 279, 287, 288, 297, 298, 301, 303, 304, 306, 307], "themselv": [19, 26, 37, 40, 67, 77, 80, 93, 107, 113, 147, 151, 161, 187, 195, 225, 232, 264, 269, 279, 316], "clearli": [1, 19, 48, 50, 88, 93, 94, 138, 143, 146, 181, 182, 195, 196, 257, 262, 265, 310, 311], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 19, 20, 24, 25, 26, 27, 28, 30, 31, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72, 77, 79, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 210, 211, 212, 216, 218, 219, 223, 224, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 286, 287, 289, 290, 293, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 310, 311, 313, 315, 316, 317], "discuss": [3, 4, 7, 9, 10, 11, 13, 14, 19, 20, 24, 25, 27, 28, 30, 34, 39, 40, 45, 47, 51, 52, 55, 57, 58, 59, 61, 62, 65, 66, 68, 69, 71, 74, 79, 80, 84, 87, 91, 92, 93, 94, 95, 97, 99, 100, 101, 104, 108, 109, 112, 114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 146, 147, 148, 149, 150, 151, 152, 155, 157, 160, 161, 162, 165, 166, 169, 170, 172, 174, 175, 176, 177, 178, 181, 182, 184, 186, 193, 194, 195, 196, 197, 199, 201, 202, 203, 206, 227, 228, 231, 233, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 264, 265, 266, 267, 268, 269, 270, 273, 275, 278, 279, 280, 287, 288, 294, 297, 298, 301, 303, 304, 305, 306, 307, 310, 311, 313, 315], "sophist": [8, 19, 20, 44, 56, 85, 102, 133, 152, 157, 172, 204, 252, 270, 275, 301], "But": [8, 12, 16, 19, 20, 24, 27, 30, 33, 34, 37, 41, 42, 43, 44, 45, 48, 56, 60, 63, 65, 68, 71, 73, 74, 77, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97, 101, 104, 105, 106, 107, 113, 116, 118, 125, 129, 131, 133, 137, 141, 143, 146, 147, 148, 153, 155, 157, 161, 173, 174, 176, 177, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 203, 206, 212, 220, 223, 224, 225, 232, 235, 237, 244, 248, 250, 252, 256, 260, 262, 264, 265, 266, 271, 273, 275, 279, 292, 293, 294, 302, 303, 305, 306, 315, 316, 317], "terribl": 19, "chore": [19, 35, 75, 167, 289], "crazi": [19, 46, 86, 136, 151, 184, 255, 269, 313], "comprehens": [17, 19, 30, 37, 39, 64, 71, 77, 79, 92, 101, 105, 113, 133, 141, 146, 152, 169, 177, 194, 203, 223, 232, 252, 260, 265, 270, 297, 306], "test": [1, 2, 7, 8, 12, 13, 14, 15, 19, 20, 25, 26, 28, 30, 33, 34, 37, 39, 40, 42, 47, 50, 55, 56, 60, 61, 62, 66, 67, 69, 71, 73, 74, 77, 79, 80, 82, 86, 87, 89, 90, 91, 94, 95, 96, 100, 101, 103, 104, 107, 111, 112, 114, 116, 117, 120, 123, 127, 129, 130, 131, 133, 134, 136, 138, 139, 141, 144, 146, 148, 152, 156, 157, 160, 161, 162, 164, 167, 170, 171, 176, 180, 182, 184, 186, 187, 188, 191, 192, 193, 196, 197, 198, 202, 203, 205, 206, 210, 225, 230, 231, 233, 235, 236, 239, 242, 246, 248, 249, 250, 252, 253, 255, 257, 258, 260, 263, 265, 266, 270, 274, 275, 278, 279, 280, 286, 289, 291, 298, 299, 305, 309, 311, 313, 314, 315, 316, 317], "devis": 19, "sadist": 19, "excit": [13, 19, 21, 22, 45, 61, 84, 89, 96, 100, 103, 120, 136, 151, 156, 170, 184, 191, 198, 202, 205, 239, 255, 269, 274, 291, 298, 313], "journei": [2, 19, 101, 105, 119, 136, 137, 161, 165, 171, 189, 203, 210, 223, 238, 255, 256, 279, 282, 287, 299, 318], "first": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 19, 20, 22, 24, 25, 27, 28, 30, 33, 37, 39, 40, 41, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 68, 69, 71, 73, 75, 77, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 146, 148, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 208, 210, 211, 216, 223, 224, 225, 227, 229, 232, 233, 234, 235, 236, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 287, 288, 289, 292, 294, 296, 297, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315], "m": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 16, 17, 19, 20, 23, 24, 25, 28, 30, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 69, 71, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 103, 104, 105, 106, 107, 108, 111, 113, 114, 116, 118, 120, 122, 123, 124, 125, 128, 129, 130, 132, 133, 136, 137, 138, 141, 142, 144, 148, 149, 151, 153, 155, 156, 157, 158, 159, 160, 164, 165, 169, 170, 173, 176, 178, 182, 183, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 205, 206, 211, 214, 215, 216, 219, 223, 224, 225, 227, 230, 232, 233, 235, 237, 239, 241, 242, 243, 244, 247, 248, 249, 251, 252, 255, 256, 257, 260, 261, 263, 266, 267, 269, 271, 273, 274, 275, 276, 277, 278, 281, 286, 287, 290, 291, 292, 294, 297, 298, 302, 305, 307, 311, 312, 314, 315], "go": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 17, 19, 20, 24, 25, 26, 28, 30, 33, 34, 37, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 64, 65, 66, 67, 69, 71, 73, 74, 77, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 123, 124, 125, 127, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 146, 148, 151, 153, 154, 156, 157, 158, 161, 164, 165, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 181, 182, 184, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 210, 212, 219, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 242, 243, 244, 246, 249, 251, 252, 253, 254, 255, 256, 257, 260, 261, 265, 266, 269, 271, 272, 274, 275, 276, 279, 282, 286, 287, 289, 291, 292, 294, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 310, 311, 313, 315, 317], "coursera": [19, 45, 84, 102, 160, 204, 278], "synaps": [19, 23], "here": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 67, 68, 69, 70, 71, 73, 74, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 219, 220, 221, 223, 225, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 286, 287, 288, 289, 291, 292, 293, 294, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317], "note": [1, 3, 4, 6, 7, 10, 11, 19, 23, 24, 25, 26, 28, 30, 34, 35, 37, 39, 42, 43, 44, 47, 48, 50, 51, 52, 54, 55, 58, 59, 65, 66, 67, 69, 71, 74, 75, 77, 79, 82, 83, 85, 87, 88, 90, 91, 92, 96, 97, 98, 100, 104, 105, 109, 113, 116, 117, 118, 120, 122, 124, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 146, 148, 152, 153, 156, 157, 158, 159, 161, 164, 165, 166, 168, 170, 175, 176, 177, 178, 180, 182, 185, 192, 193, 194, 198, 199, 200, 202, 206, 207, 208, 209, 210, 214, 218, 219, 223, 228, 232, 235, 236, 237, 239, 241, 243, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 265, 266, 270, 271, 274, 275, 276, 277, 279, 286, 287, 288, 291, 296, 298, 304, 305, 306, 307, 309, 311], "edx": 19, "org": [5, 16, 19, 39, 47, 53, 63, 79, 87, 90, 92, 95, 121, 144, 161, 174, 175, 176, 179, 182, 192, 194, 197, 240, 263, 279, 292, 293, 303, 304, 305, 308, 311], "vide": 19, "lot": [0, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 19, 20, 22, 24, 26, 27, 28, 30, 33, 34, 36, 39, 42, 43, 44, 45, 49, 51, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 71, 73, 74, 76, 79, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 105, 107, 114, 119, 120, 121, 123, 126, 129, 133, 136, 137, 138, 144, 146, 147, 150, 153, 155, 157, 161, 162, 164, 165, 167, 169, 170, 171, 172, 174, 175, 179, 182, 184, 186, 188, 191, 192, 193, 194, 195, 196, 198, 200, 202, 203, 204, 205, 210, 212, 213, 223, 225, 233, 238, 239, 240, 242, 245, 248, 252, 255, 256, 257, 263, 264, 265, 268, 271, 273, 275, 279, 280, 286, 287, 289, 294, 297, 298, 299, 301, 303, 304, 308, 311, 313, 315, 317], "access": [3, 4, 6, 8, 9, 19, 25, 34, 37, 39, 47, 51, 52, 54, 56, 57, 66, 74, 77, 79, 87, 92, 97, 99, 101, 102, 110, 115, 116, 117, 120, 121, 124, 127, 128, 132, 141, 143, 154, 155, 157, 166, 177, 182, 194, 199, 201, 203, 204, 209, 229, 234, 235, 236, 239, 240, 243, 246, 247, 251, 260, 262, 272, 273, 275, 288, 294, 306, 311], "histori": [19, 24, 65, 90, 94, 100, 102, 103, 107, 113, 119, 138, 153, 171, 184, 192, 196, 202, 204, 205, 210, 225, 232, 238, 257, 271, 299, 313], "ann": [19, 20], "perceptron": 19, "1958": 19, "paper": [19, 20, 46, 86, 92, 105, 170, 171, 194, 210, 211, 218, 219, 221, 223, 298, 299, 314], "frank": [19, 294], "rosenblatt": 19, "1": [1, 2, 3, 5, 6, 7, 8, 10, 11, 19, 20, 24, 26, 27, 28, 29, 30, 33, 34, 37, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 58, 59, 65, 67, 68, 69, 70, 71, 73, 74, 77, 79, 80, 81, 82, 84, 85, 87, 88, 89, 91, 92, 94, 95, 96, 97, 100, 105, 106, 113, 114, 115, 116, 118, 119, 123, 124, 127, 129, 130, 131, 132, 135, 136, 137, 139, 141, 142, 143, 144, 146, 147, 148, 149, 152, 153, 156, 157, 158, 160, 161, 162, 164, 165, 166, 170, 171, 174, 175, 176, 177, 178, 179, 184, 187, 191, 193, 194, 196, 197, 198, 199, 202, 208, 209, 210, 211, 212, 214, 215, 217, 219, 220, 223, 224, 232, 233, 234, 235, 237, 238, 242, 243, 246, 248, 249, 250, 251, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 274, 275, 276, 278, 279, 280, 286, 287, 288, 298, 299, 303, 304, 305, 306, 307, 308, 313, 314, 316], "wa": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 24, 25, 26, 28, 29, 30, 33, 34, 35, 36, 37, 39, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 79, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 141, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 164, 165, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 210, 211, 212, 216, 217, 218, 219, 223, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 286, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317], "wire": [1, 19, 20, 43, 50, 83, 157, 179, 275, 308], "pretti": [1, 6, 8, 9, 10, 11, 17, 19, 24, 25, 26, 28, 30, 31, 35, 37, 39, 40, 43, 44, 46, 47, 50, 54, 56, 57, 58, 59, 64, 65, 66, 67, 69, 71, 72, 75, 77, 79, 80, 83, 85, 86, 87, 90, 91, 95, 98, 106, 109, 110, 113, 119, 129, 130, 132, 133, 134, 136, 137, 143, 148, 149, 151, 153, 157, 160, 162, 164, 165, 170, 171, 174, 175, 178, 179, 180, 182, 187, 188, 192, 193, 197, 200, 210, 211, 216, 224, 228, 229, 232, 238, 248, 249, 251, 252, 253, 255, 256, 262, 266, 267, 269, 271, 275, 278, 280, 286, 287, 298, 299, 303, 304, 307, 308, 309, 311, 316, 317], "randomli": [19, 48, 88, 98, 162, 200, 280, 293], "consensu": [19, 20, 95, 197], "wikipedia": [10, 19, 20, 47, 58, 87, 119, 126, 162, 175, 238, 245, 280, 304], "page": [1, 3, 4, 11, 16, 19, 23, 25, 35, 37, 42, 43, 44, 45, 47, 50, 51, 52, 59, 63, 66, 75, 77, 82, 83, 84, 85, 87, 90, 92, 97, 99, 100, 103, 107, 116, 120, 123, 128, 161, 163, 171, 174, 178, 184, 185, 192, 194, 199, 201, 202, 205, 211, 215, 225, 235, 239, 242, 247, 279, 285, 299, 303, 307, 313], "biolog": 19, "intellig": [19, 35, 75, 130, 249], "point": [1, 3, 4, 5, 6, 8, 9, 10, 11, 15, 19, 20, 21, 24, 25, 26, 28, 30, 33, 34, 35, 36, 37, 39, 40, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 65, 66, 67, 69, 71, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 180, 181, 182, 183, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 210, 211, 212, 215, 216, 218, 219, 223, 224, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 286, 287, 288, 289, 290, 293, 294, 296, 297, 298, 299, 301, 303, 304, 305, 306, 309, 310, 311, 312, 314, 315, 316], "kind": [7, 14, 19, 20, 22, 24, 26, 30, 39, 43, 48, 55, 62, 65, 67, 71, 79, 83, 88, 89, 90, 97, 105, 133, 134, 142, 155, 160, 161, 162, 165, 168, 170, 174, 175, 176, 184, 188, 191, 192, 199, 223, 252, 253, 261, 273, 278, 279, 280, 287, 290, 293, 296, 298, 303, 304, 305, 313, 317], "got": [5, 7, 9, 19, 20, 25, 28, 30, 37, 41, 48, 53, 55, 57, 66, 69, 71, 77, 81, 88, 89, 90, 100, 110, 118, 119, 130, 132, 137, 142, 149, 158, 165, 166, 170, 176, 183, 184, 189, 191, 192, 202, 210, 216, 229, 237, 238, 249, 251, 256, 261, 267, 276, 287, 288, 298, 305, 312, 313, 318], "wrong": [1, 5, 7, 19, 20, 24, 39, 43, 50, 53, 55, 65, 79, 83, 91, 114, 131, 133, 134, 142, 146, 150, 158, 161, 165, 170, 186, 188, 189, 193, 216, 233, 250, 252, 253, 261, 265, 268, 276, 279, 287, 298, 315, 317, 318], "need": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 19, 20, 24, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 214, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 277, 278, 280, 283, 286, 287, 288, 289, 293, 294, 296, 297, 298, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 318], "combin": [1, 7, 9, 17, 19, 39, 43, 44, 47, 48, 50, 55, 57, 64, 79, 83, 85, 87, 88, 92, 93, 97, 106, 111, 113, 115, 117, 118, 127, 130, 131, 134, 135, 136, 137, 138, 143, 147, 160, 162, 166, 169, 174, 176, 182, 194, 195, 199, 211, 224, 230, 232, 234, 236, 237, 246, 249, 250, 253, 254, 255, 256, 257, 262, 264, 278, 280, 288, 297, 303, 305, 311], "connect": [19, 20, 25, 37, 44, 46, 47, 48, 66, 77, 85, 86, 87, 88, 97, 103, 106, 112, 120, 123, 132, 142, 151, 160, 161, 164, 167, 169, 180, 182, 199, 205, 224, 231, 239, 242, 251, 261, 269, 278, 279, 286, 289, 290, 291, 297, 309, 311], "just": [1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 19, 20, 24, 25, 27, 28, 30, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 71, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 114, 115, 116, 118, 119, 120, 125, 126, 128, 129, 130, 132, 133, 134, 135, 137, 138, 141, 144, 146, 147, 148, 149, 153, 155, 156, 157, 160, 161, 164, 165, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 205, 211, 212, 214, 215, 216, 219, 223, 224, 225, 233, 234, 235, 237, 238, 239, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 257, 260, 263, 264, 265, 266, 267, 271, 273, 274, 275, 278, 279, 286, 287, 289, 292, 293, 294, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318], "random": [2, 11, 19, 20, 48, 59, 88, 93, 113, 116, 120, 123, 141, 144, 148, 155, 160, 161, 176, 195, 232, 235, 239, 242, 260, 263, 266, 273, 278, 279, 305], "birth": 19, "dartmouth": 19, "workshop": 19, "1956": 19, "wasn": [4, 9, 11, 17, 19, 39, 44, 52, 57, 59, 64, 79, 85, 90, 91, 93, 94, 95, 104, 119, 160, 165, 168, 192, 193, 195, 196, 197, 206, 238, 278, 287, 290, 294, 296], "Their": [19, 130, 139, 161, 176, 249, 258, 279, 305], "focu": [5, 7, 10, 19, 20, 28, 36, 39, 44, 53, 55, 58, 69, 76, 79, 85, 100, 102, 103, 105, 126, 127, 130, 134, 135, 137, 146, 148, 156, 158, 162, 164, 170, 171, 172, 179, 182, 202, 204, 205, 218, 223, 245, 246, 249, 253, 254, 256, 265, 266, 274, 276, 280, 283, 286, 298, 299, 301, 308, 311], "symbol": [2, 10, 19, 20, 24, 25, 27, 41, 45, 58, 65, 66, 68, 81, 84, 92, 97, 98, 105, 117, 120, 126, 131, 132, 134, 136, 148, 152, 160, 164, 170, 175, 177, 184, 199, 200, 210, 214, 223, 236, 239, 245, 250, 251, 253, 255, 266, 270, 278, 286, 298, 304, 306, 313], "logic": [7, 10, 19, 20, 36, 44, 55, 58, 76, 85, 93, 113, 126, 172, 174, 195, 210, 232, 245, 301, 303], "von": 19, "neumann": 19, "These": [4, 5, 6, 10, 19, 20, 25, 26, 34, 36, 39, 40, 47, 52, 53, 54, 58, 66, 67, 74, 76, 79, 80, 87, 91, 92, 93, 95, 97, 99, 102, 106, 107, 110, 113, 122, 126, 130, 131, 133, 136, 138, 139, 142, 143, 144, 146, 147, 155, 156, 157, 162, 166, 170, 171, 176, 193, 194, 195, 197, 199, 201, 204, 221, 224, 225, 229, 232, 241, 245, 249, 250, 252, 255, 257, 258, 261, 262, 263, 264, 265, 273, 274, 275, 280, 288, 298, 299, 305], "leader": 19, "wrote": [12, 19, 20, 24, 28, 33, 35, 45, 60, 65, 69, 73, 75, 84, 92, 93, 94, 95, 101, 105, 114, 121, 123, 129, 132, 141, 144, 149, 150, 151, 156, 161, 184, 194, 195, 196, 197, 203, 210, 211, 223, 233, 240, 242, 248, 251, 260, 263, 267, 268, 269, 274, 279, 292, 313], "nueral": 19, "sidelin": 19, "project": [1, 2, 4, 6, 12, 14, 19, 24, 25, 26, 28, 35, 36, 42, 43, 44, 45, 46, 47, 48, 50, 52, 54, 60, 62, 65, 66, 67, 69, 75, 76, 82, 83, 84, 85, 86, 87, 88, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 108, 110, 111, 114, 117, 118, 120, 121, 123, 124, 125, 127, 132, 136, 147, 149, 151, 154, 155, 156, 157, 164, 167, 170, 173, 174, 175, 176, 178, 179, 180, 181, 182, 184, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 227, 229, 233, 236, 237, 239, 240, 242, 243, 244, 246, 251, 255, 264, 267, 272, 274, 275, 286, 289, 298, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313], "progress": [16, 19, 36, 44, 63, 76, 85, 94, 96, 101, 116, 135, 164, 196, 198, 203, 210, 235, 254, 286], "last": [1, 4, 5, 7, 11, 16, 17, 19, 20, 24, 26, 28, 34, 35, 37, 40, 44, 46, 50, 52, 53, 55, 59, 63, 64, 65, 67, 69, 74, 75, 77, 80, 85, 86, 89, 90, 92, 93, 94, 95, 98, 100, 103, 104, 110, 111, 113, 114, 115, 116, 118, 120, 121, 125, 127, 129, 130, 131, 132, 133, 134, 135, 137, 139, 141, 143, 146, 147, 148, 151, 152, 153, 157, 158, 162, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 178, 182, 184, 188, 191, 192, 194, 195, 196, 197, 200, 202, 205, 206, 210, 229, 230, 232, 233, 234, 235, 237, 239, 240, 244, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 260, 262, 264, 265, 266, 269, 270, 271, 275, 276, 280, 286, 287, 288, 289, 290, 291, 292, 294, 296, 297, 299, 301, 303, 304, 305, 307, 311, 313, 317], "10": [1, 2, 3, 4, 5, 7, 9, 10, 11, 19, 20, 24, 25, 26, 27, 28, 30, 34, 39, 42, 45, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 65, 66, 67, 68, 69, 71, 74, 79, 82, 84, 87, 88, 90, 91, 94, 95, 98, 100, 105, 106, 113, 116, 123, 126, 129, 130, 131, 132, 135, 136, 139, 141, 143, 146, 147, 152, 156, 157, 158, 160, 162, 165, 169, 170, 172, 175, 176, 178, 180, 182, 183, 189, 192, 193, 196, 197, 200, 202, 209, 210, 211, 212, 214, 215, 216, 218, 223, 224, 232, 235, 242, 245, 248, 249, 250, 251, 254, 255, 258, 260, 262, 264, 265, 270, 275, 276, 278, 280, 287, 292, 297, 298, 301, 304, 305, 307, 309, 311, 312, 318], "been": [1, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 24, 25, 27, 28, 30, 33, 35, 36, 39, 40, 44, 45, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 75, 76, 79, 80, 84, 85, 88, 92, 93, 94, 95, 97, 98, 100, 101, 102, 104, 106, 107, 110, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129, 130, 133, 134, 136, 138, 139, 141, 142, 143, 144, 146, 148, 149, 150, 151, 153, 155, 156, 157, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 175, 177, 179, 182, 183, 184, 186, 194, 195, 196, 197, 199, 200, 202, 203, 204, 206, 224, 225, 229, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 248, 249, 252, 253, 255, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 273, 274, 275, 278, 279, 280, 286, 287, 289, 291, 293, 294, 296, 297, 298, 299, 304, 306, 308, 311, 312, 313, 315], "side": [3, 6, 7, 10, 19, 20, 24, 26, 28, 30, 42, 51, 54, 55, 58, 65, 67, 69, 71, 82, 93, 95, 96, 106, 116, 120, 123, 126, 130, 137, 149, 151, 152, 156, 160, 170, 171, 172, 175, 176, 186, 195, 197, 198, 210, 212, 216, 219, 220, 224, 235, 239, 242, 245, 249, 256, 267, 269, 270, 274, 278, 298, 299, 301, 304, 305, 315], "itself": [1, 4, 6, 11, 12, 19, 20, 26, 30, 35, 37, 39, 42, 45, 46, 50, 52, 54, 59, 60, 67, 71, 75, 77, 79, 82, 84, 86, 89, 93, 94, 95, 97, 100, 101, 102, 103, 112, 113, 115, 117, 118, 122, 123, 127, 129, 130, 132, 134, 135, 136, 137, 138, 141, 144, 146, 151, 157, 158, 160, 161, 166, 168, 171, 174, 177, 178, 191, 195, 196, 197, 199, 202, 203, 204, 205, 231, 232, 234, 236, 237, 241, 242, 246, 248, 249, 251, 253, 254, 255, 256, 257, 260, 263, 265, 269, 275, 276, 278, 279, 288, 296, 299, 303, 306, 307], "reinforc": [19, 34, 44, 74, 85, 102, 143, 147, 171, 204, 262, 264, 282, 299], "london": [19, 20, 44, 85], "base": [1, 3, 4, 5, 6, 7, 8, 9, 10, 15, 19, 20, 24, 26, 27, 28, 30, 39, 42, 43, 44, 45, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 68, 69, 71, 79, 82, 83, 84, 85, 88, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 106, 107, 108, 113, 114, 116, 117, 121, 123, 124, 126, 129, 130, 131, 132, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 151, 152, 155, 156, 157, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 178, 180, 181, 183, 184, 186, 188, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 210, 214, 220, 224, 225, 227, 232, 233, 235, 236, 240, 242, 243, 245, 248, 249, 250, 251, 253, 254, 255, 257, 258, 260, 262, 263, 264, 266, 269, 270, 273, 274, 275, 278, 279, 280, 286, 287, 288, 296, 297, 298, 299, 301, 303, 304, 307, 309, 310, 312, 313, 315, 317], "startup": [19, 25, 28, 47, 66, 69, 87, 94, 120, 181, 196, 239, 310], "deepmind": 19, "googl": [1, 2, 4, 9, 19, 30, 36, 45, 46, 47, 50, 52, 57, 71, 76, 84, 86, 87, 89, 90, 94, 97, 103, 107, 113, 130, 151, 160, 175, 184, 191, 192, 196, 199, 205, 210, 225, 232, 249, 269, 278, 293, 304, 313], "muzero": 19, "naiv": 19, "against": [6, 9, 11, 13, 14, 15, 19, 24, 28, 31, 39, 47, 54, 57, 59, 61, 62, 65, 69, 72, 79, 87, 92, 94, 99, 105, 112, 120, 130, 131, 138, 148, 152, 154, 156, 160, 170, 171, 178, 179, 187, 194, 196, 201, 223, 231, 239, 249, 250, 257, 266, 270, 272, 274, 278, 298, 299, 307, 308, 316], "anoth": [1, 3, 4, 7, 9, 10, 11, 13, 14, 15, 19, 20, 24, 27, 28, 30, 34, 37, 39, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 59, 61, 62, 65, 68, 69, 71, 74, 77, 79, 81, 82, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 113, 116, 118, 120, 121, 122, 126, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 144, 146, 147, 149, 151, 152, 154, 157, 158, 160, 161, 165, 166, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 211, 216, 217, 223, 224, 225, 227, 228, 232, 235, 237, 239, 240, 241, 245, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 262, 263, 264, 265, 267, 269, 270, 272, 275, 276, 278, 279, 282, 287, 288, 294, 298, 299, 301, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313], "player": [19, 93, 129, 170, 184, 195, 248, 298, 313], "mcculloch": [19, 20], "pitt": [19, 20], "1943": [19, 20, 135, 254], "artifici": [19, 20], "connectom": 19, "diagram": [19, 20, 117, 176, 186, 236, 305, 315], "great": [0, 1, 3, 5, 9, 10, 11, 16, 17, 19, 20, 22, 24, 28, 34, 35, 37, 40, 43, 44, 45, 47, 49, 50, 51, 53, 57, 58, 59, 63, 64, 65, 69, 74, 75, 77, 80, 83, 84, 85, 87, 93, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 110, 117, 120, 125, 126, 128, 130, 137, 138, 147, 150, 151, 152, 153, 155, 156, 157, 159, 160, 170, 171, 174, 175, 177, 184, 195, 197, 199, 200, 202, 203, 204, 205, 206, 210, 223, 224, 229, 236, 239, 244, 245, 247, 249, 256, 257, 264, 268, 269, 270, 271, 273, 274, 275, 277, 278, 291, 298, 299, 303, 304, 306, 313], "chmeistri": 19, "etc": [3, 4, 5, 6, 7, 9, 11, 12, 14, 19, 20, 21, 24, 25, 26, 28, 31, 34, 35, 39, 40, 47, 51, 52, 53, 54, 55, 57, 59, 60, 62, 65, 66, 67, 69, 72, 74, 75, 79, 80, 87, 93, 95, 96, 97, 100, 104, 106, 115, 116, 123, 129, 130, 132, 133, 134, 137, 139, 143, 152, 155, 156, 157, 169, 171, 174, 175, 176, 182, 185, 188, 195, 197, 198, 199, 202, 206, 207, 210, 212, 216, 218, 219, 220, 224, 234, 235, 242, 248, 249, 251, 252, 253, 256, 258, 262, 270, 273, 274, 275, 297, 299, 303, 304, 305, 311, 317], "algorithm": [9, 15, 19, 20, 30, 44, 47, 57, 71, 85, 87, 92, 93, 102, 107, 162, 165, 170, 194, 195, 204, 225, 280, 287, 298], "inform": [1, 4, 6, 7, 19, 24, 25, 27, 28, 30, 31, 33, 35, 39, 41, 42, 44, 50, 52, 54, 55, 65, 66, 68, 69, 71, 72, 73, 75, 79, 81, 82, 85, 91, 93, 94, 99, 100, 101, 103, 106, 107, 118, 123, 127, 128, 130, 133, 134, 137, 138, 139, 153, 157, 161, 162, 164, 166, 169, 170, 175, 176, 178, 180, 185, 186, 193, 195, 196, 201, 202, 203, 205, 211, 212, 218, 224, 225, 237, 242, 246, 247, 249, 252, 253, 256, 257, 258, 271, 275, 279, 280, 282, 283, 286, 288, 297, 298, 304, 305, 307, 309, 315], "rai": [15, 19], "solomonoff": 19, "sinc": [1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 19, 20, 24, 25, 26, 28, 30, 33, 35, 37, 39, 40, 43, 44, 45, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 64, 65, 66, 67, 69, 71, 73, 75, 77, 79, 80, 83, 84, 85, 87, 91, 92, 93, 94, 95, 97, 98, 100, 101, 103, 105, 106, 107, 108, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 127, 129, 130, 131, 133, 134, 136, 137, 138, 139, 141, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 158, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 184, 186, 188, 193, 194, 195, 196, 197, 199, 200, 202, 203, 205, 210, 211, 223, 224, 225, 227, 232, 233, 235, 237, 238, 239, 240, 242, 243, 244, 246, 248, 249, 250, 252, 253, 255, 256, 257, 258, 260, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 276, 278, 279, 280, 286, 287, 288, 290, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 314, 315, 317], "you": [0, 1, 2, 3, 4, 5, 6, 8, 10, 13, 14, 15, 16, 19, 20, 22, 24, 25, 26, 27, 28, 35, 36, 37, 40, 41, 42, 44, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 61, 62, 63, 65, 66, 67, 68, 69, 75, 76, 77, 80, 81, 82, 85, 87, 88, 89, 90, 92, 93, 96, 99, 101, 102, 105, 107, 108, 109, 110, 112, 113, 116, 120, 122, 124, 125, 126, 127, 129, 132, 133, 136, 139, 140, 142, 143, 146, 148, 149, 150, 153, 154, 156, 157, 159, 160, 163, 164, 165, 166, 168, 169, 170, 173, 175, 177, 178, 179, 182, 183, 185, 187, 188, 189, 191, 192, 194, 195, 198, 201, 203, 204, 209, 210, 211, 212, 214, 215, 216, 223, 225, 227, 228, 229, 231, 239, 241, 243, 244, 245, 246, 248, 251, 252, 255, 258, 259, 261, 262, 265, 266, 267, 268, 271, 272, 274, 275, 277, 278, 285, 286, 287, 288, 291, 292, 293, 294, 296, 297, 298, 302, 304, 306, 307, 308, 311, 312, 314, 316, 317, 318], "predict": [19, 20, 100, 147, 161, 162, 165, 202, 264, 279, 280, 287], "result": [0, 1, 3, 7, 8, 9, 10, 14, 19, 20, 24, 26, 28, 30, 31, 33, 34, 39, 41, 44, 47, 49, 50, 51, 55, 56, 57, 58, 62, 65, 67, 69, 71, 72, 73, 74, 79, 81, 85, 87, 91, 93, 94, 95, 96, 97, 99, 100, 105, 106, 113, 115, 116, 121, 123, 124, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 139, 141, 144, 146, 148, 149, 152, 153, 154, 156, 157, 158, 160, 161, 162, 165, 166, 168, 170, 171, 172, 175, 176, 177, 178, 182, 183, 188, 193, 195, 196, 197, 198, 199, 201, 202, 210, 211, 214, 223, 224, 232, 234, 235, 240, 242, 243, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 258, 260, 263, 265, 266, 267, 270, 271, 272, 274, 275, 276, 278, 279, 280, 287, 288, 291, 294, 296, 298, 299, 301, 304, 305, 306, 307, 311, 312, 314, 317], "evolutionari": 19, "c": [1, 2, 4, 7, 9, 10, 11, 17, 19, 20, 26, 28, 29, 30, 39, 40, 44, 47, 48, 50, 52, 55, 57, 58, 59, 64, 67, 69, 70, 71, 79, 80, 85, 87, 88, 93, 94, 95, 97, 99, 103, 106, 110, 113, 116, 117, 119, 121, 123, 126, 130, 131, 133, 134, 135, 136, 138, 143, 146, 147, 148, 150, 152, 155, 156, 157, 158, 160, 161, 162, 168, 170, 174, 175, 181, 182, 183, 184, 188, 195, 196, 197, 199, 201, 205, 215, 224, 229, 232, 235, 236, 238, 240, 242, 245, 249, 250, 252, 253, 254, 255, 257, 262, 264, 265, 266, 268, 270, 273, 274, 275, 276, 278, 279, 280, 296, 298, 303, 304, 310, 311, 312, 313, 317], "f": [1, 19, 20, 26, 30, 33, 34, 39, 41, 46, 47, 50, 67, 71, 73, 74, 79, 81, 86, 87, 92, 95, 100, 101, 105, 113, 114, 117, 123, 127, 128, 129, 130, 131, 133, 134, 135, 137, 139, 141, 143, 144, 146, 147, 148, 151, 155, 157, 161, 162, 165, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 184, 186, 194, 197, 202, 203, 209, 212, 215, 216, 217, 220, 223, 232, 233, 236, 242, 246, 247, 248, 249, 250, 252, 253, 254, 256, 258, 260, 262, 263, 264, 265, 266, 269, 273, 275, 279, 280, 287, 296, 297, 298, 299, 301, 304, 305, 306, 307, 310, 313, 315], "rule": [4, 6, 9, 19, 20, 34, 39, 52, 54, 57, 74, 79, 133, 137, 138, 152, 170, 172, 175, 207, 212, 217, 252, 256, 257, 270, 298, 301, 304], "110": [19, 113, 232], "wolfram": [19, 170, 171, 298, 299], "mathematica": [19, 92, 170, 184, 194, 298, 313], "gui": [6, 19, 25, 39, 43, 46, 54, 66, 79, 83, 86, 91, 94, 107, 171, 193, 196, 225, 299, 314], "figur": [4, 9, 11, 19, 20, 26, 35, 39, 43, 52, 57, 59, 67, 75, 79, 83, 91, 94, 100, 105, 106, 109, 130, 138, 162, 165, 187, 193, 196, 202, 210, 218, 219, 223, 224, 228, 249, 257, 280, 287, 316], "out": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 24, 25, 26, 28, 30, 31, 34, 35, 36, 37, 39, 42, 43, 44, 45, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 71, 72, 74, 75, 76, 77, 79, 82, 83, 84, 85, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 111, 113, 116, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 143, 144, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 160, 161, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 183, 184, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 211, 212, 214, 215, 216, 218, 219, 223, 225, 227, 230, 232, 235, 237, 238, 239, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 278, 279, 282, 283, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308, 309, 312, 313, 314, 315, 317], "new": [1, 2, 4, 5, 6, 8, 10, 11, 12, 15, 16, 19, 20, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 39, 40, 41, 43, 44, 45, 46, 47, 50, 52, 53, 54, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 108, 111, 113, 114, 116, 117, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 146, 147, 148, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 182, 183, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 210, 218, 223, 230, 232, 233, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 270, 271, 273, 274, 275, 276, 277, 278, 280, 285, 286, 288, 290, 291, 292, 293, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 314], "growth": [10, 19, 20, 58, 126, 160, 171, 189, 210, 245, 278, 299, 318], "Its": [19, 41, 81, 130, 249], "consequ": [5, 8, 19, 20, 53, 56, 94, 175, 196, 304], "level": [4, 9, 12, 19, 24, 26, 28, 30, 43, 44, 45, 46, 47, 52, 57, 60, 65, 67, 69, 71, 83, 84, 85, 86, 87, 92, 94, 95, 96, 97, 102, 105, 106, 110, 115, 118, 120, 121, 123, 127, 129, 130, 133, 135, 138, 150, 152, 155, 157, 160, 161, 162, 164, 167, 169, 171, 173, 185, 186, 187, 194, 196, 197, 198, 199, 204, 218, 223, 224, 229, 234, 237, 239, 240, 242, 246, 248, 249, 252, 254, 257, 268, 270, 273, 275, 278, 279, 280, 286, 289, 292, 297, 299, 302, 315, 316], "http": [1, 3, 5, 6, 7, 8, 10, 11, 14, 19, 20, 24, 25, 26, 28, 33, 37, 40, 45, 46, 47, 50, 51, 53, 54, 55, 56, 58, 59, 62, 65, 66, 67, 69, 73, 77, 80, 84, 86, 87, 93, 95, 96, 97, 114, 115, 116, 117, 123, 125, 127, 132, 133, 144, 153, 159, 161, 163, 164, 166, 169, 175, 176, 180, 182, 186, 195, 197, 198, 199, 211, 217, 233, 234, 235, 236, 242, 244, 246, 251, 252, 263, 271, 277, 279, 281, 285, 286, 288, 297, 304, 305, 309, 311, 315], "selfassemblingbrain": 19, "com": [1, 3, 7, 8, 10, 11, 19, 20, 25, 26, 28, 30, 34, 37, 40, 47, 50, 51, 55, 56, 58, 59, 66, 67, 69, 71, 74, 77, 80, 87, 96, 99, 102, 108, 114, 115, 116, 123, 127, 129, 143, 144, 153, 155, 161, 164, 166, 168, 169, 175, 179, 182, 198, 201, 204, 211, 217, 227, 233, 234, 235, 242, 246, 248, 262, 263, 271, 273, 279, 281, 286, 288, 295, 296, 297, 304, 308, 311], "your": [1, 2, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 19, 20, 22, 24, 25, 26, 27, 28, 30, 31, 34, 35, 36, 39, 40, 42, 46, 47, 48, 50, 53, 54, 55, 56, 57, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 79, 80, 82, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 119, 120, 123, 124, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 147, 148, 150, 152, 153, 154, 155, 157, 158, 160, 162, 164, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 210, 211, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 238, 239, 242, 243, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 268, 270, 271, 272, 273, 275, 276, 278, 280, 286, 294, 296, 297, 299, 301, 302, 303, 304, 305, 307, 308, 309, 310, 313, 314, 315, 316, 318], "hallucin": 19, "realiti": [19, 20], "ted": 19, "anil": 19, "seth": 19, "differ": [1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 19, 20, 24, 25, 28, 30, 33, 34, 39, 40, 42, 43, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 65, 66, 69, 71, 73, 74, 79, 80, 82, 83, 87, 88, 90, 91, 93, 94, 98, 99, 100, 101, 102, 106, 107, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 126, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 181, 184, 185, 186, 187, 192, 193, 195, 196, 200, 201, 202, 203, 204, 219, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 245, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 286, 287, 288, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 310, 313, 315, 316], "form": [5, 10, 19, 20, 40, 41, 42, 43, 44, 45, 48, 53, 58, 80, 81, 82, 83, 84, 85, 88, 92, 102, 105, 106, 107, 108, 115, 123, 124, 125, 126, 131, 135, 136, 141, 143, 151, 155, 165, 168, 169, 170, 171, 181, 185, 186, 194, 204, 208, 214, 215, 219, 223, 224, 225, 227, 234, 242, 243, 244, 245, 250, 254, 255, 260, 262, 269, 273, 287, 294, 296, 297, 298, 299, 310, 315], "donald": [19, 20, 43, 83, 108, 227], "hoffman": 19, "argu": [9, 11, 19, 28, 57, 59, 69, 93, 94, 123, 138, 140, 152, 188, 195, 196, 242, 257, 259, 270, 317], "perceptu": [19, 20], "evolv": [8, 19, 43, 56, 83, 98, 200], "keep": [4, 8, 11, 19, 24, 25, 26, 27, 33, 34, 43, 44, 46, 52, 56, 59, 65, 66, 67, 68, 73, 74, 83, 85, 86, 93, 96, 97, 98, 103, 104, 108, 113, 114, 115, 129, 130, 132, 133, 134, 135, 136, 138, 141, 144, 161, 164, 165, 168, 169, 171, 172, 176, 177, 180, 182, 184, 195, 198, 199, 200, 205, 206, 211, 227, 232, 233, 234, 248, 249, 251, 252, 253, 254, 255, 257, 260, 263, 279, 286, 287, 296, 297, 299, 301, 305, 306, 309, 311, 313], "aliv": [19, 93, 195], "displai": [4, 10, 19, 28, 30, 34, 37, 39, 41, 45, 46, 48, 52, 58, 69, 71, 74, 77, 79, 81, 84, 86, 88, 91, 92, 93, 94, 97, 99, 100, 105, 106, 113, 116, 126, 127, 129, 130, 133, 134, 135, 137, 139, 146, 147, 148, 155, 156, 157, 158, 160, 161, 167, 169, 170, 172, 176, 177, 193, 194, 195, 196, 199, 201, 202, 211, 223, 224, 232, 235, 245, 246, 248, 249, 252, 253, 254, 256, 258, 264, 265, 266, 273, 274, 275, 276, 278, 279, 289, 297, 298, 301, 305, 306], "accuratl": 19, "appar": [6, 8, 19, 45, 54, 56, 84, 93, 160, 195, 278], "topic": [10, 11, 16, 17, 19, 33, 40, 44, 45, 58, 59, 63, 64, 73, 80, 84, 85, 93, 94, 95, 99, 110, 112, 116, 123, 126, 130, 133, 138, 140, 141, 142, 144, 157, 167, 169, 171, 172, 175, 178, 182, 184, 185, 195, 196, 197, 201, 229, 231, 235, 242, 245, 249, 252, 257, 259, 260, 261, 263, 275, 289, 294, 297, 299, 301, 304, 307, 311, 313], "case": [0, 1, 3, 4, 5, 6, 8, 9, 11, 15, 19, 20, 24, 26, 27, 28, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 53, 54, 56, 57, 59, 65, 67, 68, 69, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 84, 85, 87, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 119, 120, 122, 123, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 146, 147, 148, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 165, 166, 169, 170, 171, 172, 175, 176, 177, 178, 179, 181, 186, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 211, 212, 214, 216, 223, 224, 225, 228, 230, 232, 233, 234, 235, 236, 238, 239, 241, 242, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 269, 270, 271, 272, 274, 275, 276, 278, 279, 280, 282, 287, 288, 294, 297, 298, 299, 301, 304, 305, 306, 307, 308, 310, 315], "why": [2, 7, 8, 9, 11, 14, 19, 20, 24, 26, 28, 33, 34, 39, 44, 45, 46, 47, 48, 55, 56, 57, 59, 62, 65, 67, 69, 73, 74, 79, 84, 85, 86, 87, 88, 93, 95, 98, 99, 101, 102, 104, 110, 116, 118, 119, 120, 121, 127, 129, 136, 142, 144, 147, 148, 160, 167, 169, 171, 186, 195, 197, 200, 201, 203, 204, 206, 210, 216, 219, 229, 235, 237, 238, 240, 246, 248, 255, 261, 263, 264, 266, 278, 283, 289, 290, 294, 297, 299, 314, 315], "hid": 19, "truth": [5, 19, 53, 117, 135, 138, 210, 236, 254, 257], "ey": [12, 19, 20, 60, 133, 152, 161, 252, 270, 279], "brainfact": 19, "sport": [15, 19], "excel": [1, 3, 4, 5, 9, 14, 15, 17, 19, 20, 23, 24, 28, 30, 39, 47, 50, 51, 52, 53, 57, 62, 64, 65, 69, 71, 79, 87, 91, 92, 93, 94, 97, 100, 106, 110, 112, 113, 117, 118, 120, 127, 129, 130, 134, 150, 151, 156, 157, 160, 165, 168, 170, 171, 174, 175, 176, 178, 183, 184, 188, 193, 194, 195, 196, 199, 202, 224, 229, 231, 232, 236, 237, 239, 246, 248, 249, 253, 268, 269, 274, 275, 278, 287, 294, 296, 298, 299, 303, 304, 305, 307, 312, 313, 317], "onlin": [2, 4, 5, 7, 16, 19, 25, 34, 43, 44, 47, 52, 53, 55, 63, 66, 74, 83, 85, 87, 96, 101, 102, 105, 107, 108, 110, 116, 124, 131, 137, 139, 147, 148, 150, 153, 155, 160, 163, 165, 166, 168, 170, 174, 177, 183, 198, 203, 204, 210, 211, 223, 225, 227, 229, 235, 250, 256, 258, 264, 266, 268, 271, 273, 278, 287, 288, 296, 298, 303, 306, 312], "app": [2, 4, 6, 8, 11, 19, 34, 37, 47, 52, 54, 56, 59, 74, 77, 87, 90, 92, 95, 98, 111, 124, 155, 183, 184, 192, 194, 197, 200, 230, 273, 293, 312, 313], "interact": [2, 4, 5, 10, 15, 17, 19, 24, 28, 30, 31, 39, 45, 47, 52, 53, 58, 64, 65, 69, 71, 72, 79, 84, 87, 91, 93, 94, 95, 96, 97, 100, 102, 105, 106, 122, 126, 127, 128, 132, 134, 148, 149, 153, 157, 163, 165, 170, 171, 175, 182, 184, 193, 195, 196, 197, 198, 199, 202, 204, 223, 224, 241, 245, 246, 247, 251, 253, 266, 267, 271, 275, 282, 283, 285, 287, 298, 299, 304, 311, 313], "gross": 19, "anatomi": [19, 20], "allen": [19, 20, 36, 76], "institut": [19, 20], "toolkit": [1, 7, 19, 47, 50, 55, 87, 106, 112, 176, 178, 224, 231, 305, 307], "cool": [4, 15, 17, 19, 20, 24, 25, 30, 45, 52, 64, 65, 66, 71, 84, 91, 92, 93, 124, 138, 150, 151, 153, 155, 158, 167, 176, 184, 193, 194, 195, 210, 243, 257, 268, 269, 271, 273, 276, 289, 293, 305, 313], "build": [1, 2, 3, 5, 6, 7, 9, 14, 19, 20, 24, 25, 29, 30, 31, 34, 37, 50, 51, 53, 54, 55, 57, 62, 65, 66, 70, 71, 72, 74, 77, 89, 92, 95, 99, 100, 101, 102, 104, 108, 112, 114, 116, 118, 121, 123, 127, 130, 131, 134, 138, 142, 146, 147, 148, 150, 155, 157, 161, 167, 170, 172, 173, 174, 177, 180, 182, 183, 184, 191, 194, 197, 201, 202, 203, 204, 206, 210, 227, 231, 233, 235, 237, 240, 242, 246, 249, 250, 253, 257, 261, 264, 265, 266, 268, 273, 275, 279, 289, 298, 301, 302, 303, 306, 309, 311, 312, 313], "simul": [1, 6, 10, 19, 50, 54, 58, 93, 126, 141, 162, 195, 245, 260, 280], "analyz": [19, 33, 39, 45, 48, 73, 79, 84, 88, 93, 109, 116, 166, 195, 228, 235, 288], "scale": [6, 13, 15, 19, 20, 26, 30, 43, 45, 54, 61, 67, 71, 83, 84, 93, 97, 99, 100, 105, 119, 120, 136, 138, 142, 146, 178, 195, 199, 201, 202, 223, 238, 239, 255, 257, 261, 265, 307, 314], "octob": [2, 20, 63, 130, 175, 212, 218, 249, 304], "18": [1, 3, 20, 47, 50, 51, 87, 113, 116, 123, 130, 132, 139, 156, 161, 210, 214, 215, 232, 235, 242, 249, 251, 258, 274, 279], "2023": [1, 2, 11, 20, 50, 59, 149, 164, 178, 210, 219, 286, 307], "start": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 20, 26, 28, 30, 31, 33, 34, 35, 37, 39, 40, 42, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 58, 59, 60, 62, 67, 69, 71, 72, 73, 74, 75, 77, 79, 80, 82, 84, 86, 87, 88, 90, 93, 95, 96, 97, 98, 101, 102, 104, 105, 107, 111, 113, 114, 115, 117, 119, 120, 121, 125, 126, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 141, 143, 144, 146, 147, 148, 149, 152, 153, 154, 155, 156, 158, 160, 161, 162, 164, 165, 166, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 188, 192, 195, 197, 198, 199, 200, 203, 204, 206, 215, 221, 223, 225, 230, 232, 233, 234, 236, 238, 239, 240, 244, 245, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 276, 278, 279, 280, 286, 287, 288, 293, 294, 296, 297, 299, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 317], "professor": [20, 171, 207, 209, 210, 212, 219, 220, 299], "idan": 20, "segev": 20, "below": [1, 4, 6, 9, 10, 11, 20, 25, 26, 27, 28, 30, 33, 34, 37, 39, 41, 42, 45, 48, 50, 52, 54, 57, 58, 59, 66, 67, 68, 69, 71, 73, 74, 77, 79, 81, 82, 84, 88, 90, 91, 92, 93, 96, 97, 98, 100, 101, 106, 108, 113, 115, 116, 120, 123, 126, 127, 129, 130, 133, 134, 135, 136, 137, 139, 143, 146, 147, 152, 156, 157, 158, 159, 160, 164, 165, 166, 168, 169, 170, 171, 174, 175, 176, 177, 178, 181, 182, 186, 192, 193, 194, 195, 198, 199, 200, 202, 203, 210, 211, 212, 216, 218, 224, 227, 232, 234, 235, 239, 242, 245, 246, 248, 249, 252, 253, 254, 255, 256, 258, 262, 264, 265, 270, 274, 275, 276, 277, 278, 286, 287, 288, 296, 297, 298, 299, 303, 304, 305, 306, 307, 310, 311, 315], "As": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 17, 20, 24, 25, 26, 27, 28, 30, 33, 34, 37, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 64, 65, 66, 67, 68, 69, 71, 73, 74, 77, 79, 80, 81, 82, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 116, 117, 118, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 164, 166, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 184, 186, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 211, 215, 218, 223, 224, 225, 227, 228, 229, 232, 235, 236, 237, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 278, 279, 280, 282, 286, 288, 291, 292, 293, 294, 297, 298, 299, 301, 303, 304, 305, 306, 307, 309, 310, 311, 313, 314, 315], "alwai": [3, 4, 6, 7, 8, 10, 12, 16, 17, 20, 24, 26, 28, 30, 34, 42, 44, 45, 46, 47, 51, 52, 54, 55, 56, 58, 60, 63, 64, 65, 67, 69, 71, 74, 82, 84, 85, 86, 87, 90, 91, 93, 94, 97, 100, 106, 109, 111, 113, 117, 118, 126, 127, 130, 131, 133, 134, 135, 136, 138, 146, 148, 151, 152, 155, 156, 157, 158, 160, 161, 162, 168, 171, 172, 174, 175, 176, 184, 188, 192, 193, 195, 196, 199, 202, 212, 215, 220, 224, 228, 230, 232, 236, 237, 245, 246, 249, 250, 252, 253, 254, 255, 257, 265, 266, 269, 270, 273, 274, 275, 276, 278, 279, 280, 290, 292, 296, 299, 301, 303, 304, 305, 313, 317], "expect": [6, 8, 9, 17, 20, 26, 28, 33, 34, 37, 39, 40, 54, 56, 57, 64, 67, 69, 73, 74, 77, 79, 80, 90, 91, 95, 98, 108, 113, 116, 120, 121, 127, 129, 132, 133, 134, 136, 138, 141, 142, 143, 146, 147, 148, 152, 155, 161, 164, 165, 170, 172, 175, 177, 178, 184, 185, 186, 192, 193, 197, 200, 227, 232, 235, 239, 240, 246, 248, 251, 252, 253, 255, 257, 260, 261, 262, 264, 265, 266, 270, 273, 279, 286, 287, 294, 298, 301, 304, 306, 307, 313, 314, 315], "abbrevi": [20, 24, 65, 131, 134, 139, 250, 253, 258], "shortcut": [1, 20, 28, 40, 50, 69, 80, 97, 152, 199, 270], "much": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 15, 16, 17, 20, 22, 24, 25, 26, 28, 30, 31, 33, 34, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 142, 143, 144, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 184, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 210, 211, 212, 218, 223, 224, 225, 227, 228, 230, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 283, 286, 287, 289, 291, 296, 297, 298, 299, 301, 303, 304, 305, 307, 308, 313, 316, 317, 318], "dramat": [6, 20, 39, 54, 79], "billion": [20, 146, 162, 265, 280], "dollar": [20, 43, 83, 152, 172, 177, 270, 301, 306], "seattl": 20, "mous": [4, 52], "atla": 20, "janelia": 20, "farm": 20, "dc": 20, "usa": [20, 95, 147, 197, 264], "eu": 20, "presid": [20, 129, 130, 248, 249], "obama": 20, "map": [8, 10, 20, 47, 48, 56, 58, 87, 88, 93, 94, 99, 105, 106, 114, 123, 126, 130, 131, 132, 138, 139, 144, 149, 156, 157, 164, 169, 172, 176, 177, 195, 196, 201, 209, 223, 224, 233, 242, 245, 249, 250, 251, 257, 258, 263, 267, 274, 275, 286, 297, 301, 305, 306], "initi": [1, 4, 5, 8, 10, 11, 20, 26, 30, 35, 48, 50, 52, 53, 56, 58, 59, 67, 71, 75, 88, 92, 96, 100, 106, 109, 113, 118, 126, 129, 140, 146, 158, 165, 167, 174, 176, 194, 198, 202, 224, 228, 232, 237, 245, 248, 259, 265, 276, 287, 289, 303, 305], "connectomix": 20, "articl": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 24, 25, 27, 28, 33, 34, 35, 36, 37, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 73, 74, 75, 76, 77, 79, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 109, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 190, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 205, 206, 211, 223, 224, 228, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 283, 284, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 315], "bmi": 20, "e": [1, 3, 4, 6, 7, 9, 11, 14, 20, 25, 34, 39, 46, 47, 50, 51, 52, 54, 55, 57, 59, 62, 66, 74, 79, 86, 87, 93, 95, 99, 104, 106, 113, 117, 118, 120, 123, 129, 130, 132, 134, 136, 138, 139, 143, 144, 146, 147, 157, 158, 162, 164, 165, 170, 177, 178, 179, 181, 182, 186, 187, 195, 197, 201, 206, 209, 210, 212, 214, 215, 216, 224, 232, 236, 237, 239, 242, 248, 249, 251, 253, 255, 257, 258, 262, 263, 264, 265, 275, 276, 280, 286, 287, 298, 306, 307, 308, 310, 311, 315, 316], "g": [9, 14, 20, 25, 26, 48, 57, 62, 66, 67, 88, 89, 99, 104, 106, 113, 122, 129, 130, 131, 132, 136, 139, 147, 157, 162, 170, 181, 182, 186, 191, 201, 206, 210, 212, 214, 215, 216, 217, 224, 232, 241, 248, 249, 250, 251, 255, 258, 264, 275, 280, 298, 310, 311, 315], "camillo": 20, "golgi": 20, "santiago": 20, "ramon": [20, 21], "y": [7, 10, 20, 21, 24, 25, 26, 30, 41, 45, 47, 48, 55, 58, 65, 66, 67, 71, 81, 84, 87, 88, 92, 94, 95, 105, 106, 113, 126, 129, 130, 132, 135, 138, 141, 152, 156, 162, 164, 166, 170, 175, 176, 177, 194, 196, 197, 209, 211, 212, 214, 215, 219, 220, 223, 224, 232, 245, 248, 249, 251, 254, 257, 260, 270, 274, 280, 286, 288, 298, 304, 305, 306], "cajal": [20, 21], "giant": [20, 44, 85], "begin": [1, 3, 4, 5, 9, 11, 20, 21, 23, 25, 26, 28, 30, 33, 34, 36, 39, 40, 44, 47, 48, 50, 51, 52, 53, 57, 59, 66, 67, 69, 71, 73, 74, 76, 79, 80, 85, 87, 88, 89, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 111, 113, 114, 116, 117, 118, 120, 123, 127, 130, 132, 133, 135, 136, 137, 138, 139, 141, 143, 144, 147, 148, 150, 152, 153, 155, 156, 157, 158, 160, 161, 164, 168, 169, 171, 172, 174, 175, 177, 179, 182, 184, 186, 189, 191, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 210, 215, 216, 218, 221, 223, 227, 230, 232, 233, 235, 236, 237, 239, 242, 246, 249, 251, 252, 254, 255, 256, 257, 258, 260, 262, 263, 264, 266, 268, 270, 271, 273, 274, 275, 276, 278, 279, 282, 283, 286, 290, 296, 297, 299, 301, 303, 304, 306, 308, 311, 313, 314, 315, 318], "stain": 20, "actual": [6, 9, 10, 11, 14, 20, 24, 26, 28, 34, 39, 44, 48, 54, 57, 58, 59, 62, 65, 67, 69, 74, 79, 85, 88, 93, 94, 95, 97, 105, 116, 117, 118, 121, 126, 127, 130, 134, 136, 141, 144, 146, 153, 157, 160, 162, 169, 175, 177, 195, 196, 197, 199, 211, 212, 223, 235, 236, 237, 240, 245, 246, 249, 253, 255, 260, 263, 265, 271, 275, 278, 280, 291, 297, 304, 306], "onli": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 20, 24, 25, 26, 27, 28, 30, 33, 34, 36, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 68, 69, 71, 73, 74, 76, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 119, 120, 121, 123, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 146, 147, 148, 151, 152, 154, 156, 157, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 192, 193, 195, 196, 197, 199, 200, 202, 203, 204, 205, 210, 212, 216, 219, 223, 224, 225, 227, 228, 232, 233, 234, 235, 236, 238, 239, 240, 242, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 272, 274, 275, 278, 279, 286, 287, 288, 289, 291, 294, 296, 297, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317], "so": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 24, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317], "doesn": [1, 3, 4, 6, 9, 11, 17, 20, 24, 26, 28, 30, 34, 37, 44, 46, 47, 50, 51, 52, 54, 57, 59, 64, 65, 67, 69, 71, 74, 77, 85, 86, 87, 90, 91, 92, 94, 96, 98, 100, 102, 103, 105, 107, 110, 114, 123, 129, 132, 133, 134, 136, 137, 143, 144, 146, 149, 155, 158, 160, 161, 164, 165, 168, 170, 171, 172, 178, 182, 188, 192, 193, 194, 196, 198, 200, 202, 204, 205, 209, 212, 214, 215, 216, 218, 219, 223, 225, 229, 233, 242, 248, 251, 252, 253, 255, 256, 262, 263, 265, 267, 273, 276, 278, 279, 286, 287, 292, 294, 296, 298, 299, 301, 307, 311, 317], "tissu": 20, "dark": 20, "term": [3, 4, 6, 7, 9, 10, 17, 20, 30, 33, 34, 39, 48, 51, 52, 54, 55, 57, 58, 64, 71, 73, 74, 79, 88, 89, 93, 94, 118, 119, 123, 126, 130, 136, 137, 146, 147, 148, 156, 157, 160, 161, 162, 165, 170, 171, 173, 174, 176, 177, 182, 191, 195, 196, 216, 219, 237, 238, 242, 245, 249, 255, 256, 264, 265, 266, 274, 275, 278, 279, 280, 287, 298, 299, 302, 303, 305, 306, 311], "1906": 20, "nobel": 20, "prize": 20, "cut": [0, 2, 3, 20, 30, 34, 49, 51, 71, 74, 90, 123, 133, 160, 164, 192, 207, 212, 242, 252, 278, 286], "veri": [0, 3, 4, 5, 6, 9, 10, 11, 13, 14, 15, 20, 24, 26, 27, 28, 34, 36, 39, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 61, 62, 65, 67, 68, 69, 74, 76, 79, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 101, 102, 105, 106, 108, 109, 112, 113, 116, 119, 120, 121, 123, 125, 126, 127, 130, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 151, 153, 154, 155, 156, 157, 160, 161, 162, 164, 168, 170, 171, 172, 174, 175, 177, 178, 179, 182, 184, 186, 191, 192, 194, 195, 197, 198, 199, 203, 204, 223, 224, 227, 228, 231, 232, 235, 238, 239, 240, 242, 244, 245, 246, 249, 250, 251, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 269, 271, 272, 273, 274, 275, 278, 279, 280, 286, 296, 298, 299, 301, 303, 304, 306, 307, 308, 311, 313, 315], "thin": [6, 20, 26, 54, 67, 124, 243], "slice": [2, 3, 16, 20, 33, 51, 63, 73, 101, 116, 119, 134, 135, 138, 139, 140, 146, 156, 161, 166, 172, 176, 184, 203, 235, 238, 253, 254, 257, 258, 259, 265, 274, 279, 288, 301, 305, 313], "nanomet": 20, "resolut": [20, 162, 280, 292], "electron": [20, 290], "microscop": 20, "us": [1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 24, 27, 28, 29, 31, 33, 35, 36, 43, 44, 45, 46, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 75, 76, 83, 84, 85, 86, 92, 93, 94, 95, 96, 98, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 119, 120, 121, 127, 133, 134, 139, 140, 142, 143, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 165, 167, 169, 171, 172, 173, 177, 179, 180, 181, 183, 186, 187, 194, 195, 196, 197, 198, 200, 202, 203, 205, 206, 208, 210, 212, 214, 215, 216, 217, 223, 224, 225, 228, 229, 230, 233, 238, 239, 240, 246, 252, 253, 258, 259, 261, 262, 264, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 283, 287, 289, 290, 291, 292, 293, 294, 297, 299, 301, 302, 309, 310, 312, 315, 316], "detect": [20, 149, 157, 267, 275], "separ": [2, 3, 4, 7, 11, 20, 24, 28, 39, 41, 42, 44, 47, 48, 51, 52, 55, 59, 65, 69, 79, 81, 82, 85, 86, 87, 88, 94, 95, 96, 106, 111, 114, 115, 117, 118, 120, 122, 123, 127, 129, 130, 131, 133, 136, 138, 140, 147, 149, 153, 154, 157, 158, 164, 168, 169, 172, 176, 177, 181, 183, 197, 198, 224, 230, 233, 234, 236, 237, 239, 241, 242, 246, 248, 249, 250, 252, 255, 257, 259, 264, 267, 271, 272, 275, 276, 286, 296, 297, 301, 305, 306, 310, 312], "reconnect": 20, "3d": 20, "far": [1, 4, 7, 8, 9, 11, 16, 20, 24, 27, 30, 33, 34, 35, 36, 39, 43, 47, 50, 52, 55, 56, 57, 59, 63, 65, 68, 71, 73, 74, 75, 76, 79, 83, 87, 90, 92, 93, 94, 95, 97, 100, 103, 105, 107, 111, 116, 118, 120, 121, 123, 129, 130, 133, 134, 135, 136, 137, 138, 141, 143, 144, 147, 148, 152, 153, 161, 164, 165, 167, 169, 170, 171, 175, 178, 179, 183, 188, 192, 194, 195, 196, 197, 199, 202, 205, 210, 223, 225, 230, 235, 237, 239, 240, 242, 248, 249, 252, 253, 254, 255, 256, 257, 260, 262, 263, 264, 266, 270, 271, 279, 286, 287, 289, 290, 292, 293, 294, 297, 298, 299, 304, 307, 308, 312, 317], "done": [1, 2, 6, 8, 11, 15, 16, 20, 24, 25, 26, 27, 28, 30, 31, 33, 37, 40, 42, 44, 47, 50, 54, 56, 59, 63, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 80, 82, 85, 87, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 104, 106, 108, 109, 110, 113, 114, 117, 121, 123, 124, 125, 129, 131, 135, 136, 137, 138, 144, 146, 147, 153, 155, 156, 158, 164, 165, 167, 169, 170, 173, 175, 177, 178, 182, 185, 186, 191, 192, 193, 195, 196, 198, 199, 200, 202, 203, 206, 207, 210, 212, 216, 221, 224, 227, 228, 229, 232, 233, 236, 240, 242, 243, 244, 248, 250, 254, 255, 256, 257, 263, 264, 265, 271, 273, 274, 276, 286, 287, 289, 294, 297, 298, 302, 304, 306, 307, 311, 315], "piec": [5, 15, 17, 20, 47, 53, 64, 87, 92, 97, 101, 105, 124, 130, 138, 149, 177, 180, 194, 199, 203, 211, 223, 243, 249, 257, 267, 306, 309], "whole": [4, 20, 24, 26, 27, 33, 35, 37, 39, 47, 48, 52, 65, 67, 68, 73, 75, 77, 79, 87, 88, 93, 96, 97, 100, 106, 113, 114, 120, 123, 127, 129, 130, 131, 137, 138, 139, 146, 147, 151, 152, 153, 154, 157, 158, 161, 166, 167, 170, 171, 172, 181, 182, 187, 195, 198, 199, 202, 211, 212, 224, 232, 233, 239, 242, 246, 248, 249, 250, 256, 257, 258, 264, 265, 269, 270, 271, 272, 275, 276, 279, 288, 289, 298, 299, 301, 310, 311, 316], "prospect": [20, 103, 205], "give": [1, 3, 6, 8, 9, 10, 11, 12, 20, 24, 26, 27, 28, 30, 33, 37, 39, 42, 43, 44, 47, 48, 50, 51, 54, 56, 57, 58, 59, 60, 65, 67, 68, 69, 71, 73, 77, 79, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 104, 105, 106, 107, 110, 113, 114, 115, 117, 118, 120, 123, 124, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 141, 144, 146, 152, 153, 155, 157, 158, 160, 161, 162, 165, 168, 170, 171, 174, 175, 176, 177, 178, 180, 182, 184, 186, 187, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 206, 209, 210, 212, 216, 223, 224, 225, 229, 232, 233, 234, 236, 237, 239, 242, 243, 245, 246, 248, 249, 250, 251, 253, 254, 255, 256, 260, 263, 265, 270, 271, 273, 275, 276, 278, 279, 280, 287, 290, 293, 296, 298, 299, 303, 304, 305, 306, 307, 309, 311, 313, 314, 315, 316], "complet": [2, 3, 4, 5, 7, 12, 13, 20, 24, 25, 26, 30, 33, 35, 39, 42, 43, 45, 47, 51, 52, 53, 55, 60, 61, 65, 66, 67, 71, 73, 75, 79, 82, 83, 84, 87, 90, 93, 97, 98, 99, 100, 101, 104, 106, 118, 120, 121, 123, 128, 131, 135, 137, 138, 139, 142, 144, 147, 153, 154, 157, 158, 160, 161, 168, 171, 173, 174, 175, 177, 180, 182, 183, 184, 186, 187, 192, 195, 200, 201, 202, 203, 206, 224, 237, 239, 240, 242, 247, 257, 258, 261, 263, 271, 272, 275, 276, 278, 279, 296, 299, 302, 303, 304, 306, 309, 311, 312, 313, 315, 316], "blueprint": 20, "healthi": [9, 20, 57, 282], "sick": 20, "bridg": [20, 210], "problem": [8, 17, 20, 24, 28, 30, 33, 34, 36, 39, 41, 43, 44, 46, 47, 56, 64, 65, 69, 71, 73, 74, 76, 79, 81, 83, 85, 86, 87, 90, 91, 93, 94, 98, 100, 113, 117, 120, 121, 124, 129, 132, 133, 137, 138, 139, 141, 142, 143, 147, 148, 151, 152, 155, 157, 161, 162, 165, 170, 174, 175, 176, 179, 181, 182, 186, 188, 192, 193, 195, 196, 200, 202, 207, 210, 212, 214, 215, 219, 232, 236, 239, 240, 243, 248, 251, 252, 256, 257, 258, 260, 261, 262, 264, 266, 269, 270, 273, 275, 279, 280, 283, 287, 298, 303, 304, 305, 308, 310, 311, 315, 317], "research": [2, 3, 5, 10, 20, 22, 44, 51, 53, 57, 58, 85, 93, 94, 99, 101, 113, 116, 117, 125, 126, 151, 165, 170, 171, 195, 196, 201, 203, 232, 235, 236, 244, 245, 269, 287, 298, 299], "genet": [20, 171, 299], "vivo": 20, "light": [3, 11, 20, 51, 59, 109, 117, 120, 141, 160, 175, 228, 236, 239, 260, 278, 304], "micromet": 20, "harvard": [9, 20, 57], "mess": [20, 24, 25, 65, 66, 91, 193], "mice": [20, 119, 238], "gene": [20, 43, 83], "insert": [20, 33, 73, 147, 158, 161, 168, 169, 177, 264, 276, 279, 296, 297, 306], "dna": 20, "color": [10, 20, 26, 28, 30, 48, 58, 67, 69, 71, 88, 105, 106, 116, 126, 156, 210, 223, 224, 235, 245, 274], "becaus": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 20, 24, 25, 26, 27, 28, 30, 31, 33, 34, 37, 39, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 106, 107, 108, 110, 112, 113, 116, 119, 120, 121, 123, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 160, 161, 162, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 209, 212, 214, 215, 216, 218, 219, 220, 224, 225, 227, 229, 231, 232, 235, 238, 239, 240, 242, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 278, 279, 280, 283, 288, 290, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 315], "floursec": 20, "protein": [10, 20, 58, 126, 245], "henc": [20, 33, 47, 73, 87, 91, 144, 193, 263], "By": [3, 4, 5, 9, 11, 14, 20, 24, 25, 27, 28, 30, 33, 34, 37, 39, 43, 47, 48, 51, 52, 53, 57, 59, 62, 65, 66, 68, 69, 71, 73, 74, 77, 79, 83, 87, 88, 91, 95, 96, 98, 101, 102, 105, 113, 114, 116, 118, 129, 130, 134, 137, 138, 143, 147, 155, 162, 166, 171, 174, 175, 177, 178, 186, 193, 197, 198, 200, 203, 204, 212, 217, 218, 223, 232, 233, 235, 237, 248, 249, 253, 256, 257, 262, 264, 273, 280, 282, 288, 299, 303, 304, 306, 307, 315], "too": [0, 3, 4, 5, 8, 9, 11, 17, 20, 24, 26, 28, 34, 35, 37, 39, 40, 43, 44, 46, 47, 49, 51, 52, 53, 56, 57, 59, 64, 65, 67, 69, 74, 75, 77, 79, 80, 83, 85, 86, 87, 91, 92, 93, 95, 96, 100, 101, 103, 104, 105, 107, 110, 119, 123, 127, 129, 130, 135, 136, 142, 146, 148, 149, 151, 153, 155, 157, 160, 164, 165, 170, 171, 172, 174, 176, 179, 186, 187, 188, 189, 193, 194, 195, 197, 198, 202, 203, 205, 206, 207, 210, 211, 215, 216, 219, 223, 225, 229, 238, 242, 246, 248, 249, 254, 255, 261, 265, 266, 267, 269, 271, 273, 275, 278, 283, 286, 287, 292, 294, 298, 299, 301, 303, 305, 308, 314, 315, 316, 317, 318], "small": [1, 3, 6, 7, 8, 9, 10, 14, 20, 24, 26, 36, 37, 39, 45, 47, 48, 50, 51, 54, 55, 56, 57, 58, 62, 65, 67, 76, 77, 79, 84, 87, 88, 93, 94, 95, 100, 110, 113, 116, 117, 120, 123, 129, 136, 138, 139, 141, 146, 147, 156, 160, 162, 165, 171, 173, 174, 176, 177, 186, 195, 196, 197, 202, 229, 232, 235, 236, 239, 242, 248, 255, 257, 258, 260, 264, 265, 274, 278, 280, 287, 299, 302, 303, 305, 306, 315], "placement": [0, 20, 49], "art": [20, 93, 136, 139, 171, 195, 255, 258, 299], "exhibit": 20, "basi": [10, 20, 25, 30, 39, 58, 66, 71, 79, 102, 121, 124, 126, 129, 136, 151, 171, 186, 204, 240, 243, 245, 248, 255, 269, 294, 299, 315], "tagg": 20, "character": [10, 20, 58, 126, 245], "eg": 20, "retina": 20, "find": [1, 2, 4, 6, 7, 8, 9, 11, 13, 14, 20, 22, 24, 25, 26, 28, 30, 37, 39, 41, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 59, 61, 62, 65, 66, 67, 69, 71, 77, 79, 81, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 103, 107, 109, 116, 117, 120, 121, 123, 124, 128, 129, 131, 135, 136, 137, 141, 142, 143, 144, 146, 147, 148, 150, 152, 153, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 174, 176, 177, 178, 181, 186, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 205, 210, 211, 216, 217, 219, 220, 225, 228, 235, 236, 239, 240, 242, 243, 247, 248, 250, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 275, 276, 278, 279, 280, 282, 286, 287, 288, 291, 294, 296, 297, 298, 299, 303, 305, 306, 307, 310, 315], "3": [1, 2, 3, 5, 6, 7, 10, 11, 16, 17, 20, 24, 25, 26, 28, 30, 33, 34, 35, 39, 40, 41, 42, 45, 47, 48, 50, 51, 53, 54, 55, 58, 59, 63, 64, 65, 66, 67, 69, 71, 73, 74, 75, 79, 80, 81, 82, 84, 87, 88, 89, 90, 91, 92, 94, 95, 97, 100, 105, 106, 109, 113, 114, 115, 116, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 152, 153, 156, 157, 158, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 174, 175, 176, 177, 178, 183, 186, 188, 191, 192, 193, 194, 196, 197, 199, 202, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 223, 224, 228, 232, 233, 234, 235, 237, 238, 240, 241, 242, 244, 246, 247, 248, 249, 251, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 274, 275, 276, 278, 279, 280, 286, 287, 288, 293, 296, 297, 298, 299, 303, 304, 305, 306, 307, 312, 315, 317], "trace": [20, 157, 161, 186, 275, 279, 315], "short": [5, 7, 10, 11, 17, 20, 30, 34, 41, 45, 47, 53, 55, 58, 59, 64, 71, 74, 81, 84, 87, 89, 90, 92, 93, 94, 101, 104, 126, 127, 130, 138, 146, 147, 153, 161, 169, 171, 172, 173, 178, 185, 191, 192, 194, 195, 196, 203, 206, 245, 246, 249, 257, 264, 265, 271, 279, 294, 297, 299, 301, 302, 307], "long": [1, 4, 5, 6, 9, 11, 20, 25, 28, 34, 39, 43, 44, 46, 47, 50, 52, 53, 54, 57, 59, 66, 69, 74, 79, 83, 85, 86, 87, 90, 95, 100, 102, 103, 104, 118, 119, 120, 123, 125, 129, 130, 133, 137, 138, 146, 147, 149, 161, 164, 171, 173, 174, 175, 176, 177, 182, 184, 185, 192, 197, 202, 204, 205, 206, 214, 215, 216, 237, 238, 239, 242, 244, 248, 249, 252, 256, 257, 264, 265, 267, 279, 286, 294, 299, 302, 303, 304, 305, 306, 311, 313], "rang": [10, 11, 20, 26, 27, 28, 30, 37, 39, 58, 59, 67, 68, 69, 71, 77, 79, 92, 99, 101, 105, 106, 113, 114, 116, 126, 130, 139, 141, 143, 146, 147, 148, 156, 158, 160, 161, 162, 171, 175, 177, 184, 185, 186, 194, 201, 203, 215, 223, 224, 232, 233, 235, 245, 249, 258, 260, 262, 264, 265, 266, 274, 276, 278, 279, 280, 299, 304, 306, 313, 315], "electrod": 20, "implant": 20, "listen": [6, 20, 44, 47, 54, 85, 87, 107, 133, 180, 225, 252, 309], "group": [4, 6, 20, 26, 39, 48, 52, 54, 67, 79, 88, 89, 92, 93, 100, 103, 106, 116, 120, 130, 131, 132, 142, 152, 157, 168, 172, 176, 178, 180, 182, 184, 187, 191, 194, 195, 202, 205, 224, 235, 239, 249, 250, 251, 261, 270, 275, 281, 283, 296, 301, 305, 307, 309, 311, 313, 316], "common": [3, 5, 7, 10, 20, 24, 26, 30, 33, 34, 39, 44, 46, 51, 53, 55, 58, 65, 67, 71, 73, 74, 79, 85, 86, 93, 94, 100, 101, 106, 107, 113, 116, 117, 118, 123, 126, 129, 133, 134, 135, 136, 137, 141, 143, 144, 146, 147, 148, 151, 157, 158, 160, 161, 162, 171, 172, 174, 175, 176, 181, 182, 186, 195, 196, 202, 203, 210, 214, 224, 225, 232, 235, 236, 237, 242, 245, 248, 252, 253, 254, 255, 256, 260, 262, 263, 264, 265, 266, 269, 275, 276, 278, 279, 280, 294, 299, 301, 303, 304, 305, 310, 311, 315], "talk": [4, 7, 8, 9, 12, 13, 20, 21, 28, 30, 43, 45, 46, 52, 55, 56, 57, 60, 61, 69, 71, 83, 84, 86, 92, 94, 104, 107, 117, 120, 123, 136, 141, 144, 146, 171, 174, 176, 181, 182, 183, 188, 194, 196, 206, 225, 236, 239, 242, 255, 260, 263, 265, 299, 303, 305, 310, 311, 312, 314, 317], "robot": [9, 20, 57, 93, 195], "arm": [20, 44, 85, 91, 95, 107, 193, 197, 225, 314], "Or": [5, 20, 34, 35, 46, 53, 74, 75, 86, 91, 97, 102, 109, 113, 176, 181, 193, 199, 204, 213, 228, 232, 305, 310], "amelior": 20, "parkinson": 20, "puls": 20, "basal": 20, "ganglia": 20, "basic": [2, 5, 6, 7, 8, 9, 11, 14, 20, 24, 25, 26, 27, 30, 34, 37, 39, 41, 43, 44, 45, 48, 53, 54, 55, 56, 57, 59, 62, 65, 66, 67, 68, 71, 74, 77, 79, 81, 83, 84, 85, 88, 90, 93, 97, 101, 102, 103, 104, 108, 109, 110, 117, 118, 120, 121, 128, 131, 134, 135, 137, 139, 140, 143, 144, 146, 147, 148, 151, 152, 153, 155, 160, 164, 166, 167, 170, 171, 172, 174, 176, 177, 178, 179, 182, 187, 192, 195, 199, 203, 204, 205, 206, 210, 211, 215, 227, 228, 229, 236, 237, 239, 240, 247, 250, 253, 254, 256, 258, 259, 262, 263, 264, 265, 266, 269, 270, 271, 273, 278, 286, 288, 289, 291, 298, 299, 301, 303, 305, 306, 307, 308, 311, 316], "pacemak": 20, "futur": [3, 5, 11, 15, 20, 26, 43, 47, 51, 53, 59, 67, 83, 87, 96, 97, 100, 101, 104, 109, 137, 153, 160, 167, 198, 199, 202, 203, 206, 210, 228, 256, 271, 278, 289], "telemetr": 20, "record": [1, 20, 44, 50, 85, 89, 96, 108, 130, 144, 154, 171, 191, 198, 227, 249, 263, 272, 299], "without": [3, 4, 6, 7, 11, 14, 20, 24, 25, 26, 28, 33, 34, 37, 39, 41, 42, 43, 45, 46, 47, 48, 51, 52, 54, 55, 59, 62, 65, 66, 67, 69, 73, 74, 77, 79, 81, 82, 83, 84, 86, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 106, 107, 110, 113, 114, 117, 121, 123, 124, 129, 130, 133, 134, 135, 138, 139, 141, 142, 143, 144, 146, 148, 149, 151, 152, 157, 158, 160, 161, 164, 167, 168, 169, 171, 172, 174, 175, 177, 178, 184, 186, 188, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 214, 224, 225, 229, 232, 233, 236, 240, 242, 243, 248, 249, 252, 253, 254, 257, 258, 260, 261, 262, 263, 265, 266, 267, 269, 270, 275, 276, 278, 279, 286, 289, 292, 294, 296, 297, 299, 301, 303, 304, 306, 307, 313, 315, 317], "invas": [20, 44, 85, 100, 202], "electod": 20, "real": [7, 8, 10, 20, 25, 28, 34, 36, 39, 45, 55, 56, 58, 66, 69, 74, 76, 79, 84, 90, 93, 97, 102, 103, 107, 112, 119, 120, 122, 126, 127, 138, 147, 148, 153, 155, 158, 160, 162, 165, 169, 171, 176, 177, 184, 186, 187, 192, 195, 199, 204, 205, 215, 216, 225, 231, 238, 239, 241, 245, 246, 257, 264, 266, 271, 273, 276, 278, 280, 287, 294, 297, 299, 305, 306, 313, 315, 316], "analysi": [2, 3, 9, 14, 20, 27, 39, 45, 48, 51, 57, 62, 68, 79, 84, 88, 95, 99, 100, 102, 106, 116, 120, 156, 160, 162, 166, 168, 171, 178, 184, 197, 201, 202, 204, 212, 224, 235, 239, 274, 278, 280, 288, 296, 299, 307, 313], "close": [9, 10, 20, 26, 33, 57, 58, 67, 73, 89, 90, 94, 95, 96, 97, 99, 102, 104, 106, 115, 117, 126, 129, 131, 132, 133, 141, 146, 165, 175, 191, 192, 196, 197, 198, 199, 201, 204, 206, 212, 224, 234, 236, 245, 248, 250, 251, 252, 260, 265, 287, 294, 304], "movement": [20, 129, 248], "touch": [9, 20, 47, 57, 87, 94, 95, 118, 129, 130, 133, 153, 170, 196, 197, 237, 248, 249, 252, 271, 291, 294, 298], "tweak": [5, 20, 53], "plant": [20, 34, 74], "probe": 20, "sensit": [7, 20, 47, 55, 87, 138, 144, 152, 171, 257, 263, 270, 299], "shine": [2, 20, 97, 103, 178, 199, 205, 307], "particular": [3, 4, 11, 20, 25, 39, 41, 51, 52, 59, 66, 79, 81, 93, 115, 117, 130, 136, 151, 156, 160, 169, 175, 183, 195, 207, 234, 236, 249, 255, 269, 274, 278, 297, 304, 312], "wavelength": 20, "In": [0, 1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 15, 17, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 136, 137, 138, 141, 142, 144, 146, 147, 148, 150, 153, 154, 155, 156, 158, 160, 162, 164, 165, 166, 168, 169, 170, 172, 174, 175, 176, 177, 178, 181, 182, 183, 184, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 210, 212, 214, 215, 216, 218, 223, 224, 225, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 250, 251, 255, 256, 257, 260, 261, 263, 264, 265, 266, 268, 271, 272, 274, 276, 278, 280, 282, 286, 287, 288, 294, 296, 297, 298, 303, 304, 305, 307, 311, 312, 313], "exist": [1, 3, 4, 5, 11, 16, 17, 20, 24, 28, 30, 35, 36, 37, 39, 47, 48, 50, 51, 52, 53, 59, 63, 64, 65, 69, 71, 75, 76, 77, 79, 87, 88, 91, 95, 103, 116, 117, 123, 131, 132, 133, 137, 138, 143, 144, 152, 153, 156, 158, 161, 164, 175, 176, 178, 182, 183, 186, 193, 197, 205, 212, 216, 217, 235, 236, 242, 250, 251, 252, 256, 257, 262, 263, 270, 271, 274, 276, 279, 286, 304, 305, 307, 311, 312, 315], "retin": 20, "receptor": [20, 151, 269], "mean": [0, 3, 4, 6, 7, 8, 9, 10, 11, 20, 24, 25, 26, 27, 28, 30, 34, 35, 39, 41, 43, 44, 47, 49, 51, 52, 54, 55, 56, 57, 58, 59, 65, 66, 67, 68, 69, 71, 74, 75, 79, 81, 83, 85, 87, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 107, 112, 113, 115, 116, 119, 120, 121, 123, 126, 128, 130, 131, 132, 133, 134, 138, 142, 143, 146, 147, 148, 152, 155, 156, 157, 158, 160, 161, 162, 165, 166, 168, 169, 171, 175, 176, 177, 178, 182, 184, 187, 193, 195, 196, 197, 198, 199, 200, 203, 205, 206, 209, 210, 212, 218, 223, 224, 225, 231, 232, 234, 235, 238, 239, 240, 242, 245, 247, 249, 250, 251, 252, 253, 257, 261, 262, 264, 265, 266, 270, 273, 274, 275, 276, 278, 279, 280, 287, 288, 292, 294, 296, 297, 299, 304, 305, 306, 307, 311, 313, 314, 316], "code": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 20, 24, 26, 29, 30, 31, 33, 34, 37, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 97, 99, 100, 102, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 199, 201, 202, 204, 213, 219, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 274, 275, 276, 277, 278, 280, 287, 288, 296, 297, 298, 299, 301, 303, 305, 307, 308, 309, 313, 315, 316, 317, 318], "molecul": [10, 20, 58, 126, 245], "With": [1, 2, 9, 13, 15, 17, 20, 25, 28, 34, 42, 43, 50, 53, 57, 61, 64, 66, 69, 74, 82, 83, 87, 99, 101, 104, 106, 110, 117, 118, 120, 123, 124, 127, 134, 136, 137, 144, 146, 147, 157, 160, 169, 172, 175, 177, 182, 186, 201, 203, 206, 214, 215, 216, 224, 229, 236, 237, 239, 242, 243, 246, 253, 255, 256, 265, 275, 278, 291, 297, 301, 304, 306, 311, 315], "ion": 20, "channel": [17, 20, 24, 64, 65, 90, 108, 114, 153, 171, 175, 192, 227, 233, 271, 299, 304], "rhodopsin": 20, "natronoma": 20, "pharaoni": 20, "yellow": [20, 45, 84, 103, 156, 205, 274], "prevent": [6, 20, 26, 33, 54, 67, 73, 94, 106, 117, 118, 133, 135, 141, 161, 175, 181, 196, 221, 224, 236, 237, 252, 254, 260, 279, 304, 310], "movi": [11, 20, 24, 45, 59, 65, 84, 99, 116, 139, 143, 201, 235, 258, 262], "aka": [20, 25, 66], "campu": 20, "induc": 20, "drink": [20, 283], "certain": [1, 5, 11, 20, 24, 25, 28, 34, 39, 42, 43, 50, 53, 59, 65, 66, 69, 74, 79, 82, 83, 94, 99, 100, 103, 116, 119, 120, 129, 130, 131, 138, 139, 146, 152, 156, 157, 158, 167, 178, 179, 181, 183, 186, 196, 201, 202, 205, 212, 235, 238, 239, 248, 249, 250, 257, 258, 265, 270, 274, 275, 276, 289, 292, 307, 308, 310, 312, 315], "lord": 20, "kelvin": 20, "william": [20, 92, 194], "thompson": 20, "quot": [3, 11, 20, 24, 43, 51, 59, 65, 83, 129, 130, 149, 157, 158, 160, 248, 249, 267, 275, 276, 278], "never": [2, 7, 17, 20, 30, 39, 55, 64, 71, 79, 95, 98, 104, 109, 120, 127, 133, 138, 154, 175, 176, 186, 197, 200, 206, 211, 212, 228, 239, 246, 252, 257, 272, 304, 305, 315], "content": [5, 11, 13, 20, 26, 30, 34, 45, 50, 51, 53, 55, 57, 59, 61, 65, 67, 68, 69, 71, 74, 75, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 106, 108, 109, 114, 117, 118, 119, 120, 123, 127, 128, 130, 131, 133, 134, 137, 138, 141, 143, 144, 146, 153, 154, 155, 156, 157, 158, 160, 161, 164, 166, 169, 170, 172, 175, 176, 177, 178, 182, 184, 185, 192, 193, 194, 195, 197, 198, 201, 227, 228, 233, 238, 242, 252, 253, 256, 262, 265, 273, 275, 279, 286, 290, 297, 298, 304, 305, 306, 307, 311, 313], "until": [20, 28, 39, 44, 69, 79, 85, 95, 97, 100, 101, 108, 109, 116, 118, 119, 120, 135, 136, 141, 146, 151, 153, 157, 164, 170, 171, 173, 176, 184, 197, 199, 202, 203, 221, 227, 228, 235, 237, 238, 239, 254, 255, 260, 265, 269, 271, 275, 286, 298, 299, 302, 305, 313], "subject": [3, 20, 21, 39, 51, 79, 94, 97, 103, 127, 130, 152, 158, 171, 183, 185, 196, 199, 205, 246, 249, 270, 276, 299, 312, 314], "studi": [9, 10, 20, 23, 43, 44, 57, 58, 83, 85, 101, 107, 119, 126, 135, 138, 152, 160, 170, 203, 210, 211, 221, 225, 238, 245, 254, 257, 270, 278, 298, 314], "If": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 20, 24, 25, 26, 27, 28, 30, 33, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 184, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 206, 212, 214, 215, 217, 218, 219, 223, 224, 225, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 278, 279, 280, 283, 286, 287, 288, 290, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 310, 311, 313, 315, 316, 318], "succe": [20, 43, 83, 102, 171, 204, 299], "understand": [2, 3, 4, 7, 10, 17, 20, 30, 34, 41, 44, 47, 48, 51, 52, 55, 58, 64, 71, 74, 81, 85, 87, 88, 94, 95, 101, 102, 103, 104, 105, 106, 113, 116, 118, 123, 126, 127, 130, 131, 133, 136, 138, 141, 142, 148, 150, 152, 157, 160, 161, 166, 167, 171, 172, 174, 175, 176, 181, 184, 186, 196, 197, 203, 204, 205, 206, 216, 218, 223, 224, 232, 235, 237, 242, 245, 246, 249, 250, 252, 255, 257, 260, 261, 266, 268, 270, 275, 278, 279, 288, 289, 299, 301, 303, 305, 310, 313, 315], "otherwis": [3, 4, 5, 8, 14, 20, 24, 25, 26, 28, 30, 35, 37, 39, 45, 47, 51, 52, 53, 56, 62, 65, 66, 67, 69, 71, 75, 77, 79, 84, 87, 90, 93, 94, 99, 104, 105, 107, 110, 113, 117, 120, 123, 129, 131, 134, 135, 136, 138, 149, 152, 156, 157, 161, 166, 172, 175, 176, 179, 186, 192, 195, 196, 201, 206, 212, 223, 225, 229, 232, 236, 239, 242, 248, 250, 253, 254, 255, 257, 267, 270, 274, 275, 279, 288, 292, 293, 294, 301, 304, 305, 308, 315], "bl": 20, "power": [1, 4, 10, 15, 20, 34, 47, 48, 50, 52, 58, 74, 87, 88, 99, 101, 102, 106, 115, 116, 117, 120, 122, 126, 129, 130, 136, 139, 143, 152, 157, 166, 170, 184, 201, 203, 204, 212, 214, 215, 224, 234, 235, 236, 239, 241, 245, 248, 249, 255, 258, 262, 270, 275, 288, 298, 313], "ibm": 20, "describ": [1, 3, 7, 9, 20, 27, 30, 35, 50, 51, 55, 57, 68, 71, 75, 93, 100, 115, 116, 118, 130, 135, 136, 138, 153, 156, 162, 169, 178, 195, 202, 216, 234, 235, 237, 249, 254, 255, 257, 271, 274, 280, 291, 297, 307], "class": [2, 12, 20, 26, 28, 29, 30, 31, 33, 39, 40, 41, 43, 44, 46, 47, 60, 67, 69, 70, 71, 72, 73, 79, 80, 81, 83, 85, 86, 87, 92, 93, 94, 100, 101, 102, 104, 105, 106, 110, 117, 119, 127, 131, 134, 135, 136, 138, 139, 140, 143, 146, 147, 155, 156, 157, 158, 160, 162, 166, 168, 169, 171, 172, 176, 179, 181, 182, 183, 184, 188, 194, 195, 196, 202, 203, 204, 206, 210, 211, 216, 217, 223, 224, 229, 236, 238, 246, 250, 253, 254, 255, 257, 258, 259, 262, 264, 265, 273, 274, 275, 276, 278, 280, 288, 296, 297, 299, 301, 308, 310, 311, 312, 313, 317], "ultim": [8, 20, 56, 118, 136, 165, 237, 255, 287], "help": [1, 7, 9, 10, 11, 17, 20, 21, 24, 25, 27, 28, 30, 34, 39, 41, 43, 44, 45, 47, 48, 50, 55, 57, 58, 59, 64, 65, 66, 68, 69, 71, 74, 79, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 101, 102, 103, 104, 106, 107, 116, 117, 118, 120, 122, 123, 126, 127, 131, 133, 134, 135, 136, 138, 139, 140, 142, 143, 147, 148, 152, 155, 157, 161, 164, 168, 170, 171, 174, 176, 177, 178, 182, 186, 191, 192, 193, 194, 196, 197, 198, 199, 201, 203, 204, 205, 206, 218, 224, 225, 235, 236, 237, 239, 241, 242, 245, 246, 250, 252, 253, 254, 255, 257, 258, 259, 261, 262, 264, 266, 270, 273, 275, 279, 282, 286, 291, 294, 296, 298, 299, 303, 305, 306, 307, 311, 315], "visual": [2, 3, 4, 5, 10, 13, 14, 20, 25, 27, 35, 37, 39, 44, 45, 51, 52, 53, 58, 61, 62, 66, 68, 75, 76, 77, 79, 84, 85, 90, 91, 93, 97, 99, 105, 106, 126, 164, 167, 184, 192, 193, 195, 199, 201, 214, 215, 223, 224, 245, 286, 289, 313], "action": [5, 7, 25, 26, 34, 35, 39, 53, 55, 66, 67, 74, 75, 79, 89, 95, 96, 109, 123, 130, 141, 147, 161, 178, 191, 197, 198, 228, 242, 249, 260, 264, 279, 282, 294, 307], "medicin": [2, 20, 171, 299], "b": [6, 7, 10, 20, 41, 54, 55, 58, 81, 97, 105, 106, 113, 114, 116, 117, 126, 130, 131, 135, 136, 143, 146, 147, 148, 160, 161, 162, 182, 199, 212, 223, 224, 232, 233, 235, 236, 245, 249, 250, 254, 255, 262, 264, 265, 266, 278, 279, 280, 311], "spine": 20, "potentiti": 20, "post": [5, 10, 11, 15, 17, 20, 23, 24, 25, 26, 31, 35, 36, 39, 43, 44, 46, 47, 53, 58, 59, 64, 65, 66, 67, 72, 75, 76, 79, 83, 85, 86, 87, 90, 91, 101, 107, 117, 119, 120, 126, 128, 130, 135, 150, 151, 152, 155, 162, 169, 192, 193, 203, 225, 236, 238, 239, 245, 247, 249, 254, 268, 269, 270, 273, 280, 281, 293, 297], "psp": 20, "o": [6, 8, 20, 25, 26, 47, 54, 56, 66, 67, 87, 93, 94, 106, 107, 113, 114, 117, 124, 127, 131, 134, 136, 138, 157, 158, 161, 162, 164, 181, 195, 196, 210, 211, 224, 225, 232, 233, 236, 243, 246, 250, 253, 255, 257, 275, 276, 279, 280, 286, 310], "histor": [20, 102, 121, 130, 138, 204, 240, 249, 257, 283], "perspect": [3, 9, 11, 20, 34, 51, 57, 59, 74, 132, 144, 157, 170, 251, 263, 275, 298], "hook": [20, 175, 304], "schwann": 20, "interestingli": [6, 20, 33, 54, 73, 102, 122, 204, 241], "sigmund": 20, "freud": 20, "draw": [20, 26, 34, 44, 67, 74, 85, 105, 106, 107, 139, 171, 223, 224, 225, 258, 299], "crayfish": 20, "nice": [1, 6, 9, 10, 11, 20, 24, 25, 46, 50, 54, 57, 58, 59, 65, 66, 86, 90, 92, 98, 103, 106, 110, 117, 118, 126, 129, 130, 133, 136, 137, 149, 155, 157, 164, 165, 170, 174, 175, 177, 192, 194, 200, 205, 210, 211, 224, 229, 236, 237, 245, 248, 249, 252, 255, 256, 267, 273, 275, 286, 287, 298, 303, 304, 306], "imag": [2, 8, 11, 20, 25, 26, 45, 56, 59, 66, 67, 84, 99, 106, 123, 144, 148, 162, 164, 177, 180, 186, 201, 224, 242, 263, 266, 280, 286, 306, 309, 315], "video": [2, 20, 31, 44, 72, 85, 89, 94, 108, 146, 159, 163, 171, 191, 196, 210, 211, 215, 216, 218, 219, 227, 265, 291, 299], "live": [4, 5, 14, 20, 28, 45, 46, 52, 53, 62, 69, 84, 86, 97, 118, 130, 131, 136, 142, 147, 153, 171, 176, 177, 182, 189, 199, 211, 237, 249, 250, 255, 261, 264, 271, 294, 299, 305, 306, 311, 314, 318], "controversi": [20, 138, 150, 257, 268], "ryc": 20, "origin": [5, 8, 9, 16, 20, 24, 26, 27, 28, 30, 33, 34, 35, 40, 53, 56, 57, 63, 65, 67, 68, 69, 71, 73, 74, 75, 80, 91, 92, 93, 94, 99, 101, 102, 103, 111, 113, 129, 130, 131, 134, 139, 141, 144, 146, 148, 150, 151, 153, 155, 158, 169, 170, 173, 175, 176, 178, 179, 182, 184, 185, 193, 194, 195, 196, 201, 203, 204, 205, 209, 211, 214, 215, 230, 232, 248, 249, 250, 253, 258, 260, 263, 265, 266, 268, 269, 271, 273, 276, 290, 297, 298, 302, 304, 305, 307, 308, 311, 313], "artist": 20, "look": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 15, 16, 17, 20, 24, 25, 26, 28, 30, 33, 34, 37, 39, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 126, 127, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 152, 153, 155, 156, 157, 158, 160, 161, 162, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 216, 219, 220, 223, 224, 225, 228, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 245, 246, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 273, 274, 275, 276, 278, 279, 280, 286, 287, 292, 293, 296, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316], "primit": [20, 34, 44, 74, 85, 175, 304], "nervou": [20, 151, 269], "anim": [15, 20, 34, 44, 74, 85, 106, 224], "method": [1, 2, 3, 6, 10, 11, 14, 17, 20, 24, 26, 27, 33, 34, 40, 41, 45, 47, 48, 50, 51, 54, 58, 59, 62, 64, 65, 67, 68, 73, 74, 80, 81, 84, 87, 88, 93, 95, 99, 100, 101, 106, 113, 114, 115, 116, 126, 127, 129, 130, 134, 135, 137, 138, 140, 141, 143, 144, 146, 148, 150, 152, 156, 157, 161, 162, 164, 165, 168, 169, 171, 172, 175, 176, 177, 179, 183, 184, 186, 195, 197, 201, 202, 203, 210, 224, 232, 233, 235, 245, 246, 248, 249, 253, 254, 256, 257, 259, 260, 262, 263, 265, 266, 268, 270, 274, 275, 279, 280, 286, 287, 296, 297, 299, 301, 304, 305, 306, 308, 312, 313, 315], "conceiv": [20, 142, 261], "flow": [1, 7, 20, 50, 55, 93, 101, 133, 151, 195, 203, 252, 269], "could": [4, 5, 6, 7, 8, 9, 11, 13, 20, 24, 25, 26, 30, 33, 34, 37, 39, 42, 43, 44, 46, 47, 52, 53, 54, 55, 56, 57, 59, 61, 65, 66, 67, 71, 73, 74, 77, 79, 82, 83, 85, 86, 87, 90, 91, 93, 94, 95, 96, 100, 101, 103, 104, 106, 107, 113, 114, 116, 117, 120, 121, 123, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 164, 165, 169, 170, 171, 172, 175, 176, 178, 180, 182, 184, 186, 192, 193, 195, 196, 197, 198, 202, 203, 205, 206, 211, 212, 224, 225, 232, 233, 235, 236, 239, 240, 242, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 286, 287, 292, 294, 297, 298, 299, 301, 304, 305, 307, 309, 311, 313, 315], "commun": [0, 1, 5, 8, 9, 20, 26, 44, 45, 47, 49, 50, 53, 56, 57, 67, 84, 85, 87, 92, 94, 97, 101, 102, 103, 108, 114, 119, 120, 128, 138, 149, 155, 157, 160, 161, 167, 169, 176, 182, 186, 189, 194, 196, 199, 203, 204, 205, 227, 233, 238, 239, 247, 257, 267, 273, 275, 278, 279, 289, 297, 305, 311, 314, 315, 318], "drew": [20, 26, 67], "arrow": [2, 3, 20, 26, 35, 51, 67, 75, 90, 110, 119, 174, 177, 192, 229, 238, 303, 306], "show": [1, 4, 6, 7, 9, 10, 11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 30, 34, 37, 39, 41, 43, 44, 45, 46, 47, 48, 50, 52, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 71, 74, 77, 79, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 109, 110, 113, 114, 115, 116, 118, 123, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 143, 144, 146, 147, 148, 149, 152, 153, 156, 157, 159, 160, 161, 162, 164, 165, 166, 170, 172, 174, 175, 176, 177, 178, 180, 182, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 205, 206, 211, 212, 214, 216, 219, 223, 224, 228, 229, 232, 233, 234, 235, 237, 242, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 262, 263, 264, 265, 266, 267, 270, 271, 274, 275, 277, 278, 279, 280, 286, 287, 288, 292, 294, 298, 301, 303, 304, 305, 306, 307, 309, 311, 313, 315], "thought": [9, 12, 15, 16, 17, 22, 30, 33, 35, 57, 60, 63, 64, 71, 73, 75, 91, 95, 103, 108, 128, 129, 132, 140, 150, 151, 157, 165, 171, 193, 197, 205, 216, 219, 227, 247, 248, 251, 259, 268, 269, 275, 287, 294, 299], "bodi": [7, 20, 45, 55, 84, 103, 116, 123, 147, 170, 174, 177, 205, 235, 242, 264, 298, 303, 306], "re": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 16, 20, 22, 25, 26, 27, 28, 30, 33, 34, 35, 37, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 66, 67, 68, 69, 71, 73, 74, 75, 77, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 210, 211, 212, 214, 218, 220, 223, 224, 225, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 278, 279, 280, 286, 287, 289, 290, 291, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 318], "deal": [0, 1, 7, 10, 20, 27, 30, 33, 34, 35, 37, 39, 41, 43, 49, 50, 55, 58, 68, 71, 73, 74, 75, 77, 79, 81, 83, 94, 97, 99, 100, 101, 102, 103, 105, 107, 113, 117, 123, 126, 127, 129, 130, 133, 134, 137, 138, 146, 147, 148, 151, 156, 160, 161, 162, 167, 168, 169, 171, 172, 176, 177, 178, 182, 188, 196, 199, 201, 202, 203, 204, 205, 219, 223, 225, 232, 236, 242, 245, 246, 248, 249, 252, 253, 256, 257, 264, 265, 266, 269, 274, 278, 279, 280, 289, 294, 296, 297, 299, 301, 305, 306, 307, 311, 317], "polar": [2, 7, 13, 15, 20, 55, 61, 149, 150, 164, 178, 186, 267, 268, 286, 307, 315], "receiv": [20, 117, 119, 157, 171, 236, 238, 275, 299], "somehow": [20, 34, 39, 74, 79, 132, 135, 147, 152, 251, 254, 264, 270, 294], "n": [1, 3, 6, 10, 20, 24, 30, 39, 41, 50, 51, 54, 58, 65, 71, 79, 81, 93, 94, 100, 113, 114, 116, 117, 122, 123, 126, 130, 134, 136, 143, 144, 146, 148, 152, 157, 158, 160, 161, 162, 165, 168, 170, 177, 178, 184, 195, 196, 202, 210, 212, 214, 215, 217, 232, 233, 235, 236, 241, 242, 245, 249, 253, 255, 262, 263, 265, 266, 270, 275, 276, 278, 279, 280, 287, 296, 298, 306, 307, 313], "recept": 20, "send": [15, 20, 28, 69, 93, 104, 109, 131, 133, 161, 185, 195, 206, 210, 228, 250, 252, 279, 294], "agre": [9, 20, 57, 91, 118, 120, 133, 138, 170, 171, 174, 193, 237, 239, 252, 257, 298, 299, 303], "debat": [20, 172, 301], "podium": 20, "tree": [1, 6, 20, 25, 34, 47, 50, 54, 66, 74, 87, 95, 103, 107, 114, 136, 153, 174, 197, 205, 225, 233, 255, 271, 303], "varicos": 20, "bouton": 20, "where": [0, 3, 6, 7, 9, 10, 11, 13, 14, 20, 24, 26, 27, 28, 30, 31, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 55, 57, 58, 59, 61, 62, 65, 67, 68, 69, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 105, 106, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 146, 147, 148, 151, 152, 153, 155, 156, 157, 160, 161, 162, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 178, 181, 186, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 210, 215, 216, 223, 224, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 264, 265, 266, 269, 270, 271, 273, 274, 275, 278, 279, 280, 286, 287, 288, 289, 294, 295, 297, 299, 301, 302, 303, 304, 307, 310, 315, 317, 318], "neurotransmitt": 20, "sometim": [0, 4, 9, 20, 24, 27, 30, 34, 39, 40, 41, 43, 47, 48, 49, 52, 57, 65, 68, 71, 74, 79, 80, 81, 83, 87, 88, 92, 94, 97, 99, 101, 107, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 144, 148, 150, 152, 154, 156, 168, 170, 171, 175, 177, 181, 182, 184, 186, 194, 196, 199, 201, 203, 215, 225, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 260, 263, 266, 268, 270, 272, 274, 293, 296, 298, 299, 304, 306, 310, 311, 313, 315], "5": [0, 1, 3, 6, 7, 9, 10, 17, 20, 25, 26, 30, 33, 34, 39, 47, 49, 50, 51, 54, 55, 57, 58, 64, 66, 67, 71, 73, 74, 79, 87, 92, 94, 95, 100, 105, 106, 113, 115, 116, 118, 119, 121, 123, 126, 127, 129, 130, 131, 132, 135, 137, 139, 141, 143, 146, 147, 148, 152, 156, 158, 160, 162, 166, 168, 170, 172, 174, 175, 176, 177, 182, 188, 194, 196, 197, 202, 210, 211, 212, 214, 215, 216, 217, 219, 220, 223, 224, 232, 234, 235, 237, 238, 240, 242, 245, 246, 248, 249, 250, 251, 254, 256, 258, 260, 262, 264, 265, 266, 270, 274, 276, 278, 280, 288, 293, 296, 298, 301, 303, 304, 305, 306, 311, 317], "000": [6, 9, 20, 39, 43, 54, 57, 79, 83, 95, 103, 107, 117, 121, 142, 146, 160, 165, 178, 197, 205, 214, 225, 236, 240, 261, 265, 278, 287, 307], "nb": [20, 175, 304], "import": [1, 3, 4, 6, 7, 8, 9, 10, 11, 20, 26, 27, 28, 30, 31, 33, 34, 37, 39, 40, 41, 44, 45, 46, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 67, 68, 69, 71, 72, 73, 74, 77, 79, 80, 81, 84, 85, 86, 88, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 112, 113, 114, 115, 116, 118, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 146, 148, 152, 153, 155, 156, 157, 160, 161, 162, 165, 166, 168, 169, 170, 171, 173, 175, 176, 178, 179, 180, 181, 185, 186, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 211, 212, 214, 219, 220, 223, 224, 231, 232, 233, 234, 235, 237, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 265, 266, 270, 271, 273, 274, 275, 278, 279, 280, 287, 288, 294, 296, 297, 298, 299, 302, 304, 305, 307, 308, 309, 310, 315], "lesson": [2, 20, 30, 33, 71, 73, 97, 101, 102, 131, 144, 147, 167, 199, 203, 204, 263, 289, 293], "associ": [0, 4, 20, 28, 34, 37, 47, 49, 52, 69, 74, 77, 87, 91, 94, 96, 116, 117, 130, 131, 157, 164, 173, 176, 177, 193, 196, 198, 210, 211, 235, 236, 249, 250, 275, 286, 302, 305, 306], "up": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 20, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 39, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 105, 108, 109, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 133, 135, 136, 139, 140, 141, 143, 144, 146, 148, 150, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 181, 183, 185, 191, 192, 193, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 210, 211, 212, 216, 219, 223, 227, 228, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 245, 248, 249, 250, 251, 252, 254, 255, 258, 259, 260, 262, 263, 265, 266, 268, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 286, 287, 289, 290, 293, 294, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 310, 312, 314], "thoushand": 20, "littl": [3, 6, 7, 8, 9, 11, 13, 20, 29, 33, 34, 35, 39, 43, 44, 46, 47, 48, 51, 54, 55, 56, 57, 59, 61, 70, 73, 74, 75, 79, 83, 85, 86, 87, 88, 90, 92, 93, 100, 105, 106, 113, 119, 127, 130, 131, 134, 136, 137, 142, 144, 146, 147, 148, 154, 161, 165, 167, 171, 178, 179, 182, 185, 189, 192, 194, 195, 202, 216, 223, 224, 232, 238, 246, 249, 250, 253, 255, 256, 261, 263, 264, 265, 266, 272, 279, 287, 289, 292, 293, 299, 307, 308, 311, 318], "chang": [1, 4, 5, 6, 7, 10, 11, 15, 20, 24, 26, 28, 30, 33, 34, 35, 37, 40, 46, 47, 48, 50, 52, 53, 54, 55, 58, 59, 65, 67, 69, 71, 73, 74, 75, 77, 80, 86, 87, 88, 90, 94, 97, 98, 103, 106, 112, 114, 115, 117, 121, 124, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 146, 147, 148, 150, 153, 154, 157, 160, 164, 166, 167, 172, 174, 175, 176, 177, 178, 179, 181, 188, 192, 196, 199, 200, 205, 209, 210, 214, 215, 224, 231, 233, 234, 236, 240, 243, 245, 246, 248, 250, 251, 252, 253, 255, 256, 257, 258, 262, 263, 264, 265, 266, 268, 271, 272, 275, 278, 286, 288, 289, 301, 303, 304, 305, 306, 307, 308, 310, 317], "local": [1, 2, 5, 8, 20, 25, 28, 36, 37, 41, 42, 45, 47, 50, 53, 56, 66, 69, 76, 77, 81, 82, 84, 87, 91, 93, 95, 101, 103, 112, 114, 116, 117, 118, 121, 123, 128, 130, 132, 136, 138, 153, 168, 178, 180, 181, 182, 193, 195, 197, 203, 205, 231, 233, 235, 236, 237, 240, 242, 247, 249, 251, 255, 257, 271, 291, 296, 307, 310, 311, 314], "red": [20, 28, 48, 69, 88, 174, 175, 303, 304], "pictur": [13, 20, 25, 44, 61, 66, 85, 113, 115, 117, 146, 176, 232, 234, 236, 265, 305], "posit": [3, 4, 5, 9, 10, 20, 26, 34, 39, 45, 51, 52, 53, 57, 58, 67, 74, 79, 84, 91, 94, 101, 107, 113, 126, 129, 130, 136, 138, 140, 141, 147, 157, 164, 166, 169, 171, 176, 184, 187, 193, 196, 203, 209, 211, 212, 215, 225, 232, 245, 248, 249, 255, 257, 259, 260, 264, 275, 282, 286, 288, 297, 299, 305, 313, 316], "excitatori": 20, "inhibitori": 20, "togeth": [0, 1, 5, 11, 14, 17, 20, 24, 26, 30, 34, 37, 43, 49, 50, 53, 59, 62, 64, 65, 67, 71, 74, 77, 83, 90, 93, 95, 102, 105, 107, 110, 111, 112, 118, 120, 129, 133, 134, 138, 142, 156, 157, 160, 161, 168, 176, 180, 184, 186, 192, 195, 197, 204, 223, 225, 229, 230, 231, 237, 239, 248, 252, 253, 257, 261, 274, 275, 278, 279, 294, 296, 305, 309, 313, 315], "sum": [3, 8, 10, 12, 20, 27, 30, 48, 51, 56, 58, 60, 68, 71, 88, 95, 113, 114, 115, 121, 126, 135, 146, 148, 168, 171, 175, 197, 232, 233, 234, 240, 245, 254, 265, 266, 296, 299, 304], "decid": [1, 5, 7, 15, 20, 22, 26, 33, 43, 46, 50, 53, 55, 67, 73, 83, 86, 91, 95, 96, 98, 100, 103, 111, 120, 121, 124, 129, 136, 140, 160, 164, 171, 172, 180, 183, 186, 193, 197, 198, 200, 202, 205, 211, 230, 239, 240, 243, 248, 255, 259, 278, 286, 290, 291, 294, 299, 301, 309, 312, 315], "whether": [1, 5, 6, 7, 9, 12, 13, 20, 25, 28, 30, 34, 39, 43, 44, 48, 50, 53, 54, 55, 57, 60, 61, 66, 69, 71, 74, 79, 83, 85, 88, 90, 91, 92, 93, 95, 97, 101, 102, 106, 108, 113, 123, 129, 130, 131, 133, 134, 136, 137, 138, 141, 148, 152, 156, 157, 158, 161, 168, 171, 172, 176, 182, 186, 187, 192, 193, 194, 195, 197, 199, 203, 204, 224, 227, 232, 242, 248, 249, 250, 252, 253, 255, 256, 257, 260, 266, 270, 274, 275, 276, 279, 283, 296, 299, 301, 305, 311, 315, 316], "ye": [1, 2, 8, 9, 20, 24, 25, 27, 30, 34, 40, 43, 44, 50, 56, 57, 65, 66, 68, 71, 74, 80, 83, 85, 89, 93, 94, 95, 113, 120, 122, 123, 129, 130, 138, 143, 153, 156, 161, 167, 171, 173, 183, 188, 191, 196, 197, 216, 232, 239, 241, 242, 248, 249, 257, 262, 271, 274, 279, 289, 299, 302, 312, 317], "set": [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 20, 24, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 39, 40, 42, 43, 47, 48, 50, 51, 53, 54, 55, 56, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 80, 82, 83, 87, 88, 90, 93, 95, 96, 97, 101, 103, 105, 106, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 143, 144, 146, 147, 148, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 180, 181, 183, 184, 186, 187, 188, 192, 195, 197, 198, 199, 203, 205, 210, 212, 214, 215, 216, 223, 224, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 268, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 283, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 306, 307, 309, 310, 312, 313, 315, 316, 317], "tak": 20, "pyramid": 20, "cortex": 20, "after": [1, 3, 4, 5, 7, 9, 10, 11, 15, 20, 24, 25, 26, 27, 28, 30, 34, 35, 37, 39, 41, 44, 45, 47, 50, 51, 52, 53, 55, 57, 58, 59, 65, 66, 67, 68, 69, 71, 74, 75, 77, 79, 81, 84, 85, 87, 91, 92, 93, 95, 97, 98, 99, 100, 104, 107, 110, 114, 115, 117, 118, 123, 125, 126, 129, 130, 133, 134, 136, 137, 141, 142, 143, 147, 148, 151, 152, 157, 158, 161, 164, 165, 168, 171, 172, 173, 174, 175, 176, 178, 179, 182, 183, 184, 186, 187, 193, 194, 195, 197, 199, 200, 201, 202, 206, 211, 225, 229, 233, 234, 236, 237, 242, 244, 245, 248, 249, 252, 253, 255, 256, 260, 261, 262, 264, 266, 269, 270, 275, 276, 279, 283, 286, 287, 290, 294, 296, 299, 301, 302, 303, 304, 305, 307, 308, 311, 312, 313, 315, 316], "soma": 20, "segment": [20, 48, 88, 105, 138, 143, 147, 210, 223, 257, 262, 264], "hot": [20, 107, 161, 167, 182, 225, 279, 289, 311], "region": [20, 45, 84, 114, 123, 233, 242], "consist": [1, 6, 7, 8, 10, 11, 20, 25, 30, 36, 39, 44, 45, 47, 50, 54, 55, 56, 58, 59, 66, 71, 76, 79, 84, 85, 87, 90, 94, 101, 104, 107, 112, 113, 116, 123, 129, 130, 136, 138, 144, 146, 147, 148, 151, 152, 153, 156, 157, 160, 161, 162, 164, 171, 173, 174, 176, 177, 178, 180, 182, 184, 192, 196, 203, 206, 218, 225, 231, 232, 235, 242, 248, 249, 255, 257, 263, 264, 265, 266, 269, 270, 271, 274, 275, 278, 279, 280, 286, 294, 299, 302, 303, 305, 306, 307, 309, 311, 313], "special": [1, 7, 9, 17, 20, 27, 33, 34, 40, 50, 55, 57, 64, 68, 73, 74, 80, 92, 93, 95, 97, 101, 120, 129, 130, 134, 136, 137, 146, 148, 152, 160, 162, 167, 168, 170, 172, 175, 176, 182, 194, 195, 197, 199, 203, 216, 239, 248, 249, 253, 255, 256, 265, 266, 270, 278, 280, 289, 294, 296, 298, 301, 304, 305, 311], "channelss": 20, "enabl": [11, 20, 25, 26, 35, 37, 39, 44, 47, 59, 66, 67, 75, 77, 79, 85, 87, 91, 93, 97, 102, 118, 120, 123, 129, 132, 153, 156, 157, 164, 168, 175, 177, 178, 184, 193, 195, 199, 204, 237, 239, 242, 248, 251, 271, 274, 275, 286, 296, 304, 306, 307, 313], "propag": [20, 96, 198], "down": [1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 16, 20, 30, 33, 35, 39, 41, 42, 43, 44, 46, 47, 50, 51, 52, 54, 55, 56, 57, 59, 60, 62, 63, 71, 73, 75, 79, 81, 82, 83, 85, 86, 87, 90, 91, 93, 94, 95, 96, 99, 102, 103, 105, 108, 109, 117, 118, 120, 122, 123, 125, 130, 131, 132, 136, 137, 138, 139, 140, 144, 151, 152, 156, 157, 160, 161, 165, 168, 171, 174, 175, 179, 182, 183, 184, 186, 187, 192, 193, 195, 196, 197, 198, 201, 204, 205, 210, 212, 223, 227, 228, 236, 237, 239, 241, 242, 244, 249, 250, 251, 255, 256, 257, 258, 259, 263, 269, 270, 274, 275, 278, 279, 287, 293, 296, 299, 303, 304, 308, 311, 312, 313, 315, 316], "branch": [1, 5, 7, 11, 20, 35, 43, 50, 53, 55, 59, 75, 83, 90, 92, 96, 101, 103, 153, 192, 194, 198, 203, 205, 210, 271], "node": [1, 2, 4, 9, 20, 46, 50, 52, 57, 86, 111, 122, 123, 124, 162, 184, 241, 242, 243, 280, 313], "ranvier": 20, "inter": [20, 144, 176, 263, 305], "myelin": 20, "sheath": 20, "lipid": 20, "isol": [1, 20, 24, 42, 47, 50, 65, 82, 87, 91, 93, 94, 95, 117, 118, 138, 154, 182, 193, 195, 196, 197, 236, 237, 257, 272, 283, 311], "termin": [3, 6, 20, 24, 25, 28, 39, 47, 51, 54, 65, 66, 69, 79, 87, 89, 91, 92, 95, 97, 98, 120, 122, 132, 133, 136, 149, 153, 157, 164, 165, 171, 174, 181, 182, 184, 191, 193, 194, 197, 199, 200, 239, 241, 251, 252, 255, 267, 271, 275, 286, 287, 299, 303, 310, 311, 313], "pre": [1, 14, 20, 24, 25, 36, 37, 50, 62, 65, 66, 76, 77, 100, 117, 146, 151, 155, 158, 164, 171, 175, 181, 202, 211, 236, 265, 269, 273, 276, 286, 299, 304, 310, 314], "site": [5, 9, 11, 15, 20, 24, 25, 45, 53, 57, 59, 65, 66, 84, 93, 95, 96, 97, 105, 114, 121, 123, 125, 127, 134, 153, 155, 160, 161, 163, 170, 177, 182, 188, 195, 197, 198, 199, 223, 233, 240, 242, 244, 246, 253, 271, 273, 278, 279, 281, 285, 291, 293, 294, 298, 306, 311, 317], "per": [5, 11, 13, 20, 25, 39, 40, 44, 53, 59, 61, 66, 79, 80, 85, 94, 95, 96, 98, 113, 118, 120, 123, 127, 133, 137, 139, 146, 155, 162, 165, 171, 175, 177, 183, 185, 196, 197, 198, 200, 212, 218, 232, 237, 239, 242, 246, 252, 256, 258, 265, 273, 280, 287, 292, 299, 304, 306, 312], "bare": [1, 4, 10, 20, 50, 52, 58, 126, 137, 186, 245, 256, 315], "internod": 20, "call": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 26, 28, 30, 31, 34, 37, 40, 42, 43, 45, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 71, 72, 74, 77, 80, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 97, 99, 100, 102, 103, 104, 105, 106, 107, 111, 113, 114, 115, 116, 118, 119, 121, 122, 124, 126, 127, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 144, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 160, 161, 162, 164, 166, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 186, 192, 193, 194, 195, 196, 197, 199, 201, 202, 204, 205, 206, 208, 210, 218, 223, 224, 225, 230, 232, 233, 234, 235, 237, 238, 240, 241, 243, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 263, 264, 265, 266, 268, 269, 270, 271, 274, 275, 276, 278, 279, 280, 286, 288, 290, 293, 296, 297, 298, 301, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 315], "glial": 20, "name": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 20, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 95, 96, 97, 99, 100, 101, 103, 104, 106, 113, 114, 116, 117, 118, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 143, 144, 146, 147, 152, 156, 157, 158, 160, 164, 166, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 184, 186, 188, 192, 195, 197, 198, 199, 201, 202, 203, 205, 206, 224, 232, 233, 235, 236, 237, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 262, 263, 264, 265, 270, 274, 275, 276, 278, 286, 288, 296, 297, 298, 299, 301, 303, 304, 305, 307, 308, 310, 311, 313, 315, 317], "aren": [20, 39, 43, 79, 83, 93, 114, 129, 141, 148, 171, 176, 179, 187, 195, 233, 248, 260, 266, 299, 305, 308, 316], "worth": [1, 3, 11, 14, 15, 17, 20, 24, 30, 34, 39, 44, 45, 50, 51, 59, 62, 64, 65, 71, 74, 79, 84, 85, 91, 95, 97, 100, 102, 106, 121, 129, 130, 138, 141, 143, 149, 150, 151, 153, 160, 161, 164, 171, 176, 182, 186, 193, 197, 199, 202, 204, 224, 240, 248, 249, 257, 260, 262, 267, 268, 269, 271, 278, 279, 286, 294, 299, 305, 311, 315], "rememb": [3, 4, 7, 11, 17, 20, 26, 27, 30, 43, 44, 47, 51, 52, 55, 59, 64, 67, 68, 71, 83, 85, 87, 90, 91, 96, 104, 113, 116, 127, 130, 131, 133, 138, 144, 147, 148, 150, 152, 161, 162, 170, 174, 182, 187, 192, 193, 198, 206, 208, 211, 215, 216, 219, 232, 235, 246, 249, 250, 252, 257, 263, 264, 266, 268, 270, 279, 280, 290, 298, 303, 311, 316], "oligodendrocyt": 20, "boost": [20, 25, 66, 114, 121, 178, 233, 240, 290, 307], "sclerosi": 20, "diseas": [20, 136, 255], "immun": 20, "attack": [8, 20, 56, 160, 278], "myelen": 20, "amplifi": 20, "highli": [10, 20, 28, 34, 43, 44, 58, 69, 74, 83, 85, 93, 94, 103, 106, 107, 121, 126, 127, 133, 148, 182, 184, 195, 196, 205, 224, 225, 240, 245, 246, 252, 266, 311, 313], "centimet": 20, "meter": [20, 129, 139, 168, 248, 258, 296], "awai": [1, 3, 6, 20, 25, 26, 28, 30, 34, 50, 51, 54, 66, 67, 69, 71, 74, 101, 103, 106, 109, 130, 131, 133, 164, 171, 172, 173, 174, 178, 183, 203, 205, 216, 224, 228, 249, 250, 252, 286, 294, 299, 301, 302, 303, 307, 312], "along": [1, 3, 4, 5, 8, 12, 15, 20, 24, 26, 27, 28, 30, 39, 43, 47, 48, 50, 51, 52, 53, 56, 60, 65, 67, 68, 69, 71, 79, 83, 87, 88, 90, 91, 92, 93, 95, 97, 99, 100, 101, 103, 105, 106, 109, 116, 132, 133, 135, 138, 153, 155, 156, 158, 161, 162, 164, 165, 168, 169, 170, 171, 173, 175, 176, 177, 182, 183, 186, 192, 193, 194, 195, 197, 199, 201, 202, 203, 205, 210, 211, 212, 223, 224, 228, 235, 251, 252, 254, 257, 271, 273, 274, 276, 279, 280, 286, 287, 296, 297, 298, 299, 302, 304, 305, 306, 311, 312, 315], "cover": [1, 3, 4, 10, 11, 14, 15, 20, 27, 28, 34, 39, 45, 48, 50, 51, 52, 58, 59, 62, 68, 69, 74, 79, 84, 88, 89, 90, 93, 95, 97, 99, 101, 103, 107, 113, 115, 122, 123, 126, 127, 131, 133, 136, 150, 151, 152, 156, 158, 160, 161, 166, 169, 170, 171, 175, 177, 181, 182, 191, 192, 195, 197, 199, 201, 203, 205, 218, 225, 232, 234, 241, 242, 245, 246, 250, 252, 255, 268, 269, 270, 274, 276, 278, 279, 288, 297, 298, 299, 304, 306, 310, 311], "except": [2, 8, 15, 16, 20, 24, 26, 28, 30, 34, 35, 37, 39, 56, 63, 65, 67, 69, 71, 74, 75, 77, 79, 94, 95, 97, 100, 102, 103, 106, 113, 117, 123, 127, 129, 131, 134, 136, 138, 139, 141, 143, 146, 148, 151, 152, 156, 157, 158, 162, 164, 169, 172, 175, 196, 197, 199, 202, 204, 205, 210, 224, 232, 236, 242, 246, 248, 250, 253, 255, 257, 258, 260, 262, 265, 266, 269, 270, 274, 275, 276, 280, 286, 291, 297, 301, 304], "frequent": [7, 20, 34, 47, 55, 74, 87, 90, 93, 95, 97, 104, 110, 118, 120, 141, 164, 176, 178, 182, 192, 195, 197, 199, 206, 229, 237, 239, 260, 286, 305, 307, 311], "swell": 20, "hide": [11, 20, 59, 100, 186, 202, 315], "most": [0, 2, 3, 5, 6, 7, 9, 11, 13, 17, 20, 24, 26, 28, 30, 33, 34, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 53, 54, 55, 57, 59, 61, 64, 65, 67, 69, 71, 73, 74, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 113, 116, 117, 118, 119, 120, 121, 123, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 151, 152, 155, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 179, 181, 182, 184, 188, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 223, 224, 225, 231, 232, 235, 236, 237, 238, 239, 240, 242, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 269, 270, 273, 275, 276, 278, 279, 280, 286, 288, 289, 290, 292, 294, 296, 297, 298, 299, 301, 304, 306, 308, 310, 311, 313, 317], "importantli": [1, 20, 50, 123, 167, 242, 289], "carri": [20, 107, 119, 133, 152, 225, 238, 252, 270], "20": [2, 9, 10, 20, 26, 30, 34, 57, 58, 67, 71, 74, 107, 113, 114, 116, 123, 126, 135, 136, 139, 143, 152, 156, 157, 162, 175, 176, 210, 225, 232, 233, 235, 242, 245, 254, 255, 258, 262, 270, 275, 280, 304, 305], "3rd": 20, "parti": [2, 3, 4, 11, 13, 20, 26, 33, 37, 39, 41, 42, 47, 51, 52, 59, 61, 67, 73, 77, 79, 81, 82, 87, 90, 93, 94, 95, 101, 104, 114, 117, 118, 122, 127, 137, 144, 160, 164, 171, 175, 177, 178, 182, 192, 195, 196, 197, 203, 206, 233, 236, 237, 241, 256, 263, 278, 286, 294, 299, 304, 306, 307, 311, 314], "resourc": [2, 4, 11, 17, 20, 23, 26, 37, 43, 44, 45, 52, 59, 64, 67, 77, 83, 84, 85, 95, 99, 101, 102, 123, 149, 150, 155, 159, 170, 179, 197, 201, 203, 204, 210, 211, 214, 242, 267, 268, 273, 277, 298, 308], "purkinj": 20, "cerebellum": 20, "flat": 20, "bush": [20, 44, 85], "starburst": 20, "amacrin": 20, "hippocampu": 20, "triangular": 20, "often": [1, 6, 7, 9, 14, 20, 24, 26, 33, 35, 37, 39, 43, 44, 45, 47, 50, 54, 55, 57, 62, 65, 67, 73, 75, 77, 79, 83, 84, 85, 87, 91, 92, 93, 94, 96, 97, 100, 105, 106, 107, 112, 117, 118, 122, 123, 127, 129, 130, 133, 135, 136, 138, 141, 143, 144, 146, 148, 149, 150, 151, 152, 156, 157, 162, 170, 171, 172, 173, 175, 176, 177, 179, 182, 184, 186, 193, 194, 195, 196, 198, 199, 202, 212, 218, 223, 224, 225, 231, 236, 237, 241, 242, 246, 248, 249, 252, 254, 255, 257, 260, 262, 263, 265, 266, 267, 268, 269, 270, 274, 275, 280, 291, 294, 298, 299, 301, 302, 304, 305, 306, 308, 311, 313, 315], "depend": [4, 5, 6, 10, 12, 15, 16, 20, 24, 25, 26, 27, 28, 33, 34, 37, 41, 44, 47, 48, 52, 53, 54, 58, 60, 63, 65, 66, 67, 68, 69, 73, 74, 77, 81, 85, 87, 88, 91, 92, 93, 95, 96, 98, 100, 102, 106, 115, 116, 117, 118, 119, 122, 123, 126, 127, 128, 130, 133, 134, 141, 146, 150, 152, 153, 155, 157, 161, 162, 164, 165, 168, 169, 171, 174, 178, 181, 184, 185, 187, 193, 194, 195, 197, 198, 200, 202, 204, 212, 224, 234, 235, 236, 237, 238, 241, 242, 245, 246, 247, 249, 252, 253, 260, 265, 268, 270, 271, 273, 275, 279, 280, 286, 287, 293, 296, 297, 299, 303, 307, 310, 313, 316], "shown": [1, 4, 11, 20, 24, 25, 27, 28, 33, 42, 45, 48, 50, 52, 59, 65, 66, 68, 69, 73, 82, 84, 88, 92, 93, 95, 96, 97, 98, 105, 106, 113, 115, 116, 117, 120, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 148, 152, 157, 160, 161, 162, 164, 165, 168, 170, 174, 175, 177, 178, 181, 182, 186, 194, 195, 197, 198, 199, 200, 214, 223, 224, 232, 234, 235, 236, 239, 242, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 266, 270, 275, 278, 279, 280, 286, 287, 296, 298, 303, 304, 306, 307, 310, 311, 315], "dendtrit": 20, "spinei": 20, "onto": [5, 20, 24, 26, 39, 53, 65, 67, 79, 91, 154, 156, 175, 193, 220, 272, 274, 304], "death": [20, 44, 85, 95, 197], "bed": [20, 184, 313], "typic": [4, 6, 7, 20, 24, 26, 28, 33, 52, 54, 55, 65, 67, 69, 73, 93, 94, 96, 99, 100, 115, 131, 133, 148, 152, 155, 160, 162, 171, 176, 181, 195, 196, 198, 201, 202, 218, 234, 250, 252, 266, 270, 273, 278, 280, 299, 305, 310], "number": [1, 3, 4, 7, 9, 10, 11, 20, 24, 25, 26, 27, 28, 30, 33, 34, 39, 40, 41, 46, 47, 48, 50, 51, 52, 55, 57, 58, 59, 65, 66, 67, 68, 69, 71, 73, 74, 79, 80, 81, 86, 87, 88, 92, 94, 95, 99, 101, 102, 105, 106, 113, 115, 116, 117, 118, 119, 121, 123, 126, 129, 130, 131, 132, 133, 135, 137, 138, 139, 141, 143, 144, 146, 147, 148, 152, 153, 157, 158, 160, 161, 164, 165, 166, 170, 171, 172, 174, 175, 176, 177, 184, 186, 194, 196, 197, 201, 203, 204, 207, 210, 211, 212, 214, 215, 216, 220, 223, 224, 232, 234, 235, 236, 237, 238, 240, 242, 245, 248, 249, 250, 251, 252, 254, 256, 257, 258, 260, 262, 263, 264, 265, 266, 270, 271, 275, 276, 278, 279, 286, 287, 288, 294, 298, 299, 301, 303, 304, 305, 306, 313, 315], "pyradim": 20, "total": [3, 9, 10, 20, 27, 39, 48, 51, 57, 58, 68, 79, 88, 93, 95, 104, 107, 115, 116, 126, 129, 136, 139, 141, 156, 172, 178, 195, 197, 206, 225, 234, 235, 245, 248, 255, 258, 260, 274, 301, 307], "area": [0, 3, 9, 10, 20, 22, 24, 27, 39, 45, 49, 51, 57, 58, 65, 68, 79, 84, 93, 102, 103, 109, 119, 120, 123, 126, 129, 138, 151, 154, 156, 160, 167, 171, 174, 188, 195, 204, 205, 210, 214, 215, 228, 238, 239, 242, 245, 248, 257, 269, 272, 274, 278, 289, 299, 303, 317], "squar": [3, 20, 26, 30, 34, 44, 51, 67, 71, 74, 85, 103, 105, 115, 116, 131, 135, 139, 141, 143, 147, 148, 152, 160, 164, 165, 166, 170, 175, 205, 209, 210, 212, 219, 220, 223, 234, 235, 250, 254, 258, 260, 262, 264, 266, 270, 278, 286, 287, 288, 298, 304], "micron": 20, "millionth": 20, "each": [1, 3, 4, 6, 7, 9, 10, 11, 20, 24, 26, 27, 28, 30, 33, 34, 39, 40, 41, 43, 44, 47, 48, 50, 51, 52, 54, 55, 57, 58, 59, 65, 67, 68, 69, 71, 73, 74, 79, 80, 81, 83, 85, 87, 88, 94, 95, 96, 97, 98, 99, 104, 105, 106, 111, 113, 114, 115, 116, 117, 119, 120, 126, 127, 129, 130, 131, 133, 135, 137, 139, 141, 144, 146, 147, 148, 152, 155, 156, 157, 158, 162, 165, 166, 168, 169, 170, 173, 174, 175, 176, 177, 183, 184, 186, 196, 197, 198, 199, 200, 201, 206, 211, 212, 214, 215, 218, 223, 224, 230, 232, 233, 234, 235, 236, 238, 239, 245, 246, 248, 249, 250, 252, 254, 256, 258, 260, 263, 264, 265, 266, 270, 273, 274, 275, 276, 280, 287, 288, 296, 297, 298, 302, 303, 304, 305, 306, 312, 313, 315], "8": [3, 6, 8, 9, 10, 11, 20, 24, 26, 30, 34, 37, 39, 47, 48, 51, 54, 56, 57, 58, 59, 65, 67, 71, 74, 77, 79, 87, 88, 90, 95, 98, 106, 113, 115, 116, 117, 118, 121, 126, 129, 130, 133, 135, 137, 139, 141, 143, 146, 147, 148, 152, 153, 156, 157, 158, 160, 161, 162, 165, 169, 170, 171, 175, 176, 177, 178, 179, 192, 197, 200, 210, 214, 215, 216, 219, 220, 224, 232, 234, 235, 236, 237, 240, 245, 248, 249, 252, 254, 256, 258, 260, 262, 264, 265, 266, 270, 271, 274, 275, 276, 278, 279, 280, 287, 297, 298, 299, 304, 305, 306, 307, 308], "averag": [7, 20, 39, 43, 44, 55, 79, 83, 85, 94, 108, 115, 116, 131, 142, 160, 162, 171, 183, 196, 227, 234, 235, 250, 261, 278, 280, 292, 299, 312], "30": [2, 7, 9, 10, 20, 41, 55, 57, 58, 81, 100, 101, 113, 116, 123, 126, 130, 139, 143, 144, 148, 156, 160, 176, 202, 203, 210, 211, 232, 235, 242, 245, 249, 258, 262, 263, 266, 278, 305], "50": [6, 7, 10, 20, 25, 45, 48, 54, 55, 58, 66, 84, 88, 105, 106, 113, 114, 121, 126, 223, 224, 232, 233, 240, 245], "60": [20, 113, 130, 131, 139, 156, 210, 211, 232, 249, 250, 258, 274], "apic": 20, "again": [1, 2, 3, 4, 6, 9, 11, 13, 14, 20, 24, 27, 28, 30, 33, 34, 37, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 57, 59, 61, 62, 65, 68, 69, 71, 73, 74, 77, 79, 80, 83, 84, 86, 87, 88, 89, 90, 94, 95, 98, 100, 101, 104, 105, 106, 110, 113, 119, 120, 123, 125, 130, 131, 132, 136, 137, 138, 139, 143, 144, 146, 147, 148, 150, 153, 160, 161, 162, 164, 168, 169, 170, 173, 176, 177, 178, 182, 188, 191, 192, 196, 197, 200, 202, 203, 206, 209, 210, 211, 212, 220, 223, 224, 229, 232, 238, 239, 242, 244, 249, 250, 251, 255, 256, 257, 258, 262, 263, 264, 265, 266, 268, 271, 278, 279, 280, 286, 290, 291, 294, 296, 297, 298, 302, 305, 306, 307, 311, 317], "takeawai": [20, 97, 199], "cortic": [], "classifi": 20, "anatom": [20, 21], "featur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 20, 24, 25, 26, 28, 30, 34, 35, 39, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 67, 69, 71, 74, 75, 79, 84, 87, 88, 91, 92, 93, 97, 99, 100, 101, 102, 103, 104, 106, 110, 112, 113, 116, 118, 119, 121, 123, 126, 128, 129, 130, 131, 137, 143, 144, 146, 147, 149, 151, 152, 153, 154, 155, 157, 159, 162, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 182, 184, 188, 190, 193, 194, 195, 199, 201, 202, 203, 204, 205, 206, 224, 229, 231, 232, 235, 237, 238, 240, 242, 245, 247, 248, 249, 250, 256, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 277, 280, 286, 288, 289, 292, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 311, 313, 317], "face": [9, 13, 14, 20, 36, 57, 61, 62, 76, 100, 105, 121, 133, 170, 202, 223, 240, 252, 298, 314], "principl": [7, 20, 34, 46, 55, 74, 86, 93, 95, 100, 125, 138, 144, 154, 162, 164, 195, 197, 202, 244, 257, 263, 272, 280, 286], "v": [1, 2, 3, 7, 9, 10, 11, 12, 13, 15, 16, 20, 33, 36, 50, 51, 55, 57, 58, 59, 60, 61, 63, 73, 75, 76, 91, 93, 95, 97, 98, 101, 102, 103, 104, 110, 113, 114, 119, 121, 126, 132, 133, 140, 144, 149, 151, 159, 165, 167, 168, 169, 174, 181, 188, 193, 195, 197, 199, 200, 203, 204, 205, 206, 212, 229, 232, 233, 238, 240, 245, 251, 252, 259, 263, 267, 269, 277, 296, 297, 303, 310, 317], "interneuron": 20, "balanc": [1, 5, 9, 10, 20, 24, 39, 43, 50, 53, 57, 58, 65, 79, 83, 93, 107, 118, 126, 156, 176, 195, 225, 237, 245, 274, 282, 305], "pattern": [20, 34, 35, 48, 74, 75, 88, 95, 99, 106, 120, 134, 135, 162, 177, 178, 197, 201, 224, 239, 253, 254, 280, 306, 307], "fire": [20, 25, 43, 66, 83, 133, 151, 175, 252, 269, 294, 304], "less": [0, 3, 5, 7, 11, 20, 24, 26, 28, 30, 34, 39, 40, 43, 44, 45, 49, 51, 53, 55, 59, 65, 67, 69, 71, 74, 79, 80, 83, 84, 85, 93, 94, 95, 97, 100, 101, 106, 107, 111, 116, 118, 120, 125, 129, 130, 133, 134, 136, 138, 139, 141, 142, 143, 148, 152, 157, 160, 162, 164, 166, 170, 171, 174, 175, 176, 178, 182, 183, 184, 186, 195, 196, 197, 199, 202, 203, 211, 215, 219, 224, 225, 230, 235, 237, 239, 244, 248, 249, 252, 253, 255, 257, 258, 260, 261, 262, 266, 270, 275, 278, 280, 286, 288, 290, 298, 299, 303, 304, 305, 307, 311, 312, 313, 315], "chemic": [10, 20, 58, 126, 245], "characterist": [20, 133, 156, 176, 252, 274, 305], "count": [3, 5, 20, 27, 39, 44, 51, 53, 68, 79, 85, 92, 94, 103, 113, 114, 115, 120, 130, 131, 135, 136, 138, 141, 143, 147, 157, 158, 161, 168, 172, 176, 178, 185, 188, 194, 196, 205, 212, 232, 233, 234, 239, 249, 250, 254, 255, 257, 260, 262, 264, 275, 276, 279, 296, 301, 305, 307, 317], "100": [2, 6, 10, 12, 20, 25, 39, 44, 54, 58, 60, 66, 79, 85, 91, 94, 95, 99, 105, 106, 107, 113, 115, 126, 131, 135, 139, 143, 146, 147, 152, 156, 160, 161, 162, 164, 168, 172, 173, 182, 185, 187, 189, 193, 196, 197, 201, 211, 212, 223, 224, 225, 232, 234, 245, 250, 254, 258, 262, 264, 265, 270, 274, 278, 279, 280, 286, 296, 301, 311, 314, 316], "final": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 20, 25, 30, 34, 39, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 66, 71, 74, 79, 87, 88, 89, 90, 95, 96, 97, 99, 100, 101, 103, 112, 113, 114, 115, 117, 124, 126, 129, 130, 132, 137, 138, 139, 143, 146, 147, 150, 152, 154, 160, 161, 162, 163, 164, 167, 169, 170, 171, 175, 176, 178, 180, 183, 184, 186, 191, 192, 197, 198, 199, 201, 202, 203, 205, 210, 211, 218, 231, 232, 233, 234, 236, 243, 245, 248, 249, 251, 256, 257, 258, 262, 264, 265, 268, 270, 272, 278, 279, 280, 285, 286, 289, 297, 298, 299, 304, 305, 307, 309, 312, 313, 314, 315], "classif": [20, 93, 195], "thousand": [20, 136, 185, 255], "overal": [9, 11, 14, 20, 39, 48, 57, 59, 62, 79, 88, 93, 95, 116, 120, 127, 171, 184, 195, 197, 235, 239, 246, 291, 299, 313], "detail": [0, 1, 4, 6, 7, 10, 11, 20, 24, 25, 27, 34, 47, 49, 50, 52, 54, 55, 58, 59, 65, 66, 68, 74, 87, 90, 93, 94, 95, 96, 100, 108, 121, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 141, 144, 152, 153, 155, 157, 158, 160, 161, 164, 169, 170, 171, 172, 174, 175, 177, 182, 186, 192, 195, 196, 197, 198, 202, 227, 240, 245, 246, 247, 248, 249, 252, 254, 255, 256, 257, 260, 263, 270, 271, 273, 275, 276, 278, 279, 286, 297, 298, 299, 301, 303, 304, 306, 311, 315], "neocortex": 20, "wherea": [9, 20, 57, 97, 120, 130, 141, 143, 157, 160, 162, 164, 177, 179, 199, 239, 249, 260, 262, 275, 278, 280, 286, 306, 308], "2013": 20, "javier": 20, "defelip": 20, "chandeli": 20, "baskent": 20, "hors": [20, 132, 251], "tail": [3, 20, 26, 51, 67, 150, 212, 268], "retziu": 20, "interest": [0, 1, 4, 9, 10, 11, 13, 14, 16, 17, 20, 22, 24, 31, 33, 39, 43, 44, 45, 47, 49, 50, 52, 57, 58, 59, 61, 62, 63, 64, 65, 72, 73, 79, 83, 84, 85, 87, 92, 93, 94, 95, 100, 101, 102, 103, 107, 108, 110, 114, 118, 119, 121, 123, 126, 130, 134, 140, 149, 151, 155, 156, 160, 161, 168, 171, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 194, 195, 196, 197, 202, 203, 204, 205, 211, 225, 227, 229, 233, 237, 238, 240, 242, 245, 249, 253, 259, 267, 269, 273, 274, 278, 279, 290, 291, 292, 294, 296, 299, 303, 304, 305, 306, 307, 308, 311, 312, 313, 315], "question": [1, 2, 3, 4, 10, 11, 16, 17, 20, 30, 33, 34, 39, 43, 44, 45, 50, 51, 52, 58, 59, 63, 64, 71, 73, 74, 79, 83, 84, 85, 93, 100, 101, 102, 103, 113, 115, 117, 119, 126, 127, 129, 130, 131, 133, 138, 139, 141, 143, 152, 153, 155, 156, 160, 161, 168, 181, 182, 184, 186, 195, 202, 203, 204, 205, 211, 216, 234, 236, 238, 245, 246, 248, 249, 250, 252, 257, 258, 260, 262, 270, 271, 273, 274, 278, 279, 296, 310, 311, 313, 314, 315], "wonder": [0, 9, 14, 20, 26, 30, 49, 57, 62, 67, 71, 94, 95, 99, 119, 120, 125, 130, 150, 151, 153, 157, 160, 164, 181, 182, 196, 197, 201, 238, 239, 244, 249, 268, 269, 271, 275, 278, 286, 290, 310, 311], "slide": [20, 159, 277], "regular": [1, 11, 20, 39, 42, 50, 59, 79, 82, 103, 129, 146, 148, 176, 179, 205, 210, 248, 265, 266, 305, 308], "stutter": 20, "structual": 20, "reason": [0, 3, 4, 5, 7, 9, 11, 16, 20, 22, 24, 30, 33, 34, 37, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 57, 59, 63, 65, 71, 73, 74, 77, 80, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 98, 100, 102, 103, 105, 106, 111, 112, 118, 119, 120, 121, 122, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 150, 151, 152, 156, 160, 161, 162, 170, 171, 174, 176, 178, 182, 184, 186, 188, 195, 196, 197, 198, 200, 202, 204, 205, 209, 211, 223, 224, 230, 231, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 268, 269, 270, 274, 278, 279, 280, 294, 295, 298, 299, 303, 305, 307, 311, 313, 315, 317], "nueron": 20, "denrit": 20, "contact": [20, 161, 185, 279], "locat": [1, 4, 20, 24, 26, 27, 28, 45, 47, 50, 52, 65, 67, 68, 69, 84, 87, 89, 90, 95, 98, 99, 100, 106, 116, 117, 123, 132, 134, 138, 143, 146, 147, 157, 164, 174, 182, 191, 192, 197, 200, 201, 202, 224, 235, 236, 242, 251, 253, 257, 262, 264, 265, 275, 281, 286, 303, 311], "same": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 20, 24, 26, 27, 28, 30, 33, 34, 36, 37, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 67, 68, 69, 71, 73, 74, 76, 77, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 104, 106, 108, 112, 113, 114, 115, 116, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 184, 186, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 206, 210, 211, 212, 214, 215, 219, 220, 221, 224, 227, 231, 232, 233, 234, 235, 238, 239, 240, 241, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 286, 287, 289, 291, 294, 296, 298, 299, 301, 303, 304, 305, 306, 307, 309, 310, 311, 313, 314, 315], "gap": [20, 37, 77, 92, 122, 160, 194, 241, 278], "spini": 20, "vesicl": 20, "dentrid": 20, "glutam": 20, "acytlcolin": 20, "seratonin": 20, "vessicl": 20, "travel": [20, 30, 71, 116, 130, 168, 171, 235, 249, 296, 299], "digit": [20, 41, 81, 130, 136, 152, 161, 162, 186, 249, 255, 270, 279, 280, 315], "none": [5, 17, 20, 30, 33, 34, 37, 39, 44, 46, 53, 64, 71, 73, 74, 77, 79, 85, 86, 97, 98, 100, 123, 127, 130, 131, 133, 138, 139, 152, 161, 164, 168, 172, 175, 186, 199, 200, 202, 242, 246, 249, 250, 252, 257, 258, 270, 279, 286, 296, 301, 304, 315], "arriv": [20, 100, 103, 116, 141, 165, 202, 205, 235, 260, 287], "trigger": [1, 20, 50], "ll": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 17, 20, 24, 25, 26, 28, 30, 33, 34, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 66, 67, 69, 71, 73, 74, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 116, 117, 118, 119, 120, 122, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 185, 186, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 212, 218, 223, 224, 225, 227, 228, 232, 233, 235, 236, 237, 238, 239, 241, 242, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 286, 289, 290, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 309, 310, 311, 315], "major": [1, 7, 9, 15, 20, 30, 44, 45, 47, 50, 55, 57, 71, 84, 85, 87, 93, 94, 95, 113, 116, 121, 122, 136, 151, 157, 170, 171, 177, 184, 190, 195, 196, 197, 219, 232, 235, 240, 241, 255, 269, 275, 298, 299, 306, 313], "grade": [20, 30, 44, 71, 85, 131, 136, 171, 176, 211, 250, 255, 299, 305], "analog": [6, 20, 24, 54, 65, 93, 138, 141, 144, 195, 257, 260, 263], "convert": [2, 5, 7, 10, 20, 30, 33, 34, 39, 40, 48, 53, 55, 58, 71, 73, 74, 79, 80, 88, 95, 101, 102, 106, 115, 126, 127, 130, 136, 144, 146, 152, 156, 158, 162, 168, 169, 175, 177, 178, 197, 203, 204, 224, 234, 245, 246, 249, 255, 263, 265, 270, 274, 276, 280, 296, 297, 304, 306, 307], "quantal": 20, "releas": [6, 11, 16, 17, 20, 24, 39, 42, 47, 54, 59, 63, 64, 65, 79, 82, 87, 90, 92, 94, 95, 100, 117, 118, 120, 132, 133, 136, 139, 149, 151, 152, 161, 174, 178, 182, 192, 194, 196, 197, 202, 236, 237, 239, 251, 252, 255, 258, 267, 269, 270, 279, 303, 307, 311], "come": [3, 4, 5, 6, 7, 9, 11, 15, 17, 20, 24, 25, 26, 33, 37, 39, 40, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 59, 64, 65, 66, 67, 73, 77, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 100, 101, 102, 103, 107, 112, 113, 118, 120, 121, 124, 130, 131, 133, 134, 136, 141, 147, 150, 151, 152, 153, 155, 157, 160, 161, 162, 166, 168, 169, 170, 171, 172, 174, 175, 176, 181, 182, 183, 188, 191, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 225, 231, 232, 237, 239, 240, 243, 249, 250, 252, 253, 255, 260, 264, 268, 269, 270, 271, 273, 275, 278, 279, 280, 288, 294, 296, 297, 298, 299, 301, 303, 304, 305, 310, 311, 312, 317], "thalamu": 20, "1500": 20, "neighbor": 20, "360": [20, 210], "reshow": 20, "eventu": [1, 10, 20, 50, 58, 96, 108, 113, 123, 126, 160, 164, 174, 198, 227, 232, 242, 245, 278, 286, 303], "reach": [4, 5, 10, 20, 43, 44, 47, 52, 53, 58, 83, 85, 87, 90, 103, 126, 131, 133, 138, 146, 151, 155, 184, 192, 205, 245, 250, 252, 257, 265, 269, 273, 295, 313], "threshold": 20, "quiz": [20, 31, 72, 210], "attempt": [8, 20, 26, 40, 56, 67, 80, 118, 121, 158, 164, 188, 210, 237, 240, 276, 286, 291, 294, 317], "92": [20, 39, 79], "85": [20, 129, 131, 136, 156, 248, 250, 255, 274], "21": [1, 2, 3, 6, 20, 30, 41, 45, 50, 51, 54, 71, 81, 84, 116, 118, 130, 135, 136, 156, 158, 210, 235, 237, 249, 254, 255, 276, 294], "2024": [20, 210, 221, 314], "todai": [3, 4, 5, 16, 20, 35, 41, 44, 51, 52, 53, 63, 75, 81, 85, 91, 98, 102, 103, 121, 127, 129, 130, 136, 143, 160, 168, 171, 173, 178, 182, 184, 188, 193, 200, 204, 205, 207, 210, 212, 216, 240, 246, 248, 249, 255, 262, 278, 290, 291, 292, 293, 294, 296, 299, 302, 307, 311, 313, 314, 317], "properti": [1, 3, 11, 20, 25, 26, 34, 40, 50, 51, 59, 66, 67, 74, 80, 99, 113, 115, 129, 130, 144, 148, 160, 176, 179, 201, 232, 234, 248, 249, 263, 266, 278, 305, 308], "alreadi": [4, 7, 9, 11, 12, 20, 24, 25, 26, 28, 30, 34, 35, 37, 39, 41, 42, 44, 45, 47, 52, 55, 57, 59, 60, 65, 66, 67, 69, 71, 74, 75, 77, 79, 81, 82, 84, 85, 87, 89, 90, 91, 92, 93, 96, 97, 101, 102, 103, 104, 108, 110, 114, 115, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 147, 148, 152, 153, 157, 160, 161, 162, 164, 167, 169, 171, 172, 174, 178, 179, 181, 182, 183, 184, 189, 191, 192, 193, 194, 195, 198, 199, 203, 204, 205, 206, 207, 210, 227, 229, 233, 234, 236, 237, 238, 239, 240, 241, 242, 246, 247, 248, 249, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 270, 271, 275, 278, 279, 280, 286, 289, 297, 299, 301, 303, 307, 308, 310, 311, 312, 313, 318], "synatp": 20, "tau": 20, "repeat": [20, 34, 37, 43, 74, 77, 83, 121, 128, 130, 148, 150, 161, 179, 240, 247, 249, 266, 268, 279, 308], "membrand": 20, "continu": [4, 10, 15, 20, 28, 34, 37, 42, 44, 47, 48, 52, 58, 69, 74, 77, 82, 85, 87, 88, 90, 91, 94, 98, 101, 106, 108, 126, 130, 156, 161, 165, 168, 171, 172, 174, 182, 186, 192, 193, 196, 200, 203, 210, 216, 224, 227, 245, 249, 274, 279, 282, 287, 291, 296, 299, 301, 303, 311, 315], "patch": [20, 93, 95, 123, 182, 195, 197, 242, 311], "wrap": [20, 25, 30, 34, 66, 71, 74, 93, 94, 121, 133, 137, 141, 160, 161, 166, 176, 177, 186, 195, 196, 240, 252, 256, 260, 278, 279, 288, 305, 306, 315], "sphere": 20, "place": [1, 3, 4, 5, 6, 9, 10, 11, 15, 20, 22, 24, 26, 28, 37, 39, 44, 45, 50, 51, 52, 53, 54, 57, 58, 59, 65, 67, 69, 77, 79, 84, 85, 91, 93, 95, 97, 98, 99, 100, 101, 103, 105, 107, 108, 113, 118, 120, 121, 123, 129, 130, 131, 133, 136, 138, 141, 143, 146, 148, 152, 153, 157, 162, 164, 167, 172, 175, 176, 180, 182, 183, 184, 186, 193, 195, 197, 199, 200, 201, 202, 203, 205, 216, 223, 225, 227, 232, 237, 239, 240, 242, 248, 249, 250, 252, 255, 257, 260, 262, 265, 266, 270, 271, 275, 280, 283, 286, 289, 292, 301, 304, 305, 309, 311, 312, 313, 315], "dif": 20, "insid": [0, 10, 20, 24, 25, 34, 46, 47, 49, 58, 65, 66, 74, 86, 87, 95, 99, 106, 115, 117, 126, 129, 135, 136, 137, 141, 147, 151, 152, 157, 161, 169, 182, 197, 201, 214, 215, 224, 234, 236, 245, 248, 254, 255, 256, 260, 264, 269, 270, 275, 279, 297, 311], "outsid": [1, 4, 6, 7, 11, 20, 26, 34, 44, 46, 47, 48, 50, 52, 54, 55, 59, 67, 74, 85, 86, 87, 88, 91, 97, 120, 129, 130, 135, 143, 151, 154, 158, 161, 169, 170, 172, 181, 193, 199, 239, 248, 249, 254, 262, 269, 272, 276, 279, 292, 294, 297, 298, 301, 310], "inject": [20, 47, 87, 136, 179, 255, 308], "voltrag": 20, "over": [1, 4, 5, 6, 9, 10, 11, 14, 15, 17, 20, 21, 24, 27, 28, 39, 44, 45, 46, 47, 48, 50, 52, 53, 54, 57, 58, 59, 62, 64, 65, 68, 69, 79, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 100, 105, 106, 107, 110, 111, 113, 114, 115, 120, 123, 126, 129, 130, 131, 132, 133, 135, 136, 137, 138, 141, 144, 146, 147, 152, 156, 157, 158, 160, 161, 164, 165, 167, 168, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 186, 187, 188, 191, 192, 194, 195, 196, 202, 210, 223, 224, 225, 229, 230, 232, 233, 234, 239, 242, 245, 248, 249, 250, 251, 252, 254, 255, 256, 257, 260, 263, 264, 265, 270, 274, 275, 276, 278, 279, 286, 287, 289, 292, 293, 296, 298, 299, 301, 302, 304, 305, 307, 308, 309, 310, 314, 315, 316, 317], "smooth": [5, 20, 48, 53, 88, 95, 197], "curv": [1, 3, 10, 15, 20, 50, 51, 58, 102, 105, 119, 126, 162, 164, 173, 204, 210, 223, 238, 245, 280, 286, 302, 314], "slowli": [20, 39, 79, 121, 123, 136, 174, 240, 242, 255, 303], "drop": [1, 3, 12, 15, 20, 24, 43, 48, 50, 51, 60, 65, 83, 88, 93, 95, 106, 116, 127, 139, 155, 157, 164, 168, 182, 195, 197, 224, 235, 246, 258, 273, 275, 286, 296, 311], "stop": [2, 8, 11, 20, 25, 28, 34, 39, 43, 47, 56, 59, 66, 69, 74, 79, 83, 87, 94, 96, 116, 119, 128, 135, 137, 141, 143, 147, 164, 171, 174, 176, 184, 196, 198, 235, 238, 247, 254, 256, 260, 262, 264, 286, 299, 303, 305, 313], "mere": [20, 107, 129, 225, 248], "resistor": 20, "would": [1, 3, 4, 6, 7, 9, 10, 11, 14, 17, 20, 24, 25, 26, 30, 33, 34, 35, 37, 39, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 55, 57, 58, 59, 62, 64, 65, 66, 67, 71, 73, 74, 75, 77, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 103, 105, 107, 111, 113, 114, 116, 117, 118, 120, 121, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 146, 147, 148, 151, 152, 153, 156, 157, 160, 161, 162, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 180, 181, 182, 183, 186, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 205, 211, 223, 225, 230, 232, 233, 235, 236, 237, 239, 240, 242, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 260, 261, 262, 264, 265, 266, 269, 270, 271, 274, 275, 278, 279, 280, 282, 286, 287, 288, 290, 291, 292, 294, 296, 298, 299, 301, 303, 304, 305, 307, 309, 310, 311, 312, 315, 317], "x": [7, 20, 26, 27, 30, 34, 39, 45, 48, 55, 67, 68, 71, 74, 79, 84, 88, 91, 92, 94, 95, 105, 106, 113, 114, 115, 117, 119, 121, 123, 129, 135, 136, 138, 139, 141, 143, 146, 147, 148, 152, 153, 158, 160, 162, 164, 165, 166, 170, 171, 175, 176, 177, 182, 193, 194, 196, 197, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 223, 224, 232, 233, 234, 236, 238, 240, 242, 248, 254, 255, 257, 258, 260, 262, 264, 265, 266, 270, 271, 276, 278, 280, 286, 287, 288, 298, 299, 304, 305, 306, 311], "r": [3, 4, 5, 6, 8, 9, 10, 15, 20, 24, 26, 28, 33, 34, 44, 45, 47, 48, 51, 52, 53, 54, 56, 57, 58, 65, 67, 69, 73, 74, 84, 85, 87, 88, 92, 97, 99, 101, 106, 113, 116, 117, 118, 126, 127, 128, 133, 141, 144, 146, 148, 151, 155, 158, 160, 161, 164, 168, 169, 170, 181, 184, 194, 199, 201, 203, 209, 219, 220, 224, 232, 235, 236, 237, 245, 246, 247, 252, 260, 263, 265, 266, 269, 273, 276, 278, 279, 286, 296, 297, 298, 310, 313], "ohm": 20, "law": [5, 8, 20, 53, 56], "ir": 20, "Not": [2, 4, 5, 14, 20, 44, 47, 52, 53, 62, 85, 87, 101, 102, 110, 121, 132, 134, 137, 143, 147, 161, 179, 186, 203, 204, 207, 210, 212, 216, 229, 240, 251, 253, 256, 262, 264, 279, 291, 294, 308, 314, 315], "take": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 20, 22, 24, 25, 26, 28, 30, 34, 35, 37, 39, 41, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 69, 71, 74, 75, 77, 79, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 99, 100, 103, 105, 107, 108, 110, 111, 113, 115, 116, 118, 120, 121, 123, 126, 127, 129, 130, 131, 132, 133, 136, 137, 138, 139, 141, 142, 144, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 189, 192, 193, 195, 196, 197, 198, 199, 201, 202, 205, 210, 211, 219, 220, 221, 223, 225, 227, 229, 230, 232, 234, 235, 237, 239, 240, 242, 245, 246, 248, 249, 250, 251, 252, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 286, 287, 288, 289, 292, 293, 294, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 314, 315, 318], "decai": [20, 210], "respons": [9, 11, 20, 22, 24, 26, 39, 44, 45, 46, 57, 59, 65, 67, 79, 84, 85, 86, 93, 94, 107, 114, 123, 144, 146, 150, 154, 161, 164, 171, 186, 195, 196, 225, 233, 242, 263, 265, 268, 272, 279, 286, 299, 314, 315], "depolar": 20, "neg": [10, 20, 24, 39, 40, 58, 65, 79, 80, 113, 126, 130, 136, 139, 141, 146, 147, 152, 158, 166, 171, 209, 210, 211, 212, 214, 215, 220, 232, 245, 249, 255, 258, 260, 264, 265, 270, 276, 282, 288, 299], "peopl": [5, 7, 12, 20, 22, 24, 26, 33, 34, 42, 43, 44, 46, 53, 55, 60, 65, 67, 73, 74, 82, 83, 85, 86, 90, 94, 95, 97, 98, 102, 103, 106, 107, 113, 116, 119, 121, 129, 131, 135, 141, 142, 147, 153, 158, 162, 171, 173, 175, 176, 182, 184, 187, 192, 196, 197, 199, 200, 204, 205, 224, 225, 232, 235, 238, 240, 248, 250, 254, 260, 261, 264, 271, 276, 280, 290, 291, 292, 299, 302, 304, 305, 311, 313, 314, 316], "saw": [6, 17, 20, 34, 40, 54, 64, 74, 80, 91, 94, 96, 97, 100, 118, 120, 123, 130, 136, 137, 146, 147, 153, 160, 161, 169, 170, 172, 175, 178, 188, 193, 196, 198, 199, 202, 210, 237, 239, 242, 249, 255, 256, 264, 265, 271, 278, 279, 297, 298, 301, 304, 307, 314, 317], "act": [20, 101, 107, 113, 119, 203, 225, 232, 238, 282], "back": [1, 4, 6, 7, 9, 14, 15, 20, 26, 28, 30, 33, 34, 35, 37, 42, 43, 44, 47, 50, 52, 54, 55, 57, 62, 67, 69, 71, 73, 74, 75, 77, 82, 83, 85, 87, 89, 90, 91, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 109, 110, 113, 114, 116, 120, 123, 130, 133, 136, 138, 144, 148, 149, 150, 153, 155, 156, 157, 160, 161, 167, 169, 170, 171, 173, 174, 180, 182, 184, 185, 186, 187, 188, 191, 192, 193, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 211, 214, 215, 218, 223, 224, 225, 228, 229, 232, 233, 235, 239, 242, 249, 252, 255, 257, 263, 266, 267, 268, 271, 273, 274, 275, 278, 279, 283, 289, 291, 294, 297, 298, 299, 302, 303, 309, 311, 313, 315, 316, 317], "baselin": [20, 100, 154, 202, 272], "zero": [2, 3, 7, 10, 20, 26, 27, 33, 37, 41, 44, 51, 55, 58, 67, 68, 73, 74, 77, 81, 85, 94, 95, 101, 104, 105, 111, 113, 116, 126, 130, 131, 135, 137, 138, 139, 141, 143, 146, 147, 152, 156, 157, 160, 162, 165, 170, 172, 175, 176, 177, 196, 197, 203, 206, 212, 216, 223, 230, 232, 235, 245, 249, 250, 254, 256, 257, 258, 260, 262, 264, 265, 270, 274, 275, 278, 280, 287, 298, 301, 304, 305, 306], "approxim": [20, 30, 71, 211], "behavior": [1, 7, 14, 20, 22, 30, 33, 39, 40, 41, 47, 50, 55, 62, 71, 73, 79, 80, 81, 87, 90, 95, 116, 118, 129, 130, 138, 147, 152, 154, 161, 162, 175, 176, 192, 197, 235, 237, 248, 249, 257, 264, 270, 272, 279, 280, 282, 295, 304, 305], "math": [2, 10, 11, 16, 20, 26, 28, 30, 45, 58, 59, 63, 67, 69, 71, 84, 97, 101, 105, 113, 119, 126, 127, 130, 132, 136, 140, 152, 160, 164, 182, 184, 199, 203, 208, 211, 212, 213, 214, 218, 219, 232, 245, 246, 249, 251, 255, 259, 270, 278, 286, 311, 313], "measur": [5, 9, 20, 39, 48, 53, 57, 79, 88, 94, 95, 106, 164, 165, 170, 196, 197, 211, 224, 286, 287, 298], "either": [1, 3, 4, 5, 6, 7, 9, 11, 13, 14, 15, 20, 24, 25, 27, 28, 30, 31, 33, 35, 37, 39, 41, 42, 43, 44, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 61, 62, 65, 66, 68, 69, 71, 72, 73, 75, 77, 79, 81, 82, 83, 85, 87, 88, 92, 93, 94, 97, 100, 101, 102, 103, 106, 107, 110, 113, 114, 116, 117, 120, 121, 122, 127, 130, 131, 132, 133, 134, 136, 137, 141, 146, 147, 148, 152, 156, 157, 160, 161, 162, 164, 168, 170, 171, 172, 174, 175, 176, 177, 178, 180, 184, 186, 194, 195, 196, 199, 202, 203, 204, 205, 212, 219, 224, 225, 229, 232, 233, 235, 236, 239, 240, 241, 246, 249, 250, 251, 252, 253, 255, 256, 260, 264, 265, 266, 270, 274, 275, 278, 279, 280, 286, 294, 296, 298, 299, 301, 303, 304, 305, 306, 307, 309, 313, 315], "resist": [11, 20, 44, 59, 85], "capacit": 20, "space": [1, 4, 7, 8, 10, 20, 26, 27, 33, 34, 43, 45, 47, 50, 52, 55, 56, 58, 67, 68, 73, 74, 83, 84, 87, 92, 93, 97, 105, 117, 120, 125, 126, 133, 135, 136, 137, 146, 152, 155, 156, 160, 167, 170, 171, 174, 177, 178, 180, 182, 194, 195, 199, 208, 209, 214, 215, 216, 219, 220, 223, 236, 239, 244, 245, 252, 254, 255, 256, 265, 270, 273, 274, 278, 289, 298, 299, 303, 306, 307, 309, 311], "frac": [20, 48, 88, 170, 177, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 220, 222, 298, 306], "dv": 20, "dt": [20, 41, 81, 130, 249], "equal": [10, 20, 27, 30, 33, 34, 58, 68, 71, 73, 74, 95, 105, 106, 113, 116, 118, 126, 129, 136, 137, 138, 139, 146, 148, 152, 156, 157, 166, 168, 170, 171, 172, 176, 184, 197, 209, 212, 214, 215, 216, 223, 224, 232, 235, 237, 245, 248, 255, 256, 257, 258, 265, 266, 270, 274, 275, 288, 296, 298, 299, 301, 305, 313], "basical": 20, "kirchoff": 20, "solv": [2, 5, 8, 10, 20, 43, 44, 46, 53, 56, 58, 83, 85, 86, 92, 105, 120, 126, 129, 132, 135, 137, 138, 141, 142, 148, 158, 165, 175, 176, 177, 179, 182, 194, 210, 216, 223, 239, 245, 248, 251, 254, 256, 257, 260, 261, 266, 276, 287, 304, 305, 306, 308, 311], "solut": [1, 2, 5, 7, 8, 9, 10, 11, 13, 15, 16, 20, 26, 28, 30, 33, 36, 45, 47, 50, 53, 55, 56, 57, 58, 59, 61, 63, 67, 69, 71, 73, 76, 84, 87, 91, 92, 94, 97, 98, 100, 101, 106, 110, 116, 120, 121, 122, 126, 130, 131, 135, 138, 139, 140, 141, 143, 147, 148, 151, 152, 154, 155, 161, 164, 165, 170, 171, 175, 177, 181, 182, 193, 194, 196, 199, 200, 202, 203, 212, 224, 229, 235, 239, 240, 241, 245, 249, 250, 254, 257, 259, 260, 262, 264, 266, 269, 270, 272, 273, 279, 286, 287, 298, 299, 304, 306, 310, 311], "linear": [3, 10, 20, 51, 58, 93, 102, 113, 119, 126, 148, 160, 165, 170, 184, 195, 204, 216, 232, 238, 245, 266, 278, 287, 298, 313], "end": [1, 3, 4, 5, 8, 10, 11, 14, 20, 26, 27, 28, 30, 33, 34, 37, 40, 41, 44, 47, 50, 51, 52, 53, 56, 58, 59, 62, 67, 68, 69, 71, 73, 74, 77, 80, 81, 85, 87, 89, 90, 91, 92, 93, 95, 96, 100, 104, 105, 106, 113, 114, 115, 120, 121, 123, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 143, 144, 146, 147, 148, 154, 157, 158, 160, 161, 167, 168, 170, 174, 175, 177, 180, 182, 184, 186, 188, 191, 192, 193, 194, 195, 197, 198, 202, 206, 211, 212, 216, 218, 219, 223, 224, 232, 233, 234, 239, 240, 242, 244, 245, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 262, 263, 264, 265, 266, 272, 275, 276, 278, 279, 289, 290, 292, 294, 296, 298, 303, 304, 306, 309, 311, 313, 315, 317], "dervi": [20, 217], "condit": [3, 7, 10, 20, 26, 27, 28, 44, 51, 55, 58, 67, 68, 69, 85, 113, 116, 117, 126, 133, 135, 138, 147, 152, 166, 171, 172, 186, 232, 235, 236, 245, 252, 254, 257, 264, 270, 288, 299, 301, 315], "0": [3, 4, 6, 7, 8, 10, 11, 16, 20, 25, 26, 27, 28, 29, 30, 33, 37, 39, 40, 41, 47, 48, 51, 52, 54, 55, 56, 58, 59, 63, 66, 67, 68, 69, 70, 71, 73, 77, 79, 80, 81, 87, 88, 91, 95, 96, 97, 100, 105, 106, 113, 114, 115, 116, 118, 119, 123, 126, 127, 129, 130, 131, 132, 135, 136, 137, 138, 139, 141, 143, 146, 147, 149, 152, 153, 156, 158, 160, 161, 162, 164, 165, 166, 169, 170, 172, 175, 176, 178, 193, 197, 198, 199, 202, 211, 212, 214, 215, 216, 218, 219, 223, 224, 232, 233, 234, 235, 237, 238, 242, 245, 246, 248, 249, 250, 251, 254, 255, 256, 257, 258, 260, 262, 264, 265, 267, 270, 271, 274, 276, 278, 279, 280, 286, 287, 288, 297, 298, 301, 304, 305, 307], "At": [4, 5, 7, 8, 9, 11, 12, 20, 24, 25, 26, 28, 34, 37, 39, 42, 44, 47, 52, 53, 55, 56, 57, 59, 60, 65, 66, 67, 69, 74, 77, 79, 82, 85, 87, 90, 91, 93, 95, 96, 97, 101, 103, 105, 113, 116, 118, 121, 123, 125, 126, 128, 130, 132, 137, 142, 153, 162, 167, 174, 177, 178, 186, 192, 193, 195, 197, 198, 199, 203, 205, 216, 223, 232, 235, 237, 240, 242, 244, 245, 247, 249, 251, 256, 261, 271, 280, 289, 291, 294, 303, 306, 307, 314, 315], "infinit": [10, 20, 58, 126, 135, 184, 210, 245, 254, 313], "goe": [1, 7, 8, 10, 11, 12, 15, 20, 21, 25, 50, 55, 56, 58, 59, 60, 66, 93, 94, 109, 113, 116, 118, 126, 132, 133, 138, 150, 153, 157, 161, 162, 172, 174, 186, 195, 196, 212, 214, 216, 228, 232, 235, 237, 245, 251, 252, 257, 268, 271, 275, 279, 280, 301, 303, 315], "infti": [20, 212, 220], "steadi": [10, 20, 58, 126, 245], "state": [0, 1, 3, 10, 13, 24, 26, 39, 43, 45, 49, 50, 51, 58, 61, 65, 67, 79, 83, 84, 90, 93, 95, 97, 103, 106, 111, 126, 130, 131, 137, 139, 141, 144, 147, 154, 171, 176, 181, 182, 192, 195, 197, 199, 205, 224, 230, 245, 249, 250, 256, 258, 260, 263, 264, 272, 299, 305, 310, 311], "tau_": 20, "valu": [1, 2, 3, 4, 5, 6, 7, 9, 10, 20, 26, 28, 30, 33, 34, 37, 39, 40, 41, 45, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 67, 69, 71, 73, 74, 77, 79, 80, 81, 84, 87, 88, 92, 93, 95, 96, 98, 100, 101, 102, 105, 106, 113, 115, 116, 119, 123, 126, 127, 130, 131, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 151, 152, 153, 154, 155, 156, 158, 161, 165, 166, 169, 170, 171, 175, 179, 186, 194, 195, 197, 198, 200, 202, 203, 204, 210, 211, 212, 219, 223, 224, 232, 234, 235, 238, 242, 245, 246, 249, 250, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 276, 279, 287, 288, 290, 294, 297, 298, 299, 304, 308, 315], "being": [3, 4, 6, 9, 10, 17, 20, 26, 30, 34, 36, 39, 40, 42, 44, 45, 47, 48, 51, 52, 54, 57, 58, 64, 67, 71, 74, 76, 79, 80, 82, 84, 85, 87, 88, 92, 93, 94, 95, 96, 97, 100, 101, 102, 106, 107, 109, 112, 113, 114, 120, 121, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 141, 146, 148, 152, 155, 156, 157, 160, 161, 162, 164, 166, 169, 171, 176, 179, 183, 184, 186, 194, 195, 196, 197, 198, 199, 202, 203, 204, 211, 219, 221, 224, 225, 228, 231, 232, 233, 239, 240, 244, 245, 246, 247, 250, 251, 252, 253, 256, 257, 260, 265, 266, 270, 273, 274, 275, 278, 279, 280, 282, 286, 288, 292, 294, 297, 299, 305, 308, 312, 313, 315], "minu": [20, 37, 77, 92, 107, 130, 143, 162, 170, 174, 194, 210, 225, 249, 262, 280, 298, 303, 314], "63": [6, 20, 54], "attenu": 20, "exponenti": [20, 136, 210, 214, 216, 255], "expon": [20, 92, 139, 170, 194, 212, 216, 258, 298], "cale": 20, "mirror": 20, "goveren": 20, "govern": [20, 45, 84, 186, 315], "fast": [2, 6, 9, 11, 13, 14, 15, 20, 39, 54, 57, 59, 61, 62, 79, 93, 94, 101, 102, 110, 114, 117, 120, 131, 146, 150, 154, 160, 166, 171, 176, 178, 184, 187, 195, 196, 203, 204, 210, 229, 236, 239, 250, 265, 268, 278, 288, 299, 305, 307, 313, 316], "develop": [0, 1, 2, 4, 5, 6, 8, 10, 11, 12, 14, 16, 20, 24, 25, 26, 30, 34, 35, 36, 39, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 56, 58, 59, 60, 62, 63, 65, 66, 67, 71, 74, 75, 76, 79, 82, 83, 84, 85, 86, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 112, 116, 117, 118, 119, 122, 123, 124, 126, 127, 129, 132, 133, 136, 138, 139, 141, 142, 143, 146, 150, 152, 154, 156, 157, 160, 167, 169, 171, 172, 173, 174, 175, 176, 178, 181, 182, 186, 187, 188, 193, 194, 198, 199, 201, 202, 203, 204, 205, 206, 227, 228, 231, 235, 236, 237, 238, 242, 243, 245, 246, 248, 251, 252, 255, 257, 258, 260, 261, 262, 265, 268, 270, 272, 274, 275, 278, 289, 293, 297, 299, 301, 302, 303, 304, 305, 307, 310, 311, 314, 315, 317], "vice": 20, "versa": 20, "earlier": [1, 3, 4, 6, 7, 8, 10, 11, 17, 20, 24, 25, 26, 27, 33, 34, 37, 39, 44, 47, 50, 51, 52, 54, 55, 56, 58, 59, 64, 65, 66, 67, 68, 73, 74, 77, 79, 85, 87, 90, 91, 92, 95, 96, 105, 114, 118, 121, 123, 126, 129, 130, 131, 132, 133, 136, 144, 146, 148, 157, 160, 161, 164, 165, 168, 170, 171, 174, 175, 177, 178, 182, 184, 186, 192, 193, 194, 197, 198, 210, 218, 223, 233, 237, 240, 242, 245, 248, 249, 250, 251, 252, 255, 263, 265, 266, 275, 278, 279, 286, 287, 294, 296, 298, 299, 303, 304, 306, 307, 311, 313, 315], "believ": [3, 4, 5, 12, 20, 25, 43, 44, 51, 52, 53, 60, 66, 83, 85, 93, 100, 101, 103, 107, 108, 119, 120, 121, 123, 124, 128, 129, 134, 142, 154, 157, 171, 187, 195, 202, 203, 205, 210, 225, 227, 238, 239, 240, 242, 243, 247, 248, 253, 261, 272, 275, 282, 292, 299, 316], "he": [4, 7, 9, 20, 22, 30, 34, 44, 46, 52, 55, 57, 71, 74, 85, 86, 92, 94, 107, 131, 142, 155, 161, 171, 186, 194, 196, 210, 212, 219, 225, 250, 261, 273, 279, 294, 299, 315], "said": [3, 4, 7, 9, 11, 20, 30, 34, 39, 43, 44, 51, 52, 55, 57, 59, 71, 74, 79, 83, 85, 93, 105, 113, 119, 120, 127, 130, 134, 135, 136, 138, 142, 151, 155, 160, 161, 165, 171, 176, 182, 186, 189, 195, 212, 218, 223, 232, 238, 239, 246, 249, 253, 254, 255, 257, 261, 269, 273, 278, 279, 287, 292, 299, 305, 311, 315, 318], "effect": [4, 20, 22, 24, 28, 34, 39, 47, 52, 65, 69, 74, 79, 87, 93, 94, 97, 103, 105, 106, 116, 123, 130, 132, 133, 134, 136, 143, 144, 146, 147, 151, 152, 161, 166, 171, 172, 176, 187, 195, 196, 199, 205, 223, 224, 235, 242, 249, 251, 252, 253, 255, 262, 263, 264, 265, 269, 270, 279, 283, 288, 299, 301, 305, 316], "forget": [6, 20, 24, 46, 47, 54, 65, 86, 87, 103, 115, 205, 234], "paramet": [10, 20, 26, 27, 30, 34, 41, 47, 48, 58, 67, 68, 71, 74, 81, 87, 88, 99, 101, 105, 106, 114, 123, 126, 129, 131, 136, 140, 144, 146, 148, 170, 174, 175, 176, 177, 186, 201, 203, 223, 224, 233, 242, 245, 248, 250, 255, 259, 263, 265, 266, 298, 303, 304, 305, 306, 315], "r_": 20, "directli": [20, 26, 28, 30, 37, 39, 40, 45, 47, 48, 67, 69, 71, 77, 79, 80, 84, 87, 88, 93, 95, 99, 106, 116, 127, 131, 136, 141, 146, 156, 157, 158, 160, 162, 164, 168, 175, 177, 178, 181, 182, 186, 195, 197, 201, 224, 235, 246, 250, 255, 260, 265, 274, 275, 276, 278, 280, 286, 296, 304, 306, 307, 310, 311, 315], "maximum": [20, 48, 88, 102, 105, 115, 204, 223, 234], "given": [1, 3, 4, 5, 8, 9, 10, 11, 12, 20, 24, 25, 26, 27, 28, 30, 34, 39, 42, 44, 46, 47, 50, 51, 52, 53, 56, 57, 58, 59, 60, 65, 66, 67, 68, 69, 71, 74, 79, 82, 85, 86, 87, 93, 95, 100, 102, 113, 114, 115, 116, 120, 123, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 146, 147, 148, 151, 152, 156, 158, 160, 161, 162, 166, 168, 169, 171, 172, 173, 174, 175, 176, 179, 181, 182, 184, 195, 197, 202, 204, 210, 212, 216, 220, 232, 233, 234, 235, 239, 242, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 269, 270, 274, 276, 278, 279, 280, 288, 293, 296, 297, 299, 301, 302, 303, 304, 305, 308, 310, 311, 313], "intermitt": 20, "follow": [1, 3, 4, 6, 7, 8, 9, 10, 11, 14, 20, 24, 25, 26, 28, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 62, 65, 66, 67, 69, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 85, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 105, 106, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 181, 182, 184, 186, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 209, 210, 212, 216, 218, 223, 224, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 266, 268, 270, 271, 272, 273, 274, 275, 276, 279, 280, 286, 287, 288, 292, 294, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 310, 311, 313, 315], "buildup": 20, "top": [1, 2, 4, 11, 14, 17, 20, 24, 28, 39, 44, 45, 46, 48, 50, 52, 57, 59, 62, 64, 65, 69, 79, 84, 85, 86, 88, 90, 94, 96, 97, 99, 101, 106, 113, 116, 118, 120, 121, 122, 123, 141, 143, 155, 160, 168, 170, 171, 172, 177, 178, 181, 184, 187, 192, 196, 198, 199, 201, 203, 224, 232, 235, 237, 239, 240, 241, 242, 260, 262, 273, 278, 296, 298, 299, 301, 306, 307, 310, 313, 316], "remaind": [7, 20, 55, 152, 168, 270, 296], "previou": [20, 24, 27, 65, 68, 130, 136, 210, 249, 255], "constantli": 20, "gotten": [20, 34, 74, 106, 121, 151, 170, 183, 224, 240, 269, 298, 312], "larger": [3, 8, 11, 20, 43, 51, 56, 59, 83, 94, 100, 146, 148, 150, 160, 162, 175, 176, 196, 202, 265, 266, 268, 278, 280, 304, 305], "push": [5, 6, 15, 20, 24, 25, 28, 35, 44, 53, 54, 65, 66, 69, 75, 85, 96, 103, 106, 114, 123, 129, 153, 156, 164, 181, 198, 205, 224, 233, 242, 248, 271, 274, 286, 310], "pass": [1, 4, 6, 11, 20, 24, 26, 27, 28, 30, 31, 33, 34, 39, 41, 44, 50, 52, 54, 59, 65, 67, 68, 69, 71, 72, 73, 74, 79, 81, 85, 93, 95, 102, 105, 113, 114, 116, 119, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 144, 146, 152, 155, 156, 157, 162, 164, 165, 166, 169, 171, 172, 173, 175, 177, 186, 195, 197, 204, 223, 232, 233, 235, 238, 246, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 263, 265, 270, 273, 274, 275, 280, 286, 287, 288, 294, 297, 299, 301, 302, 304, 306, 315], "hyperpolar": 20, "hypopolar": 20, "exactli": [3, 6, 10, 20, 25, 26, 47, 51, 54, 58, 66, 67, 87, 90, 95, 98, 118, 121, 126, 127, 129, 130, 131, 133, 138, 142, 144, 148, 152, 161, 175, 176, 177, 178, 182, 185, 192, 197, 200, 207, 237, 240, 245, 246, 248, 249, 250, 252, 257, 261, 263, 266, 270, 279, 304, 305, 306, 307, 311], "circl": [6, 20, 34, 54, 74, 113, 174, 176, 209, 210, 220, 232, 303, 305], "suddenli": 20, "someth": [1, 4, 5, 6, 7, 8, 11, 12, 13, 17, 20, 25, 28, 30, 34, 35, 37, 39, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 59, 60, 61, 64, 66, 69, 71, 74, 75, 77, 79, 82, 83, 84, 85, 86, 87, 93, 94, 95, 96, 97, 100, 101, 102, 103, 107, 109, 119, 123, 128, 129, 130, 131, 133, 134, 135, 136, 138, 141, 142, 144, 147, 148, 149, 151, 153, 155, 156, 157, 161, 162, 164, 169, 170, 171, 174, 175, 176, 177, 178, 179, 181, 182, 183, 185, 186, 187, 189, 195, 196, 197, 198, 199, 202, 203, 204, 205, 210, 225, 228, 238, 242, 247, 248, 249, 250, 252, 253, 254, 255, 257, 260, 261, 263, 264, 266, 267, 269, 271, 273, 274, 275, 279, 280, 283, 286, 290, 292, 294, 297, 298, 299, 303, 304, 305, 306, 307, 308, 310, 311, 312, 315, 316, 318], "70": [20, 100, 113, 131, 156, 202, 232, 250, 274], "mv": [4, 20, 52], "millivolt": 20, "charg": [12, 20, 28, 60, 69, 116, 123, 235, 242], "requir": [5, 6, 9, 10, 11, 14, 20, 24, 25, 26, 28, 37, 39, 41, 47, 53, 54, 57, 58, 59, 62, 65, 66, 67, 69, 77, 79, 81, 87, 92, 96, 97, 106, 113, 117, 121, 123, 126, 128, 129, 130, 131, 137, 139, 144, 147, 150, 153, 156, 157, 160, 161, 162, 165, 166, 168, 169, 170, 171, 175, 177, 181, 182, 194, 198, 199, 224, 232, 236, 240, 242, 245, 247, 248, 249, 250, 256, 258, 263, 264, 268, 271, 274, 275, 278, 279, 280, 287, 288, 296, 297, 298, 299, 304, 306, 310, 311], "energi": [20, 41, 44, 81, 85, 290], "maintain": [3, 11, 13, 20, 24, 34, 45, 47, 51, 59, 61, 65, 74, 84, 87, 97, 100, 101, 121, 127, 129, 130, 133, 137, 138, 140, 141, 144, 147, 149, 160, 172, 176, 177, 181, 184, 186, 199, 202, 203, 240, 246, 248, 249, 252, 256, 257, 259, 260, 263, 264, 267, 278, 301, 305, 306, 310, 313, 314, 315], "add": [1, 4, 5, 6, 8, 10, 11, 12, 14, 20, 24, 25, 26, 28, 30, 33, 34, 35, 37, 40, 41, 44, 46, 47, 50, 52, 53, 54, 56, 58, 59, 60, 62, 65, 66, 67, 69, 71, 73, 74, 75, 77, 80, 81, 85, 86, 87, 89, 90, 93, 95, 100, 104, 105, 106, 108, 110, 113, 114, 116, 117, 118, 120, 121, 123, 124, 126, 127, 129, 131, 132, 133, 134, 135, 137, 138, 140, 144, 146, 147, 148, 150, 151, 152, 153, 157, 158, 160, 162, 164, 169, 170, 172, 175, 176, 177, 179, 181, 182, 186, 191, 192, 195, 197, 202, 206, 223, 224, 227, 229, 232, 233, 235, 236, 237, 239, 240, 242, 243, 245, 246, 248, 250, 251, 252, 253, 254, 256, 257, 259, 263, 264, 265, 266, 268, 269, 270, 271, 275, 276, 278, 280, 286, 292, 294, 297, 298, 301, 304, 305, 306, 308, 310, 311, 315], "appear": [1, 5, 6, 7, 9, 10, 20, 26, 28, 34, 39, 45, 47, 50, 53, 54, 55, 57, 58, 67, 69, 74, 79, 84, 87, 96, 100, 105, 113, 119, 121, 123, 124, 126, 127, 129, 131, 133, 134, 136, 137, 140, 141, 147, 151, 152, 153, 154, 160, 161, 162, 171, 172, 174, 175, 176, 177, 182, 186, 198, 202, 223, 232, 238, 240, 242, 243, 245, 246, 248, 250, 252, 253, 255, 256, 259, 260, 264, 269, 270, 271, 272, 278, 279, 280, 299, 301, 303, 304, 305, 306, 311, 315], "relat": [5, 7, 9, 10, 20, 26, 30, 33, 34, 41, 42, 45, 47, 48, 53, 55, 57, 58, 67, 71, 73, 74, 81, 82, 84, 87, 88, 92, 93, 97, 99, 101, 103, 112, 116, 117, 120, 123, 126, 131, 133, 134, 138, 147, 152, 154, 157, 162, 169, 175, 176, 182, 194, 195, 199, 201, 203, 205, 209, 216, 219, 231, 235, 236, 239, 242, 245, 250, 252, 253, 257, 264, 270, 272, 275, 280, 297, 304, 305, 311], "e_": 20, "stage": [7, 9, 11, 20, 34, 36, 47, 55, 57, 59, 74, 76, 87, 97, 103, 123, 155, 171, 199, 205, 242, 273, 299], "speak": [2, 3, 4, 8, 9, 13, 15, 17, 20, 30, 34, 39, 43, 44, 51, 52, 56, 57, 61, 64, 71, 74, 79, 83, 85, 92, 94, 97, 102, 105, 106, 120, 123, 129, 130, 133, 135, 137, 138, 139, 141, 142, 144, 148, 149, 151, 157, 162, 164, 171, 172, 175, 178, 182, 183, 194, 196, 199, 204, 223, 224, 239, 242, 248, 249, 252, 254, 256, 257, 258, 260, 261, 263, 266, 267, 269, 275, 280, 286, 290, 299, 301, 304, 307, 311, 312], "dealt": [20, 162, 280], "proprerti": 20, "btw": 20, "ballpark": 20, "order": [1, 3, 7, 9, 10, 11, 31, 34, 39, 44, 50, 51, 55, 57, 58, 59, 72, 74, 79, 85, 93, 95, 100, 109, 116, 117, 119, 123, 126, 133, 136, 137, 139, 141, 143, 146, 148, 151, 157, 160, 161, 164, 166, 168, 169, 172, 176, 178, 183, 195, 197, 202, 228, 235, 236, 238, 242, 245, 252, 255, 256, 258, 260, 262, 265, 266, 269, 275, 278, 279, 286, 288, 296, 297, 301, 305, 307, 312, 314], "millisecond": [6, 20, 39, 54, 79, 94, 100, 196, 202], "brief": [2, 20, 30, 71, 93, 98, 136, 138, 146, 149, 157, 170, 171, 174, 177, 179, 184, 195, 200, 255, 257, 265, 267, 275, 293, 298, 299, 303, 306, 308, 313], "meet": [6, 20, 43, 54, 83, 130, 183, 210, 249, 281, 283, 294, 312], "open": [1, 5, 6, 7, 9, 11, 20, 24, 25, 26, 28, 37, 39, 43, 44, 45, 47, 48, 50, 53, 54, 55, 57, 59, 65, 66, 67, 69, 77, 79, 83, 84, 85, 87, 88, 89, 90, 92, 93, 97, 98, 99, 100, 101, 106, 110, 112, 114, 115, 116, 117, 120, 123, 125, 127, 132, 133, 134, 136, 138, 144, 146, 148, 151, 153, 157, 160, 161, 164, 168, 169, 170, 174, 184, 188, 191, 192, 194, 195, 199, 200, 201, 202, 203, 224, 229, 231, 233, 234, 235, 236, 239, 242, 244, 246, 251, 252, 253, 255, 257, 263, 265, 266, 269, 271, 275, 278, 279, 283, 286, 293, 296, 297, 298, 303, 313, 317], "uptak": 20, "behav": [4, 20, 25, 28, 34, 52, 66, 69, 74, 93, 112, 113, 119, 127, 134, 141, 143, 157, 161, 170, 178, 195, 231, 232, 238, 246, 253, 260, 262, 275, 279, 298, 307], "conductor": 20, "g_": 20, "syn": 20, "wait": [6, 20, 24, 28, 30, 39, 47, 54, 65, 69, 71, 79, 87, 91, 93, 96, 103, 146, 153, 157, 160, 162, 176, 178, 193, 195, 198, 205, 211, 265, 271, 275, 278, 280, 305, 307], "repres": [1, 4, 6, 7, 9, 10, 20, 24, 28, 30, 34, 39, 41, 47, 48, 50, 52, 54, 55, 57, 58, 65, 69, 71, 74, 79, 81, 87, 88, 90, 92, 94, 95, 98, 99, 100, 106, 107, 113, 115, 116, 120, 123, 126, 130, 131, 136, 137, 138, 143, 146, 147, 149, 156, 158, 160, 161, 162, 166, 170, 172, 175, 176, 177, 183, 192, 194, 196, 197, 200, 201, 202, 210, 224, 225, 232, 234, 235, 239, 242, 245, 249, 250, 255, 256, 257, 262, 264, 265, 267, 274, 276, 278, 279, 280, 288, 298, 301, 304, 305, 306, 312], "white": [20, 27, 68, 171, 174, 299, 303], "purpos": [1, 9, 11, 13, 20, 25, 26, 27, 28, 30, 33, 34, 37, 39, 50, 57, 59, 61, 66, 67, 68, 69, 71, 73, 74, 77, 79, 90, 96, 99, 100, 101, 102, 104, 105, 114, 115, 118, 120, 129, 130, 134, 135, 138, 156, 157, 160, 161, 162, 168, 171, 172, 175, 176, 177, 184, 192, 198, 201, 202, 203, 204, 206, 223, 233, 234, 237, 239, 248, 249, 253, 254, 257, 274, 275, 278, 279, 280, 294, 296, 299, 301, 304, 305, 306, 313], "reaction": [10, 20, 58, 126, 245], "neurtransmitt": 20, "collect": [2, 9, 10, 20, 24, 29, 30, 33, 34, 39, 48, 57, 58, 65, 70, 71, 73, 74, 79, 88, 94, 100, 101, 110, 126, 131, 140, 151, 160, 165, 182, 196, 202, 203, 229, 245, 250, 259, 269, 278, 287, 311], "concentr": [10, 20, 58, 126, 245], "nerv": 20, "For": [1, 2, 3, 4, 5, 6, 9, 11, 12, 14, 20, 24, 25, 27, 28, 30, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 57, 59, 60, 62, 65, 66, 68, 69, 71, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 106, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 129, 130, 131, 133, 134, 136, 137, 138, 139, 142, 144, 147, 148, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 191, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 210, 211, 217, 219, 220, 223, 224, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 245, 246, 248, 249, 250, 252, 253, 255, 256, 257, 258, 261, 263, 264, 266, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 286, 287, 288, 289, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317], "instanc": [6, 20, 33, 34, 41, 47, 54, 73, 74, 81, 87, 92, 106, 115, 129, 132, 133, 134, 141, 149, 152, 156, 160, 162, 169, 176, 180, 194, 224, 234, 248, 251, 252, 253, 260, 267, 270, 274, 278, 280, 297, 305, 309], "sodium": [20, 131, 250], "fewer": [20, 27, 68, 183, 290, 312], "potassium": 20, "opposit": [20, 28, 69, 102, 107, 176, 204, 209, 211, 219, 225, 291, 292, 305], "true": [3, 6, 7, 9, 10, 11, 15, 20, 24, 25, 27, 28, 30, 33, 34, 40, 43, 44, 47, 48, 51, 54, 55, 57, 58, 59, 65, 66, 68, 69, 71, 73, 74, 80, 83, 85, 87, 88, 90, 92, 93, 94, 95, 99, 100, 101, 106, 109, 113, 115, 116, 118, 120, 124, 126, 127, 129, 130, 135, 136, 137, 138, 139, 141, 144, 146, 148, 152, 156, 157, 158, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 182, 184, 186, 192, 194, 195, 196, 197, 201, 202, 203, 212, 224, 228, 232, 234, 235, 237, 239, 243, 245, 246, 248, 249, 254, 255, 256, 257, 258, 260, 263, 265, 266, 270, 274, 275, 276, 279, 280, 283, 286, 287, 288, 296, 297, 298, 299, 301, 304, 305, 306, 307, 308, 311, 313, 315], "gradient": 20, "john": [4, 20, 34, 41, 43, 46, 52, 74, 81, 83, 86, 113, 114, 129, 130, 135, 136, 137, 144, 147, 171, 232, 233, 248, 249, 254, 255, 256, 263, 264, 295, 299], "lose": [20, 102, 104, 171, 175, 176, 204, 206, 299, 304, 305], "specif": [1, 9, 10, 12, 20, 24, 27, 28, 30, 39, 41, 44, 45, 48, 50, 57, 58, 60, 65, 68, 69, 71, 79, 81, 84, 85, 88, 90, 93, 95, 99, 100, 101, 105, 106, 117, 118, 120, 121, 123, 126, 129, 133, 134, 135, 136, 151, 152, 154, 155, 157, 160, 161, 162, 166, 170, 174, 175, 176, 179, 181, 182, 192, 195, 197, 201, 202, 203, 223, 224, 236, 237, 239, 240, 242, 245, 248, 252, 253, 254, 255, 269, 270, 272, 273, 275, 278, 279, 280, 288, 298, 303, 304, 305, 308, 310, 311], "allow": [1, 5, 6, 7, 8, 10, 15, 20, 24, 25, 26, 27, 30, 33, 34, 36, 37, 39, 40, 45, 47, 50, 53, 54, 55, 56, 58, 65, 66, 67, 68, 71, 73, 74, 76, 77, 79, 80, 84, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 106, 112, 114, 115, 116, 117, 120, 122, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 143, 144, 146, 151, 152, 153, 154, 156, 157, 160, 161, 162, 164, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 182, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 211, 224, 231, 233, 234, 235, 236, 239, 241, 242, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 262, 263, 265, 269, 270, 271, 272, 274, 275, 278, 279, 280, 283, 286, 288, 291, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 311, 313], "plu": [3, 6, 20, 44, 47, 51, 54, 85, 87, 92, 93, 101, 107, 111, 134, 136, 143, 151, 153, 160, 161, 168, 171, 172, 178, 186, 194, 195, 203, 216, 225, 230, 253, 255, 262, 269, 271, 278, 279, 296, 299, 301, 307, 315], "befor": [1, 6, 7, 8, 9, 11, 12, 16, 20, 24, 25, 26, 28, 30, 33, 34, 35, 37, 41, 44, 47, 48, 50, 54, 55, 56, 57, 59, 60, 63, 65, 66, 67, 69, 71, 73, 74, 75, 77, 81, 85, 87, 88, 91, 92, 93, 94, 95, 97, 98, 100, 102, 104, 105, 106, 107, 114, 115, 116, 117, 118, 119, 121, 123, 124, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 141, 144, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 160, 161, 162, 164, 168, 169, 171, 172, 175, 176, 177, 178, 182, 184, 186, 193, 194, 195, 196, 197, 199, 200, 202, 204, 206, 214, 215, 219, 223, 224, 225, 233, 234, 235, 236, 237, 238, 240, 242, 243, 246, 248, 250, 252, 253, 254, 255, 256, 257, 258, 260, 263, 264, 265, 266, 268, 269, 270, 271, 272, 275, 276, 278, 279, 280, 282, 286, 292, 294, 296, 297, 299, 301, 304, 305, 306, 307, 311, 313, 314, 315], "accord": [15, 20, 26, 39, 67, 79, 94, 119, 130, 135, 136, 146, 152, 156, 160, 162, 171, 176, 179, 196, 238, 249, 254, 255, 265, 270, 274, 278, 280, 299, 305, 308], "due": [6, 9, 20, 39, 47, 54, 57, 79, 87, 118, 127, 130, 171, 176, 237, 246, 249, 299, 305], "ceil": 20, "200": [20, 39, 79, 117, 123, 129, 133, 143, 161, 182, 236, 242, 248, 252, 262, 279, 311], "90": [7, 20, 55, 100, 106, 113, 115, 131, 139, 141, 162, 171, 176, 202, 210, 224, 232, 234, 250, 258, 260, 280, 299, 305], "world": [7, 8, 9, 10, 11, 20, 25, 34, 41, 42, 46, 47, 55, 56, 57, 58, 59, 66, 74, 81, 82, 86, 87, 91, 93, 95, 97, 101, 102, 121, 123, 124, 126, 127, 129, 130, 133, 136, 137, 140, 151, 158, 162, 164, 172, 174, 175, 179, 183, 190, 193, 195, 197, 199, 203, 204, 240, 242, 243, 245, 246, 248, 249, 252, 255, 256, 259, 269, 276, 280, 286, 294, 301, 303, 304, 308, 312], "consant": 20, "25": [2, 7, 20, 45, 47, 55, 84, 87, 103, 106, 116, 130, 136, 139, 146, 156, 169, 170, 178, 205, 210, 216, 220, 224, 235, 249, 255, 258, 265, 274, 297, 298, 307], "encourag": [0, 20, 47, 49, 87, 93, 117, 137, 142, 165, 171, 195, 236, 256, 261, 287, 291, 292, 299], "oppos": [9, 20, 57, 97, 101, 119, 142, 156, 168, 175, 199, 203, 238, 261, 274, 296, 304], "clamp": 20, "propog": 20, "sir": [9, 20, 57], "alan": 20, "lloyd": 20, "andrew": [20, 24, 65, 160, 278], "cambridg": 20, "wwii": 20, "1963": 20, "squid": 20, "experiment": [20, 25, 66, 95, 97, 171, 177, 197, 199, 299, 306], "uniqu": [20, 33, 34, 44, 48, 73, 74, 85, 88, 100, 106, 116, 117, 123, 129, 131, 133, 143, 152, 161, 175, 176, 185, 202, 224, 235, 236, 242, 248, 250, 252, 262, 270, 279, 304, 305], "mm": [20, 41, 81, 177, 182, 306, 311], "500": [9, 20, 44, 57, 85, 110, 117, 133, 146, 160, 229, 236, 252, 265, 278], "wide": [1, 3, 10, 20, 24, 26, 39, 47, 50, 51, 58, 65, 67, 79, 87, 93, 97, 99, 100, 101, 102, 103, 105, 116, 117, 118, 121, 126, 127, 131, 136, 138, 139, 146, 147, 148, 152, 153, 160, 162, 164, 166, 184, 188, 195, 199, 201, 202, 203, 204, 205, 223, 235, 236, 237, 240, 245, 246, 250, 255, 257, 258, 264, 265, 266, 270, 271, 278, 280, 286, 288, 313, 317], "cathet": 20, "publish": [3, 5, 11, 12, 13, 14, 15, 17, 20, 22, 24, 26, 36, 44, 51, 53, 59, 60, 61, 62, 64, 65, 67, 76, 85, 90, 93, 97, 99, 103, 109, 114, 120, 121, 125, 128, 130, 142, 160, 172, 177, 179, 185, 192, 195, 199, 201, 205, 228, 233, 239, 240, 244, 247, 249, 261, 278, 292, 301, 306, 308], "oscilloscop": 20, "1939": [20, 135, 254], "stimulu": 20, "strong": [9, 20, 24, 40, 44, 47, 57, 65, 80, 85, 87, 102, 160, 162, 182, 184, 204, 278, 280, 291, 311, 313], "enough": [4, 5, 6, 8, 11, 17, 20, 26, 28, 30, 37, 39, 43, 44, 45, 46, 48, 52, 53, 54, 56, 59, 64, 67, 69, 71, 77, 79, 83, 84, 85, 86, 88, 89, 90, 93, 94, 96, 100, 102, 105, 107, 109, 118, 119, 120, 121, 123, 125, 129, 130, 132, 133, 136, 138, 141, 153, 157, 160, 161, 162, 167, 171, 172, 173, 174, 175, 176, 178, 182, 183, 186, 187, 191, 192, 195, 196, 198, 202, 204, 211, 212, 216, 223, 225, 228, 237, 238, 239, 240, 242, 244, 248, 249, 251, 252, 255, 257, 260, 271, 275, 278, 279, 280, 289, 291, 292, 294, 299, 301, 302, 303, 304, 305, 307, 311, 312, 314, 315, 316], "direct": [1, 4, 20, 24, 26, 30, 50, 52, 65, 67, 71, 102, 111, 119, 133, 139, 141, 148, 151, 157, 167, 171, 177, 188, 204, 212, 230, 238, 252, 258, 260, 266, 269, 275, 289, 299, 306, 317], "gradual": [20, 137, 256, 282], "creep": [0, 20, 49, 292], "beauti": [2, 7, 12, 20, 21, 26, 48, 55, 60, 67, 88, 92, 106, 147, 171, 174, 177, 194, 213, 224, 264, 293, 299, 303, 306], "4": [3, 6, 7, 9, 10, 20, 24, 26, 30, 33, 34, 39, 41, 45, 47, 51, 54, 55, 57, 58, 65, 67, 71, 73, 74, 79, 81, 84, 87, 91, 92, 93, 95, 97, 100, 106, 113, 114, 115, 116, 119, 121, 123, 126, 128, 130, 132, 134, 135, 136, 137, 139, 141, 143, 146, 147, 148, 152, 156, 158, 160, 162, 165, 166, 170, 171, 172, 174, 175, 176, 177, 179, 193, 194, 195, 197, 199, 202, 210, 211, 212, 214, 215, 216, 219, 224, 232, 233, 234, 235, 238, 240, 242, 245, 247, 249, 251, 253, 254, 255, 256, 258, 260, 262, 264, 265, 266, 270, 274, 276, 278, 280, 287, 288, 298, 299, 301, 303, 304, 305, 306, 308], "1952": 20, "compact": [8, 20, 56, 129, 146, 248, 265], "triumph": 20, "votag": 20, "fix": [5, 7, 11, 14, 16, 20, 26, 27, 28, 34, 37, 39, 46, 48, 53, 55, 59, 62, 63, 67, 68, 69, 74, 77, 79, 86, 88, 91, 106, 112, 116, 119, 121, 124, 129, 130, 133, 136, 137, 141, 143, 152, 154, 171, 175, 176, 177, 178, 193, 224, 231, 235, 238, 240, 243, 248, 249, 252, 255, 256, 260, 262, 270, 272, 299, 304, 305, 306, 307], "amount": [1, 5, 6, 9, 11, 20, 24, 37, 39, 44, 45, 50, 53, 54, 57, 59, 65, 77, 79, 84, 85, 95, 100, 115, 118, 123, 138, 146, 152, 171, 176, 183, 197, 202, 211, 234, 237, 242, 257, 265, 270, 299, 305, 312], "noth": [4, 8, 17, 20, 25, 30, 40, 43, 47, 52, 56, 64, 66, 71, 80, 83, 87, 95, 100, 101, 115, 123, 137, 141, 142, 143, 161, 167, 170, 171, 179, 182, 183, 186, 187, 188, 197, 202, 203, 234, 242, 256, 260, 261, 262, 279, 289, 291, 294, 298, 299, 308, 311, 312, 314, 315, 316, 317], "sub": [10, 20, 27, 48, 58, 68, 88, 118, 126, 130, 134, 157, 170, 184, 212, 216, 237, 245, 249, 253, 275, 298, 313], "further": [1, 6, 11, 20, 25, 26, 30, 36, 39, 43, 47, 50, 54, 59, 66, 67, 71, 76, 79, 83, 87, 93, 97, 99, 100, 108, 116, 118, 129, 134, 135, 136, 157, 167, 174, 184, 195, 199, 201, 202, 210, 227, 235, 237, 248, 253, 254, 255, 275, 289, 303, 313], "suprathreshold": 20, "inward": 20, "outward": 20, "surpris": [1, 5, 6, 9, 20, 39, 50, 53, 54, 57, 79, 92, 113, 119, 130, 134, 136, 146, 157, 160, 162, 168, 170, 171, 177, 178, 194, 232, 238, 249, 253, 255, 265, 275, 278, 280, 296, 298, 299, 306, 307], "hold": [10, 20, 58, 123, 125, 126, 131, 132, 138, 142, 146, 147, 165, 171, 184, 242, 244, 245, 250, 251, 257, 261, 264, 265, 287, 294, 299, 313], "drug": [20, 171, 299], "tetrodotoxin": 20, "ttx": 20, "fish": [20, 40, 80], "toxin": 20, "put": [3, 8, 14, 17, 20, 26, 34, 37, 46, 51, 56, 62, 64, 67, 74, 77, 86, 90, 93, 95, 100, 103, 105, 106, 107, 110, 111, 114, 117, 118, 119, 125, 131, 132, 134, 136, 138, 141, 142, 151, 152, 153, 160, 161, 168, 175, 176, 192, 195, 197, 202, 205, 220, 223, 224, 225, 229, 230, 233, 236, 237, 238, 244, 250, 251, 253, 255, 257, 260, 261, 269, 270, 271, 278, 279, 294, 296, 304, 305], "phase": [20, 95, 105, 197, 223], "disappear": [20, 24, 30, 48, 65, 71, 88, 168, 170, 177, 181, 296, 298, 306, 310], "left": [0, 3, 7, 10, 11, 20, 26, 27, 45, 49, 51, 55, 58, 59, 67, 68, 84, 94, 95, 96, 97, 104, 105, 106, 116, 117, 123, 125, 126, 127, 130, 136, 140, 152, 164, 169, 174, 175, 176, 184, 186, 196, 197, 198, 199, 206, 210, 212, 216, 219, 223, 224, 235, 236, 242, 244, 245, 246, 249, 255, 259, 270, 284, 286, 291, 297, 303, 304, 305, 313, 315], "tetraethilammonium": 20, "tea": 20, "block": [2, 7, 9, 20, 29, 31, 34, 45, 55, 57, 70, 72, 74, 84, 99, 100, 101, 113, 130, 131, 134, 135, 138, 147, 157, 171, 172, 175, 176, 184, 186, 201, 202, 203, 232, 249, 250, 253, 254, 257, 264, 275, 291, 293, 294, 299, 301, 304, 305, 313, 315], "leav": [1, 3, 7, 11, 12, 15, 20, 24, 26, 30, 34, 42, 44, 50, 51, 55, 59, 60, 65, 67, 71, 74, 82, 85, 89, 90, 91, 95, 97, 98, 102, 105, 108, 111, 114, 116, 118, 123, 127, 133, 136, 139, 147, 152, 162, 164, 172, 174, 176, 177, 191, 192, 193, 197, 199, 200, 204, 210, 219, 223, 227, 230, 233, 235, 237, 242, 246, 252, 255, 258, 264, 270, 280, 286, 292, 294, 301, 303, 305, 306], "na": [20, 131, 158, 250, 276], "k": [4, 10, 20, 52, 58, 113, 126, 148, 162, 169, 170, 232, 245, 266, 280, 297, 298], "earli": [9, 30, 39, 40, 47, 57, 71, 79, 80, 87, 91, 96, 100, 103, 111, 114, 121, 132, 138, 142, 143, 147, 157, 167, 171, 179, 184, 187, 193, 198, 202, 205, 207, 212, 230, 233, 240, 251, 257, 261, 262, 264, 275, 289, 299, 308, 313, 316], "1954d": 20, "potasium": 20, "leak": [20, 39, 79], "i_": 20, "v_": 20, "degre": [9, 20, 26, 43, 57, 67, 83, 102, 107, 113, 129, 142, 155, 171, 184, 204, 209, 210, 211, 219, 225, 232, 248, 261, 273, 291, 299, 313, 314], "slow": [2, 6, 20, 44, 54, 85, 94, 97, 111, 124, 131, 144, 146, 160, 174, 199, 212, 230, 243, 250, 263, 265, 278, 303], "inactiv": 20, "vc": [10, 20, 58, 126, 245], "rise": [20, 93, 105, 164, 195, 223, 286], "slower": [20, 39, 79, 94, 95, 102, 114, 120, 121, 146, 160, 164, 167, 196, 197, 204, 233, 239, 240, 265, 278, 286, 289], "fit": [9, 10, 13, 15, 20, 25, 26, 57, 58, 61, 66, 67, 100, 110, 114, 126, 130, 131, 144, 146, 160, 165, 167, 171, 172, 184, 186, 187, 202, 211, 229, 233, 245, 249, 250, 263, 265, 278, 287, 289, 299, 301, 313, 315, 316], "fact": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 20, 24, 30, 33, 39, 43, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 65, 71, 73, 79, 83, 84, 87, 88, 94, 97, 100, 106, 113, 117, 120, 122, 127, 129, 130, 132, 137, 147, 148, 154, 156, 161, 162, 171, 172, 173, 175, 176, 178, 179, 183, 184, 199, 202, 224, 232, 236, 239, 241, 246, 248, 249, 251, 256, 264, 266, 272, 274, 279, 280, 299, 301, 302, 304, 305, 307, 308, 312, 313], "faster": [2, 6, 20, 28, 39, 41, 47, 54, 69, 79, 81, 87, 94, 100, 101, 117, 121, 146, 148, 156, 160, 164, 166, 170, 176, 178, 184, 196, 202, 203, 236, 265, 266, 274, 278, 286, 288, 298, 305, 307, 313], "exp": 20, "4t": 20, "newcommand": 20, "overbar": 20, "mkern": 20, "5mu": 20, "overlin": 20, "right": [1, 4, 6, 7, 9, 10, 11, 14, 20, 24, 26, 28, 33, 34, 37, 40, 43, 44, 46, 47, 50, 52, 54, 55, 57, 58, 59, 62, 65, 67, 69, 73, 74, 77, 80, 83, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 113, 118, 120, 123, 126, 130, 132, 133, 134, 136, 141, 144, 146, 148, 150, 152, 153, 154, 157, 161, 162, 164, 165, 170, 171, 174, 175, 176, 177, 178, 180, 181, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 212, 216, 219, 220, 223, 225, 228, 229, 232, 237, 239, 242, 245, 249, 251, 252, 253, 255, 260, 263, 265, 266, 268, 270, 271, 272, 275, 279, 280, 286, 287, 291, 298, 299, 303, 304, 305, 306, 307, 309, 310, 315, 316], "bar": [4, 10, 20, 26, 28, 37, 39, 52, 58, 67, 69, 77, 79, 96, 117, 123, 126, 130, 140, 198, 236, 242, 245, 249, 259, 294], "repes": 20, "proport": [20, 48, 88, 106, 220, 224], "gate": [7, 20, 43, 55, 83, 170, 298], "move": [1, 3, 5, 9, 11, 20, 26, 28, 34, 37, 39, 42, 44, 45, 46, 50, 51, 53, 57, 59, 67, 69, 74, 77, 79, 82, 84, 85, 86, 89, 90, 95, 98, 99, 100, 101, 103, 104, 113, 114, 121, 127, 129, 130, 136, 138, 141, 147, 152, 153, 157, 164, 168, 170, 174, 175, 187, 191, 192, 197, 200, 201, 202, 203, 205, 206, 232, 233, 240, 246, 248, 249, 255, 257, 260, 264, 270, 271, 275, 286, 294, 296, 298, 303, 304, 316], "probabl": [3, 4, 11, 13, 20, 24, 25, 26, 28, 30, 37, 39, 42, 44, 45, 46, 48, 51, 52, 59, 61, 65, 66, 67, 69, 71, 77, 79, 82, 84, 85, 86, 88, 91, 92, 94, 95, 96, 97, 102, 105, 106, 108, 110, 117, 118, 121, 130, 131, 132, 133, 134, 136, 138, 143, 144, 146, 148, 152, 157, 161, 162, 164, 168, 170, 174, 176, 178, 182, 184, 186, 187, 188, 193, 194, 196, 197, 198, 199, 204, 223, 224, 227, 229, 236, 237, 240, 249, 250, 251, 252, 253, 255, 257, 262, 263, 265, 266, 270, 275, 279, 280, 286, 292, 294, 296, 298, 303, 305, 307, 311, 313, 315, 316, 317], "must": [0, 1, 3, 4, 7, 10, 11, 12, 15, 20, 24, 26, 30, 34, 39, 41, 45, 47, 48, 49, 50, 51, 52, 55, 58, 59, 60, 65, 67, 71, 74, 79, 81, 84, 87, 88, 95, 99, 110, 114, 115, 120, 123, 126, 128, 130, 131, 133, 135, 136, 137, 139, 143, 146, 148, 152, 157, 158, 161, 169, 170, 171, 172, 175, 176, 177, 178, 182, 185, 197, 201, 210, 229, 233, 234, 239, 242, 245, 247, 249, 250, 252, 254, 255, 256, 258, 262, 265, 266, 270, 275, 276, 279, 297, 298, 299, 301, 304, 305, 306, 307, 311], "rate": [10, 20, 44, 45, 58, 84, 85, 126, 129, 171, 210, 245, 248, 299], "turn": [1, 4, 5, 6, 9, 17, 20, 24, 25, 26, 30, 34, 41, 42, 47, 50, 52, 53, 54, 57, 64, 65, 66, 67, 71, 74, 81, 82, 87, 91, 93, 95, 98, 100, 102, 105, 111, 114, 116, 118, 119, 120, 129, 130, 131, 134, 137, 141, 142, 144, 146, 148, 149, 151, 156, 157, 160, 162, 165, 169, 179, 183, 184, 188, 193, 195, 197, 200, 202, 204, 223, 230, 233, 235, 237, 238, 239, 248, 249, 250, 253, 256, 260, 261, 263, 265, 266, 267, 269, 274, 275, 278, 280, 282, 287, 290, 297, 308, 312, 313, 317], "dn": [20, 130, 249], "alpha": [20, 121, 171, 208, 211, 240, 299], "beta_": 20, "shift": [1, 3, 4, 20, 25, 28, 44, 50, 51, 52, 66, 69, 85, 91, 97, 152, 164, 175, 184, 193, 199, 270, 283, 286, 304, 313], "beta": 20, "smaller": [8, 20, 25, 43, 56, 66, 83, 117, 138, 146, 156, 178, 236, 257, 265, 274, 307], "complic": [4, 10, 20, 47, 52, 58, 87, 101, 106, 126, 149, 186, 203, 224, 245, 267, 315], "_": [1, 3, 20, 39, 50, 51, 79, 95, 114, 129, 136, 141, 158, 162, 177, 178, 197, 233, 248, 255, 260, 276, 280, 306, 307], "dm": 20, "alpha_": 20, "dh": 20, "differenti": [10, 20, 58, 126, 165, 171, 207, 245, 287, 299], "schemat": 20, "know": [2, 4, 5, 6, 7, 8, 9, 11, 13, 14, 20, 25, 27, 28, 30, 31, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 59, 61, 62, 66, 68, 69, 71, 72, 73, 74, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 100, 101, 103, 104, 107, 109, 110, 113, 115, 118, 119, 120, 122, 123, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 160, 161, 162, 164, 165, 166, 167, 171, 172, 174, 175, 176, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 196, 197, 198, 199, 200, 202, 203, 206, 209, 210, 220, 225, 228, 229, 232, 234, 237, 238, 239, 241, 242, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 278, 279, 280, 282, 286, 287, 288, 289, 291, 294, 299, 301, 303, 304, 307, 308, 311, 312, 313, 315, 316, 317, 318], "sensor": [20, 131, 250], "off": [4, 8, 11, 15, 20, 22, 24, 28, 30, 42, 43, 45, 52, 56, 59, 65, 69, 71, 82, 83, 84, 91, 92, 93, 97, 100, 107, 111, 113, 116, 121, 129, 131, 132, 136, 138, 141, 144, 153, 161, 164, 165, 171, 172, 173, 175, 176, 179, 186, 188, 193, 194, 195, 199, 202, 207, 210, 216, 225, 230, 232, 235, 240, 248, 250, 251, 255, 257, 260, 263, 271, 279, 286, 287, 292, 294, 299, 301, 302, 304, 305, 308, 315, 317], "graph": [1, 2, 10, 15, 16, 20, 26, 39, 48, 50, 58, 63, 67, 79, 88, 93, 99, 105, 118, 126, 171, 195, 201, 209, 210, 211, 212, 216, 217, 219, 237, 245, 299, 314], "increas": [6, 20, 37, 39, 48, 54, 77, 79, 88, 116, 133, 141, 144, 215, 235, 252, 260, 263, 294], "variabl": [1, 5, 7, 8, 10, 20, 24, 26, 28, 30, 31, 34, 41, 46, 47, 48, 50, 53, 55, 56, 58, 65, 67, 69, 71, 72, 74, 81, 86, 87, 88, 92, 93, 97, 99, 101, 104, 106, 113, 116, 117, 118, 123, 126, 127, 129, 132, 133, 135, 136, 138, 140, 143, 146, 147, 148, 152, 157, 158, 160, 161, 164, 165, 168, 169, 170, 172, 174, 176, 182, 184, 194, 195, 199, 201, 203, 206, 212, 215, 224, 232, 235, 236, 237, 242, 245, 246, 248, 251, 252, 254, 255, 257, 259, 262, 264, 265, 266, 270, 275, 276, 278, 279, 286, 287, 296, 297, 298, 301, 303, 305, 311, 313], "mine": [13, 16, 17, 20, 31, 39, 46, 61, 63, 64, 72, 79, 86, 93, 103, 155, 184, 195, 205, 219, 273, 290, 291, 313], "de": [20, 24, 25, 39, 65, 66, 79, 161, 279], "extra": [5, 10, 20, 27, 28, 33, 34, 46, 53, 58, 68, 69, 73, 74, 86, 105, 117, 118, 122, 126, 129, 131, 138, 160, 174, 176, 178, 181, 223, 236, 237, 241, 245, 248, 250, 257, 278, 303, 305, 307, 310], "overshoot": 20, "full": [4, 5, 6, 10, 11, 14, 15, 20, 25, 26, 28, 39, 41, 44, 47, 52, 53, 54, 58, 59, 62, 66, 67, 69, 79, 81, 85, 87, 92, 96, 97, 101, 103, 113, 114, 117, 120, 125, 126, 129, 130, 131, 134, 139, 151, 152, 157, 160, 168, 171, 179, 182, 184, 186, 188, 194, 198, 199, 203, 205, 232, 233, 236, 239, 244, 245, 248, 249, 250, 253, 258, 269, 270, 275, 278, 290, 296, 299, 308, 311, 313, 315, 317], "maxim": [5, 20, 34, 53, 74, 290], "toughest": 20, "had": [1, 5, 9, 11, 12, 13, 17, 20, 22, 24, 26, 30, 34, 35, 37, 43, 44, 46, 50, 53, 57, 59, 60, 61, 64, 65, 67, 71, 74, 75, 77, 83, 85, 86, 91, 92, 93, 94, 97, 100, 101, 103, 111, 112, 113, 119, 120, 121, 124, 125, 127, 129, 130, 131, 132, 135, 137, 138, 141, 142, 143, 147, 150, 151, 152, 153, 154, 155, 160, 165, 167, 168, 170, 171, 175, 176, 179, 180, 182, 184, 193, 194, 195, 196, 199, 202, 203, 205, 211, 216, 219, 230, 231, 232, 238, 239, 240, 243, 244, 246, 248, 249, 250, 251, 254, 256, 257, 260, 261, 262, 264, 268, 269, 270, 271, 272, 273, 278, 287, 289, 291, 294, 296, 298, 299, 304, 305, 308, 309, 311, 313, 314], "percept": [], "embed": [20, 94, 102, 152, 164, 170, 177, 184, 196, 204, 270, 286, 298, 306, 313], "copi": [1, 8, 11, 20, 24, 25, 27, 28, 30, 33, 34, 37, 39, 40, 43, 44, 47, 50, 56, 59, 65, 66, 68, 69, 71, 73, 74, 77, 79, 80, 83, 85, 87, 93, 97, 103, 113, 116, 117, 121, 123, 137, 139, 143, 146, 147, 156, 157, 164, 171, 175, 180, 182, 195, 199, 205, 211, 232, 235, 236, 240, 242, 256, 258, 262, 264, 265, 274, 275, 286, 299, 304, 309, 311], "reliabl": [20, 25, 27, 66, 68, 130, 134, 160, 161, 162, 164, 249, 253, 278, 279, 280, 286], "karl": 20, "deisseroth": 20, "clariti": [20, 138, 172, 186, 257, 301, 315], "transpar": [20, 48, 88, 106, 164, 224, 286], "bring": [1, 4, 20, 25, 28, 35, 37, 47, 50, 52, 66, 69, 75, 77, 87, 90, 95, 97, 100, 101, 120, 123, 142, 155, 160, 164, 171, 174, 175, 176, 177, 180, 186, 192, 197, 199, 202, 203, 239, 242, 261, 273, 278, 286, 294, 299, 303, 304, 305, 306, 309, 315], "remov": [6, 8, 20, 26, 28, 40, 47, 54, 56, 67, 69, 80, 87, 91, 94, 95, 104, 106, 109, 118, 123, 132, 139, 143, 147, 154, 164, 174, 175, 176, 179, 193, 196, 197, 206, 212, 216, 224, 228, 237, 242, 251, 258, 262, 264, 272, 283, 286, 291, 303, 304, 305, 308], "coat": 20, "fly": [20, 25, 34, 66, 74, 91, 131, 193, 250], "aristotl": 20, "groundbreak": 20, "ambigu": [20, 175, 304], "clear": [1, 5, 10, 12, 20, 26, 27, 30, 34, 44, 45, 50, 53, 58, 60, 67, 68, 71, 74, 84, 85, 93, 101, 103, 120, 123, 126, 127, 132, 133, 134, 135, 137, 138, 140, 141, 144, 146, 148, 152, 153, 157, 160, 161, 162, 165, 168, 169, 175, 182, 183, 184, 195, 203, 205, 239, 242, 245, 246, 251, 252, 253, 254, 256, 257, 259, 260, 263, 265, 266, 270, 271, 275, 278, 279, 280, 287, 296, 297, 304, 311, 312, 313], "teach": [2, 9, 10, 11, 16, 20, 24, 34, 43, 44, 47, 57, 58, 59, 63, 65, 74, 83, 85, 87, 90, 92, 96, 97, 101, 103, 107, 108, 126, 127, 134, 142, 149, 150, 151, 155, 160, 167, 170, 171, 192, 194, 198, 199, 203, 205, 211, 225, 227, 245, 246, 253, 261, 267, 268, 269, 273, 278, 298], "interpret": [6, 7, 10, 17, 20, 24, 26, 28, 30, 31, 39, 41, 54, 55, 58, 64, 65, 67, 69, 71, 72, 79, 81, 109, 126, 127, 130, 133, 150, 159, 164, 174, 175, 228, 245, 246, 249, 252, 268, 277, 286, 303, 304], "amir": 20, "amedi": 20, "hebrew": 20, "sensori": [], "substitut": [4, 5, 7, 10, 11, 20, 24, 34, 47, 52, 53, 55, 58, 59, 65, 74, 87, 91, 98, 102, 126, 129, 136, 170, 193, 200, 204, 210, 212, 216, 245, 248, 255, 298], "blind": [20, 43, 83, 119, 238], "sound": [20, 30, 34, 35, 43, 44, 71, 74, 75, 83, 85, 89, 94, 101, 103, 110, 119, 151, 160, 183, 187, 191, 196, 203, 205, 229, 238, 269, 278, 312, 316], "car": [20, 30, 71, 91, 171, 193, 299], "among": [9, 20, 44, 48, 57, 85, 88, 93, 97, 101, 106, 123, 131, 160, 169, 170, 171, 195, 199, 203, 224, 242, 250, 278, 297, 298, 299], "success": [1, 2, 4, 5, 7, 9, 20, 26, 29, 31, 34, 45, 50, 52, 53, 55, 57, 67, 70, 72, 74, 84, 93, 94, 95, 97, 98, 100, 101, 104, 106, 117, 120, 121, 123, 124, 130, 131, 133, 134, 135, 138, 147, 157, 161, 164, 170, 171, 172, 174, 184, 195, 196, 197, 199, 200, 202, 203, 206, 224, 236, 239, 240, 242, 243, 249, 250, 252, 253, 254, 257, 264, 275, 279, 286, 292, 294, 298, 299, 301, 303, 313], "essenti": [1, 4, 7, 11, 20, 25, 37, 39, 45, 47, 48, 50, 52, 55, 59, 66, 77, 79, 84, 87, 88, 90, 97, 106, 122, 133, 136, 141, 148, 152, 154, 160, 161, 162, 166, 168, 171, 172, 176, 192, 199, 224, 241, 252, 255, 260, 266, 270, 272, 278, 279, 280, 288, 296, 299, 301, 305], "cat": [4, 20, 24, 25, 34, 52, 65, 66, 74, 91, 123, 157, 176, 184, 193, 242, 275, 305, 313], "held": [20, 39, 79, 121, 240], "hein": 20, "reconstruct": [20, 30, 34, 71, 74], "minut": [1, 10, 20, 33, 39, 41, 44, 50, 58, 73, 79, 81, 85, 95, 96, 100, 103, 104, 108, 126, 129, 130, 133, 138, 153, 164, 170, 171, 180, 183, 186, 188, 197, 198, 202, 205, 206, 210, 227, 245, 248, 249, 252, 257, 271, 286, 292, 294, 298, 299, 309, 312, 315, 317], "partial": [4, 20, 52, 116, 135, 235, 254], "cochlear": 20, "nois": [4, 20, 28, 52, 69], "ear": 20, "vision": 20, "support": [1, 3, 4, 5, 6, 8, 11, 13, 14, 17, 20, 24, 25, 26, 28, 30, 34, 35, 37, 39, 44, 45, 47, 50, 51, 52, 53, 54, 56, 59, 61, 62, 64, 65, 66, 67, 69, 71, 74, 75, 77, 79, 84, 85, 87, 91, 93, 95, 96, 100, 101, 102, 103, 106, 110, 111, 113, 117, 118, 121, 122, 124, 126, 127, 128, 129, 130, 132, 133, 134, 137, 138, 141, 146, 148, 149, 151, 155, 156, 157, 158, 160, 162, 164, 165, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 182, 184, 186, 188, 193, 195, 197, 198, 202, 203, 204, 205, 224, 229, 230, 232, 236, 237, 240, 241, 243, 245, 246, 247, 248, 249, 251, 252, 253, 256, 257, 260, 265, 266, 267, 269, 273, 274, 275, 276, 278, 280, 283, 286, 287, 291, 296, 297, 298, 299, 301, 304, 305, 306, 307, 308, 309, 311, 313, 315, 317], "feed": [20, 294], "multipli": [10, 20, 30, 58, 71, 113, 119, 126, 135, 136, 152, 160, 170, 212, 216, 219, 220, 232, 238, 245, 254, 255, 270, 278, 298], "correct": [5, 7, 9, 10, 20, 24, 26, 34, 39, 47, 53, 55, 57, 58, 65, 67, 74, 79, 87, 94, 97, 98, 105, 107, 113, 126, 132, 134, 135, 139, 148, 151, 161, 164, 165, 168, 169, 171, 175, 176, 186, 188, 196, 199, 200, 210, 214, 216, 219, 223, 225, 232, 245, 251, 253, 254, 258, 266, 269, 279, 282, 286, 287, 296, 297, 299, 304, 305, 315, 317], "colllater": 20, "cerebr": 20, "garden": [7, 20, 55], "fill": [4, 9, 14, 17, 20, 27, 37, 39, 48, 52, 57, 62, 64, 68, 77, 79, 88, 113, 120, 122, 136, 139, 148, 160, 171, 181, 211, 219, 232, 239, 241, 255, 258, 266, 278, 299, 310], "pyramidi": 20, "sea": 20, "item": [4, 6, 10, 20, 27, 30, 33, 44, 52, 54, 58, 68, 71, 73, 85, 91, 92, 93, 96, 97, 104, 114, 115, 116, 118, 120, 123, 126, 127, 131, 134, 135, 136, 137, 139, 143, 146, 158, 169, 172, 176, 193, 194, 195, 198, 199, 206, 210, 233, 234, 235, 237, 239, 242, 245, 246, 250, 253, 254, 255, 256, 258, 262, 265, 276, 297, 301, 305], "didn": [4, 5, 6, 9, 12, 20, 22, 24, 26, 28, 34, 39, 43, 44, 47, 52, 53, 54, 57, 60, 65, 67, 69, 74, 79, 83, 85, 87, 91, 92, 93, 95, 96, 100, 103, 113, 119, 121, 123, 129, 131, 133, 134, 138, 141, 148, 151, 152, 153, 156, 157, 160, 161, 168, 171, 174, 176, 181, 188, 193, 194, 195, 197, 198, 202, 205, 212, 232, 238, 240, 242, 248, 250, 252, 253, 257, 260, 266, 269, 270, 271, 274, 275, 278, 279, 294, 296, 299, 303, 305, 310, 314, 317], "aobut": 20, "strength": [20, 21, 24, 47, 65, 87, 101, 103, 116, 118, 120, 131, 184, 203, 205, 235, 237, 239, 250, 313], "stronger": [20, 24, 65, 165, 287], "weaker": 20, "hebb": [20, 43, 83], "hypothesi": [20, 116, 235], "1949": 20, "repeatedli": [20, 24, 65, 114, 129, 141, 174, 176, 233, 248, 260, 303, 305], "metabol": 20, "effici": [3, 6, 20, 33, 39, 51, 54, 73, 79, 93, 94, 99, 100, 102, 103, 106, 110, 116, 131, 141, 146, 147, 152, 156, 162, 166, 176, 184, 195, 196, 201, 202, 204, 205, 224, 229, 235, 250, 260, 264, 265, 270, 274, 280, 288, 305, 313], "subsequ": [1, 20, 44, 50, 85, 100, 141, 143, 164, 202, 260, 262, 286], "investig": [10, 20, 26, 39, 45, 58, 67, 79, 84, 121, 126, 133, 156, 178, 240, 245, 252, 274, 307], "inde": [5, 20, 34, 47, 53, 74, 87, 93, 95, 97, 103, 130, 131, 136, 140, 141, 146, 162, 168, 176, 179, 187, 188, 195, 197, 199, 205, 249, 250, 255, 259, 260, 265, 280, 296, 305, 308, 316, 317], "implement": [10, 15, 20, 33, 34, 39, 40, 45, 58, 73, 74, 79, 80, 84, 95, 99, 101, 102, 105, 106, 110, 113, 115, 119, 120, 123, 126, 130, 131, 132, 135, 136, 138, 141, 144, 146, 148, 151, 160, 161, 162, 165, 172, 176, 178, 179, 186, 197, 201, 203, 204, 223, 224, 229, 232, 234, 238, 239, 242, 245, 249, 250, 251, 254, 255, 257, 260, 263, 265, 266, 269, 278, 279, 280, 287, 301, 305, 307, 308, 315], "hippocamp": 20, "addit": [1, 3, 4, 5, 6, 8, 9, 20, 23, 24, 25, 28, 35, 37, 39, 41, 44, 45, 50, 51, 52, 53, 54, 56, 57, 65, 66, 69, 75, 77, 79, 81, 84, 85, 90, 91, 92, 93, 94, 96, 97, 99, 100, 102, 103, 105, 106, 108, 116, 117, 118, 120, 121, 122, 123, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 143, 144, 146, 147, 148, 151, 152, 156, 157, 159, 161, 162, 164, 165, 168, 170, 172, 174, 176, 178, 181, 182, 183, 184, 186, 192, 193, 194, 195, 196, 198, 199, 201, 202, 204, 205, 223, 224, 227, 235, 236, 237, 239, 240, 241, 242, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 260, 262, 263, 264, 265, 266, 269, 270, 274, 275, 277, 279, 280, 286, 287, 296, 298, 301, 303, 305, 307, 310, 311, 312, 313, 315], "transmitt": 20, "led": [0, 1, 20, 24, 36, 46, 49, 50, 65, 76, 86, 101, 123, 138, 171, 183, 184, 203, 242, 257, 299, 312, 313], "mainli": [6, 7, 11, 20, 26, 54, 55, 59, 67, 93, 100, 102, 106, 115, 170, 188, 195, 202, 204, 211, 224, 234, 298, 317], "1990": [20, 44, 85, 103, 119, 173, 184, 205, 238, 290, 302, 313], "stdp": 20, "paragraph": [7, 20, 25, 34, 55, 66, 74, 136, 255], "ltp": 20, "hour": [8, 10, 16, 20, 25, 41, 44, 45, 56, 58, 63, 66, 81, 84, 85, 96, 116, 126, 130, 160, 171, 183, 198, 207, 210, 212, 218, 235, 245, 249, 278, 292, 299, 312], "lifetim": [20, 138, 172, 176, 257, 282, 301, 305], "revers": [7, 20, 55, 92, 139, 143, 147, 149, 152, 157, 176, 194, 258, 262, 264, 267, 270, 275, 305], "ltd": 20, "depress": [20, 282], "dan": 20, "poo": 20, "rat": [20, 283, 290], "2006": [20, 173, 290, 302], "trend": [20, 94, 107, 160, 184, 196, 225, 278, 313], "downward": [20, 139, 258, 282], "upward": [20, 106, 224], "40m": 20, "incident": [20, 24, 34, 65, 74, 92, 152, 168, 170, 178, 194, 270, 296, 298, 307], "pavlov": 20, "bell": [20, 171, 173, 299, 302], "food": [20, 44, 85, 137, 147, 186, 256, 264, 315], "blurri": 20, "morpholog": 20, "correl": [9, 20, 48, 57, 88, 106, 116, 224, 235], "seem": [1, 6, 10, 14, 20, 22, 24, 34, 35, 42, 43, 44, 45, 50, 54, 58, 62, 65, 74, 75, 82, 83, 84, 85, 94, 95, 97, 107, 111, 116, 120, 121, 125, 126, 129, 130, 143, 144, 146, 147, 151, 153, 160, 165, 168, 171, 173, 183, 184, 189, 196, 197, 199, 207, 211, 225, 230, 235, 239, 240, 244, 245, 248, 249, 262, 263, 264, 265, 269, 271, 278, 287, 296, 299, 302, 312, 313, 318], "1967": 20, "globu": 20, "scheibel": 20, "depriv": [20, 291], "rabbit": [20, 34, 74, 109, 119, 211, 228, 238], "densiti": [20, 106, 224], "stabl": [20, 42, 82, 89, 160, 174, 191, 278, 303], "dead": [20, 104, 206, 211], "photon": 20, "adult": [20, 45, 84, 171, 290, 299, 314], "persist": [20, 44, 47, 85, 87, 146, 265], "born": [4, 20, 52, 130, 135, 249, 254], "task": [4, 5, 20, 24, 26, 33, 34, 35, 36, 37, 39, 43, 44, 47, 52, 53, 65, 67, 73, 74, 75, 76, 77, 79, 83, 85, 87, 91, 93, 94, 99, 101, 102, 103, 104, 114, 129, 134, 136, 138, 141, 146, 147, 148, 152, 154, 155, 156, 157, 160, 162, 164, 165, 166, 167, 169, 174, 176, 182, 184, 193, 195, 196, 201, 203, 204, 205, 206, 218, 233, 248, 253, 255, 257, 260, 264, 265, 266, 270, 272, 273, 274, 275, 278, 280, 286, 287, 288, 289, 294, 297, 303, 305, 311, 313], "enrich": [10, 20, 58], "environ": [1, 2, 3, 5, 6, 8, 11, 13, 16, 20, 26, 28, 37, 42, 45, 46, 47, 50, 51, 53, 54, 56, 59, 61, 63, 66, 67, 69, 77, 82, 84, 86, 87, 90, 91, 92, 94, 96, 97, 101, 116, 117, 120, 121, 123, 127, 128, 132, 134, 138, 149, 150, 154, 156, 157, 160, 164, 167, 168, 169, 170, 174, 175, 176, 177, 178, 188, 193, 194, 196, 198, 199, 203, 235, 236, 239, 240, 242, 246, 247, 251, 253, 257, 267, 268, 272, 274, 275, 278, 286, 289, 294, 296, 297, 298, 303, 304, 305, 306, 307, 317], "song": [20, 43, 83, 104, 113, 206, 232], "bird": [20, 34, 74], "male": [20, 45, 84, 171, 299], "sing": [20, 27, 68], "mammal": [20, 131, 250], "pasko": 20, "ravic": 20, "prenat": 20, "postnat": 20, "1997": 20, "elizabeth": 20, "gould": 20, "princeton": 20, "shrew": 20, "marmoset": 20, "monkei": 20, "primat": [20, 43, 44, 83, 85], "least": [7, 12, 20, 24, 25, 28, 30, 39, 43, 44, 46, 55, 60, 65, 66, 69, 71, 79, 83, 85, 86, 93, 94, 95, 104, 108, 110, 113, 115, 116, 118, 119, 120, 121, 123, 124, 128, 129, 130, 131, 138, 139, 142, 144, 146, 151, 153, 154, 155, 156, 160, 161, 162, 165, 168, 169, 170, 171, 174, 175, 176, 178, 182, 184, 185, 195, 196, 197, 206, 227, 229, 232, 234, 235, 237, 238, 239, 240, 242, 243, 247, 248, 249, 250, 257, 258, 261, 263, 265, 269, 271, 272, 273, 274, 278, 279, 280, 287, 292, 296, 297, 298, 299, 303, 304, 305, 307, 311, 313], "olfactori": 20, "respond": [5, 20, 26, 53, 67, 107, 117, 225, 236], "tone": 20, "newborn": 20, "stem": [10, 20, 39, 58, 79, 94, 119, 126, 148, 165, 196, 238, 245, 266, 287], "integr": [1, 4, 5, 9, 10, 11, 14, 20, 24, 25, 26, 34, 35, 37, 39, 47, 50, 52, 53, 57, 58, 59, 62, 65, 66, 67, 74, 75, 77, 79, 87, 90, 93, 96, 97, 99, 106, 110, 117, 118, 120, 121, 126, 141, 144, 151, 157, 160, 165, 167, 169, 171, 174, 175, 176, 177, 184, 192, 195, 198, 199, 201, 224, 229, 236, 237, 239, 240, 245, 260, 263, 269, 275, 278, 287, 289, 297, 299, 303, 304, 305, 306, 313], "provid": [1, 5, 9, 10, 11, 17, 20, 24, 25, 26, 27, 30, 37, 39, 41, 44, 45, 47, 50, 53, 57, 58, 59, 64, 65, 66, 67, 68, 71, 77, 79, 81, 84, 85, 87, 92, 93, 96, 97, 99, 101, 102, 103, 104, 106, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 130, 133, 134, 135, 141, 144, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 166, 168, 169, 171, 174, 175, 176, 177, 184, 186, 194, 195, 198, 199, 201, 203, 204, 205, 206, 224, 235, 236, 239, 240, 241, 242, 245, 246, 247, 248, 249, 252, 253, 254, 260, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 288, 296, 297, 299, 303, 304, 305, 306, 313, 315], "hope": [1, 5, 6, 13, 14, 16, 17, 20, 26, 37, 44, 50, 53, 54, 61, 62, 63, 64, 67, 77, 85, 93, 103, 104, 107, 109, 130, 137, 149, 161, 162, 171, 173, 182, 186, 195, 205, 206, 225, 228, 249, 256, 267, 279, 280, 290, 294, 299, 302, 311, 315], "alzheim": 20, "rehab": 20, "stroke": [20, 173, 302], "injuri": 20, "comment": [4, 11, 20, 24, 28, 43, 44, 46, 52, 59, 65, 69, 83, 85, 86, 92, 104, 108, 123, 127, 133, 135, 138, 152, 155, 160, 164, 165, 194, 206, 227, 242, 246, 252, 254, 257, 270, 273, 278, 286, 287, 294], "anecdot": 20, "taxi": [20, 116, 156, 168, 178, 235, 274, 296, 307], "driver": [20, 94, 120, 154, 156, 164, 168, 178, 196, 239, 272, 274, 286, 296, 307], "musician": [20, 43, 83], "volum": [4, 10, 20, 25, 47, 52, 58, 66, 87, 94, 126, 132, 171, 196, 245, 251, 299], "issu": [1, 3, 7, 8, 9, 11, 14, 15, 20, 26, 28, 33, 36, 37, 39, 46, 47, 50, 51, 55, 56, 57, 59, 62, 67, 69, 73, 76, 77, 79, 86, 87, 92, 94, 96, 100, 103, 104, 105, 106, 118, 127, 128, 129, 130, 132, 138, 141, 146, 150, 152, 157, 160, 161, 164, 169, 171, 177, 180, 182, 186, 194, 196, 198, 202, 205, 206, 216, 223, 224, 237, 246, 247, 248, 249, 251, 257, 260, 265, 268, 270, 275, 278, 279, 286, 294, 297, 299, 306, 309, 311, 315], "trustworthi": 20, "read": [0, 1, 3, 4, 5, 7, 9, 13, 14, 22, 23, 25, 30, 34, 35, 36, 37, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 55, 57, 61, 62, 66, 71, 74, 75, 76, 77, 83, 84, 85, 86, 87, 91, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 114, 115, 119, 120, 127, 128, 130, 131, 133, 134, 136, 138, 141, 146, 152, 153, 154, 156, 157, 161, 168, 169, 171, 176, 177, 179, 182, 184, 186, 193, 195, 196, 197, 198, 199, 201, 202, 203, 205, 206, 207, 210, 216, 218, 233, 234, 238, 239, 246, 247, 249, 250, 252, 253, 255, 257, 260, 265, 270, 271, 272, 274, 275, 279, 291, 294, 296, 297, 299, 305, 306, 308, 311, 313, 315], "stimul": 20, "emb": [20, 136, 170, 255, 298], "difficult": [3, 9, 11, 20, 36, 51, 57, 59, 76, 93, 95, 102, 103, 107, 117, 118, 120, 129, 141, 142, 144, 150, 154, 156, 167, 171, 172, 182, 195, 197, 204, 205, 210, 225, 236, 237, 239, 248, 260, 261, 263, 268, 272, 274, 289, 299, 301, 311], "manipul": [4, 10, 14, 20, 27, 34, 39, 41, 48, 52, 58, 62, 68, 74, 79, 81, 88, 93, 100, 116, 126, 134, 144, 152, 156, 157, 158, 166, 169, 170, 175, 195, 202, 235, 245, 253, 263, 270, 274, 275, 276, 288, 297, 298, 304], "correctli": [4, 11, 20, 24, 26, 34, 40, 47, 52, 59, 65, 67, 74, 80, 87, 90, 94, 96, 105, 117, 129, 132, 133, 137, 139, 148, 153, 160, 161, 178, 192, 196, 198, 223, 236, 248, 251, 252, 256, 258, 266, 271, 278, 279, 307], "teacher": [0, 21, 44, 49, 85, 136, 148, 171, 174, 210, 211, 255, 266, 291, 299, 303, 314], "outstand": [9, 21, 26, 57, 67, 96, 97, 120, 150, 171, 176, 184, 198, 199, 239, 268, 299, 305, 313], "command": [1, 2, 6, 8, 11, 21, 24, 25, 26, 28, 35, 42, 44, 48, 50, 54, 56, 59, 65, 66, 67, 69, 75, 82, 85, 88, 89, 90, 92, 93, 97, 98, 99, 100, 101, 103, 106, 114, 117, 118, 120, 122, 124, 127, 128, 132, 134, 153, 155, 160, 164, 168, 170, 175, 176, 181, 182, 184, 191, 192, 194, 195, 199, 200, 201, 202, 203, 205, 224, 233, 236, 237, 239, 241, 243, 246, 247, 251, 253, 271, 273, 278, 286, 296, 298, 304, 305, 310, 311, 313], "present": [5, 11, 20, 21, 44, 48, 53, 59, 85, 88, 103, 106, 123, 130, 131, 133, 138, 161, 171, 181, 205, 224, 242, 249, 250, 252, 257, 279, 294, 299, 310], "kei": [1, 4, 7, 10, 20, 21, 25, 26, 28, 30, 33, 39, 40, 47, 50, 52, 55, 58, 66, 67, 69, 71, 73, 79, 80, 87, 97, 99, 100, 113, 114, 116, 117, 126, 127, 129, 130, 131, 133, 135, 139, 144, 147, 152, 153, 161, 162, 166, 169, 171, 172, 175, 176, 179, 199, 201, 202, 215, 232, 233, 235, 236, 245, 246, 248, 249, 250, 252, 254, 258, 263, 264, 270, 271, 279, 280, 282, 288, 297, 299, 301, 304, 305, 308], "five": [1, 3, 9, 13, 21, 44, 50, 51, 57, 61, 85, 100, 101, 113, 116, 119, 129, 130, 139, 147, 156, 160, 162, 166, 168, 171, 176, 178, 202, 203, 207, 232, 235, 238, 248, 249, 258, 264, 274, 278, 280, 288, 296, 299, 305, 307], "dendrit": 21, "mix": [5, 6, 9, 10, 14, 21, 28, 44, 53, 54, 57, 58, 62, 69, 85, 93, 116, 120, 121, 126, 130, 133, 137, 146, 147, 155, 172, 184, 195, 219, 235, 239, 240, 245, 249, 252, 256, 264, 265, 273, 301, 313], "classic": [20, 21, 154, 171, 177, 272, 299, 306], "illustr": [1, 3, 10, 11, 21, 50, 51, 58, 59, 95, 126, 137, 141, 148, 161, 175, 176, 182, 197, 245, 256, 260, 266, 279, 304, 305, 311], "pleasur": 22, "feel": [4, 5, 9, 12, 15, 20, 22, 26, 34, 35, 42, 44, 45, 52, 53, 57, 60, 67, 74, 75, 82, 84, 85, 91, 92, 93, 95, 96, 97, 101, 102, 103, 107, 110, 113, 121, 128, 129, 130, 136, 141, 146, 148, 149, 153, 156, 171, 172, 173, 174, 176, 177, 193, 194, 195, 197, 198, 199, 203, 204, 205, 214, 215, 225, 229, 232, 240, 247, 248, 249, 255, 260, 265, 266, 267, 271, 274, 283, 290, 294, 299, 301, 302, 303, 305, 306, 314], "2015": [22, 175, 304], "offer": [5, 9, 11, 22, 39, 45, 53, 57, 59, 79, 84, 91, 94, 97, 101, 102, 104, 106, 116, 117, 119, 120, 122, 130, 136, 138, 144, 146, 156, 158, 160, 171, 178, 179, 184, 193, 196, 199, 203, 204, 206, 224, 235, 236, 238, 239, 241, 249, 255, 257, 263, 265, 274, 276, 278, 281, 299, 307, 308, 313], "tour": [4, 20, 22, 52, 162, 280], "varieti": [5, 14, 22, 53, 62, 93, 97, 99, 101, 102, 120, 155, 157, 164, 166, 182, 195, 199, 201, 203, 204, 239, 273, 275, 286, 288, 311], "abil": [22, 25, 42, 44, 47, 66, 82, 85, 87, 97, 99, 103, 116, 120, 126, 129, 144, 146, 149, 151, 154, 155, 156, 158, 161, 162, 168, 171, 176, 177, 178, 179, 184, 199, 201, 205, 235, 239, 245, 248, 263, 265, 267, 269, 272, 273, 274, 276, 279, 280, 296, 299, 305, 306, 307, 308, 313], "built": [1, 2, 3, 4, 8, 11, 14, 17, 20, 22, 24, 25, 28, 30, 33, 34, 39, 40, 41, 45, 47, 50, 51, 52, 56, 59, 62, 64, 65, 66, 69, 71, 73, 74, 79, 80, 81, 84, 87, 92, 93, 94, 95, 96, 101, 106, 116, 117, 118, 120, 122, 123, 128, 129, 130, 131, 134, 135, 140, 144, 146, 148, 151, 153, 155, 156, 157, 160, 163, 164, 166, 169, 170, 175, 176, 181, 194, 195, 196, 197, 198, 203, 224, 235, 236, 237, 239, 241, 242, 247, 248, 249, 250, 253, 254, 259, 263, 265, 266, 269, 271, 273, 274, 275, 278, 285, 286, 288, 292, 297, 298, 304, 305, 310], "neonat": 22, "infant": 22, "choic": [1, 6, 9, 20, 22, 24, 28, 39, 44, 45, 46, 47, 50, 54, 57, 65, 69, 79, 84, 85, 86, 87, 92, 93, 94, 96, 97, 100, 101, 102, 104, 106, 118, 120, 127, 133, 141, 146, 148, 151, 155, 156, 160, 164, 165, 168, 171, 172, 174, 179, 182, 184, 188, 194, 195, 196, 198, 199, 202, 203, 204, 206, 224, 237, 239, 246, 252, 260, 265, 266, 269, 273, 274, 278, 286, 287, 296, 299, 301, 303, 308, 311, 313, 317], "prior": [22, 101, 130, 203, 249], "awar": [9, 10, 13, 20, 22, 24, 28, 39, 42, 57, 58, 61, 65, 69, 79, 82, 126, 129, 133, 134, 152, 164, 175, 182, 245, 248, 252, 253, 270, 286, 293, 304, 311], "spoiler": [3, 22, 51, 100, 101, 141, 202, 203, 260], "alert": [22, 100, 101, 141, 202, 203, 260], "whatev": [4, 7, 11, 12, 22, 28, 35, 43, 44, 47, 52, 55, 59, 60, 69, 75, 83, 85, 87, 98, 101, 104, 114, 119, 123, 128, 133, 134, 135, 137, 138, 161, 164, 167, 169, 171, 174, 177, 182, 183, 186, 188, 200, 203, 206, 216, 218, 221, 233, 238, 242, 247, 252, 253, 254, 256, 257, 279, 286, 289, 290, 294, 297, 299, 303, 306, 311, 312, 315, 317], "cannot": [20, 22, 27, 30, 39, 68, 71, 79, 122, 129, 153, 156, 158, 176, 186, 241, 248, 271, 274, 276, 305, 315], "moment": [1, 6, 7, 22, 24, 25, 30, 35, 50, 54, 55, 65, 66, 71, 75, 118, 119, 130, 158, 160, 169, 175, 176, 178, 181, 237, 238, 249, 276, 278, 297, 304, 305, 307, 310], "dreamer": 22, "veget": 22, "patient": [20, 22, 100, 171, 202, 299], "structur": [1, 3, 11, 14, 15, 22, 24, 33, 35, 43, 44, 46, 47, 50, 51, 59, 62, 65, 73, 75, 83, 85, 86, 87, 93, 101, 107, 119, 133, 135, 141, 144, 146, 147, 155, 168, 174, 176, 178, 182, 184, 185, 186, 188, 195, 203, 225, 238, 252, 254, 260, 263, 264, 265, 273, 296, 303, 305, 307, 311, 313, 315, 317], "decis": [7, 9, 20, 22, 27, 43, 55, 57, 68, 83, 94, 97, 101, 109, 196, 199, 203, 228, 291], "although": [1, 3, 4, 6, 9, 14, 22, 24, 26, 28, 30, 34, 39, 40, 43, 44, 48, 50, 51, 52, 54, 57, 62, 65, 67, 69, 71, 74, 79, 80, 83, 85, 88, 93, 94, 95, 97, 103, 112, 114, 117, 120, 123, 127, 129, 131, 134, 136, 137, 141, 144, 146, 150, 156, 157, 160, 161, 162, 165, 168, 170, 171, 175, 176, 177, 179, 184, 195, 196, 197, 199, 205, 231, 233, 236, 239, 242, 246, 248, 250, 253, 255, 256, 260, 263, 265, 268, 274, 275, 278, 279, 280, 287, 296, 298, 299, 304, 305, 306, 308, 313, 314], "heavili": [6, 22, 24, 35, 45, 54, 65, 75, 84, 92, 95, 101, 138, 150, 151, 161, 171, 178, 194, 197, 203, 257, 268, 269, 279, 299, 307], "emphas": [20, 22, 94, 105, 167, 196, 223, 289], "unconsci": [20, 22], "innat": 22, "sens": [3, 7, 9, 10, 12, 20, 22, 24, 26, 27, 28, 30, 34, 37, 43, 44, 47, 51, 55, 57, 58, 60, 65, 67, 68, 69, 71, 74, 77, 83, 85, 87, 92, 93, 104, 107, 118, 119, 121, 126, 127, 129, 130, 133, 134, 138, 143, 146, 147, 152, 157, 160, 169, 171, 172, 176, 183, 184, 186, 194, 195, 206, 225, 237, 238, 240, 245, 246, 248, 249, 252, 253, 257, 262, 264, 265, 270, 275, 278, 294, 297, 299, 301, 305, 312, 313, 315], "vere": 22, "facil": [11, 22, 59, 101, 203], "adaptationist": 22, "argument": [2, 6, 11, 22, 24, 26, 34, 39, 41, 48, 54, 59, 65, 67, 74, 79, 81, 88, 91, 93, 94, 95, 99, 100, 101, 102, 106, 107, 113, 127, 129, 130, 131, 132, 136, 138, 139, 140, 144, 157, 158, 164, 166, 169, 175, 176, 178, 193, 195, 196, 197, 201, 202, 203, 204, 224, 225, 232, 246, 248, 249, 250, 251, 255, 257, 258, 259, 263, 275, 276, 286, 288, 297, 304, 305, 307], "popular": [1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 17, 22, 24, 27, 36, 39, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 59, 61, 64, 65, 68, 76, 79, 84, 86, 87, 93, 94, 95, 97, 99, 100, 101, 102, 103, 116, 122, 123, 124, 127, 128, 130, 131, 135, 136, 138, 139, 143, 144, 146, 148, 152, 155, 156, 157, 164, 168, 169, 170, 171, 176, 177, 179, 188, 195, 196, 197, 199, 201, 202, 203, 204, 205, 210, 235, 241, 242, 243, 246, 247, 249, 250, 254, 255, 257, 258, 262, 263, 265, 266, 270, 273, 274, 275, 286, 296, 297, 298, 299, 305, 306, 308, 317], "ignor": [3, 4, 7, 9, 14, 22, 51, 52, 55, 57, 62, 98, 103, 113, 114, 116, 118, 130, 133, 146, 162, 175, 178, 200, 205, 232, 233, 235, 237, 249, 252, 265, 280, 304, 307, 314], "cultur": 22, "theme": [22, 25, 45, 66, 84, 92, 106, 124, 175, 183, 194, 224, 243, 294, 304, 312], "strongli": [2, 3, 9, 20, 22, 51, 57, 94, 101, 116, 118, 126, 139, 165, 175, 184, 196, 203, 235, 237, 245, 258, 287, 304, 313], "recommend": [1, 3, 4, 5, 7, 9, 22, 24, 25, 28, 39, 43, 44, 45, 46, 47, 50, 51, 52, 53, 55, 57, 65, 66, 69, 79, 83, 84, 85, 86, 87, 91, 93, 94, 96, 101, 102, 103, 106, 118, 130, 131, 132, 136, 137, 138, 139, 140, 151, 157, 162, 168, 170, 171, 174, 179, 182, 193, 195, 196, 198, 203, 204, 205, 224, 237, 249, 250, 251, 255, 256, 257, 258, 259, 269, 275, 280, 296, 298, 299, 303, 308, 311], "compel": [22, 39, 79, 121, 134, 240, 253], "fascin": [10, 22, 58, 94, 119, 123, 126, 176, 196, 238, 242, 245, 305], "surf": 23, "introductori": [2, 17, 23, 28, 64, 69, 101, 155, 203, 210, 273], "person": [0, 5, 6, 24, 33, 34, 36, 37, 44, 45, 49, 53, 54, 65, 73, 74, 76, 77, 84, 85, 93, 97, 102, 107, 114, 118, 119, 120, 129, 131, 133, 135, 137, 138, 155, 162, 171, 176, 183, 184, 195, 199, 204, 210, 211, 225, 233, 237, 238, 239, 248, 250, 252, 254, 256, 257, 273, 280, 281, 282, 283, 299, 305, 312, 313], "web": [2, 5, 8, 15, 26, 34, 39, 44, 45, 47, 53, 54, 56, 67, 74, 79, 84, 85, 87, 97, 101, 102, 107, 120, 122, 123, 124, 130, 133, 136, 149, 157, 160, 169, 175, 180, 182, 184, 186, 199, 203, 204, 225, 239, 241, 242, 243, 249, 252, 255, 267, 275, 278, 294, 297, 304, 309, 311, 313, 315], "known": [4, 5, 10, 14, 20, 27, 30, 34, 42, 48, 52, 53, 58, 62, 68, 71, 74, 82, 88, 98, 102, 103, 108, 118, 121, 126, 130, 132, 133, 134, 135, 136, 141, 146, 148, 152, 161, 162, 170, 175, 186, 200, 204, 205, 227, 237, 240, 245, 249, 251, 252, 253, 254, 255, 260, 265, 266, 270, 279, 280, 298, 304, 315], "lockwood": [34, 74, 129, 131, 144, 248, 250, 263], "bequeath": [], "bunch": [8, 20, 56, 91, 103, 107, 115, 193, 205, 225, 234], "benefit": [8, 11, 13, 28, 40, 42, 44, 56, 59, 61, 69, 80, 82, 85, 95, 99, 103, 117, 118, 121, 129, 138, 140, 146, 151, 162, 171, 179, 184, 188, 197, 201, 205, 236, 237, 240, 248, 257, 259, 265, 269, 280, 290, 291, 292, 299, 308, 313, 317], "parent": [4, 34, 47, 52, 74, 87, 133, 134, 137, 153, 169, 252, 253, 256, 271, 297], "grew": [4, 52, 171, 299], "woonsocket": [], "rhode": [131, 139, 250, 258], "island": [28, 69, 130, 131, 139, 171, 249, 250, 258, 299], "charlott": [176, 183, 305, 312], "north": [0, 16, 44, 45, 49, 63, 84, 85, 130, 249], "carolina": [0, 16, 44, 45, 49, 63, 84, 85, 130, 249], "indiana": [], "maryland": [], "connecticut": [131, 139, 250, 258], "california": [9, 45, 57, 84, 130, 249], "wife": [0, 43, 44, 45, 49, 83, 84, 85, 171, 293, 294, 299], "colombia": [130, 131, 147, 149, 249, 250, 264, 267], "celebr": [118, 130, 237, 249], "twelv": [3, 7, 47, 51, 55, 87, 110, 113, 186, 229, 232, 315], "anniversari": [], "daughter": 293, "marriag": [], "her": [0, 33, 49, 73, 129, 171, 248, 294, 299], "mom": [43, 83, 107, 171, 175, 186, 225, 299, 304, 315], "chao": [], "github": [2, 3, 4, 8, 10, 11, 20, 24, 28, 44, 46, 47, 51, 52, 56, 58, 59, 65, 69, 76, 85, 86, 87, 90, 91, 95, 97, 100, 101, 108, 114, 116, 120, 125, 126, 128, 132, 151, 153, 164, 167, 170, 177, 179, 180, 181, 192, 193, 197, 199, 202, 203, 233, 235, 239, 244, 245, 247, 251, 269, 271, 286, 289, 298, 306, 308, 309, 310], "repositori": [4, 6, 8, 11, 12, 15, 24, 25, 26, 36, 45, 46, 47, 52, 54, 56, 59, 60, 65, 66, 67, 76, 84, 86, 87, 89, 90, 91, 99, 100, 101, 103, 106, 111, 117, 118, 120, 121, 132, 153, 157, 164, 170, 177, 180, 182, 191, 192, 193, 201, 202, 203, 205, 224, 230, 236, 237, 239, 240, 251, 271, 275, 286, 298, 306, 309, 311], "glom": [], "scheme": [147, 264, 290], "explicitli": [4, 14, 30, 34, 47, 48, 52, 62, 71, 74, 87, 88, 92, 105, 116, 117, 123, 127, 130, 131, 143, 152, 161, 164, 170, 175, 194, 223, 235, 236, 242, 246, 249, 250, 262, 270, 279, 286, 298, 304], "atop": [], "lend": [171, 299], "systemat": [20, 36, 43, 44, 76, 83, 85, 171, 176, 299, 305], "buddhism": 291, "recoveri": [183, 281, 282, 312], "substanc": [10, 58, 126, 245], "misus": [], "els": [4, 5, 6, 12, 25, 28, 30, 33, 43, 46, 52, 53, 54, 60, 66, 69, 71, 73, 83, 86, 90, 94, 95, 103, 104, 105, 114, 119, 123, 124, 130, 131, 133, 134, 135, 137, 139, 141, 151, 156, 157, 158, 161, 171, 176, 183, 184, 186, 187, 192, 196, 197, 205, 206, 211, 223, 233, 238, 242, 243, 249, 250, 252, 253, 254, 256, 258, 260, 269, 274, 275, 276, 279, 290, 294, 299, 305, 312, 313, 315, 316], "embarrass": [107, 110, 186, 225, 229, 315], "scare": [3, 20, 51, 92, 130, 171, 179, 194, 249, 299, 308], "organ": [17, 20, 35, 36, 37, 45, 64, 75, 76, 77, 84, 96, 101, 125, 127, 140, 155, 160, 198, 203, 212, 244, 246, 259, 273, 278], "amus": [6, 54, 119, 238], "possibli": [47, 87, 185], "goal": [5, 8, 20, 26, 30, 36, 44, 47, 53, 56, 67, 71, 76, 85, 87, 93, 94, 96, 97, 102, 103, 107, 109, 116, 131, 137, 138, 155, 157, 161, 172, 175, 182, 188, 195, 196, 198, 199, 204, 205, 207, 211, 218, 225, 228, 235, 250, 256, 257, 273, 275, 279, 301, 304, 311, 317], "week": [9, 13, 15, 16, 17, 25, 35, 41, 44, 45, 57, 61, 63, 64, 66, 75, 81, 84, 85, 95, 101, 109, 119, 130, 155, 160, 171, 179, 183, 197, 203, 207, 210, 211, 212, 218, 228, 238, 249, 273, 278, 291, 294, 299, 308, 312], "perhap": [1, 3, 4, 6, 7, 8, 9, 11, 12, 25, 26, 30, 33, 34, 37, 39, 40, 44, 47, 50, 51, 52, 54, 55, 56, 57, 59, 60, 66, 67, 71, 73, 74, 77, 79, 80, 85, 87, 91, 93, 97, 99, 101, 102, 105, 108, 119, 121, 129, 130, 131, 133, 134, 136, 138, 139, 144, 146, 148, 151, 155, 157, 160, 162, 169, 170, 171, 175, 176, 177, 178, 183, 184, 193, 195, 199, 201, 203, 204, 207, 223, 227, 238, 240, 248, 249, 250, 252, 253, 255, 257, 258, 263, 265, 266, 269, 273, 275, 278, 280, 294, 297, 298, 299, 304, 305, 306, 307, 312, 313], "2": [2, 3, 4, 5, 6, 7, 8, 10, 11, 25, 26, 27, 28, 29, 30, 33, 34, 37, 39, 40, 41, 42, 45, 47, 51, 52, 53, 54, 55, 56, 58, 59, 66, 67, 68, 69, 70, 71, 73, 74, 77, 79, 80, 81, 82, 84, 87, 89, 90, 91, 92, 93, 95, 105, 106, 113, 114, 115, 116, 118, 119, 121, 123, 124, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 152, 153, 156, 157, 158, 160, 161, 164, 165, 166, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 183, 187, 188, 192, 193, 194, 195, 197, 207, 208, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 232, 233, 234, 235, 237, 238, 240, 242, 243, 246, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 274, 275, 276, 278, 279, 286, 287, 288, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 312, 316, 317], "memor": [7, 55, 136, 148, 207, 210, 211, 255, 266], "emphasi": [20, 207], "quotient": [207, 217], "product": [1, 3, 5, 8, 9, 10, 13, 14, 24, 25, 26, 28, 30, 36, 37, 42, 47, 50, 51, 53, 56, 57, 58, 61, 62, 65, 66, 67, 69, 71, 76, 77, 82, 87, 94, 102, 103, 104, 112, 115, 118, 120, 126, 132, 133, 135, 138, 148, 149, 151, 156, 160, 161, 168, 171, 176, 178, 181, 182, 184, 185, 186, 196, 204, 205, 206, 207, 214, 215, 231, 234, 237, 239, 245, 251, 252, 254, 257, 266, 267, 269, 274, 278, 279, 294, 296, 299, 305, 307, 310, 311, 313, 315], "chain": [3, 7, 20, 51, 55, 95, 133, 156, 178, 197, 207, 252, 274, 307], "trig": [207, 209, 210, 219], "permit": [93, 117, 195, 207, 236], "log": [4, 6, 25, 47, 52, 54, 66, 87, 96, 97, 107, 114, 123, 129, 130, 133, 136, 138, 141, 161, 164, 172, 198, 199, 207, 210, 225, 233, 242, 248, 249, 252, 255, 257, 260, 279, 286, 301], "implicit": [20, 138, 207, 257], "appplic": 207, "thoma": [20, 171, 207, 299], "finnei": [171, 207, 299], "match": [1, 6, 14, 20, 24, 26, 33, 34, 36, 39, 41, 47, 50, 54, 62, 65, 67, 73, 74, 76, 79, 81, 87, 99, 100, 113, 114, 133, 136, 141, 143, 144, 146, 147, 148, 157, 166, 180, 201, 202, 207, 232, 233, 252, 255, 260, 262, 263, 264, 265, 266, 275, 288, 309], "leonard": [171, 207, 209, 210, 212, 219, 220, 299], "almost": [3, 6, 8, 20, 25, 30, 34, 41, 44, 47, 51, 54, 56, 66, 71, 74, 81, 85, 87, 90, 93, 100, 103, 105, 119, 120, 130, 136, 138, 143, 144, 146, 152, 155, 156, 164, 165, 171, 174, 175, 176, 183, 192, 195, 202, 205, 207, 210, 223, 238, 239, 249, 255, 257, 262, 263, 265, 270, 273, 274, 282, 286, 287, 292, 294, 299, 303, 304, 305, 312], "somewhat": [1, 3, 4, 6, 8, 11, 20, 24, 25, 26, 28, 30, 34, 39, 44, 47, 50, 51, 52, 54, 56, 59, 65, 66, 67, 69, 71, 74, 79, 85, 87, 93, 95, 100, 105, 108, 120, 124, 127, 130, 131, 133, 134, 136, 138, 141, 144, 149, 151, 157, 160, 161, 162, 164, 168, 169, 172, 174, 175, 176, 178, 182, 184, 195, 197, 202, 207, 223, 227, 239, 243, 246, 249, 250, 252, 253, 255, 257, 260, 263, 267, 269, 275, 278, 279, 280, 286, 296, 297, 301, 303, 304, 305, 307, 311, 313], "three": [1, 3, 6, 7, 10, 24, 28, 33, 34, 37, 40, 41, 44, 46, 48, 50, 51, 54, 55, 58, 65, 69, 73, 74, 77, 80, 81, 85, 86, 88, 94, 99, 100, 102, 103, 106, 113, 116, 117, 118, 119, 123, 126, 127, 128, 130, 135, 136, 137, 139, 142, 147, 148, 152, 154, 160, 161, 164, 166, 169, 170, 171, 172, 173, 174, 176, 183, 186, 196, 201, 202, 204, 205, 207, 208, 212, 218, 219, 224, 232, 235, 236, 237, 238, 242, 245, 246, 247, 249, 254, 255, 256, 258, 261, 264, 266, 270, 272, 278, 279, 286, 288, 290, 291, 294, 297, 298, 299, 301, 302, 303, 305, 312, 314, 315], "backward": [141, 143, 147, 175, 207, 260, 262, 264, 304], "sure": [1, 3, 4, 9, 11, 15, 17, 24, 25, 26, 28, 30, 34, 37, 39, 40, 43, 44, 47, 48, 50, 51, 52, 57, 59, 64, 65, 66, 67, 69, 71, 74, 77, 79, 80, 83, 85, 87, 88, 89, 90, 91, 93, 95, 96, 98, 100, 104, 105, 107, 116, 117, 118, 119, 120, 122, 123, 129, 130, 131, 132, 133, 138, 141, 144, 153, 158, 160, 161, 165, 170, 171, 173, 175, 176, 181, 188, 191, 192, 193, 195, 197, 198, 200, 202, 206, 207, 212, 216, 219, 223, 225, 235, 236, 237, 238, 239, 241, 242, 248, 249, 250, 251, 252, 257, 260, 263, 271, 276, 278, 279, 287, 290, 298, 299, 302, 304, 305, 310, 317], "priorit": 207, "past": [1, 5, 30, 34, 37, 43, 44, 46, 47, 50, 53, 71, 74, 77, 83, 85, 86, 87, 94, 95, 97, 100, 101, 113, 120, 123, 127, 143, 155, 161, 170, 171, 174, 177, 196, 197, 199, 202, 203, 207, 232, 239, 242, 246, 262, 273, 279, 294, 298, 299, 303, 306], "defer": [7, 55, 91, 193, 207], "plan": [4, 5, 9, 20, 52, 53, 57, 93, 94, 100, 103, 108, 120, 171, 195, 196, 202, 205, 207, 210, 218, 227, 239, 299], "weekend": [104, 206, 207, 210, 292], "caluclu": 207, "sooner": [182, 211, 311], "career": [2, 4, 12, 43, 47, 52, 60, 83, 87, 94, 101, 102, 103, 107, 108, 136, 138, 142, 151, 155, 164, 167, 171, 173, 179, 187, 196, 203, 204, 205, 211, 225, 227, 255, 257, 269, 273, 286, 289, 292, 299, 302, 308, 314, 316], "someon": [10, 12, 24, 25, 39, 45, 46, 58, 60, 65, 66, 79, 84, 86, 92, 94, 107, 121, 123, 126, 128, 137, 162, 171, 182, 183, 186, 187, 194, 196, 211, 225, 240, 242, 245, 247, 256, 280, 290, 292, 299, 311, 312, 314, 315, 316], "radiu": [211, 219, 220], "coordin": [2, 20, 26, 48, 67, 88, 94, 105, 130, 135, 148, 175, 176, 196, 211, 249, 254, 266, 304, 305], "angl": [20, 26, 67, 113, 209, 210, 211, 232], "circumfer": 211, "miss": [5, 9, 14, 20, 27, 39, 45, 53, 57, 62, 68, 79, 84, 92, 95, 100, 101, 113, 116, 120, 129, 133, 135, 137, 162, 165, 168, 169, 180, 183, 186, 194, 197, 202, 203, 211, 232, 235, 239, 248, 252, 254, 256, 280, 287, 294, 296, 297, 309, 312, 315], "chagnon": [30, 71, 211], "algebra": [3, 10, 51, 58, 92, 93, 102, 105, 113, 119, 126, 130, 146, 148, 152, 160, 165, 170, 171, 177, 194, 195, 204, 211, 216, 223, 232, 238, 245, 249, 265, 266, 270, 278, 287, 298, 299, 306, 314], "trigonometri": [113, 171, 210, 211, 232, 299], "junior": [2, 9, 12, 57, 60, 123, 187, 211, 242], "high": [5, 9, 12, 20, 28, 30, 39, 47, 53, 57, 60, 69, 71, 79, 87, 92, 93, 94, 95, 102, 105, 106, 113, 127, 129, 130, 133, 139, 141, 157, 160, 161, 162, 169, 170, 171, 176, 184, 194, 195, 196, 197, 204, 211, 223, 224, 232, 246, 248, 249, 252, 258, 260, 275, 278, 279, 280, 283, 297, 298, 299, 305, 313, 314], "school": [0, 9, 49, 57, 93, 105, 107, 119, 171, 195, 211, 223, 225, 238, 299, 314], "aw": [1, 2, 4, 37, 45, 47, 50, 52, 77, 84, 87, 93, 94, 96, 101, 109, 114, 120, 122, 133, 134, 150, 151, 171, 176, 182, 184, 195, 196, 198, 203, 210, 211, 228, 233, 239, 252, 253, 268, 269, 299, 305, 311, 313], "swore": 211, "d": [1, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 17, 20, 25, 26, 30, 33, 35, 40, 41, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 66, 67, 71, 73, 75, 80, 81, 84, 85, 86, 87, 94, 95, 97, 98, 99, 100, 102, 103, 107, 108, 110, 111, 113, 114, 119, 120, 121, 123, 125, 129, 130, 131, 134, 135, 136, 142, 143, 146, 147, 148, 151, 152, 153, 155, 157, 158, 160, 161, 162, 164, 165, 170, 171, 174, 176, 177, 179, 181, 182, 196, 197, 199, 200, 201, 202, 204, 205, 211, 225, 227, 229, 230, 232, 233, 238, 239, 240, 242, 244, 248, 249, 250, 253, 254, 255, 261, 262, 264, 265, 266, 269, 270, 271, 273, 275, 276, 278, 279, 280, 286, 287, 291, 298, 299, 303, 305, 306, 308, 310, 311], "rest": [1, 14, 25, 28, 34, 37, 40, 44, 47, 48, 50, 62, 66, 69, 74, 77, 80, 85, 87, 88, 90, 91, 93, 94, 102, 104, 107, 114, 122, 123, 135, 136, 138, 150, 152, 156, 161, 164, 177, 182, 187, 192, 193, 195, 196, 204, 206, 209, 211, 219, 225, 233, 241, 242, 254, 255, 257, 268, 270, 274, 279, 286, 306, 311, 316], "vow": [93, 195, 211], "break": [5, 9, 16, 17, 39, 43, 44, 53, 57, 63, 64, 79, 83, 85, 111, 113, 120, 127, 130, 135, 137, 138, 141, 157, 171, 173, 175, 179, 182, 186, 188, 211, 230, 232, 239, 246, 249, 254, 256, 257, 260, 275, 294, 299, 302, 304, 308, 311, 315, 317], "twenti": [3, 25, 51, 66, 129, 130, 174, 178, 211, 248, 249, 292, 303, 307], "calculu": [10, 20, 43, 58, 83, 105, 126, 171, 210, 211, 212, 218, 219, 221, 223, 245, 299, 314], "sixti": [94, 171, 196, 211, 299], "prepar": [9, 20, 27, 48, 57, 68, 88, 90, 97, 123, 128, 131, 136, 140, 146, 162, 170, 192, 199, 211, 242, 247, 250, 255, 259, 265, 280, 298], "headwai": [109, 211, 228], "thou": [107, 171, 211, 225, 299], "shalt": 211, "practic": [2, 3, 5, 6, 8, 10, 11, 13, 14, 15, 16, 30, 37, 41, 43, 51, 53, 54, 56, 58, 59, 61, 62, 63, 71, 77, 81, 83, 93, 95, 97, 100, 101, 103, 104, 106, 110, 113, 115, 116, 123, 124, 129, 130, 131, 133, 134, 137, 138, 139, 140, 141, 143, 144, 147, 148, 149, 151, 152, 155, 158, 161, 162, 169, 170, 171, 172, 175, 176, 177, 182, 183, 184, 188, 195, 197, 199, 202, 203, 205, 206, 210, 211, 216, 217, 224, 229, 234, 235, 242, 243, 249, 250, 252, 253, 256, 258, 259, 260, 262, 263, 264, 266, 267, 270, 279, 280, 290, 291, 297, 298, 299, 301, 304, 305, 306, 311, 312, 313, 317], "bill": [13, 25, 61, 66, 94, 100, 116, 123, 165, 167, 196, 202, 211, 235, 242, 287, 289], "perfectli": [5, 24, 26, 30, 47, 53, 65, 67, 71, 87, 90, 119, 135, 154, 175, 176, 178, 192, 211, 238, 254, 272, 294, 304, 305, 307], "best": [0, 2, 6, 7, 11, 14, 15, 16, 17, 25, 30, 33, 34, 35, 37, 39, 42, 44, 46, 47, 49, 54, 55, 57, 59, 62, 63, 64, 66, 71, 73, 74, 75, 77, 79, 82, 85, 86, 87, 91, 93, 95, 99, 100, 101, 103, 109, 119, 120, 123, 124, 129, 130, 133, 134, 137, 138, 140, 142, 143, 144, 147, 149, 151, 152, 155, 156, 157, 160, 161, 169, 170, 171, 172, 174, 175, 176, 178, 179, 184, 193, 197, 201, 202, 203, 205, 211, 228, 238, 239, 242, 243, 249, 252, 253, 256, 259, 261, 262, 263, 264, 267, 269, 270, 273, 274, 275, 278, 279, 290, 297, 298, 299, 301, 303, 304, 305, 307, 308, 313], "christa": 211, "king": [211, 290], "aptli": [175, 211, 304], "titl": [3, 5, 10, 24, 30, 37, 51, 53, 58, 65, 71, 77, 95, 106, 110, 125, 126, 127, 139, 158, 169, 170, 176, 197, 211, 218, 224, 229, 244, 245, 246, 258, 276, 297, 298, 305], "demonstr": [1, 10, 11, 20, 27, 34, 37, 39, 40, 48, 50, 58, 59, 68, 74, 77, 79, 80, 88, 100, 103, 117, 123, 126, 129, 130, 134, 135, 136, 137, 139, 141, 144, 146, 147, 151, 152, 156, 157, 161, 162, 164, 165, 168, 185, 202, 205, 211, 236, 242, 245, 248, 249, 253, 254, 255, 256, 258, 260, 263, 264, 265, 269, 270, 274, 275, 279, 280, 286, 287, 296], "memori": [3, 14, 30, 44, 51, 62, 71, 85, 94, 100, 102, 106, 110, 112, 114, 116, 118, 119, 123, 131, 138, 141, 152, 154, 155, 156, 160, 164, 168, 174, 178, 184, 196, 202, 204, 224, 229, 231, 233, 235, 237, 238, 242, 250, 257, 260, 270, 272, 273, 274, 278, 286, 296, 303, 307, 313], "friendli": [2, 9, 26, 44, 57, 67, 85, 93, 101, 111, 124, 127, 133, 137, 160, 167, 174, 175, 195, 203, 211, 230, 243, 246, 252, 256, 278, 289, 304], "radian": [26, 67, 113, 211, 219, 232], "print": [1, 3, 4, 7, 10, 11, 27, 28, 30, 31, 33, 34, 37, 39, 40, 41, 43, 48, 50, 51, 52, 55, 58, 59, 68, 69, 71, 72, 73, 74, 77, 79, 80, 81, 83, 88, 95, 97, 99, 100, 101, 103, 105, 106, 113, 115, 116, 123, 124, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 152, 156, 157, 158, 160, 161, 162, 164, 165, 166, 168, 169, 170, 172, 174, 175, 176, 177, 178, 182, 186, 197, 199, 201, 202, 203, 205, 211, 212, 214, 219, 223, 224, 232, 234, 235, 242, 243, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 270, 274, 275, 276, 278, 279, 280, 286, 287, 288, 296, 297, 298, 301, 303, 304, 305, 306, 307, 311, 315], "worksheet": [37, 77, 116, 211, 235], "version": [1, 2, 3, 4, 5, 6, 8, 11, 13, 16, 17, 20, 24, 25, 28, 30, 33, 37, 39, 40, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 56, 59, 61, 63, 64, 65, 66, 69, 71, 73, 77, 79, 80, 82, 83, 84, 85, 87, 88, 90, 92, 94, 95, 96, 97, 98, 99, 103, 105, 106, 113, 115, 117, 118, 121, 122, 123, 127, 128, 129, 131, 134, 136, 137, 138, 144, 148, 152, 153, 155, 157, 160, 162, 164, 167, 168, 170, 171, 174, 175, 177, 178, 184, 186, 189, 192, 194, 196, 197, 198, 199, 200, 201, 205, 211, 223, 224, 232, 234, 236, 237, 241, 242, 246, 247, 248, 250, 253, 255, 256, 257, 263, 266, 270, 271, 273, 275, 278, 280, 286, 289, 296, 298, 299, 303, 304, 306, 307, 313, 315, 318], "ringer": 211, "ago": [8, 35, 45, 56, 75, 84, 90, 105, 111, 116, 121, 124, 130, 139, 149, 164, 171, 173, 179, 183, 192, 211, 223, 230, 235, 240, 243, 249, 258, 267, 286, 291, 299, 302, 308, 312], "watch": [1, 2, 20, 28, 50, 69, 90, 164, 171, 174, 192, 210, 211, 219, 286, 299, 303], "matplotlib": [2, 10, 14, 15, 16, 24, 42, 44, 45, 58, 62, 63, 65, 82, 84, 85, 92, 93, 97, 110, 117, 126, 128, 162, 170, 184, 194, 195, 199, 212, 229, 236, 245, 247, 280, 298, 313], "better": [0, 2, 3, 6, 8, 9, 12, 20, 27, 28, 30, 34, 36, 39, 41, 44, 47, 49, 51, 54, 56, 57, 60, 68, 69, 71, 74, 76, 79, 81, 85, 87, 90, 91, 93, 94, 97, 100, 101, 104, 106, 107, 111, 129, 131, 133, 135, 137, 138, 140, 141, 143, 144, 146, 150, 152, 153, 156, 157, 160, 161, 167, 171, 174, 175, 176, 179, 188, 192, 193, 195, 196, 199, 202, 203, 206, 211, 212, 219, 220, 224, 225, 230, 248, 250, 252, 254, 256, 257, 259, 260, 262, 263, 265, 268, 270, 271, 274, 275, 278, 279, 289, 290, 293, 294, 299, 303, 304, 305, 308, 317], "tool": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 20, 25, 26, 28, 30, 34, 35, 36, 42, 43, 44, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 64, 66, 67, 69, 71, 74, 75, 76, 82, 83, 85, 87, 88, 89, 90, 91, 92, 94, 96, 97, 99, 100, 102, 103, 104, 105, 106, 109, 110, 111, 114, 115, 116, 117, 120, 121, 122, 123, 124, 126, 129, 131, 132, 133, 134, 137, 138, 141, 151, 153, 155, 156, 160, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 191, 192, 193, 194, 196, 198, 199, 201, 202, 204, 205, 206, 210, 211, 223, 224, 228, 229, 230, 233, 234, 235, 239, 240, 241, 242, 243, 245, 248, 250, 251, 252, 253, 256, 257, 260, 269, 271, 273, 274, 278, 286, 287, 288, 289, 296, 297, 298, 299, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313], "jog": [], "neat": [47, 87, 91, 193], "desmo": [105, 170, 210, 212, 217, 223, 298], "click": [1, 4, 5, 25, 28, 37, 43, 47, 50, 52, 53, 66, 69, 77, 83, 87, 89, 90, 93, 96, 97, 99, 117, 120, 123, 127, 132, 138, 164, 174, 175, 177, 191, 192, 195, 198, 199, 201, 211, 236, 239, 242, 246, 251, 257, 286, 290, 291, 303, 304, 306], "ifram": 211, "plot": [2, 10, 14, 16, 20, 45, 58, 62, 63, 84, 92, 93, 110, 116, 126, 170, 171, 184, 194, 195, 210, 211, 212, 229, 235, 245, 298, 299, 313], "supress": 211, "enter": [4, 9, 20, 24, 28, 35, 37, 39, 52, 57, 65, 69, 75, 77, 79, 91, 95, 96, 97, 98, 117, 123, 133, 153, 156, 157, 158, 160, 161, 169, 170, 171, 176, 182, 184, 193, 197, 198, 199, 200, 211, 217, 236, 242, 252, 271, 274, 275, 276, 278, 279, 297, 298, 299, 305, 311, 313], "co": [0, 26, 46, 49, 67, 86, 106, 113, 131, 170, 181, 208, 211, 212, 219, 220, 224, 232, 250, 298, 310], "707106781187": 211, "recal": [4, 10, 24, 25, 30, 39, 52, 58, 65, 66, 71, 79, 94, 105, 113, 116, 126, 130, 135, 137, 161, 196, 216, 223, 232, 235, 245, 249, 254, 256, 279], "check": [4, 5, 8, 11, 12, 24, 27, 28, 30, 31, 39, 41, 45, 47, 48, 52, 53, 56, 59, 60, 65, 68, 69, 71, 72, 79, 81, 84, 87, 88, 90, 94, 95, 96, 98, 106, 114, 115, 117, 119, 128, 130, 131, 133, 134, 135, 137, 138, 139, 144, 148, 149, 150, 152, 153, 156, 157, 158, 160, 161, 164, 167, 170, 171, 176, 178, 179, 181, 182, 186, 192, 196, 197, 198, 200, 211, 212, 224, 233, 234, 236, 238, 247, 249, 250, 252, 253, 254, 256, 257, 258, 263, 266, 267, 268, 270, 271, 274, 275, 276, 278, 279, 286, 289, 294, 298, 299, 305, 307, 308, 310, 311, 315], "tip": [2, 9, 45, 57, 84, 92, 101, 104, 116, 144, 152, 156, 168, 178, 194, 203, 206, 211, 235, 263, 270, 274, 296, 307], "correspond": [11, 20, 39, 41, 48, 59, 79, 81, 88, 114, 130, 135, 136, 148, 152, 160, 162, 166, 177, 211, 233, 249, 254, 255, 266, 270, 278, 280, 288, 306], "intuit": [3, 10, 15, 20, 24, 25, 35, 51, 58, 65, 66, 75, 94, 100, 105, 120, 126, 148, 150, 160, 196, 202, 211, 223, 239, 245, 266, 268, 278], "calcul": [6, 7, 10, 16, 26, 30, 41, 43, 48, 54, 55, 58, 63, 67, 71, 81, 83, 88, 101, 105, 115, 126, 129, 139, 141, 148, 149, 152, 161, 166, 168, 183, 203, 210, 211, 214, 215, 216, 217, 219, 223, 234, 245, 248, 258, 260, 266, 267, 270, 279, 288, 296, 312, 314], "exam": [171, 210, 211, 299, 314], "pi": [26, 67, 92, 113, 136, 194, 209, 211, 216, 219, 220, 232, 255], "6": [3, 5, 6, 7, 9, 10, 11, 26, 30, 33, 34, 39, 41, 42, 47, 48, 51, 53, 54, 55, 57, 58, 59, 67, 71, 73, 74, 79, 81, 82, 87, 88, 91, 92, 95, 99, 105, 106, 113, 115, 116, 119, 121, 123, 126, 129, 130, 132, 135, 136, 139, 141, 143, 146, 147, 148, 156, 158, 160, 162, 175, 176, 177, 178, 179, 188, 193, 194, 197, 201, 209, 210, 211, 216, 219, 223, 224, 232, 234, 235, 238, 240, 242, 245, 248, 249, 251, 254, 255, 258, 260, 262, 264, 265, 266, 274, 276, 278, 280, 304, 305, 306, 307, 308, 317], "limit": [0, 10, 11, 20, 25, 26, 39, 42, 49, 58, 59, 66, 67, 79, 82, 94, 99, 100, 105, 121, 126, 129, 130, 131, 136, 151, 156, 160, 161, 168, 176, 177, 178, 179, 180, 184, 196, 201, 202, 210, 211, 216, 217, 218, 223, 240, 245, 248, 249, 250, 255, 269, 274, 278, 279, 292, 294, 296, 305, 306, 307, 308, 309, 313], "obviou": [1, 6, 10, 11, 14, 28, 30, 34, 40, 44, 46, 50, 54, 58, 59, 62, 69, 71, 74, 80, 85, 86, 95, 97, 105, 126, 127, 133, 134, 136, 137, 144, 161, 177, 197, 199, 211, 223, 245, 246, 252, 253, 255, 256, 263, 279, 306], "8660254037844386": 211, "wouldn": [6, 8, 14, 30, 34, 44, 45, 54, 56, 62, 71, 74, 84, 85, 92, 94, 103, 120, 129, 131, 153, 157, 161, 171, 186, 187, 194, 196, 205, 211, 239, 248, 250, 271, 275, 279, 299, 315, 316], "decim": [28, 69, 101, 113, 152, 155, 158, 161, 172, 203, 211, 216, 232, 270, 273, 276, 279, 301], "precis": [7, 20, 28, 30, 39, 42, 55, 69, 71, 79, 82, 95, 97, 100, 113, 119, 129, 130, 131, 136, 137, 141, 144, 146, 161, 175, 182, 184, 197, 199, 202, 211, 232, 238, 248, 249, 250, 255, 256, 260, 263, 265, 279, 281, 304, 311, 313], "28": [2, 26, 67, 113, 130, 161, 210, 219, 232, 249, 279], "ipython": [2, 4, 13, 24, 26, 45, 52, 61, 65, 67, 84, 92, 93, 94, 97, 100, 101, 116, 120, 122, 134, 150, 157, 160, 169, 177, 178, 184, 194, 195, 196, 199, 202, 203, 211, 235, 239, 241, 253, 268, 275, 278, 297, 306, 307, 313], "src": [6, 25, 46, 54, 66, 86, 93, 153, 164, 179, 195, 211, 271, 286, 308], "www": [7, 20, 26, 55, 67, 161, 211, 217, 279, 281], "ebdbfuxeh7": 211, "width": [20, 37, 48, 77, 88, 106, 129, 136, 139, 166, 211, 224, 248, 255, 258, 288], "height": [7, 48, 55, 88, 106, 129, 139, 171, 211, 224, 248, 258, 299], "700": [9, 44, 57, 85, 211], "41": [6, 26, 54, 67, 141, 260], "7071067811865475": 211, "7071067811865476": 211, "40": [20, 95, 113, 121, 136, 139, 141, 156, 169, 176, 197, 210, 232, 240, 255, 258, 260, 274, 297, 305, 314], "48": [156, 274], "round": [26, 30, 67, 71, 93, 106, 113, 115, 119, 129, 136, 146, 152, 155, 161, 162, 166, 168, 195, 211, 216, 224, 232, 234, 238, 248, 255, 265, 270, 273, 279, 280, 288, 296], "codesolid": [1, 2, 5, 10, 11, 25, 28, 40, 50, 53, 58, 59, 66, 69, 80, 95, 96, 97, 108, 114, 116, 123, 127, 133, 134, 135, 142, 143, 144, 151, 153, 157, 161, 164, 169, 175, 179, 182, 185, 190, 197, 198, 199, 210, 211, 218, 227, 233, 235, 242, 246, 252, 253, 254, 261, 262, 263, 269, 271, 275, 279, 286, 295, 297, 304, 308, 311], "focus": [5, 10, 11, 16, 20, 26, 28, 34, 39, 44, 53, 58, 59, 63, 67, 69, 74, 79, 85, 93, 101, 102, 103, 110, 126, 130, 131, 134, 139, 151, 164, 167, 174, 195, 203, 204, 205, 211, 218, 229, 245, 249, 250, 253, 258, 269, 286, 289, 294, 303], "ratio": [9, 57, 105, 188, 210, 211, 223, 317], "default": [1, 3, 4, 5, 6, 11, 24, 26, 27, 28, 30, 31, 33, 34, 37, 39, 41, 42, 45, 47, 48, 50, 51, 52, 53, 54, 59, 65, 67, 68, 69, 71, 72, 73, 74, 77, 79, 81, 82, 84, 87, 88, 89, 92, 93, 95, 97, 98, 105, 106, 114, 115, 116, 117, 118, 123, 124, 127, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 143, 144, 147, 148, 150, 152, 156, 157, 164, 169, 170, 174, 175, 176, 177, 178, 179, 182, 186, 191, 194, 195, 197, 199, 200, 211, 214, 223, 224, 233, 234, 235, 236, 237, 242, 243, 246, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 262, 263, 264, 266, 268, 270, 274, 275, 286, 293, 297, 298, 303, 304, 305, 306, 307, 308, 311, 315], "hint": [2, 17, 20, 30, 46, 64, 71, 86, 113, 129, 132, 139, 140, 160, 161, 169, 211, 232, 248, 251, 258, 259, 278, 279, 297], "1024x768": 211, "1000x1000": 211, "spend": [1, 9, 14, 24, 26, 33, 35, 39, 43, 44, 50, 57, 62, 65, 67, 73, 75, 79, 83, 85, 91, 92, 94, 97, 100, 101, 102, 104, 120, 123, 129, 130, 133, 136, 142, 152, 157, 160, 162, 165, 170, 171, 182, 183, 193, 194, 196, 199, 202, 203, 204, 206, 211, 239, 242, 248, 249, 252, 255, 261, 270, 275, 278, 280, 287, 290, 294, 295, 298, 299, 311, 312], "hole": [9, 57, 109, 119, 171, 211, 212, 228, 238, 299, 314], "won": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 24, 25, 26, 28, 30, 34, 37, 39, 44, 47, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 69, 71, 74, 77, 79, 85, 87, 91, 95, 97, 98, 99, 100, 101, 102, 104, 105, 107, 116, 120, 121, 123, 126, 129, 130, 132, 133, 136, 137, 138, 141, 146, 151, 152, 153, 154, 157, 160, 162, 169, 170, 171, 176, 180, 181, 183, 184, 185, 186, 193, 197, 199, 200, 201, 202, 203, 204, 206, 211, 223, 225, 235, 239, 240, 242, 245, 248, 249, 251, 252, 255, 256, 257, 260, 265, 269, 270, 271, 272, 275, 278, 280, 297, 298, 299, 305, 309, 310, 312, 313, 315], "litter": [161, 211, 279], "commit": [5, 11, 12, 28, 36, 43, 53, 59, 60, 69, 76, 83, 91, 95, 96, 103, 104, 118, 121, 161, 164, 169, 175, 181, 193, 197, 198, 205, 206, 211, 237, 240, 279, 286, 297, 304, 310], "upshot": 211, "apt": [25, 47, 66, 87, 92, 132, 164, 170, 194, 211, 251, 286, 298], "sympi": [2, 10, 17, 24, 58, 64, 65, 105, 160, 210, 212, 214, 218, 221, 223, 278], "init_sess": [10, 58, 126, 170, 212, 245, 298], "quiet": [44, 85, 99, 170, 201, 212, 298], "9": [3, 7, 10, 26, 30, 41, 47, 48, 51, 55, 58, 67, 71, 81, 87, 88, 90, 91, 92, 100, 113, 115, 117, 119, 123, 126, 131, 132, 135, 139, 141, 143, 144, 147, 156, 158, 165, 170, 171, 175, 176, 192, 193, 194, 202, 210, 212, 214, 215, 216, 218, 219, 220, 232, 234, 236, 238, 242, 245, 250, 251, 254, 258, 260, 262, 263, 264, 274, 276, 287, 298, 299, 304, 305], "2022": [2, 4, 9, 27, 28, 37, 41, 44, 52, 57, 63, 64, 68, 69, 77, 81, 85, 93, 96, 108, 110, 116, 123, 125, 130, 173, 184, 195, 198, 212, 218, 229, 235, 242, 244, 249, 302, 313], "johnsin": 212, "guid": [2, 3, 4, 9, 12, 13, 36, 47, 51, 52, 57, 60, 61, 76, 87, 92, 93, 100, 101, 122, 123, 131, 134, 136, 147, 150, 153, 155, 164, 194, 195, 202, 203, 210, 212, 241, 250, 253, 255, 264, 268, 271, 273, 286], "assign": [7, 10, 20, 27, 34, 48, 55, 58, 68, 74, 88, 91, 101, 104, 113, 126, 129, 130, 131, 137, 146, 147, 165, 168, 170, 176, 184, 185, 193, 203, 206, 210, 212, 232, 245, 248, 249, 250, 256, 264, 265, 287, 296, 298, 305, 313], "paul": [15, 165, 170, 171, 177, 208, 210, 212, 287, 298, 299, 306], "index": [3, 16, 24, 33, 45, 48, 51, 63, 65, 73, 84, 88, 93, 95, 96, 100, 101, 106, 115, 116, 117, 119, 121, 124, 128, 134, 135, 138, 146, 147, 153, 156, 158, 160, 161, 162, 164, 172, 180, 182, 184, 195, 197, 198, 202, 203, 212, 224, 234, 235, 236, 238, 240, 243, 247, 253, 254, 257, 264, 265, 271, 274, 276, 278, 279, 280, 286, 301, 309, 311, 313], "l": [4, 8, 10, 24, 35, 39, 42, 47, 52, 56, 58, 65, 75, 79, 82, 87, 91, 113, 126, 134, 146, 157, 158, 164, 193, 212, 216, 232, 245, 253, 265, 275, 276, 286], "hospit": 212, "asympot": 212, "sampl": [3, 5, 9, 11, 26, 30, 34, 37, 39, 48, 51, 53, 57, 59, 67, 71, 74, 77, 79, 88, 93, 113, 124, 127, 134, 143, 160, 161, 162, 165, 173, 177, 178, 179, 185, 195, 210, 212, 232, 243, 246, 253, 262, 278, 279, 280, 287, 302, 306, 307, 308], "sin": [20, 106, 113, 170, 177, 208, 211, 212, 216, 219, 220, 224, 232, 298, 306], "hard": [3, 4, 8, 9, 12, 13, 14, 20, 24, 30, 34, 37, 43, 44, 46, 47, 51, 52, 56, 57, 60, 61, 62, 65, 71, 74, 77, 83, 85, 86, 87, 95, 98, 102, 103, 107, 113, 116, 138, 147, 150, 157, 160, 162, 164, 170, 182, 189, 197, 200, 204, 205, 212, 214, 215, 225, 232, 235, 257, 264, 268, 275, 278, 280, 286, 298, 311, 318], "induct": 212, "easi": [2, 4, 6, 9, 10, 16, 24, 30, 33, 35, 37, 39, 41, 42, 43, 45, 47, 52, 54, 57, 58, 63, 65, 71, 73, 75, 77, 79, 81, 82, 83, 84, 87, 89, 93, 94, 96, 101, 102, 103, 104, 105, 106, 107, 111, 113, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 133, 136, 137, 138, 141, 142, 144, 147, 148, 150, 151, 152, 154, 155, 156, 157, 160, 162, 166, 171, 174, 175, 177, 178, 179, 180, 181, 184, 186, 189, 191, 195, 196, 198, 203, 204, 205, 206, 210, 212, 216, 220, 223, 224, 225, 230, 232, 238, 239, 241, 242, 244, 245, 246, 247, 249, 250, 252, 255, 256, 257, 260, 261, 263, 264, 266, 268, 269, 270, 272, 273, 274, 275, 278, 288, 294, 299, 303, 304, 306, 307, 308, 309, 310, 313, 315, 318], "lim_": [177, 212, 216, 306], "to2": 212, "3x": [119, 212, 214, 215, 216, 238], "2x": [105, 170, 212, 214, 215, 216, 223, 298], "7": [1, 3, 7, 9, 10, 24, 27, 28, 34, 45, 47, 50, 51, 55, 57, 58, 65, 68, 69, 74, 84, 87, 91, 92, 94, 95, 100, 113, 115, 116, 117, 118, 121, 127, 129, 130, 131, 132, 139, 141, 143, 146, 147, 148, 152, 156, 158, 160, 161, 165, 169, 176, 178, 180, 193, 194, 196, 197, 202, 210, 212, 214, 215, 216, 217, 219, 232, 234, 235, 236, 237, 240, 246, 248, 249, 250, 251, 258, 260, 262, 264, 265, 266, 270, 274, 276, 278, 279, 287, 297, 305, 307, 309], "formal": [17, 30, 34, 44, 64, 71, 74, 85, 131, 136, 171, 172, 175, 212, 214, 215, 250, 255, 299, 301, 304], "thu": [1, 4, 10, 20, 50, 52, 58, 92, 95, 120, 133, 136, 143, 156, 164, 194, 197, 209, 212, 216, 239, 252, 255, 262, 274, 286], "p": [10, 11, 20, 25, 28, 30, 34, 39, 41, 47, 58, 59, 66, 69, 71, 74, 79, 81, 87, 90, 91, 98, 113, 126, 130, 132, 148, 164, 170, 175, 192, 193, 200, 212, 232, 245, 249, 251, 266, 286, 298, 304], "numer": [10, 26, 33, 34, 48, 58, 67, 73, 74, 88, 93, 105, 106, 116, 126, 130, 136, 144, 155, 160, 166, 170, 175, 177, 184, 186, 195, 212, 216, 223, 224, 235, 245, 249, 255, 263, 273, 278, 288, 298, 304, 306, 313, 315], "denomin": [105, 170, 177, 212, 219, 223, 298, 306], "peasi": [113, 212, 232], "24": [3, 7, 10, 11, 20, 41, 45, 51, 55, 58, 59, 81, 84, 116, 123, 126, 130, 144, 148, 156, 210, 212, 235, 242, 245, 249, 263, 266, 274], "fine": [5, 10, 11, 20, 25, 28, 33, 34, 46, 47, 53, 58, 59, 66, 69, 73, 74, 86, 87, 89, 90, 91, 92, 93, 94, 96, 98, 102, 106, 126, 129, 130, 131, 132, 136, 137, 138, 144, 146, 153, 154, 157, 160, 162, 164, 167, 171, 175, 176, 178, 179, 182, 183, 187, 191, 192, 193, 194, 195, 196, 198, 200, 204, 212, 224, 245, 248, 249, 250, 251, 255, 256, 257, 263, 265, 271, 272, 275, 278, 280, 282, 286, 289, 294, 299, 304, 305, 307, 308, 311, 312, 316], "asymptot": [105, 212, 215, 216, 217, 223], "dne": [212, 216, 217], "That": [1, 3, 4, 7, 8, 9, 10, 11, 16, 20, 24, 25, 28, 30, 34, 37, 39, 44, 45, 46, 47, 50, 51, 52, 55, 56, 57, 58, 59, 63, 65, 66, 69, 71, 74, 77, 79, 84, 85, 86, 87, 89, 90, 91, 93, 94, 96, 97, 98, 100, 103, 104, 105, 110, 113, 115, 118, 120, 123, 126, 127, 129, 130, 132, 134, 135, 136, 137, 140, 141, 142, 143, 148, 151, 153, 154, 155, 156, 158, 160, 161, 164, 165, 168, 169, 170, 171, 175, 176, 177, 178, 181, 184, 186, 189, 191, 192, 193, 195, 196, 198, 199, 200, 202, 205, 206, 212, 218, 223, 229, 232, 234, 237, 239, 242, 245, 246, 248, 249, 251, 253, 254, 255, 256, 259, 260, 261, 262, 266, 269, 271, 272, 273, 274, 276, 278, 279, 286, 287, 290, 294, 296, 297, 298, 299, 304, 305, 306, 307, 310, 313, 314, 315, 318], "answer": [1, 4, 9, 10, 12, 14, 20, 30, 31, 39, 40, 44, 47, 50, 52, 57, 58, 60, 62, 71, 72, 79, 80, 85, 87, 100, 102, 104, 113, 116, 119, 120, 126, 129, 130, 141, 143, 148, 152, 155, 156, 158, 160, 164, 165, 170, 171, 172, 175, 178, 182, 202, 204, 206, 210, 212, 214, 215, 216, 217, 218, 232, 235, 238, 239, 245, 248, 249, 260, 262, 266, 270, 273, 274, 276, 278, 286, 287, 298, 299, 301, 304, 307, 311], "pm": [7, 41, 55, 81, 130, 208, 212, 220, 249], "sign": [7, 25, 46, 55, 66, 86, 99, 108, 118, 123, 137, 140, 146, 150, 152, 157, 172, 177, 187, 201, 210, 212, 219, 220, 227, 237, 242, 256, 259, 265, 268, 270, 275, 301, 306, 314, 316], "proof": [1, 50, 100, 119, 180, 202, 210, 212, 238, 309, 314], "approach": [0, 1, 2, 3, 9, 10, 20, 24, 26, 30, 33, 34, 37, 39, 42, 43, 46, 47, 49, 50, 51, 57, 58, 65, 67, 71, 73, 74, 77, 79, 82, 83, 86, 87, 92, 95, 101, 102, 103, 105, 111, 112, 114, 117, 118, 120, 121, 123, 125, 126, 127, 130, 131, 134, 136, 138, 139, 144, 147, 148, 150, 151, 156, 157, 160, 162, 170, 171, 174, 175, 177, 186, 194, 197, 203, 204, 205, 212, 216, 219, 223, 230, 231, 233, 236, 237, 239, 240, 242, 244, 245, 246, 249, 250, 253, 255, 257, 258, 263, 264, 266, 268, 269, 274, 275, 278, 280, 281, 298, 303, 304, 306, 315], "divid": [7, 26, 30, 55, 67, 71, 92, 105, 115, 116, 135, 152, 194, 212, 223, 234, 235, 254, 270], "fraction": [10, 24, 58, 65, 93, 105, 126, 130, 160, 177, 195, 212, 220, 223, 245, 249, 278, 306], "reciproc": [212, 215, 219, 290], "ie": 212, "1000": [10, 37, 58, 77, 95, 126, 141, 146, 162, 165, 187, 189, 197, 212, 245, 260, 265, 280, 287, 316, 318], "10000": [121, 146, 160, 212, 214, 215, 240, 265, 278], "toward": [1, 11, 20, 24, 34, 37, 39, 50, 59, 65, 74, 77, 79, 127, 168, 185, 212, 246, 283, 292, 296, 314], "infin": [105, 212, 223], "plug": [47, 87, 160, 212, 214, 215, 278], "ok": [1, 4, 5, 6, 7, 8, 17, 20, 24, 25, 44, 46, 50, 52, 53, 54, 55, 56, 64, 65, 66, 85, 86, 91, 94, 100, 103, 104, 105, 107, 113, 114, 117, 123, 127, 129, 130, 133, 136, 137, 143, 153, 154, 160, 161, 165, 178, 182, 188, 193, 196, 202, 205, 206, 210, 212, 216, 223, 225, 232, 233, 236, 242, 246, 248, 249, 252, 255, 256, 262, 271, 272, 278, 279, 287, 294, 307, 311, 317], "denom": [105, 212, 223], "nbsphinx": [], "lim": [177, 216, 306], "to0": [177, 212, 306], "xto0": [], "relearn": 212, "goodman": 212, "barron": 212, "section": [3, 4, 6, 7, 9, 10, 11, 20, 24, 25, 26, 28, 34, 37, 39, 42, 43, 45, 47, 48, 51, 52, 54, 55, 57, 58, 59, 65, 66, 67, 69, 74, 77, 79, 82, 83, 84, 87, 88, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 113, 115, 116, 117, 118, 120, 122, 123, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 141, 147, 151, 152, 153, 155, 157, 160, 161, 162, 164, 165, 168, 170, 171, 175, 177, 179, 182, 186, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 206, 210, 212, 218, 224, 232, 234, 235, 236, 237, 239, 241, 242, 245, 246, 247, 248, 249, 252, 254, 255, 256, 257, 260, 264, 269, 270, 271, 273, 275, 278, 279, 280, 286, 287, 294, 296, 298, 299, 304, 306, 308, 311, 315], "definit": [9, 11, 12, 24, 28, 30, 34, 44, 47, 57, 59, 60, 65, 69, 71, 74, 85, 87, 91, 92, 98, 107, 120, 130, 131, 132, 133, 135, 136, 137, 138, 146, 148, 151, 154, 155, 157, 161, 162, 169, 170, 171, 172, 175, 176, 181, 184, 193, 194, 200, 216, 225, 239, 249, 250, 251, 252, 254, 255, 256, 257, 265, 266, 269, 272, 273, 275, 279, 280, 297, 298, 299, 301, 304, 305, 310, 313], "interv": [1, 50, 116, 130, 212, 216, 235, 249], "corrolari": [209, 212], "sat": [41, 81, 117, 210, 212, 236], "sun": [41, 45, 81, 84, 210, 212], "mon": [41, 81, 212], "tue": 212, "wed": [210, 212], "thur": [210, 212], "ish": [178, 212, 307], "began": [1, 3, 9, 25, 26, 30, 47, 50, 51, 57, 66, 67, 71, 87, 93, 100, 101, 103, 119, 132, 136, 142, 160, 165, 170, 171, 176, 184, 195, 202, 203, 205, 210, 212, 215, 238, 251, 255, 261, 278, 287, 298, 299, 305, 313], "deriv": [10, 20, 58, 92, 93, 126, 133, 149, 170, 171, 186, 194, 195, 209, 212, 216, 218, 245, 252, 267, 298, 299, 315], "fri": [1, 50, 212], "tbd": [8, 56, 212], "12": [2, 6, 7, 30, 37, 41, 54, 55, 71, 77, 81, 95, 100, 105, 106, 109, 113, 119, 121, 123, 130, 132, 139, 148, 152, 156, 158, 161, 162, 165, 169, 170, 175, 176, 178, 197, 202, 210, 212, 216, 219, 220, 223, 224, 228, 232, 238, 240, 242, 249, 251, 258, 266, 270, 274, 276, 279, 280, 287, 297, 298, 304, 305, 307], "fridai": [35, 75, 136, 210, 212, 218, 255], "mondai": [41, 81, 109, 130, 136, 210, 212, 228, 249, 255], "mostli": [20, 25, 39, 66, 79, 120, 164, 182, 212, 239, 286, 311], "went": [1, 47, 50, 87, 91, 93, 95, 100, 103, 109, 124, 142, 153, 186, 193, 195, 197, 202, 205, 212, 218, 228, 243, 261, 271, 293, 294, 315], "quadrat": [92, 165, 194, 210, 212, 287], "hopit": 212, "part": [2, 4, 5, 7, 8, 9, 10, 14, 24, 26, 27, 30, 34, 39, 40, 41, 44, 45, 47, 48, 52, 53, 55, 56, 57, 58, 62, 65, 67, 68, 71, 74, 79, 80, 81, 84, 85, 87, 88, 89, 91, 92, 93, 96, 101, 106, 110, 115, 117, 123, 126, 127, 130, 131, 132, 133, 135, 136, 137, 138, 143, 146, 147, 148, 151, 152, 157, 161, 162, 165, 170, 171, 172, 173, 174, 175, 176, 182, 184, 186, 193, 194, 195, 198, 203, 210, 212, 224, 229, 234, 236, 242, 245, 246, 249, 250, 251, 252, 254, 255, 256, 257, 262, 264, 265, 266, 269, 270, 275, 279, 280, 283, 287, 291, 298, 299, 301, 302, 303, 304, 305, 311, 313, 315], "calc": [210, 212], "discontinu": [177, 212, 216, 306], "factor": [5, 7, 20, 47, 53, 55, 87, 141, 148, 167, 170, 184, 210, 212, 260, 266, 283, 289, 298, 313], "cancel": [165, 170, 212, 214, 215, 216, 287, 298], "mx": [10, 58, 126, 131, 212, 245, 250], "displaystyl": [], "NOT": [20, 131, 141, 152, 175, 212, 250, 260, 270, 304], "inlin": [10, 26, 58, 67, 123, 126, 138, 170, 212, 242, 245, 257, 298], "xlim": [170, 212, 298], "ylim": 212, "lt": [7, 47, 55, 87, 176, 305], "0x10fb0ded0": [], "gt": [4, 7, 47, 52, 55, 87, 176, 305], "ONE": [20, 212], "0x10f1b0d90": [], "To": [1, 2, 3, 4, 7, 9, 10, 11, 24, 25, 26, 28, 30, 33, 37, 41, 45, 48, 50, 51, 52, 55, 57, 58, 59, 65, 66, 67, 69, 71, 73, 77, 79, 80, 81, 82, 84, 86, 87, 88, 90, 91, 93, 94, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 141, 146, 147, 148, 152, 153, 156, 157, 158, 160, 161, 162, 164, 165, 168, 169, 170, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 188, 192, 193, 195, 196, 198, 199, 201, 202, 203, 210, 212, 216, 220, 223, 224, 225, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 260, 264, 265, 266, 270, 271, 274, 275, 276, 278, 279, 280, 286, 287, 290, 292, 296, 297, 298, 301, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 317], "determin": [3, 7, 20, 28, 51, 55, 69, 100, 148, 152, 158, 166, 202, 208, 212, 219, 266, 270, 276, 282, 288], "133333333333333": [], "285714285714286": [], "cell": [10, 26, 37, 39, 58, 67, 77, 79, 91, 95, 97, 99, 126, 129, 131, 148, 157, 168, 170, 175, 177, 178, 193, 197, 199, 201, 212, 245, 248, 250, 266, 275, 296, 298, 304, 306, 307], "line": [1, 2, 3, 5, 7, 8, 9, 11, 14, 20, 24, 26, 28, 30, 34, 37, 40, 41, 43, 46, 47, 50, 51, 53, 55, 56, 57, 59, 62, 65, 67, 69, 71, 74, 77, 80, 81, 83, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 113, 114, 116, 117, 118, 119, 122, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 146, 147, 148, 152, 153, 155, 158, 160, 161, 162, 164, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 184, 186, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 206, 210, 212, 216, 219, 232, 233, 235, 236, 237, 238, 241, 243, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 270, 271, 273, 276, 278, 279, 280, 286, 296, 297, 298, 301, 303, 304, 305, 306, 307, 309, 310, 311, 313, 315], "39": [1, 6, 50, 54, 141, 169, 260, 297], "syntaxerror": [137, 152, 212, 256, 270], "invalid": [136, 137, 144, 212, 255, 256, 263], "syntax": [3, 11, 17, 27, 30, 34, 39, 41, 43, 47, 51, 59, 64, 68, 71, 74, 79, 81, 83, 87, 95, 100, 101, 102, 106, 124, 127, 129, 131, 134, 136, 137, 141, 143, 146, 147, 155, 157, 161, 166, 168, 170, 172, 174, 178, 184, 186, 197, 202, 203, 204, 212, 224, 243, 246, 248, 250, 253, 255, 256, 260, 262, 264, 265, 273, 275, 279, 288, 296, 298, 301, 303, 307, 313, 315], "h": [4, 11, 41, 52, 59, 81, 89, 102, 113, 131, 143, 146, 158, 164, 170, 191, 204, 212, 216, 232, 250, 262, 265, 276, 286, 298], "guess": [10, 24, 26, 33, 58, 65, 67, 73, 113, 126, 127, 129, 133, 136, 138, 144, 147, 164, 175, 176, 182, 188, 212, 232, 245, 246, 248, 252, 255, 257, 263, 264, 286, 304, 305, 311, 317], "hell": [25, 66, 212], "oo": [138, 212, 257], "tabl": [1, 3, 6, 9, 13, 39, 45, 50, 51, 52, 54, 57, 59, 61, 65, 68, 69, 74, 75, 79, 81, 82, 83, 84, 85, 87, 88, 91, 93, 94, 95, 99, 100, 101, 106, 109, 115, 116, 117, 118, 119, 120, 127, 128, 130, 131, 133, 134, 137, 138, 141, 144, 146, 148, 153, 154, 155, 158, 160, 161, 164, 166, 168, 172, 175, 176, 177, 182, 184, 195, 197, 212, 216, 218, 224, 228, 234, 235, 236, 238, 249, 250, 252, 266, 272, 273, 276, 278, 279, 286, 296, 306], "10000000": [141, 212, 260], "horizont": [48, 88, 106, 136, 212, 215, 224, 255], "vertic": [20, 48, 88, 105, 106, 113, 177, 210, 212, 216, 217, 219, 223, 224, 232, 306], "constant": [10, 58, 95, 126, 127, 130, 136, 170, 175, 197, 210, 212, 215, 216, 245, 246, 249, 255, 298, 304], "nth": [113, 212, 232], "scratch": [14, 24, 26, 46, 62, 65, 67, 86, 116, 117, 123, 151, 162, 179, 181, 212, 235, 236, 242, 269, 280, 308, 310], "00001": 212, "001": [10, 39, 58, 79, 126, 212, 216, 245], "margot": 213, "gerritsen": 213, "incred": 213, "mike": [111, 160, 213, 230, 278], "cohen": [160, 213, 278], "intut": 213, "udemi": [108, 173, 213, 227, 302], "gilbert": 213, "homepag": 213, "ain": 218, "bad": [8, 9, 11, 17, 20, 25, 34, 56, 57, 59, 64, 66, 74, 95, 100, 101, 105, 107, 113, 129, 133, 137, 147, 150, 158, 161, 165, 171, 175, 182, 184, 186, 187, 197, 202, 203, 216, 218, 223, 225, 232, 248, 252, 256, 264, 268, 276, 279, 282, 287, 292, 299, 304, 311, 313, 314, 315, 316], "syllabu": 218, "journal": [20, 35, 44, 75, 85, 94, 196, 218], "jupyt": [2, 3, 4, 5, 10, 16, 17, 24, 30, 34, 42, 45, 51, 52, 53, 58, 63, 64, 65, 71, 74, 82, 84, 91, 92, 93, 94, 99, 100, 101, 105, 106, 113, 116, 120, 121, 124, 126, 127, 129, 131, 132, 137, 139, 141, 144, 147, 150, 155, 156, 157, 161, 162, 163, 168, 174, 178, 184, 186, 193, 194, 195, 196, 201, 202, 203, 218, 219, 221, 223, 224, 232, 235, 239, 240, 243, 245, 246, 248, 250, 251, 256, 258, 260, 263, 264, 268, 273, 274, 275, 279, 280, 285, 296, 303, 307, 313, 315], "moon": 218, "finger": [20, 44, 85, 118, 218, 237, 294], "fountain": 218, "pen": [46, 86, 218], "ink": 218, "markdown": [2, 5, 35, 53, 75, 76, 93, 97, 104, 120, 153, 167, 170, 195, 199, 206, 210, 218, 239, 271, 289, 298], "notebook": [2, 3, 4, 5, 10, 16, 17, 24, 26, 30, 34, 37, 42, 45, 51, 52, 53, 58, 63, 64, 65, 67, 71, 74, 77, 82, 84, 91, 92, 94, 99, 100, 101, 105, 106, 110, 116, 120, 121, 126, 128, 129, 131, 132, 137, 139, 141, 147, 148, 155, 157, 160, 168, 170, 177, 178, 184, 186, 193, 194, 196, 201, 202, 203, 218, 221, 223, 224, 229, 235, 239, 240, 245, 247, 248, 250, 251, 256, 258, 260, 264, 266, 273, 275, 278, 296, 298, 306, 307, 313, 315], "ipynb": [96, 198, 210, 218], "16": [2, 3, 4, 10, 16, 30, 45, 47, 51, 52, 58, 63, 71, 84, 87, 91, 113, 116, 118, 121, 130, 132, 135, 147, 152, 156, 160, 161, 162, 164, 169, 172, 193, 210, 218, 232, 235, 237, 240, 249, 251, 254, 264, 270, 278, 279, 280, 286, 297, 301], "assum": [5, 6, 10, 20, 25, 27, 39, 42, 47, 48, 53, 54, 58, 66, 68, 79, 82, 87, 88, 95, 101, 106, 113, 114, 116, 117, 122, 123, 126, 128, 130, 131, 132, 133, 136, 137, 144, 161, 171, 175, 176, 178, 180, 182, 186, 197, 203, 210, 215, 218, 224, 232, 233, 235, 236, 241, 242, 245, 247, 249, 250, 251, 252, 255, 256, 263, 279, 299, 304, 305, 307, 309, 311, 314, 315], "15": [1, 2, 6, 9, 10, 20, 30, 41, 45, 47, 50, 54, 57, 58, 71, 81, 84, 87, 106, 113, 116, 119, 126, 132, 136, 139, 148, 156, 158, 162, 170, 175, 210, 216, 218, 224, 232, 235, 238, 245, 251, 255, 258, 266, 274, 276, 280, 298, 304], "colleg": [171, 218, 299, 314], "225": [10, 58, 126, 218, 245], "sustain": [43, 83, 171, 218, 290, 299], "adjust": [130, 153, 187, 218, 249, 271, 316], "1101": [152, 218, 270], "februari": [2, 37, 41, 45, 77, 81, 84, 116, 130, 149, 218, 235, 249, 291], "target": [5, 9, 10, 11, 20, 44, 47, 53, 57, 58, 59, 85, 87, 94, 96, 101, 102, 106, 113, 117, 123, 126, 127, 132, 136, 146, 157, 161, 164, 176, 178, 180, 182, 185, 187, 196, 198, 203, 204, 218, 224, 232, 236, 242, 245, 246, 251, 255, 265, 275, 279, 286, 305, 307, 309, 311, 316], "twice": [4, 9, 52, 57, 98, 105, 141, 150, 200, 218, 223, 260, 268], "primarili": [5, 9, 20, 53, 57, 101, 103, 127, 148, 172, 203, 205, 218, 246, 266, 301], "flash": [20, 131, 210, 218, 250], "card": [93, 108, 123, 131, 156, 162, 195, 210, 218, 227, 242, 250, 274, 280], "instruct": [1, 3, 12, 14, 20, 25, 28, 37, 42, 47, 50, 51, 60, 62, 66, 69, 77, 82, 87, 91, 93, 95, 97, 103, 104, 117, 118, 128, 136, 139, 148, 150, 157, 193, 195, 197, 199, 205, 206, 218, 236, 237, 247, 255, 258, 266, 268, 275], "possibl": [4, 5, 7, 9, 10, 11, 24, 25, 26, 28, 39, 40, 41, 44, 46, 47, 52, 53, 55, 57, 58, 59, 65, 66, 67, 69, 79, 80, 81, 85, 86, 87, 90, 93, 95, 100, 101, 102, 103, 105, 124, 125, 126, 130, 131, 132, 133, 137, 138, 142, 143, 146, 147, 148, 154, 156, 160, 162, 164, 165, 168, 171, 173, 186, 192, 195, 197, 202, 203, 204, 205, 218, 223, 243, 244, 245, 249, 250, 251, 252, 256, 257, 261, 262, 264, 265, 266, 272, 274, 278, 280, 286, 287, 294, 296, 299, 302, 315], "wolframalpha": [105, 170, 171, 218, 223, 298, 299], "manual": [1, 4, 5, 9, 11, 25, 41, 43, 50, 52, 53, 57, 59, 66, 81, 83, 91, 97, 99, 100, 105, 117, 118, 120, 129, 130, 137, 149, 157, 164, 193, 199, 201, 202, 218, 223, 236, 237, 239, 248, 249, 256, 267, 275, 286], "odd": [7, 37, 55, 77, 146, 147, 152, 221, 264, 265, 270], "quirk": [24, 65, 101, 129, 169, 203, 221, 248, 297], "beckon": 221, "ellig": 221, "senior": [0, 9, 28, 43, 49, 57, 69, 83, 103, 129, 133, 140, 205, 221, 248, 252, 259], "discount": [94, 108, 196, 221, 227], "cowardic": 221, "dread": [9, 57, 221], "credit": [14, 37, 62, 77, 93, 108, 123, 156, 171, 183, 185, 195, 221, 227, 242, 274, 299, 312, 314], "spring": [2, 9, 57, 93, 108, 116, 164, 171, 179, 184, 195, 221, 227, 235, 286, 299, 313], "drawn": [26, 34, 67, 74, 106, 165, 221, 224, 287], "messi": [33, 48, 73, 88, 91, 138, 193, 221, 257], "contrast": [5, 20, 24, 34, 39, 40, 53, 65, 74, 79, 80, 93, 96, 106, 118, 130, 131, 136, 148, 152, 154, 156, 157, 160, 162, 167, 170, 171, 175, 181, 195, 198, 215, 221, 224, 237, 249, 250, 255, 266, 270, 272, 274, 275, 278, 280, 289, 298, 299, 304, 310], "pleas": [39, 47, 79, 87, 95, 108, 122, 123, 129, 130, 136, 141, 160, 161, 185, 197, 227, 241, 242, 248, 249, 255, 260, 278, 279, 281, 294, 295], "announc": [14, 62, 96, 108, 198, 227, 281, 291, 294], "launch": [3, 4, 5, 6, 25, 26, 28, 42, 47, 51, 52, 53, 54, 66, 67, 69, 82, 87, 89, 90, 92, 95, 97, 98, 108, 109, 120, 128, 132, 134, 149, 151, 157, 160, 164, 174, 180, 191, 192, 194, 197, 199, 200, 227, 228, 239, 247, 251, 253, 267, 269, 275, 278, 281, 286, 303, 309], "lifer": [183, 281, 282, 312], "meetup": 281, "alcohol": [281, 282, 283], "addict": [2, 126, 245, 281, 282, 283, 290, 291, 292, 293], "disord": [17, 20, 64, 281], "everi": [1, 3, 4, 5, 6, 13, 14, 15, 24, 28, 34, 43, 44, 46, 50, 51, 52, 53, 54, 61, 62, 65, 69, 74, 83, 85, 86, 93, 94, 95, 98, 100, 102, 103, 109, 113, 116, 118, 123, 129, 130, 131, 133, 136, 137, 143, 149, 155, 157, 162, 168, 171, 174, 176, 177, 181, 184, 186, 188, 195, 196, 197, 200, 202, 204, 205, 219, 228, 232, 235, 237, 242, 248, 249, 250, 252, 255, 256, 262, 267, 273, 275, 280, 281, 296, 299, 303, 305, 306, 310, 313, 315, 317], "thursdai": [13, 61, 136, 210, 255, 281], "ingredi": [20, 282], "refin": [99, 201, 210, 282, 291], "distort": 282, "ourselv": [1, 7, 8, 20, 45, 50, 55, 56, 84, 127, 130, 137, 148, 161, 169, 171, 178, 246, 249, 256, 266, 279, 282, 290, 297, 299, 307], "climb": 282, "steepli": 282, "swamp": 282, "criticsm": 282, "alchol": 282, "lead": [1, 6, 9, 10, 20, 26, 27, 30, 34, 39, 50, 54, 57, 58, 67, 68, 71, 74, 79, 106, 123, 126, 127, 144, 151, 171, 173, 176, 177, 184, 214, 215, 224, 242, 245, 246, 263, 269, 282, 299, 302, 305, 306, 313], "spiral": 282, "harsh": [151, 269, 282], "capac": [43, 83, 282], "badli": 282, "hurt": [3, 39, 44, 51, 79, 85, 132, 251, 282], "asham": [12, 60, 282], "angri": 282, "victim": 282, "aa": [282, 283, 294], "fellowship": 282, "shame": [141, 260, 282, 283], "transform": [1, 10, 20, 45, 50, 58, 84, 93, 126, 135, 166, 195, 245, 254, 282, 288], "improv": [7, 8, 11, 16, 17, 20, 24, 25, 36, 39, 45, 55, 56, 59, 63, 64, 65, 66, 76, 79, 84, 95, 99, 100, 104, 105, 106, 109, 110, 113, 114, 130, 133, 137, 138, 140, 141, 149, 151, 153, 155, 156, 157, 169, 171, 172, 175, 186, 197, 201, 202, 206, 223, 224, 228, 229, 232, 233, 249, 252, 256, 257, 259, 260, 267, 269, 271, 273, 274, 275, 282, 297, 299, 301, 304, 315], "immedi": [10, 20, 44, 58, 85, 126, 133, 134, 136, 156, 168, 245, 252, 253, 255, 274, 282, 293, 296], "react": [2, 9, 20, 57, 111, 124, 183, 184, 230, 282, 291, 312, 313], "sober": 282, "recov": [20, 104, 133, 170, 206, 252, 282, 298], "friend": [2, 4, 7, 9, 13, 14, 15, 17, 20, 30, 33, 46, 52, 55, 57, 61, 62, 64, 71, 73, 86, 95, 107, 109, 110, 119, 125, 132, 133, 134, 137, 153, 155, 158, 170, 171, 174, 175, 184, 197, 210, 225, 228, 229, 238, 244, 251, 252, 253, 256, 271, 273, 276, 282, 294, 298, 299, 303, 304, 313], "uncondit": 282, "accept": [7, 24, 55, 65, 89, 90, 105, 107, 127, 130, 137, 144, 158, 162, 164, 172, 175, 191, 192, 223, 225, 246, 249, 256, 263, 276, 280, 282, 286, 301, 304], "interplai": 282, "opinion": [9, 11, 15, 24, 26, 28, 43, 44, 46, 47, 57, 59, 65, 67, 69, 83, 85, 86, 87, 93, 109, 118, 120, 136, 152, 171, 195, 228, 237, 239, 255, 270, 282, 299], "lag": [160, 167, 168, 278, 282, 289, 296], "input": [11, 28, 33, 41, 44, 48, 59, 69, 73, 81, 85, 88, 95, 104, 106, 114, 115, 123, 127, 133, 138, 139, 141, 144, 149, 152, 157, 158, 162, 165, 171, 175, 186, 197, 206, 209, 224, 233, 234, 242, 246, 252, 257, 258, 260, 263, 267, 270, 275, 276, 280, 282, 287, 299, 304, 315], "output": [1, 3, 4, 7, 8, 11, 14, 24, 27, 28, 30, 31, 33, 34, 37, 39, 40, 41, 45, 47, 48, 50, 51, 52, 55, 56, 59, 62, 65, 68, 69, 71, 72, 73, 74, 77, 79, 80, 81, 84, 87, 88, 95, 96, 99, 100, 105, 106, 113, 114, 116, 117, 118, 123, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 146, 147, 148, 152, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 170, 172, 174, 175, 176, 178, 182, 183, 186, 197, 198, 201, 202, 209, 223, 224, 232, 233, 235, 236, 237, 242, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 270, 273, 274, 275, 276, 278, 279, 280, 282, 286, 287, 288, 289, 296, 298, 301, 303, 304, 305, 307, 311, 312, 315], "ego": 282, "fruit": [34, 74, 135, 170, 184, 254, 282, 298, 313], "fourth": 282, "step": [1, 4, 5, 8, 9, 10, 15, 17, 24, 25, 27, 28, 30, 37, 39, 42, 43, 44, 45, 46, 48, 50, 52, 53, 56, 57, 58, 64, 65, 66, 68, 69, 71, 77, 79, 82, 83, 84, 85, 86, 88, 90, 93, 95, 96, 97, 99, 100, 103, 104, 105, 106, 113, 115, 116, 120, 123, 124, 126, 130, 133, 141, 143, 147, 148, 153, 156, 157, 160, 162, 168, 169, 171, 172, 175, 182, 189, 192, 195, 197, 198, 199, 201, 202, 205, 206, 214, 215, 223, 224, 232, 234, 235, 239, 242, 243, 245, 249, 252, 260, 262, 264, 266, 271, 274, 275, 278, 280, 282, 283, 296, 297, 299, 301, 304, 311, 318], "realiz": [10, 11, 20, 25, 34, 39, 46, 58, 59, 66, 74, 79, 86, 92, 96, 102, 104, 126, 127, 129, 136, 138, 139, 142, 149, 153, 160, 170, 171, 176, 186, 187, 194, 198, 204, 206, 245, 246, 248, 255, 257, 258, 261, 267, 271, 278, 282, 298, 299, 305, 315, 316], "unworthi": [171, 282, 299], "miscreant": 282, "simpli": [1, 3, 4, 6, 7, 8, 9, 10, 11, 24, 25, 26, 28, 30, 33, 35, 39, 40, 42, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 59, 65, 66, 67, 69, 71, 73, 75, 79, 80, 82, 86, 87, 91, 92, 93, 94, 95, 97, 98, 102, 105, 113, 114, 117, 118, 121, 127, 129, 130, 131, 134, 135, 136, 137, 138, 141, 143, 144, 146, 148, 151, 152, 153, 155, 157, 160, 161, 164, 165, 172, 175, 177, 178, 180, 181, 182, 193, 194, 195, 196, 197, 199, 200, 204, 223, 232, 233, 236, 237, 240, 246, 248, 249, 250, 253, 254, 255, 256, 257, 260, 262, 263, 265, 266, 269, 270, 271, 273, 275, 278, 279, 282, 286, 287, 290, 301, 304, 306, 307, 309, 310, 311], "imperfect": [178, 282, 307], "intrins": [20, 44, 85, 282], "worthwhil": [5, 53, 100, 105, 118, 202, 223, 237, 282, 294], "doubt": [1, 26, 39, 50, 67, 79, 95, 96, 101, 120, 136, 138, 152, 172, 197, 198, 203, 239, 255, 257, 270, 282, 301], "anxieti": 282, "linger": 282, "month": [13, 35, 36, 37, 41, 43, 61, 75, 76, 77, 81, 83, 93, 107, 110, 116, 118, 123, 125, 130, 138, 173, 185, 186, 195, 225, 229, 235, 237, 242, 244, 249, 257, 282, 294, 302, 315], "therapi": 282, "profession": [2, 12, 16, 25, 39, 44, 60, 63, 66, 79, 85, 93, 97, 103, 107, 120, 133, 151, 171, 173, 174, 187, 195, 199, 205, 225, 239, 252, 269, 282, 299, 302, 303, 316], "intervent": [14, 20, 62, 282], "habit": [25, 66, 101, 107, 203, 225, 282, 291, 293, 294], "examin": [4, 26, 28, 30, 34, 39, 47, 52, 67, 69, 71, 74, 79, 87, 93, 129, 134, 138, 141, 171, 175, 177, 178, 182, 195, 248, 253, 257, 260, 282, 299, 304, 306, 307, 311], "tune": [20, 102, 204, 282], "enjoi": [0, 3, 9, 14, 16, 44, 45, 49, 51, 57, 62, 63, 84, 85, 92, 93, 94, 102, 107, 116, 123, 129, 136, 142, 171, 173, 184, 194, 195, 196, 204, 210, 225, 235, 242, 248, 255, 261, 282, 290, 292, 294, 295, 299, 302, 313], "happi": [17, 20, 24, 28, 30, 44, 64, 65, 69, 71, 85, 96, 103, 107, 108, 117, 133, 144, 149, 157, 188, 198, 205, 225, 227, 236, 252, 263, 267, 275, 282, 293, 314, 317], "norm": [10, 26, 58, 67, 117, 126, 143, 236, 245, 262, 283], "survei": [14, 62, 110, 142, 229, 261, 283], "stigma": 283, "latter": [20, 94, 121, 164, 196, 215, 240, 283, 286], "social": [20, 43, 44, 83, 85, 107, 129, 169, 171, 225, 248, 283, 290, 292, 297, 299], "awkward": [161, 279, 283], "caus": [3, 20, 26, 51, 67, 93, 105, 118, 133, 137, 138, 143, 147, 153, 158, 174, 195, 223, 237, 252, 256, 257, 262, 264, 271, 276, 283, 293, 294, 303], "park": [44, 85, 283], "interlink": 283, "pb": 283, "withdraw": 283, "risk": [44, 85, 121, 137, 240, 256, 283, 291, 294], "alevi": 283, "everyon": [9, 14, 57, 62, 92, 103, 112, 131, 155, 160, 165, 168, 194, 205, 231, 250, 273, 278, 283, 287, 296], "identifi": [27, 34, 37, 43, 68, 74, 77, 83, 99, 129, 130, 132, 133, 138, 161, 162, 171, 175, 201, 248, 249, 251, 252, 257, 279, 280, 283, 294, 299, 304], "identif": 283, "stori": [20, 25, 26, 39, 66, 67, 79, 90, 103, 104, 136, 157, 171, 179, 184, 192, 205, 206, 255, 275, 283, 294, 299, 308, 313], "home": [1, 2, 3, 5, 6, 7, 12, 24, 45, 47, 50, 51, 53, 54, 55, 60, 65, 84, 87, 91, 92, 98, 99, 103, 114, 116, 118, 148, 157, 160, 174, 193, 194, 200, 201, 205, 210, 233, 235, 237, 266, 275, 278, 283, 292, 294, 303], "job": [0, 1, 5, 7, 8, 9, 11, 14, 17, 24, 39, 41, 43, 44, 45, 49, 50, 53, 55, 56, 57, 59, 62, 64, 65, 79, 81, 83, 84, 85, 94, 97, 100, 102, 103, 104, 107, 110, 120, 125, 130, 142, 153, 154, 167, 168, 171, 173, 179, 184, 187, 188, 196, 199, 202, 204, 205, 206, 225, 229, 239, 244, 249, 261, 271, 272, 283, 289, 290, 292, 296, 299, 302, 308, 313, 316, 317], "necessari": [5, 10, 26, 36, 44, 47, 48, 53, 58, 67, 76, 85, 87, 88, 95, 120, 123, 126, 133, 152, 157, 161, 168, 197, 217, 239, 242, 245, 252, 270, 275, 279, 283, 296], "folk": [4, 8, 9, 20, 42, 44, 45, 52, 56, 57, 82, 84, 85, 93, 97, 107, 109, 116, 129, 137, 138, 141, 142, 143, 150, 170, 171, 173, 175, 183, 188, 195, 199, 225, 228, 235, 248, 256, 257, 260, 261, 262, 268, 283, 290, 298, 299, 302, 304, 312, 317], "sobrieti": [284, 294], "consumpt": 290, "infrequ": 290, "franticli": 290, "retweet": 290, "clever": [10, 44, 58, 85, 126, 172, 245, 290, 301], "scroll": [1, 28, 50, 69, 98, 99, 123, 155, 164, 171, 200, 201, 242, 273, 286, 290, 293, 299], "mindlessli": 290, "internet": [42, 43, 44, 82, 83, 85, 95, 102, 103, 130, 150, 171, 197, 204, 205, 249, 268, 290, 299], "lab": [2, 3, 4, 5, 20, 24, 39, 42, 45, 51, 52, 53, 65, 79, 82, 84, 93, 96, 98, 113, 116, 127, 132, 144, 156, 161, 162, 168, 170, 174, 178, 195, 198, 219, 232, 235, 246, 251, 263, 274, 279, 280, 290, 296, 298, 303, 307], "sparingli": [133, 252, 290], "jalape\u00f1o": 290, "salt": 290, "late": [14, 20, 40, 45, 62, 80, 84, 107, 108, 114, 120, 150, 160, 176, 183, 184, 186, 225, 227, 233, 239, 268, 278, 290, 305, 312, 313, 315], "webmast": 290, "blogger": [9, 15, 57, 129, 155, 164, 171, 174, 183, 248, 273, 286, 290, 299, 303, 312], "spent": [4, 6, 9, 26, 39, 52, 54, 57, 67, 79, 92, 94, 95, 100, 121, 183, 184, 194, 196, 197, 202, 210, 240, 290, 294, 312, 313], "produc": [5, 17, 20, 53, 64, 102, 106, 115, 127, 136, 143, 148, 152, 171, 176, 177, 181, 182, 204, 224, 234, 246, 255, 262, 266, 270, 290, 293, 299, 305, 306, 310, 311], "traffic": [15, 116, 141, 235, 260, 290, 294], "Then": [3, 11, 20, 25, 27, 34, 41, 44, 47, 51, 59, 66, 68, 74, 81, 85, 87, 96, 99, 104, 105, 117, 118, 126, 130, 135, 162, 166, 198, 201, 206, 223, 236, 237, 245, 249, 254, 280, 288, 290, 291], "centuri": [4, 7, 9, 20, 41, 52, 55, 57, 81, 171, 290, 299], "sap": [9, 57, 290], "creativ": [11, 43, 59, 83, 107, 134, 142, 225, 253, 261, 290], "surviv": [20, 168, 290, 296], "linkedin": [12, 14, 31, 36, 43, 44, 60, 62, 72, 76, 83, 85, 107, 171, 225, 290, 291, 294, 299], "2002": [20, 41, 81, 290], "facebook": [171, 290, 291, 293, 294, 299], "2004": [20, 290], "twitter": [17, 43, 44, 64, 83, 85, 171, 173, 290, 291, 294, 299, 302], "consum": [11, 30, 39, 40, 41, 59, 71, 79, 80, 81, 94, 135, 138, 141, 146, 149, 154, 161, 176, 184, 196, 254, 257, 260, 265, 267, 272, 279, 290, 294, 305, 313], "impact": [20, 39, 42, 79, 82, 113, 138, 146, 154, 161, 162, 171, 232, 257, 265, 272, 279, 280, 290, 299], "ev": [290, 291], "2016": [136, 255, 290, 294], "instead": [0, 1, 3, 4, 5, 6, 7, 10, 24, 25, 26, 28, 30, 33, 34, 36, 39, 40, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 65, 66, 67, 69, 71, 73, 74, 76, 79, 80, 86, 87, 90, 91, 92, 93, 94, 95, 98, 100, 102, 103, 109, 114, 117, 118, 119, 121, 123, 126, 127, 129, 130, 131, 133, 136, 138, 141, 142, 143, 144, 146, 148, 151, 153, 156, 157, 158, 161, 164, 165, 170, 171, 175, 176, 178, 181, 182, 192, 193, 194, 195, 196, 197, 200, 202, 204, 205, 210, 228, 233, 236, 237, 238, 240, 242, 245, 246, 248, 249, 250, 252, 255, 257, 260, 261, 262, 263, 265, 266, 269, 271, 274, 275, 276, 279, 286, 287, 290, 293, 298, 299, 304, 305, 307, 310, 311], "strictli": [10, 13, 30, 44, 58, 61, 71, 85, 96, 97, 105, 106, 129, 130, 137, 138, 141, 157, 161, 172, 198, 199, 223, 224, 248, 249, 256, 257, 260, 275, 279, 290, 301], "denial": 290, "compet": [99, 165, 187, 201, 287, 290, 316], "bait": 290, "decemb": [2, 41, 81, 108, 130, 136, 210, 227, 249, 255, 290], "31": [2, 3, 6, 9, 41, 45, 51, 54, 57, 81, 84, 100, 108, 116, 130, 146, 152, 156, 161, 202, 210, 227, 235, 249, 265, 270, 274, 279, 290], "roughli": [6, 20, 39, 54, 79, 94, 121, 172, 196, 240, 291, 301], "35": [26, 67, 100, 202, 291], "coupl": [5, 16, 20, 30, 43, 45, 53, 63, 71, 83, 84, 90, 93, 95, 96, 99, 104, 105, 116, 117, 118, 129, 131, 133, 138, 155, 157, 160, 164, 169, 174, 176, 178, 179, 183, 192, 195, 197, 198, 201, 206, 210, 223, 235, 236, 237, 248, 250, 252, 257, 273, 275, 278, 286, 291, 297, 303, 305, 307, 308, 312, 314], "lest": [9, 57, 103, 205, 291], "perceiv": 291, "retrospect": [46, 86, 103, 205, 291], "report": [6, 20, 28, 39, 40, 54, 69, 79, 80, 91, 95, 123, 146, 168, 171, 172, 174, 186, 193, 197, 242, 265, 291, 296, 299, 301, 303, 315], "effort": [5, 15, 20, 28, 37, 39, 44, 45, 53, 69, 77, 79, 84, 85, 91, 92, 95, 97, 99, 100, 107, 111, 118, 125, 140, 171, 182, 193, 194, 197, 199, 201, 202, 225, 230, 237, 244, 259, 291, 292, 294, 299, 311], "chrome": [120, 239, 291, 293, 294], "plugin": [1, 5, 11, 24, 25, 28, 36, 50, 53, 59, 65, 66, 69, 76, 91, 93, 97, 120, 124, 164, 167, 193, 195, 199, 239, 243, 286, 289, 291, 293, 294], "avoid": [7, 20, 47, 55, 87, 100, 117, 131, 133, 135, 138, 149, 150, 153, 156, 157, 160, 161, 171, 172, 202, 236, 250, 252, 254, 257, 267, 268, 271, 274, 275, 278, 279, 291, 299, 301], "unintend": [5, 53, 94, 175, 196, 291, 304], "mistak": [5, 43, 53, 83, 90, 113, 127, 152, 174, 176, 187, 188, 192, 219, 232, 246, 270, 291, 303, 305, 316, 317], "22": [1, 2, 3, 10, 26, 50, 51, 58, 67, 113, 116, 118, 123, 130, 131, 139, 156, 175, 210, 232, 235, 237, 242, 249, 250, 258, 274, 291, 304], "snapchat": 291, "instagram": 291, "margin": [3, 45, 51, 84, 291], "potenti": [123, 141, 152, 162, 242, 260, 270, 280, 291], "fellow": [45, 84, 131, 250, 291], "engin": [1, 10, 20, 30, 33, 34, 47, 48, 50, 58, 71, 73, 74, 87, 88, 93, 94, 100, 102, 103, 107, 108, 123, 126, 127, 133, 140, 142, 149, 156, 166, 168, 169, 171, 178, 183, 184, 187, 188, 195, 196, 202, 204, 205, 225, 227, 242, 245, 246, 252, 259, 261, 267, 274, 288, 291, 296, 297, 299, 307, 312, 313, 316, 317], "hire": [6, 9, 12, 54, 57, 60, 103, 155, 171, 187, 188, 205, 273, 291, 299, 316, 317], "manag": [1, 2, 4, 5, 7, 11, 12, 14, 24, 25, 26, 35, 36, 37, 39, 41, 42, 47, 50, 52, 53, 55, 59, 60, 62, 65, 66, 67, 75, 76, 77, 79, 81, 82, 87, 91, 94, 97, 100, 102, 103, 107, 110, 117, 118, 119, 122, 128, 132, 136, 138, 150, 153, 157, 160, 164, 165, 168, 169, 170, 173, 180, 182, 187, 193, 196, 199, 202, 204, 205, 225, 229, 237, 238, 241, 247, 251, 255, 257, 268, 271, 275, 278, 286, 287, 291, 296, 297, 298, 302, 309, 311, 316], "outweigh": [138, 257, 291], "downsid": [39, 79, 100, 120, 137, 157, 177, 202, 239, 256, 275, 291, 306], "becam": [3, 20, 51, 93, 100, 141, 146, 177, 195, 202, 260, 265, 291, 306], "frustrat": 291, "game": [33, 44, 73, 85, 102, 104, 138, 162, 170, 172, 204, 206, 257, 280, 291, 292, 298, 301], "bogu": 291, "account": [2, 4, 5, 25, 28, 34, 47, 52, 53, 66, 69, 74, 87, 92, 93, 94, 96, 97, 99, 103, 121, 122, 132, 141, 168, 187, 194, 195, 196, 198, 199, 201, 205, 240, 241, 251, 260, 291, 294, 296, 316], "tablet": [43, 83, 291], "visit": [28, 37, 47, 69, 77, 87, 96, 110, 164, 198, 229, 286, 291, 294, 314], "former": [46, 86, 291], "thank": [9, 57, 90, 93, 133, 150, 170, 173, 175, 184, 186, 192, 195, 252, 268, 291, 298, 302, 304, 313, 315], "grate": 291, "audio": [20, 44, 85, 291], "strict": [30, 40, 71, 80, 133, 182, 252, 291, 311], "return": [0, 1, 3, 6, 7, 10, 11, 24, 25, 26, 27, 28, 30, 31, 33, 34, 37, 39, 40, 41, 46, 47, 49, 50, 51, 54, 55, 58, 59, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 79, 80, 81, 86, 87, 92, 93, 95, 96, 97, 99, 102, 104, 105, 113, 114, 115, 116, 123, 124, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 152, 153, 158, 160, 161, 162, 165, 166, 168, 169, 170, 171, 175, 176, 178, 186, 194, 195, 197, 198, 199, 201, 204, 206, 223, 232, 233, 234, 235, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 270, 271, 276, 278, 279, 280, 287, 288, 291, 293, 296, 297, 298, 299, 304, 305, 307, 315], "hack": [210, 291], "januari": [2, 37, 77, 110, 130, 210, 249, 291, 292], "11th": [30, 71, 291], "ten": [3, 20, 51, 113, 116, 130, 131, 136, 139, 143, 152, 158, 171, 172, 232, 235, 249, 250, 255, 258, 262, 270, 276, 291, 299, 301], "commenc": 291, "sangha": 291, "begun": [151, 178, 183, 269, 291, 307, 312], "recreation": 291, "rss": 291, "reader": [5, 13, 14, 17, 40, 45, 47, 53, 61, 62, 64, 80, 84, 87, 93, 97, 101, 105, 109, 110, 128, 134, 136, 138, 142, 144, 149, 151, 152, 161, 164, 195, 199, 203, 223, 228, 229, 247, 253, 255, 257, 261, 263, 267, 269, 270, 279, 286, 291, 293, 295], "old": [1, 4, 8, 9, 25, 28, 42, 50, 52, 56, 57, 66, 69, 82, 95, 98, 100, 101, 103, 127, 129, 130, 152, 158, 169, 171, 175, 178, 179, 186, 197, 200, 202, 203, 205, 246, 248, 249, 270, 276, 291, 294, 297, 299, 304, 307, 308, 314, 315], "kick": [90, 121, 187, 192, 240, 291, 316], "vegan": [137, 144, 256, 263, 291, 293], "diet": 291, "walk": [1, 5, 11, 25, 26, 37, 44, 47, 50, 53, 59, 66, 67, 77, 85, 87, 90, 91, 93, 95, 100, 101, 102, 103, 109, 114, 122, 123, 132, 157, 169, 174, 179, 180, 192, 193, 195, 197, 202, 203, 204, 205, 228, 233, 241, 242, 251, 275, 291, 292, 293, 294, 297, 303, 308, 309], "crank": 291, "occasion": [1, 44, 50, 85, 130, 134, 142, 171, 214, 215, 249, 253, 261, 291, 294, 299], "masterpiec": 291, "narcissist": 291, "introspect": 291, "2017": [7, 41, 45, 55, 81, 84, 118, 237, 292], "defunct": [292, 293], "kidmil": [292, 293], "ill": 292, "fate": [137, 256, 292], "incorrectli": [133, 138, 175, 252, 257, 292, 304], "imagin": [39, 44, 79, 85, 90, 119, 129, 131, 135, 137, 146, 155, 157, 165, 176, 183, 192, 238, 248, 250, 254, 256, 265, 273, 275, 287, 292, 305, 312], "media": [107, 169, 171, 225, 292, 297, 299], "junki": [109, 228, 292], "save": [1, 4, 5, 8, 10, 25, 26, 33, 34, 37, 39, 40, 43, 50, 52, 53, 56, 58, 66, 67, 73, 74, 77, 79, 80, 83, 90, 95, 96, 99, 100, 101, 104, 113, 116, 117, 123, 126, 128, 132, 135, 138, 144, 146, 152, 153, 156, 157, 168, 169, 170, 171, 172, 174, 175, 178, 182, 192, 197, 198, 201, 202, 203, 206, 232, 235, 236, 242, 245, 247, 251, 254, 257, 263, 265, 270, 271, 274, 275, 292, 294, 296, 297, 298, 299, 301, 303, 304, 307, 311], "children": [124, 137, 243, 256, 292], "discov": [3, 20, 24, 28, 30, 34, 51, 65, 69, 71, 74, 106, 114, 116, 136, 157, 164, 170, 171, 175, 210, 224, 233, 235, 255, 275, 286, 292, 298, 299, 304], "vultur": 292, "hunch": 292, "neck": 292, "phone": [4, 9, 33, 43, 45, 52, 57, 73, 83, 84, 130, 171, 187, 249, 292, 294, 299, 316], "text": [4, 26, 30, 33, 34, 37, 41, 43, 44, 52, 67, 71, 73, 74, 77, 81, 83, 85, 93, 97, 98, 99, 102, 103, 106, 115, 123, 130, 131, 133, 136, 152, 153, 155, 157, 158, 160, 164, 171, 174, 176, 177, 182, 184, 195, 199, 200, 201, 204, 205, 211, 224, 234, 242, 249, 250, 252, 255, 270, 271, 273, 275, 276, 278, 286, 292, 299, 303, 305, 306, 311, 313], "luddit": 292, "mall": 292, "fairli": [0, 6, 10, 25, 30, 35, 43, 46, 49, 54, 58, 66, 71, 75, 83, 86, 89, 90, 95, 100, 104, 110, 111, 116, 117, 124, 126, 137, 139, 142, 155, 164, 167, 168, 169, 170, 179, 191, 192, 197, 202, 206, 216, 229, 230, 235, 236, 243, 245, 256, 258, 261, 273, 286, 289, 292, 296, 297, 298, 308], "brisk": 292, "pace": [171, 189, 292, 299, 318], "zombi": [24, 65, 292], "estim": [20, 39, 48, 79, 88, 106, 165, 224, 287, 292], "mile": [189, 292, 293, 318], "distanc": [20, 30, 71, 116, 139, 144, 156, 168, 178, 235, 258, 263, 274, 292, 296, 307], "escap": [20, 30, 71, 97, 146, 158, 170, 177, 182, 188, 199, 265, 276, 292, 298, 306, 311, 317], "rude": [153, 271, 292], "morn": [44, 85, 109, 116, 158, 228, 235, 276, 292], "occur": [1, 10, 20, 27, 33, 41, 50, 58, 68, 73, 81, 95, 120, 126, 130, 133, 161, 176, 182, 186, 189, 197, 239, 245, 249, 252, 279, 292, 294, 305, 311, 315, 318], "similarli": [20, 24, 30, 35, 39, 43, 44, 48, 65, 71, 75, 79, 83, 85, 88, 95, 100, 106, 120, 124, 147, 156, 166, 197, 202, 224, 239, 243, 264, 274, 288, 292, 294], "charact": [4, 7, 33, 34, 45, 52, 55, 73, 74, 84, 95, 113, 123, 130, 136, 137, 139, 143, 146, 147, 162, 197, 232, 242, 249, 255, 256, 258, 262, 264, 265, 280, 292], "extent": [20, 24, 37, 44, 48, 65, 77, 85, 88, 93, 94, 105, 117, 127, 130, 165, 184, 195, 196, 223, 236, 246, 249, 287, 292, 313], "programm": [4, 5, 9, 39, 43, 44, 46, 52, 53, 57, 79, 83, 85, 86, 92, 93, 94, 102, 103, 119, 120, 130, 131, 133, 136, 137, 138, 140, 144, 147, 152, 161, 164, 167, 171, 172, 175, 179, 185, 188, 190, 194, 195, 196, 204, 205, 238, 239, 249, 250, 252, 255, 256, 257, 259, 263, 264, 270, 279, 286, 289, 292, 299, 301, 304, 308, 317], "toler": 292, "worn": 292, "badg": [4, 52, 292], "clinic": 292, "diagnosi": 292, "resum": [9, 15, 39, 57, 79, 102, 103, 123, 179, 204, 205, 242, 292, 308], "core": [6, 9, 24, 34, 36, 54, 57, 65, 74, 76, 92, 93, 94, 96, 97, 101, 102, 103, 113, 115, 116, 117, 120, 126, 129, 130, 141, 156, 161, 162, 166, 167, 168, 171, 177, 178, 182, 184, 194, 195, 196, 198, 199, 203, 204, 205, 232, 234, 235, 236, 239, 245, 248, 249, 260, 274, 279, 280, 288, 289, 292, 296, 299, 306, 307, 311, 313], "easili": [1, 2, 3, 4, 10, 11, 14, 24, 25, 26, 27, 28, 30, 33, 34, 37, 42, 45, 47, 50, 51, 52, 58, 59, 62, 65, 66, 67, 68, 69, 71, 73, 74, 77, 82, 84, 87, 90, 91, 94, 99, 100, 101, 105, 106, 115, 117, 120, 122, 123, 126, 127, 128, 129, 130, 131, 132, 134, 135, 138, 144, 146, 156, 157, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 175, 176, 177, 182, 184, 192, 193, 196, 201, 202, 203, 209, 223, 224, 234, 236, 239, 241, 242, 245, 246, 247, 249, 250, 251, 253, 254, 257, 265, 274, 275, 278, 279, 280, 286, 289, 292, 294, 296, 297, 298, 299, 301, 304, 305, 306, 311, 313], "carv": 292, "alien": [44, 85, 292], "un": [156, 274, 292], "blast": 292, "cubevil": 292, "let": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 24, 25, 26, 27, 28, 30, 33, 34, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 66, 67, 68, 69, 71, 73, 74, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 99, 100, 101, 103, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 186, 187, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 205, 206, 219, 220, 223, 224, 225, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 279, 280, 286, 288, 293, 294, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 311, 315, 316], "fret": 293, "chat": [210, 293], "doubl": [4, 5, 7, 30, 33, 34, 40, 52, 53, 55, 71, 73, 74, 80, 101, 116, 117, 118, 129, 131, 135, 146, 152, 156, 157, 158, 161, 166, 177, 203, 210, 235, 236, 237, 248, 250, 254, 265, 270, 274, 275, 276, 279, 288, 293, 306], "readership": 293, "awesom": [2, 13, 17, 28, 34, 35, 45, 47, 61, 64, 69, 74, 75, 84, 87, 93, 101, 103, 109, 122, 149, 152, 153, 165, 182, 189, 195, 203, 205, 228, 241, 267, 270, 271, 287, 293, 311, 318], "waffl": 293, "foggi": 293, "weather": 293, "annoy": [121, 240, 293], "detract": 293, "perfect": [2, 4, 28, 34, 43, 52, 69, 74, 83, 89, 94, 95, 105, 107, 120, 121, 131, 144, 147, 155, 172, 184, 187, 191, 196, 197, 223, 225, 239, 240, 250, 263, 264, 273, 293, 301, 313, 316], "myself": [1, 4, 5, 8, 9, 12, 14, 30, 44, 50, 52, 53, 56, 57, 60, 62, 71, 85, 93, 97, 107, 129, 142, 153, 155, 171, 179, 195, 199, 225, 248, 261, 271, 273, 293, 299, 308, 314], "sit": [20, 44, 85, 157, 275, 293], "fortun": [8, 24, 26, 28, 43, 45, 56, 65, 67, 69, 83, 84, 91, 99, 103, 105, 130, 171, 193, 201, 205, 223, 249, 293, 299], "blocker": [293, 294], "knew": [24, 39, 43, 44, 45, 65, 79, 83, 84, 85, 97, 134, 160, 176, 183, 199, 253, 278, 293, 305, 312], "redirect": [4, 52, 118, 168, 237, 293, 294, 296], "asid": [1, 7, 26, 35, 50, 55, 67, 75, 100, 107, 114, 120, 135, 146, 153, 157, 161, 169, 181, 183, 202, 225, 233, 239, 254, 265, 271, 275, 279, 293, 297, 310, 312], "configur": [2, 6, 11, 16, 24, 25, 26, 34, 42, 54, 59, 63, 65, 66, 67, 74, 82, 91, 93, 97, 98, 101, 103, 105, 106, 109, 114, 117, 120, 122, 133, 134, 136, 141, 151, 157, 164, 167, 168, 174, 178, 179, 180, 181, 184, 193, 195, 199, 203, 205, 223, 224, 228, 233, 236, 239, 241, 252, 253, 255, 260, 269, 275, 286, 289, 293, 294, 296, 303, 307, 308, 309, 310, 313], "reset": [27, 68, 98, 115, 161, 162, 200, 234, 279, 280, 293], "serv": [5, 6, 8, 9, 10, 25, 34, 39, 44, 46, 53, 54, 56, 57, 58, 66, 74, 79, 85, 86, 91, 93, 97, 107, 109, 123, 149, 151, 161, 168, 172, 176, 180, 181, 193, 195, 199, 225, 228, 242, 267, 269, 279, 293, 296, 301, 305, 309, 310], "blog": [5, 7, 8, 15, 39, 44, 53, 55, 56, 79, 85, 95, 97, 103, 113, 114, 117, 119, 120, 125, 128, 129, 131, 149, 151, 152, 155, 164, 169, 171, 174, 176, 178, 183, 197, 199, 205, 232, 233, 236, 238, 239, 244, 247, 248, 250, 267, 269, 270, 273, 286, 293, 294, 297, 299, 303, 305, 307, 312], "clickbait": 293, "facelinktweet": 293, "leftov": 293, "cigarett": [293, 294], "inertia": 293, "psycholog": 293, "unless": [4, 5, 20, 24, 39, 47, 52, 53, 65, 79, 87, 92, 96, 97, 121, 123, 127, 133, 134, 136, 138, 143, 144, 147, 157, 161, 171, 186, 188, 194, 198, 199, 240, 242, 246, 252, 253, 255, 257, 262, 263, 264, 275, 279, 293, 299, 315, 317], "minor": [24, 33, 65, 73, 94, 96, 157, 184, 196, 198, 275, 293, 313], "inconveni": [168, 293, 296], "failur": [11, 59, 133, 152, 171, 252, 270, 294, 299], "caveat": [1, 9, 28, 50, 57, 69, 92, 100, 120, 123, 130, 146, 156, 157, 161, 169, 194, 202, 239, 242, 249, 265, 274, 275, 279, 294, 297], "current": [3, 4, 6, 9, 10, 11, 24, 25, 26, 28, 30, 31, 33, 34, 37, 39, 41, 44, 47, 51, 52, 54, 57, 58, 59, 65, 66, 67, 69, 71, 72, 73, 74, 77, 79, 81, 85, 87, 91, 92, 93, 97, 99, 101, 106, 117, 118, 120, 121, 123, 124, 126, 135, 136, 138, 140, 152, 156, 157, 160, 161, 164, 168, 169, 170, 171, 174, 175, 177, 182, 183, 184, 187, 188, 193, 194, 195, 199, 201, 203, 224, 236, 237, 239, 240, 242, 243, 245, 254, 255, 257, 259, 270, 274, 275, 278, 279, 286, 294, 296, 297, 298, 299, 303, 304, 306, 311, 312, 313, 316, 317], "water": [10, 24, 33, 58, 65, 73, 126, 245, 294], "biggest": [9, 20, 24, 37, 45, 57, 65, 77, 84, 160, 278, 294], "huff": 294, "nightclub": 294, "graciou": 294, "host": [5, 8, 11, 47, 53, 56, 59, 87, 92, 93, 96, 97, 99, 101, 102, 103, 123, 132, 151, 161, 170, 171, 180, 183, 194, 195, 198, 199, 201, 203, 204, 205, 242, 251, 269, 279, 294, 298, 299, 309, 312], "stuck": [17, 43, 64, 83, 116, 120, 139, 147, 171, 174, 235, 239, 258, 264, 294, 299, 303], "length": [3, 20, 27, 29, 30, 48, 51, 68, 70, 71, 88, 106, 113, 116, 119, 123, 129, 130, 133, 137, 141, 143, 146, 147, 158, 160, 162, 166, 171, 172, 175, 219, 224, 232, 235, 238, 242, 248, 249, 252, 256, 260, 262, 264, 265, 276, 278, 280, 288, 294, 299, 301, 304], "rub": 294, "nose": 294, "newfound": 294, "superior": [20, 24, 65, 93, 120, 160, 167, 195, 239, 278, 289, 294], "isn": [3, 4, 9, 11, 13, 26, 47, 51, 52, 57, 59, 61, 67, 87, 97, 111, 131, 133, 136, 137, 147, 157, 160, 171, 178, 182, 199, 230, 250, 252, 255, 256, 264, 275, 278, 294, 299, 307, 311], "anybodi": 294, "goodby": [124, 143, 243, 262, 294], "zuckerberg": 294, "care": [0, 4, 8, 9, 11, 20, 33, 35, 39, 46, 47, 49, 52, 56, 57, 59, 73, 75, 79, 86, 87, 94, 105, 118, 123, 129, 130, 144, 161, 171, 196, 223, 237, 242, 248, 249, 263, 279, 294, 299], "convict": 294, "matter": [3, 6, 9, 10, 11, 12, 13, 39, 40, 44, 51, 54, 57, 58, 59, 60, 61, 79, 80, 85, 90, 92, 101, 103, 113, 120, 121, 126, 129, 130, 134, 137, 143, 146, 148, 149, 158, 160, 161, 165, 171, 172, 179, 183, 187, 192, 194, 203, 205, 232, 239, 240, 245, 248, 249, 253, 256, 262, 265, 266, 267, 276, 278, 279, 287, 294, 299, 301, 308, 312, 316], "slip": [29, 30, 70, 71, 294], "jack": 294, "whose": [4, 16, 20, 24, 26, 34, 52, 63, 65, 67, 74, 105, 171, 223, 294, 299], "whom": [132, 167, 251, 289, 294], "email": [34, 37, 74, 77, 104, 129, 133, 138, 153, 185, 206, 248, 252, 257, 271, 294], "privat": [11, 47, 59, 87, 96, 103, 133, 161, 180, 198, 205, 252, 279, 294, 309], "theirs": [176, 294, 305], "stai": [7, 17, 55, 64, 119, 171, 220, 238, 294, 299], "delet": [4, 14, 24, 27, 47, 52, 62, 65, 68, 87, 98, 114, 116, 123, 153, 157, 158, 181, 200, 233, 235, 242, 271, 275, 276, 294, 310], "rid": [90, 130, 192, 220, 249, 294], "elimin": [24, 33, 65, 73, 99, 201, 294], "bui": [0, 45, 49, 84, 135, 143, 155, 160, 171, 254, 262, 273, 278, 294, 299], "harder": [9, 57, 133, 136, 144, 184, 186, 189, 252, 255, 263, 294, 313, 315, 318], "monei": [7, 12, 28, 43, 55, 60, 69, 83, 120, 171, 239, 294, 299, 314], "free": [2, 4, 9, 24, 25, 26, 28, 30, 36, 37, 39, 42, 43, 44, 52, 57, 65, 66, 67, 69, 71, 76, 77, 79, 82, 83, 85, 90, 91, 92, 93, 96, 97, 101, 105, 106, 108, 110, 120, 123, 128, 129, 130, 136, 138, 141, 146, 151, 160, 161, 164, 169, 170, 178, 179, 184, 192, 193, 194, 198, 199, 203, 223, 224, 227, 229, 239, 242, 247, 248, 249, 255, 257, 260, 265, 269, 278, 279, 286, 294, 297, 298, 307, 308, 313, 314], "troubl": [9, 26, 34, 37, 57, 67, 74, 77, 91, 97, 153, 155, 171, 193, 199, 210, 271, 273, 294, 299], "disabl": [4, 6, 14, 24, 39, 52, 54, 62, 65, 79, 175, 294, 304], "haven": [1, 4, 5, 11, 25, 26, 28, 34, 35, 44, 47, 50, 52, 53, 59, 66, 67, 69, 74, 75, 85, 87, 89, 93, 94, 95, 97, 100, 103, 104, 106, 107, 112, 129, 130, 131, 136, 147, 150, 151, 155, 160, 161, 165, 170, 171, 175, 184, 186, 188, 191, 195, 196, 197, 199, 202, 205, 206, 224, 225, 231, 248, 249, 250, 255, 264, 268, 269, 273, 278, 279, 287, 294, 298, 299, 304, 313, 314, 315, 317], "distract": [24, 25, 44, 45, 65, 66, 84, 85, 183, 294, 312], "employ": [0, 49, 103, 205, 294], "run": [1, 2, 5, 6, 7, 8, 9, 13, 14, 17, 24, 25, 26, 28, 30, 34, 37, 40, 42, 43, 45, 50, 53, 54, 55, 56, 57, 61, 62, 64, 65, 66, 67, 69, 71, 74, 77, 80, 82, 83, 84, 89, 91, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 108, 110, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124, 126, 129, 130, 131, 133, 134, 135, 137, 138, 141, 142, 143, 144, 146, 147, 148, 151, 152, 153, 155, 156, 158, 160, 161, 162, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 191, 193, 197, 198, 200, 201, 202, 203, 204, 206, 223, 224, 227, 229, 231, 232, 233, 235, 237, 239, 240, 241, 242, 245, 248, 249, 250, 252, 253, 254, 256, 257, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 273, 274, 276, 278, 279, 280, 287, 289, 294, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "linux": [1, 8, 9, 10, 11, 24, 25, 28, 47, 50, 56, 57, 58, 59, 65, 66, 69, 87, 92, 93, 97, 99, 114, 117, 118, 122, 126, 128, 130, 132, 134, 157, 164, 170, 178, 181, 182, 194, 195, 199, 201, 233, 236, 237, 241, 245, 247, 249, 251, 253, 275, 286, 294, 298, 307, 310, 311], "window": [1, 2, 5, 9, 10, 11, 24, 25, 28, 35, 37, 42, 44, 47, 50, 53, 57, 58, 59, 65, 66, 69, 75, 77, 82, 85, 87, 92, 93, 95, 97, 98, 99, 103, 118, 120, 122, 123, 126, 127, 128, 133, 134, 153, 155, 157, 164, 170, 171, 174, 177, 178, 181, 182, 183, 194, 195, 197, 199, 200, 201, 205, 237, 239, 241, 242, 245, 246, 247, 252, 253, 271, 273, 275, 286, 294, 298, 299, 303, 306, 307, 310, 311, 312], "night": [44, 85, 113, 133, 186, 232, 252, 294, 315], "wast": [129, 156, 248, 274, 294], "opportun": [8, 9, 20, 56, 57, 94, 100, 103, 123, 150, 161, 170, 171, 196, 202, 205, 242, 268, 279, 294, 298, 299], "elsewher": [17, 64, 110, 184, 185, 229, 294, 313], "automat": [5, 25, 28, 33, 40, 41, 44, 47, 53, 66, 69, 73, 80, 81, 85, 87, 89, 92, 94, 98, 99, 101, 106, 115, 118, 123, 129, 132, 133, 149, 157, 158, 161, 164, 167, 168, 169, 170, 171, 175, 176, 177, 178, 181, 182, 191, 194, 196, 200, 201, 203, 224, 234, 237, 242, 248, 251, 252, 267, 275, 276, 279, 286, 289, 294, 296, 297, 298, 299, 304, 305, 306, 307, 310, 311], "intend": [5, 12, 53, 60, 118, 237, 294], "bound": [94, 95, 143, 160, 161, 162, 196, 197, 262, 278, 279, 280, 294], "accid": [5, 53, 101, 203, 294], "choos": [2, 9, 20, 24, 28, 33, 34, 35, 42, 44, 57, 65, 69, 73, 74, 75, 82, 85, 90, 102, 117, 129, 130, 134, 141, 157, 162, 164, 165, 166, 171, 174, 192, 204, 236, 248, 249, 253, 260, 275, 280, 286, 287, 288, 294, 299, 303], "deserv": [14, 44, 62, 85, 152, 171, 270, 294, 299], "treat": [17, 26, 34, 35, 44, 45, 47, 64, 67, 74, 75, 84, 85, 87, 94, 106, 107, 127, 138, 146, 151, 165, 168, 171, 172, 176, 183, 196, 224, 225, 246, 257, 265, 269, 287, 294, 296, 299, 301, 305, 312], "yourself": [2, 9, 11, 28, 34, 43, 44, 57, 59, 69, 74, 83, 85, 89, 91, 93, 98, 101, 103, 105, 107, 120, 123, 129, 131, 133, 135, 150, 156, 157, 164, 170, 171, 179, 186, 187, 191, 193, 195, 200, 203, 205, 214, 215, 223, 225, 239, 242, 248, 250, 252, 254, 268, 274, 275, 286, 294, 298, 308, 315, 316], "attitud": [44, 85, 142, 171, 261, 294, 299], "unemploi": 294, "gosh": [3, 51, 294], "disavow": 294, "forev": [93, 107, 135, 195, 225, 254, 294], "heard": [44, 85, 95, 138, 160, 171, 184, 197, 257, 278, 294, 299, 313], "format": [2, 3, 5, 7, 10, 25, 26, 28, 29, 30, 34, 37, 39, 44, 45, 51, 53, 55, 58, 66, 67, 69, 70, 71, 74, 77, 79, 84, 85, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 107, 108, 109, 110, 114, 123, 126, 127, 129, 131, 133, 134, 135, 137, 138, 141, 144, 148, 152, 155, 160, 161, 162, 168, 170, 171, 172, 175, 177, 178, 186, 193, 194, 195, 197, 198, 199, 201, 202, 203, 206, 219, 223, 225, 227, 228, 229, 233, 242, 245, 246, 248, 250, 252, 253, 254, 256, 257, 260, 263, 266, 270, 273, 278, 279, 280, 294, 296, 298, 299, 301, 304, 306, 307, 315], "myth": [2, 94, 171, 294, 299], "establish": [44, 85, 93, 103, 117, 118, 142, 153, 195, 205, 236, 237, 261, 271, 294], "forevermor": 294, "lifelong": 294, "german": 294, "promot": [12, 24, 60, 65, 120, 142, 167, 239, 261, 289, 294], "luxuri": [179, 294, 308], "busi": [0, 6, 9, 12, 13, 27, 28, 39, 43, 44, 49, 54, 57, 60, 61, 68, 69, 79, 83, 85, 118, 123, 127, 129, 139, 148, 153, 168, 177, 184, 237, 242, 246, 248, 258, 266, 271, 294, 296, 306, 313, 314], "hobbi": [142, 173, 261, 294, 302], "hermit": 294, "trickl": 294, "absenc": [7, 55, 294], "warrant": [116, 235, 294], "its": [3, 8, 9, 10, 11, 17, 20, 24, 26, 28, 30, 34, 39, 40, 43, 44, 47, 48, 51, 56, 57, 58, 59, 64, 65, 67, 69, 71, 74, 79, 80, 83, 85, 87, 88, 91, 92, 93, 101, 103, 105, 106, 108, 111, 115, 116, 117, 118, 120, 123, 126, 130, 134, 135, 136, 138, 141, 144, 146, 147, 151, 152, 153, 156, 158, 160, 161, 164, 165, 166, 169, 171, 172, 176, 177, 178, 180, 182, 183, 184, 188, 193, 194, 195, 203, 205, 223, 224, 227, 230, 234, 235, 236, 237, 239, 242, 245, 249, 253, 254, 255, 257, 260, 263, 264, 265, 269, 270, 271, 274, 276, 278, 279, 286, 287, 288, 294, 297, 299, 301, 305, 306, 307, 309, 311, 312, 313, 317], "categori": [9, 20, 30, 35, 44, 45, 48, 57, 71, 75, 84, 85, 88, 93, 106, 110, 115, 120, 128, 133, 136, 157, 169, 170, 179, 195, 224, 229, 234, 239, 247, 252, 255, 275, 294, 297, 298, 308], "annoi": [10, 24, 58, 65, 98, 126, 200, 245, 294], "member": [34, 43, 74, 83, 129, 144, 147, 161, 176, 248, 263, 264, 279, 294, 305], "hang": [93, 105, 149, 170, 171, 174, 175, 176, 195, 223, 267, 294, 298, 299, 303, 304, 305], "metaphor": [186, 294, 315], "welcom": [9, 16, 39, 57, 63, 79, 89, 150, 172, 178, 189, 191, 268, 294, 301, 307, 318], "feedback": [16, 26, 63, 67, 168, 294, 296], "farmvil": 294, "fail": [24, 25, 40, 46, 47, 65, 66, 80, 86, 87, 93, 96, 123, 134, 138, 152, 157, 160, 171, 175, 177, 182, 195, 198, 242, 253, 257, 270, 275, 278, 294, 299, 304, 306, 311], "suitabl": [5, 9, 15, 53, 57, 94, 101, 103, 123, 162, 170, 196, 203, 205, 242, 280, 294, 298], "tire": [13, 44, 61, 85, 121, 172, 240, 294, 301], "lone": [94, 118, 196, 237, 294], "postcard": 294, "sent": [15, 94, 196, 294], "via": [4, 5, 10, 20, 26, 39, 40, 52, 53, 58, 67, 79, 80, 101, 102, 116, 118, 122, 123, 124, 126, 137, 144, 156, 160, 161, 163, 168, 170, 177, 178, 185, 203, 204, 216, 235, 237, 241, 242, 243, 245, 256, 263, 274, 278, 279, 285, 294, 296, 298, 306, 307], "snail": [20, 294], "mail": 294, "beneath": [6, 11, 54, 59, 147, 162, 175, 264, 280, 295, 304], "head": [3, 12, 20, 26, 27, 36, 44, 45, 46, 48, 51, 60, 67, 68, 76, 84, 85, 86, 88, 92, 99, 100, 106, 113, 116, 119, 156, 165, 166, 167, 168, 178, 194, 201, 202, 224, 232, 235, 238, 274, 287, 288, 289, 295, 296, 307], "menu": [4, 28, 52, 69, 96, 97, 99, 120, 123, 130, 163, 164, 174, 198, 199, 201, 239, 242, 249, 285, 286, 295, 303], "gather": 295, "forth": [6, 11, 28, 44, 54, 59, 69, 85, 90, 97, 113, 135, 150, 172, 192, 199, 232, 254, 268, 295, 301], "hear": [4, 20, 43, 44, 45, 52, 83, 84, 85, 109, 120, 135, 155, 171, 185, 228, 239, 254, 273, 295, 299], "45": [41, 81, 116, 130, 211, 235, 249], "sqrt": [30, 71, 160, 170, 208, 209, 211, 216, 219, 222, 278, 298], "capbabl": 20, "fundament": [7, 39, 41, 55, 79, 81, 95, 102, 117, 135, 138, 154, 197, 204, 236, 254, 257, 272, 314], "rall": [], "breakthrough": [], "prove": [6, 8, 20, 34, 39, 54, 56, 74, 79, 113, 121, 129, 137, 148, 149, 151, 164, 169, 178, 216, 232, 240, 248, 256, 266, 267, 269, 286, 297, 307], "notino": [], "comcput": [], "techniqu": [2, 3, 7, 10, 11, 14, 20, 25, 26, 43, 44, 45, 47, 48, 51, 55, 58, 59, 62, 66, 67, 83, 84, 85, 87, 88, 95, 96, 101, 104, 106, 109, 114, 123, 126, 127, 130, 134, 135, 136, 141, 144, 146, 147, 148, 152, 154, 162, 164, 166, 175, 177, 181, 197, 198, 203, 206, 224, 228, 233, 242, 245, 246, 249, 253, 254, 255, 260, 263, 264, 265, 266, 270, 272, 280, 286, 288, 304, 306, 310], "implem": 20, "cross": [1, 11, 20, 50, 59, 93, 110, 117, 136, 183, 184, 186, 195, 216, 229, 236, 255, 312, 313, 315], "street": [20, 43, 83, 186, 315], "cup": [20, 220], "object": [1, 2, 3, 7, 8, 12, 14, 20, 26, 27, 30, 39, 40, 45, 47, 48, 50, 51, 55, 56, 60, 62, 67, 68, 71, 72, 79, 80, 84, 87, 88, 93, 94, 95, 99, 100, 101, 102, 106, 109, 113, 114, 115, 116, 119, 123, 127, 129, 131, 134, 135, 138, 139, 140, 141, 143, 146, 147, 148, 150, 152, 156, 157, 158, 161, 166, 168, 169, 172, 176, 177, 178, 179, 184, 186, 188, 195, 196, 197, 201, 202, 203, 204, 224, 228, 232, 233, 234, 235, 238, 242, 246, 248, 250, 253, 254, 257, 258, 259, 260, 262, 264, 265, 266, 268, 270, 274, 275, 276, 279, 288, 296, 297, 301, 305, 306, 307, 308, 313, 314, 315, 317], "speed": [3, 20, 51, 116, 121, 124, 131, 153, 156, 160, 164, 170, 178, 179, 181, 184, 235, 240, 243, 250, 271, 274, 278, 286, 298, 307, 308, 310, 313], "togeht": [], "commut": [], "ground": [20, 139, 169, 175, 258, 297, 304], "recogn": [4, 10, 20, 33, 52, 58, 73, 96, 126, 133, 162, 176, 198, 245, 252, 280, 305], "pixel": 20, "profil": [2, 4, 20, 24, 25, 45, 52, 65, 66, 84, 90, 94, 95, 100, 101, 103, 121, 130, 137, 160, 167, 181, 192, 196, 197, 202, 203, 205, 240, 249, 256, 278, 289, 310], "scan": [1, 20, 50, 93, 100, 175, 195, 202, 210, 304], "pac": [20, 109, 228], "man": [4, 20, 52, 101, 203], "orient": [14, 20, 30, 62, 71, 94, 101, 102, 113, 130, 134, 138, 150, 156, 157, 175, 177, 184, 186, 188, 196, 203, 204, 232, 249, 253, 257, 268, 274, 275, 304, 306, 313, 315, 317], "motion": [174, 303], "laureat": 20, "hubel": 20, "weisel": [], "1981": 20, "paticular": 20, "occas": 20, "whenev": [15, 20, 26, 67, 94, 107, 115, 129, 136, 139, 141, 181, 196, 216, 225, 234, 248, 255, 258, 260, 310], "screen": [1, 4, 20, 24, 26, 28, 30, 34, 37, 47, 50, 52, 65, 67, 69, 71, 74, 77, 87, 97, 103, 123, 136, 155, 157, 171, 172, 174, 199, 205, 242, 255, 273, 275, 299, 301, 303], "v1": [5, 10, 20, 26, 53, 58, 67, 95, 123, 126, 160, 197, 242, 245, 278], "primari": [9, 20, 41, 57, 81, 97, 129, 160, 169, 176, 199, 248, 278, 297, 305], "cortext": 20, "strongest": [20, 116, 235], "center": [9, 20, 57, 93, 106, 113, 121, 130, 136, 170, 171, 195, 224, 232, 240, 249, 255, 298, 299], "decompos": [20, 141, 260], "influenti": 20, "imman": 20, "inspir": [11, 20, 59, 93, 95, 138, 160, 195, 197, 257, 278], "th": [], "boolean": [2, 3, 11, 16, 20, 28, 40, 43, 51, 59, 63, 69, 80, 83, 101, 113, 116, 127, 131, 139, 176, 203, 232, 235, 246, 250, 258, 305], "bet": [20, 171, 299], "veto": 20, "e1": 20, "OR": [20, 28, 69, 118, 220, 237], "e2": 20, "e3": [10, 20, 58, 126, 245], "AND": 20, "yep": 20, "simpl": [1, 2, 3, 4, 6, 10, 11, 14, 15, 16, 20, 24, 25, 26, 29, 30, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 48, 50, 51, 52, 54, 58, 59, 62, 63, 65, 66, 67, 70, 71, 73, 74, 75, 76, 77, 79, 80, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 111, 114, 116, 118, 120, 122, 123, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 151, 153, 155, 156, 157, 160, 161, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 184, 186, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 223, 224, 225, 230, 233, 235, 237, 239, 241, 242, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 271, 273, 274, 275, 278, 279, 286, 287, 288, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 310, 311, 313, 315], "syaps": 20, "implic": 20, "conceptu": [20, 160, 278], "framework": [6, 9, 11, 13, 14, 20, 26, 28, 46, 54, 57, 59, 61, 62, 67, 69, 86, 91, 92, 93, 120, 133, 169, 175, 179, 186, 188, 193, 194, 195, 239, 252, 297, 304, 308, 315, 317], "rigor": 20, "misquot": 20, "him": [20, 30, 44, 71, 85, 116, 235], "meager": 20, "unsatisfactori": 20, "advanc": [4, 7, 9, 10, 11, 20, 26, 28, 39, 40, 44, 45, 52, 55, 57, 58, 59, 67, 69, 79, 80, 84, 85, 93, 99, 100, 101, 108, 112, 113, 117, 126, 127, 128, 130, 135, 136, 137, 138, 141, 143, 147, 149, 157, 165, 166, 167, 170, 171, 176, 195, 201, 202, 203, 227, 231, 232, 236, 245, 246, 247, 249, 254, 255, 256, 257, 260, 262, 264, 267, 275, 287, 288, 289, 298, 299, 305], "gain": [9, 20, 39, 57, 79, 93, 99, 102, 113, 136, 182, 184, 195, 201, 204, 232, 255, 311, 313], "insight": [7, 9, 20, 55, 57, 99, 106, 170, 174, 186, 201, 224, 298, 303, 315], "biophys": 20, "descript": [9, 12, 20, 27, 28, 37, 57, 60, 68, 69, 77, 99, 103, 104, 115, 127, 139, 153, 164, 176, 201, 205, 206, 234, 246, 258, 271, 286, 305], "physiologicaql": 20, "essenc": 20, "hh": [20, 41, 81], "ap": 20, "jump": [9, 11, 20, 57, 59, 96, 97, 106, 135, 198, 199, 216, 224, 254], "theoretician": 20, "anti": [20, 170, 298], "theorist": 20, "advic": [4, 20, 34, 37, 43, 52, 74, 77, 83, 114, 133, 138, 153, 233, 252, 257, 271], "young": [20, 171, 299, 314], "scientist": [10, 20, 43, 58, 83, 93, 94, 99, 101, 103, 117, 126, 166, 171, 195, 196, 201, 203, 205, 236, 245, 288, 299], "wilfrid": 20, "mentor": [20, 108, 227], "remot": [3, 20, 25, 28, 30, 36, 47, 51, 66, 69, 71, 76, 87, 95, 97, 103, 114, 116, 127, 135, 161, 167, 180, 197, 199, 205, 233, 235, 246, 254, 279, 289, 309], "founder": [20, 160, 278], "1964": 20, "complex": [5, 11, 20, 25, 26, 37, 39, 40, 41, 53, 59, 66, 67, 77, 79, 80, 81, 95, 101, 102, 105, 118, 122, 129, 130, 133, 138, 141, 143, 144, 148, 152, 155, 165, 166, 171, 172, 176, 179, 184, 186, 197, 203, 204, 223, 237, 241, 248, 249, 252, 257, 260, 262, 263, 266, 270, 273, 287, 288, 299, 301, 305, 308, 313, 315], "oversimplifi": 20, "came": [6, 9, 20, 25, 28, 31, 36, 37, 42, 45, 54, 57, 66, 69, 72, 76, 77, 82, 84, 89, 91, 105, 119, 121, 125, 138, 144, 154, 160, 161, 165, 174, 176, 191, 193, 210, 223, 238, 240, 244, 257, 263, 272, 278, 279, 287, 303, 305], "1959": 20, "isopotenti": 20, "pop": [16, 20, 27, 63, 68, 92, 171, 175, 176, 186, 194, 299, 304, 305, 315], "delai": [20, 149, 267], "somat": 20, "therefor": [4, 7, 20, 26, 28, 44, 47, 52, 55, 67, 69, 85, 87, 113, 127, 131, 134, 148, 157, 160, 162, 170, 172, 175, 182, 209, 214, 215, 220, 232, 246, 250, 253, 266, 275, 278, 280, 298, 301, 304, 311], "cylind": 20, "suppos": [3, 4, 7, 14, 20, 24, 25, 30, 33, 34, 39, 42, 51, 52, 55, 62, 65, 66, 71, 73, 74, 79, 82, 94, 95, 98, 127, 130, 131, 133, 135, 139, 142, 147, 172, 175, 177, 178, 181, 182, 196, 197, 200, 246, 249, 250, 252, 254, 258, 261, 264, 301, 304, 306, 307, 310, 311], "across": [15, 20, 24, 33, 36, 39, 45, 65, 73, 76, 79, 84, 93, 96, 113, 120, 128, 148, 156, 157, 164, 181, 195, 198, 232, 239, 247, 266, 274, 275, 286, 310], "simplifi": [11, 20, 24, 30, 46, 47, 59, 65, 71, 86, 87, 93, 118, 131, 133, 141, 148, 157, 161, 167, 170, 178, 181, 182, 195, 216, 237, 250, 252, 260, 266, 275, 279, 289, 298, 307, 310, 311], "axial": 20, "delta": [20, 216], "channg": [], "static": [5, 6, 20, 26, 28, 29, 53, 54, 67, 69, 70, 106, 130, 179, 180, 224, 249, 308, 309], "analyt": [3, 20, 51, 97, 156, 168, 178, 186, 199, 216, 274, 296, 307, 315], "boundari": [20, 100, 138, 202, 257], "dimens": [20, 113, 116, 139, 160, 232, 235, 258, 278], "shape": [3, 10, 14, 20, 26, 27, 34, 47, 48, 51, 58, 62, 67, 68, 74, 87, 88, 93, 106, 113, 126, 148, 153, 156, 160, 195, 224, 232, 245, 266, 271, 274, 278], "seal": 20, "steep": [3, 20, 51, 102, 204], "assymetr": 20, "shallow": [20, 113, 143, 232, 262], "closer": [3, 20, 51, 99, 150, 152, 158, 160, 161, 165, 168, 201, 268, 270, 276, 278, 279, 287, 296], "trunk": 20, "voltageto": [], "leaki": 20, "low": [8, 9, 11, 20, 45, 56, 57, 59, 84, 93, 100, 105, 108, 115, 133, 150, 154, 161, 164, 170, 176, 186, 195, 202, 223, 227, 234, 252, 268, 272, 279, 286, 298, 305, 315], "mayb": [20, 37, 39, 42, 77, 79, 82, 97, 104, 119, 151, 153, 160, 161, 167, 171, 172, 187, 199, 206, 210, 238, 269, 271, 278, 279, 289, 299, 301, 316], "fall": [1, 20, 44, 50, 85, 93, 113, 130, 133, 138, 139, 157, 161, 175, 195, 232, 249, 252, 257, 258, 275, 279, 304], "subunit": 20, "territori": [20, 120, 123, 239, 242], "neighborhood": 20, "distal": 20, "affect": [17, 20, 64, 94, 168, 178, 181, 182, 196, 296, 307, 310, 311], "notion": [20, 130, 188, 249, 317], "unit": [2, 9, 10, 11, 12, 14, 20, 26, 28, 39, 45, 46, 57, 58, 59, 60, 62, 67, 69, 79, 84, 86, 93, 95, 103, 104, 107, 112, 113, 115, 126, 130, 131, 135, 138, 147, 151, 171, 176, 179, 187, 195, 197, 205, 206, 209, 210, 220, 225, 231, 232, 234, 245, 249, 250, 254, 257, 264, 269, 299, 305, 308, 316], "transient": [], "dissip": 20, "broader": [9, 15, 20, 57, 148, 157, 172, 266, 275, 301], "compar": [1, 2, 3, 6, 7, 16, 20, 25, 33, 39, 43, 48, 50, 51, 54, 55, 63, 66, 73, 79, 83, 88, 92, 93, 94, 95, 100, 113, 114, 116, 117, 118, 120, 121, 129, 130, 131, 135, 136, 137, 141, 146, 150, 151, 152, 156, 157, 158, 161, 164, 165, 170, 171, 175, 176, 178, 179, 183, 184, 194, 195, 196, 197, 202, 232, 233, 235, 236, 237, 239, 240, 248, 249, 250, 254, 255, 256, 260, 265, 268, 269, 270, 274, 275, 276, 279, 286, 287, 298, 299, 304, 305, 307, 308, 312, 313], "proxim": 20, "normal": [7, 10, 20, 25, 27, 30, 55, 58, 66, 68, 71, 91, 100, 106, 113, 126, 141, 153, 162, 164, 168, 173, 181, 182, 193, 202, 224, 232, 245, 260, 271, 280, 286, 296, 302, 310, 311], "peak": [20, 28, 39, 69, 79], "half": [0, 9, 20, 49, 57, 96, 100, 113, 130, 148, 171, 198, 202, 210, 232, 249, 266, 299], "verifi": [20, 24, 39, 65, 79, 89, 117, 123, 127, 160, 164, 168, 169, 178, 191, 236, 242, 246, 278, 286, 296, 297, 307], "element": [3, 7, 20, 26, 28, 30, 33, 40, 44, 51, 55, 67, 69, 71, 73, 80, 85, 92, 94, 95, 97, 106, 110, 113, 115, 119, 131, 133, 134, 135, 136, 138, 139, 141, 143, 144, 146, 148, 157, 158, 160, 162, 166, 171, 175, 176, 177, 194, 196, 197, 199, 210, 224, 229, 232, 234, 238, 250, 252, 253, 254, 255, 257, 258, 260, 262, 263, 265, 266, 275, 276, 278, 280, 288, 299, 304, 305, 306], "global": [20, 24, 35, 42, 65, 75, 82, 94, 118, 123, 131, 138, 157, 161, 168, 171, 177, 182, 196, 237, 242, 250, 257, 275, 279, 296, 299, 306, 311], "direction": 20, "select": [1, 2, 4, 5, 6, 9, 11, 14, 15, 20, 24, 25, 26, 27, 28, 35, 37, 43, 45, 50, 52, 53, 54, 57, 59, 62, 65, 66, 67, 68, 69, 75, 77, 83, 84, 90, 91, 93, 95, 96, 97, 99, 100, 105, 113, 115, 117, 123, 130, 131, 133, 136, 143, 147, 150, 155, 156, 157, 161, 162, 164, 167, 168, 169, 175, 178, 180, 181, 184, 192, 193, 195, 197, 198, 199, 201, 202, 223, 232, 234, 236, 242, 249, 250, 252, 255, 262, 264, 268, 273, 274, 275, 279, 280, 286, 289, 296, 297, 304, 307, 309, 310, 313], "auditori": 20, "sharpen": 20, "extend": [4, 20, 30, 34, 39, 40, 45, 46, 48, 52, 71, 74, 79, 80, 84, 86, 88, 93, 101, 105, 106, 134, 143, 151, 170, 179, 195, 203, 223, 224, 253, 262, 269, 298, 308], "inhibit": 20, "inibitori": 20, "path": [1, 5, 7, 9, 20, 24, 25, 46, 47, 50, 53, 55, 57, 65, 66, 86, 87, 90, 91, 92, 95, 96, 99, 102, 114, 118, 123, 132, 133, 136, 138, 153, 157, 161, 168, 178, 192, 193, 194, 197, 198, 201, 204, 233, 237, 242, 251, 252, 255, 257, 271, 275, 279, 296, 307], "koch": 20, "poggio": 20, "mel": 20, "perform": [2, 3, 9, 10, 14, 16, 20, 39, 41, 51, 54, 57, 58, 62, 63, 79, 81, 93, 95, 100, 101, 102, 103, 113, 114, 126, 130, 134, 138, 141, 147, 148, 152, 156, 158, 165, 166, 175, 178, 182, 184, 195, 197, 202, 203, 204, 205, 232, 233, 245, 249, 253, 257, 260, 264, 266, 270, 274, 276, 287, 288, 304, 307, 311, 313], "operatorion": [], "oper": [1, 2, 3, 4, 9, 10, 20, 24, 26, 28, 29, 31, 34, 39, 40, 45, 47, 50, 51, 52, 57, 58, 65, 67, 69, 70, 72, 74, 79, 80, 84, 87, 92, 93, 95, 96, 100, 101, 104, 106, 115, 118, 121, 123, 126, 129, 130, 131, 134, 135, 137, 138, 141, 144, 146, 147, 148, 150, 156, 157, 160, 161, 164, 165, 168, 170, 171, 172, 175, 178, 181, 184, 194, 195, 197, 198, 202, 203, 206, 210, 224, 234, 237, 240, 242, 245, 248, 249, 250, 253, 254, 256, 257, 260, 263, 264, 265, 266, 268, 274, 275, 278, 279, 286, 287, 296, 298, 299, 301, 304, 307, 310, 313], "cluster": [20, 37, 77, 93, 178, 195, 307], "bartlett": 20, "computaion": [], "switch": [1, 4, 6, 20, 24, 28, 39, 42, 47, 50, 52, 54, 65, 69, 79, 82, 87, 91, 94, 97, 100, 102, 113, 117, 118, 129, 133, 138, 149, 164, 167, 182, 193, 196, 199, 202, 204, 232, 236, 237, 248, 252, 257, 267, 286, 289, 311], "taller": [20, 129, 248], "photoreceptor": 20, "granular": [20, 105, 133, 223, 252], "rodin": 20, "kiss": [20, 44, 85], "brancusi": 20, "minim": [11, 15, 24, 25, 26, 42, 59, 65, 66, 67, 82, 100, 117, 120, 121, 127, 128, 134, 153, 202, 236, 239, 240, 246, 247, 253, 271], "img": [], "pinimg": [], "736x": [], "ae": [], "b1": [37, 77, 146, 265], "23": [2, 3, 25, 26, 41, 45, 47, 51, 66, 67, 81, 84, 87, 116, 130, 139, 156, 160, 210, 235, 249, 258, 278], "aeb1236f2bc5cbff3ae733cdc903bbf": [], "constantin": [], "jpg": [], "overli": [20, 118, 237], "forc": [9, 11, 20, 34, 44, 47, 57, 59, 74, 85, 87, 102, 137, 138, 184, 204, 256, 257, 313], "compu": [], "motino": [], "arthur": 20, "konnerth": 20, "munich": 20, "2010": [20, 130, 249], "zoom": [20, 26, 30, 67, 71], "miracul": 20, "ganglion": 20, "layer": [8, 20, 47, 56, 87, 93, 122, 132, 154, 170, 186, 195, 241, 251, 272, 298, 315], "bipolar": 20, "optic": 20, "compos": [1, 2, 10, 20, 40, 50, 58, 80, 97, 101, 112, 123, 126, 132, 144, 151, 180, 199, 203, 231, 242, 245, 251, 263, 269, 309], "senstiv": 20, "wiesel": 20, "reihard": 20, "detector": 20, "assymetri": 20, "partli": [6, 9, 15, 17, 54, 57, 64, 93, 94, 97, 141, 195, 196, 199, 260, 314], "disprov": [20, 121, 240], "kevan": 20, "martin": 20, "winfrid": 20, "denk": 20, "electrophysiologi": 20, "winfid": 20, "team": [6, 9, 13, 20, 24, 30, 39, 46, 47, 54, 57, 61, 65, 71, 79, 86, 87, 93, 94, 104, 118, 122, 133, 139, 154, 171, 184, 195, 196, 206, 237, 241, 252, 258, 272, 299, 313], "predecessor": 20, "verif": 20, "elementari": [20, 107, 171, 225, 299], "uniform": [20, 162, 280], "inher": 20, "exploit": 20, "analogi": 20, "indiv": 20, "societi": [10, 20, 58, 126, 245], "tight": 20, "operatrion": 20, "triangl": [26, 67, 210, 219, 220], "soh": [], "cah": [], "toa": [4, 52], "\u03b8": 219, "hypotenus": [30, 71, 219], "adjac": [106, 219, 224], "tan": [208, 209, 217, 219, 220], "lectur": [20, 171, 219, 299], "theta": [208, 217, 219, 220], "arc": 219, "acut": [155, 219, 273], "verit": [], "axi": [20, 26, 27, 30, 48, 67, 68, 71, 88, 105, 106, 113, 166, 209, 219, 220, 223, 224, 232, 288], "csc": [209, 219, 220], "sec": [20, 209, 216, 219, 220], "six": [15, 95, 105, 113, 118, 130, 138, 139, 148, 162, 171, 173, 197, 219, 223, 232, 237, 249, 257, 258, 266, 280, 299, 302], "mnemon": [97, 113, 199, 219, 232], "four": [3, 7, 9, 11, 33, 34, 44, 45, 46, 48, 51, 55, 57, 59, 73, 74, 84, 85, 86, 88, 94, 95, 97, 107, 113, 130, 133, 136, 142, 147, 148, 151, 152, 161, 162, 171, 173, 180, 196, 197, 199, 219, 225, 232, 249, 252, 255, 261, 264, 266, 269, 270, 279, 280, 299, 302, 309], "ii": [139, 219, 220, 258], "iii": 219, "tangent": [210, 216], "iv": 219, "paren": [], "lparen": 219, "ration": [92, 171, 194, 219, 299], "mega": 20, "column": [3, 9, 14, 37, 45, 48, 51, 57, 62, 77, 84, 88, 93, 100, 106, 113, 136, 148, 150, 155, 156, 160, 166, 168, 169, 175, 177, 178, 195, 202, 224, 232, 255, 266, 268, 273, 274, 278, 288, 296, 297, 304, 306, 307], "pysiologi": 20, "futurist": 20, "lausann": 20, "switzerland": 20, "platform": [5, 11, 16, 20, 47, 53, 59, 63, 87, 92, 93, 95, 96, 99, 117, 121, 123, 124, 130, 136, 146, 151, 155, 157, 162, 170, 181, 183, 184, 194, 195, 197, 198, 201, 236, 240, 242, 243, 249, 255, 265, 269, 273, 275, 280, 298, 310, 312, 313], "disciplin": [20, 107, 171, 225, 299], "revolutionari": 20, "million": [6, 20, 39, 45, 54, 79, 84, 94, 95, 160, 196, 197, 278], "simultan": [9, 20, 47, 57, 87, 94, 97, 102, 142, 147, 149, 152, 196, 199, 204, 261, 264, 267, 270], "decod": [20, 30, 71, 123, 144, 161, 242, 263, 279], "diseaseom": 20, "560": 20, "neurolog": 20, "worldwid": 20, "misbehav": [20, 28, 69], "hagai": 20, "bergman": 20, "databas": [1, 3, 6, 8, 14, 20, 39, 47, 50, 51, 54, 56, 62, 79, 87, 93, 104, 109, 112, 119, 130, 133, 135, 138, 141, 144, 149, 151, 152, 156, 161, 162, 169, 175, 178, 195, 206, 228, 231, 238, 249, 252, 254, 257, 260, 263, 267, 269, 270, 274, 279, 280, 297, 304, 307], "ad": [1, 5, 6, 14, 16, 20, 24, 25, 27, 28, 30, 33, 35, 36, 39, 41, 44, 45, 46, 47, 48, 50, 53, 54, 62, 63, 65, 66, 68, 69, 71, 73, 75, 76, 79, 81, 84, 85, 86, 87, 88, 91, 92, 93, 94, 97, 100, 102, 104, 106, 113, 118, 127, 129, 133, 136, 137, 138, 143, 144, 146, 148, 151, 152, 157, 160, 166, 168, 169, 170, 174, 175, 176, 179, 182, 184, 186, 193, 194, 195, 196, 199, 202, 204, 206, 224, 232, 237, 246, 248, 252, 255, 256, 257, 262, 263, 265, 266, 269, 270, 275, 278, 288, 296, 297, 298, 303, 304, 305, 308, 311, 313, 315], "repo": [5, 8, 20, 53, 56, 89, 151, 189, 191, 269, 318], "preserv": [20, 109, 228], "data": [0, 1, 2, 6, 10, 13, 14, 15, 20, 24, 30, 33, 34, 39, 40, 41, 42, 44, 47, 49, 50, 54, 58, 61, 62, 65, 71, 73, 74, 79, 80, 81, 82, 85, 87, 92, 94, 97, 99, 102, 103, 106, 107, 110, 112, 113, 117, 121, 123, 126, 127, 130, 135, 136, 138, 141, 144, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 160, 162, 168, 170, 171, 175, 176, 178, 180, 184, 186, 188, 194, 196, 199, 201, 204, 205, 224, 225, 229, 231, 232, 236, 240, 242, 245, 246, 249, 254, 255, 257, 260, 263, 264, 265, 267, 268, 270, 272, 273, 274, 275, 276, 278, 280, 296, 298, 299, 304, 305, 307, 309, 313, 315, 317], "simmul": 20, "rebuild": [11, 20, 47, 59, 87, 118, 237], "henri": [20, 171, 299], "markram": 20, "bb": 20, "supercomput": 20, "processor": [20, 91, 95, 127, 160, 164, 193, 197, 246, 278, 286], "05": [1, 8, 20, 27, 41, 50, 56, 68, 81, 123, 127, 130, 160, 185, 242, 246, 249, 278], "peta": 20, "flop": 20, "sequenc": [4, 20, 24, 27, 30, 52, 65, 68, 71, 97, 101, 113, 135, 138, 141, 143, 146, 147, 152, 157, 158, 162, 168, 177, 199, 203, 232, 254, 257, 260, 262, 264, 265, 270, 275, 276, 280, 296, 306], "genom": 20, "sexual": 20, "connot": 20, "design": [1, 6, 7, 10, 16, 20, 28, 34, 50, 54, 55, 58, 63, 69, 74, 93, 94, 97, 101, 102, 108, 120, 121, 126, 127, 130, 131, 132, 133, 137, 152, 156, 162, 172, 175, 179, 184, 195, 196, 199, 203, 204, 227, 239, 240, 245, 246, 249, 250, 251, 252, 256, 270, 274, 280, 301, 304, 308, 313], "assist": [20, 174, 303], "stand": [4, 5, 8, 12, 20, 30, 37, 39, 44, 47, 52, 53, 56, 60, 71, 77, 79, 85, 87, 102, 109, 111, 120, 130, 143, 204, 209, 228, 230, 239, 249, 262], "labor": 20, "intens": [20, 48, 88, 160, 278], "em": 20, "bam": [20, 35, 75], "ca": [2, 10, 20, 58, 95, 117, 126, 131, 170, 197, 236, 250, 298], "floresc": 20, "dye": 20, "root": [4, 6, 8, 10, 11, 24, 25, 28, 30, 39, 46, 47, 52, 54, 56, 58, 59, 65, 66, 69, 71, 79, 86, 87, 91, 96, 97, 99, 104, 124, 126, 130, 132, 133, 134, 144, 153, 160, 164, 165, 170, 181, 186, 193, 198, 199, 201, 206, 216, 219, 220, 243, 245, 249, 251, 252, 253, 263, 271, 278, 286, 287, 298, 310, 315], "unsimplif": 219, "unitcircle1": [], "png": [], "quadrant": [208, 220], "mathsisfun": [], "html": [3, 5, 9, 34, 45, 51, 53, 57, 74, 84, 96, 97, 120, 123, 130, 144, 155, 161, 176, 180, 198, 199, 239, 242, 249, 263, 273, 279, 305, 309], "rparen": [], "mcalcul": [], "cot": [209, 216, 219, 220], "34": [3, 9, 11, 39, 45, 51, 57, 59, 79, 84, 90, 144, 148, 156, 160, 169, 175, 192, 263, 266, 274, 278, 297, 304], "untermin": [], "string": [1, 2, 3, 7, 10, 14, 26, 28, 29, 30, 33, 34, 39, 40, 45, 50, 51, 55, 58, 62, 67, 69, 70, 71, 73, 74, 79, 80, 84, 95, 101, 114, 116, 119, 124, 126, 127, 129, 130, 131, 133, 134, 135, 137, 138, 139, 141, 143, 144, 146, 147, 152, 155, 156, 157, 161, 166, 168, 169, 170, 172, 175, 176, 177, 184, 186, 197, 203, 233, 235, 238, 243, 245, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 260, 262, 263, 264, 265, 270, 273, 274, 275, 279, 288, 296, 297, 298, 301, 304, 305, 306, 313, 315], "liter": [0, 7, 34, 41, 46, 49, 55, 74, 81, 86, 92, 101, 103, 131, 136, 137, 146, 152, 155, 158, 174, 194, 203, 205, 250, 255, 256, 265, 270, 273, 276, 303], "4694715627858908": 219, "7320508075688776": 219, "11": [2, 6, 7, 8, 9, 16, 24, 27, 30, 39, 47, 54, 55, 56, 57, 63, 65, 68, 71, 79, 87, 100, 113, 116, 122, 127, 130, 132, 134, 139, 141, 143, 147, 152, 156, 157, 158, 160, 165, 168, 169, 171, 178, 182, 202, 210, 214, 215, 216, 232, 235, 241, 246, 249, 251, 253, 258, 260, 262, 264, 270, 275, 276, 278, 287, 296, 297, 299, 307, 311], "01745240643728351": 219, "8414709848078965": 219, "dumb": [107, 119, 153, 210, 219, 225, 238, 271], "type": [1, 2, 3, 4, 7, 10, 15, 17, 25, 27, 28, 30, 33, 34, 35, 39, 41, 43, 44, 46, 47, 48, 50, 51, 52, 55, 58, 64, 66, 68, 69, 71, 72, 73, 74, 75, 79, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 106, 113, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 130, 131, 134, 135, 136, 139, 140, 141, 143, 144, 146, 152, 153, 154, 156, 157, 158, 161, 162, 164, 166, 168, 169, 172, 174, 176, 177, 178, 181, 184, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 219, 224, 232, 233, 234, 235, 236, 239, 240, 241, 242, 245, 246, 249, 250, 253, 254, 255, 258, 259, 260, 262, 263, 265, 270, 271, 272, 274, 275, 276, 279, 280, 286, 288, 296, 297, 301, 303, 305, 306, 307, 310, 313, 315], "taken": [5, 9, 20, 47, 53, 57, 87, 93, 95, 107, 126, 156, 184, 195, 197, 219, 225, 245, 274, 313, 314], "gdrzfemxtfi": [], "pldesaqwtn6essmweldrzhcgirhk5djwlp": [], "81": [139, 220, 258], "novemb": [2, 7, 55, 219], "apolog": [146, 161, 219, 265, 279], "mamalian": 20, "neurocortex": 20, "skull": 20, "deep": [20, 30, 71, 93, 123, 170, 195, 242, 298], "spacemm": [], "approx": 20, "circuitri": [], "stellar": 20, "denser": 20, "dens": [20, 148, 266], "46": [9, 20, 26, 57, 67, 130, 249], "stellat": 20, "green": [1, 20, 48, 50, 88, 103, 106, 119, 120, 156, 174, 205, 224, 238, 239, 274, 303], "statist": [3, 20, 48, 51, 88, 92, 93, 106, 109, 116, 162, 184, 194, 195, 224, 228, 235, 280, 313], "whisker": [20, 176, 305], "barrel": [20, 171, 299], "defin": [1, 6, 10, 20, 27, 30, 31, 33, 34, 47, 50, 54, 58, 68, 71, 72, 73, 74, 87, 91, 92, 94, 95, 97, 101, 102, 105, 106, 113, 115, 123, 126, 129, 130, 136, 137, 139, 141, 146, 147, 148, 153, 158, 161, 162, 165, 169, 170, 172, 175, 182, 184, 193, 194, 196, 197, 199, 203, 204, 223, 224, 232, 234, 242, 245, 248, 249, 255, 256, 258, 260, 264, 265, 266, 271, 276, 279, 280, 287, 297, 298, 301, 304, 311, 313], "somato": 20, "align": [20, 26, 67, 101, 155, 203, 273], "surfacesw": [], "layout": [20, 105, 178, 223, 307], "bert": 20, "sakmann": 20, "nobl": 20, "exitatori": 20, "clai": 20, "reed": 20, "tend": [9, 20, 24, 26, 34, 39, 43, 47, 57, 65, 67, 74, 79, 83, 87, 89, 100, 107, 130, 136, 144, 161, 174, 181, 184, 191, 202, 225, 249, 255, 263, 279, 303, 310, 313], "orientaion": 20, "surfac": [8, 20, 56, 151, 157, 162, 175, 269, 275, 280, 304], "ic": [3, 20, 51, 186, 315], "cube": [20, 210], "duckduckgo": [], "iu": [124, 243], "3a": [], "2f": [39, 79, 100, 136, 152, 202, 255, 270], "2ftse1": [], "bing": [], "net": [6, 8, 9, 54, 56, 57, 93, 102, 114, 121, 129, 184, 195, 204, 233, 240, 248, 313], "2fth": [], "3fid": [], "3doip": [], "nwvpin2za_kpgp": [], "3vzsurghad5": [], "26pid": [], "3dapi": [], "ipt": [], "24c14d6f5425c369bad642b2b0c0d9c22cb625c2a41f8b58817e698fa2c2278a": [], "ipo": [], "stuff": [11, 15, 17, 20, 34, 37, 39, 43, 44, 59, 64, 74, 77, 79, 83, 85, 90, 92, 101, 111, 150, 192, 194, 203, 210, 230, 268], "properi": 20, "optim": [3, 6, 13, 17, 20, 39, 41, 47, 51, 54, 61, 64, 79, 81, 87, 93, 94, 101, 114, 117, 121, 124, 132, 138, 146, 150, 151, 152, 153, 160, 164, 165, 175, 176, 181, 182, 184, 195, 196, 203, 233, 236, 240, 243, 251, 257, 265, 268, 269, 270, 271, 278, 286, 287, 304, 305, 310, 311, 313], "moo": 20, "ongo": [20, 108, 227], "la": 20, "super": [20, 129, 130, 143, 186, 248, 249, 262, 315], "fiber": 20, "interlud": 20, "d8ntw7pgi": 20, "foo": [104, 206], "func": [8, 56, 114, 166, 233, 288], "domain": [9, 26, 57, 67, 96, 133, 154, 170, 184, 198, 214, 215, 252, 272, 298, 313], "le": [27, 68, 108, 227], "leq": [], "leqslant": [], "le1": [], "ne": 220, "ne0": 220, "union": [130, 176, 249, 305], "precalculu": [210, 220], "period": [3, 4, 25, 34, 44, 47, 51, 52, 66, 74, 85, 87, 96, 173, 182, 198, 302, 311], "space2": [214, 215, 220], "pi_": [], "eq": [10, 58, 126, 129, 164, 245, 248, 286], "precalc": [209, 210, 220], "82": [6, 54, 100, 114, 131, 162, 202, 220, 233, 250, 280], "recip": [11, 59, 102, 204, 220], "skip": [4, 7, 25, 26, 28, 37, 39, 42, 44, 52, 55, 66, 67, 69, 77, 79, 82, 85, 91, 97, 100, 123, 128, 134, 136, 141, 146, 147, 151, 160, 164, 193, 199, 202, 210, 220, 242, 247, 253, 255, 260, 264, 265, 269, 278, 286], "equat": [2, 10, 58, 92, 126, 148, 151, 165, 171, 194, 210, 214, 216, 220, 245, 266, 269, 287, 299], "pythagorean": [30, 71, 210, 220], "theorem": [30, 71, 220], "inscrib": 220, "13": [1, 2, 8, 9, 34, 41, 47, 50, 56, 57, 74, 81, 87, 113, 116, 123, 130, 132, 133, 142, 146, 147, 152, 156, 158, 171, 174, 177, 210, 216, 220, 232, 235, 242, 249, 251, 252, 261, 264, 265, 270, 276, 299, 303, 306], "169": 220, "144": 220, "info": [1, 4, 10, 20, 24, 25, 27, 50, 52, 58, 65, 66, 68, 114, 123, 126, 130, 133, 172, 176, 210, 220, 233, 242, 245, 249, 252, 301, 305], "flip": [34, 74, 119, 129, 152, 169, 176, 209, 216, 220, 238, 248, 270, 297, 305], "amsterdam": 20, "md": [4, 20, 35, 36, 39, 47, 52, 75, 76, 79, 87, 96, 104, 153, 198, 206, 271], "chunk": [20, 156, 274], "epilept": 20, "rare": [4, 20, 34, 52, 74, 97, 98, 131, 133, 136, 141, 152, 164, 175, 199, 200, 250, 252, 255, 260, 270, 286, 304], "physiologi": 20, "exaflop": 20, "2014": [20, 30, 71, 93, 195, 210], "petaflop": 20, "supposedli": 20, "bbp": 20, "concern": [0, 1, 7, 11, 20, 39, 49, 50, 55, 59, 79, 96, 100, 113, 114, 127, 141, 164, 178, 183, 198, 202, 232, 233, 246, 260, 286, 307, 312], "simulationo": 20, "hbp": 20, "informat": 20, "neuroscop": 20, "neurorobot": 20, "technologi": [9, 20, 45, 57, 84, 93, 112, 127, 179, 195, 231, 246, 308], "neuromorph": 20, "chip": [20, 40, 80, 93, 160, 195, 278], "educ": [0, 9, 20, 49, 57, 97, 119, 165, 170, 171, 199, 238, 287, 298, 299], "amaz": [10, 20, 58, 126, 245], "ethic": [], "industri": [1, 9, 14, 20, 43, 50, 57, 62, 83, 93, 94, 99, 102, 110, 125, 153, 173, 195, 196, 201, 204, 229, 244, 271, 302], "public": [0, 3, 5, 11, 13, 20, 25, 45, 47, 49, 51, 53, 59, 61, 66, 84, 87, 93, 96, 114, 119, 132, 142, 167, 179, 180, 182, 195, 198, 233, 238, 251, 261, 289, 308, 309, 311], "europ": [20, 41, 81, 127, 246], "256": [20, 95, 121, 146, 197, 240, 265], "114": 20, "countri": [20, 41, 43, 45, 81, 83, 84, 95, 115, 130, 131, 147, 171, 197, 234, 249, 250, 264, 299], "ict": 20, "researc": [], "obtain": [20, 47, 87, 130, 143, 146, 147, 148, 249, 262, 264, 265, 266], "treatment": [16, 20, 40, 63, 80], "cheapli": 20, "watt": 20, "neuroinformat": 20, "medic": [20, 94, 196], "hpc": 20, "lide": 20, "guest": [17, 20, 64, 101, 150, 155, 180, 203, 268, 273, 309], "speaker": [20, 171, 183, 299, 312], "israel": 20, "nelken": 20, "processs": 20, "sensat": 20, "represent": [1, 10, 20, 30, 41, 48, 50, 58, 71, 81, 88, 106, 126, 130, 136, 146, 152, 162, 177, 224, 245, 249, 255, 265, 270, 280, 306], "david": [20, 36, 76], "mahr": [], "marr": 20, "2d": [20, 106, 224], "latent": 20, "threat": 20, "music": [20, 43, 83, 171, 299], "higher": [6, 7, 9, 39, 43, 47, 48, 54, 55, 57, 79, 83, 87, 88, 113, 116, 117, 142, 152, 171, 232, 235, 236, 261, 270, 299], "chill": 20, "hair": 20, "mechano": 20, "depolarizt": 20, "basilar": 20, "corti": 20, "rel": [1, 3, 4, 6, 9, 11, 20, 26, 30, 37, 39, 40, 50, 51, 52, 54, 57, 59, 67, 71, 77, 79, 80, 97, 101, 102, 106, 114, 117, 121, 123, 129, 132, 133, 134, 136, 137, 139, 141, 144, 151, 157, 164, 169, 170, 171, 182, 199, 203, 204, 224, 233, 236, 240, 242, 248, 251, 252, 253, 255, 256, 258, 260, 263, 269, 275, 286, 297, 298, 299, 311], "roof": 20, "copola": 20, "vibrat": 20, "tube": [0, 20, 49], "cochlea": 20, "canal": 20, "tympan": 20, "eardrum": 20, "transfer": [20, 176, 305], "tiniest": 20, "bone": [4, 20, 52, 107, 110, 225, 229], "liquid": [10, 20, 58, 126, 136, 245, 255], "pressur": [10, 12, 20, 58, 60, 126, 133, 245, 252, 314], "wave": [20, 44, 85, 107, 225], "19th": [7, 20, 55, 171, 299], "hermann": 20, "helmholtz": 20, "frequenc": [13, 20, 61, 106, 224], "pick": [1, 4, 7, 9, 20, 44, 47, 50, 52, 55, 57, 85, 87, 90, 93, 95, 107, 116, 121, 133, 150, 151, 155, 164, 171, 174, 178, 179, 192, 195, 197, 225, 235, 240, 252, 268, 269, 273, 286, 299, 303, 307, 308], "hz": 20, "medium": [9, 10, 20, 57, 58, 115, 126, 160, 234, 245, 278], "amplitud": 20, "flatter": 20, "sourc": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 20, 24, 26, 28, 30, 36, 37, 39, 44, 45, 48, 50, 52, 53, 54, 56, 57, 59, 60, 61, 65, 67, 69, 71, 76, 77, 79, 84, 85, 86, 88, 91, 92, 93, 95, 96, 97, 100, 101, 103, 106, 110, 112, 114, 116, 117, 118, 120, 122, 123, 125, 128, 132, 133, 134, 138, 147, 149, 152, 153, 156, 157, 159, 160, 161, 162, 165, 168, 174, 175, 178, 179, 181, 184, 185, 186, 193, 194, 195, 197, 198, 199, 202, 203, 205, 210, 224, 229, 231, 233, 235, 236, 237, 239, 241, 242, 244, 247, 251, 252, 253, 257, 264, 267, 270, 271, 274, 275, 277, 278, 279, 280, 287, 296, 303, 304, 307, 308, 310, 313, 315], "peizoelectr": 20, "suppli": [10, 20, 58, 126, 137, 153, 164, 168, 169, 214, 245, 256, 271, 286, 296, 297], "summar": [20, 47, 87, 93, 115, 127, 129, 135, 144, 156, 161, 171, 172, 178, 195, 234, 246, 248, 254, 263, 274, 279, 299, 301, 307], "identitl": [], "symetr": 209, "symettri": 209, "rotat": [20, 34, 74, 148, 209, 266], "180": [7, 26, 55, 67, 209, 210], "accross": 209, "auto": [162, 175, 280, 304], "inset": [], "1em": [], "83": 209, "fn": [6, 30, 54, 71, 210, 216], "tabular": [3, 51, 97, 99, 110, 155, 156, 177, 199, 201, 229, 273, 274, 306], "formula": [10, 26, 58, 67, 97, 126, 130, 152, 165, 199, 209, 210, 214, 215, 245, 249, 270, 287], "ci": [9, 14, 57, 62, 110, 123, 229, 242], "third": [2, 3, 4, 11, 13, 20, 26, 37, 39, 41, 42, 44, 46, 48, 51, 52, 59, 61, 67, 77, 79, 81, 82, 85, 86, 88, 90, 93, 94, 95, 101, 104, 106, 113, 114, 116, 117, 118, 122, 127, 129, 136, 137, 138, 143, 144, 146, 147, 156, 160, 162, 164, 166, 169, 171, 175, 177, 178, 182, 192, 195, 196, 197, 203, 206, 224, 232, 233, 235, 236, 237, 241, 248, 255, 256, 257, 262, 263, 264, 265, 274, 278, 280, 286, 288, 297, 299, 304, 306, 307, 311], "cue": [20, 44, 85], "binaur": 20, "pure": [6, 10, 20, 54, 58, 92, 94, 126, 134, 138, 156, 162, 194, 196, 245, 253, 257, 274, 280], "slightli": [1, 3, 5, 6, 20, 24, 30, 50, 51, 53, 54, 65, 71, 90, 123, 146, 157, 161, 162, 165, 175, 177, 178, 179, 192, 242, 265, 275, 279, 280, 287, 304, 306, 307, 308], "louder": 20, "shadow": [20, 106, 224], "interaur": 20, "itd": 20, "ild": 20, "tiffer": [], "front": [4, 5, 7, 8, 16, 20, 26, 33, 43, 52, 53, 55, 56, 63, 67, 73, 83, 92, 93, 101, 106, 120, 136, 144, 146, 149, 161, 165, 171, 175, 184, 185, 188, 194, 195, 203, 224, 239, 255, 263, 265, 267, 279, 287, 299, 304, 313, 317], "microsecond": [20, 41, 81, 95, 130, 178, 197, 249, 307], "hundreth": 20, "lock": [20, 91, 94, 118, 120, 137, 151, 164, 176, 193, 196, 237, 239, 256, 269, 286, 305], "incom": 20, "nucleu": 20, "medial": 20, "oliv": 20, "mso": 20, "nuclei": 20, "olivari": 20, "coincid": 20, "extrem": [5, 9, 16, 20, 35, 47, 53, 57, 63, 75, 87, 100, 101, 107, 108, 118, 123, 127, 138, 144, 146, 160, 162, 168, 176, 202, 203, 210, 225, 227, 237, 242, 246, 257, 263, 265, 278, 280, 296, 305], "spatial": 20, "fidel": 20, "relai": 20, "resolv": [8, 20, 39, 47, 56, 79, 87, 92, 96, 121, 134, 157, 160, 165, 170, 182, 186, 194, 198, 240, 253, 275, 278, 287, 298, 311, 315], "comparison": [6, 15, 20, 24, 28, 30, 40, 48, 54, 65, 69, 71, 80, 88, 94, 95, 100, 101, 102, 105, 106, 111, 113, 120, 121, 129, 130, 146, 158, 160, 167, 170, 175, 184, 196, 197, 202, 203, 204, 223, 224, 230, 232, 239, 240, 248, 249, 265, 276, 278, 289, 298, 304, 313], "smell": [20, 46, 86, 138, 257], "brainstem": 20, "bulb": 20, "barn": 20, "owl": 20, "prei": 20, "hunt": [20, 43, 83, 98, 129, 179, 200, 248, 308], "prefer": [3, 5, 20, 24, 25, 30, 34, 37, 44, 45, 47, 51, 53, 65, 66, 71, 74, 77, 84, 85, 87, 92, 97, 98, 102, 113, 118, 120, 128, 131, 134, 144, 146, 148, 157, 161, 164, 165, 167, 181, 194, 199, 200, 204, 232, 237, 239, 247, 250, 253, 263, 265, 266, 275, 279, 286, 287, 289, 310], "dusk": 20, "steo": 20, "azimuth": 20, "mamal": 20, "reli": [1, 3, 7, 11, 20, 25, 26, 30, 33, 35, 37, 39, 40, 47, 50, 51, 55, 59, 66, 67, 71, 73, 75, 77, 79, 80, 87, 93, 100, 101, 103, 114, 118, 120, 121, 129, 133, 136, 141, 151, 157, 160, 161, 162, 170, 171, 175, 177, 178, 180, 182, 195, 202, 203, 205, 233, 237, 239, 240, 248, 252, 255, 260, 269, 275, 278, 279, 280, 298, 299, 304, 306, 307, 309, 311], "prism": [20, 124, 243], "catch": [1, 16, 20, 30, 37, 50, 63, 71, 77, 95, 104, 133, 197, 206, 252], "inferior": [20, 107, 225], "colliculu": 20, "ptic": [], "tectum": 20, "motor": 20, "socket": [20, 141, 146, 161, 260, 265, 279], "sensitivti": 20, "correspend": 20, "icc": 20, "immateri": 20, "icx": 20, "converg": [20, 165, 287], "regardless": [20, 47, 87, 152, 270], "station": 20, "ot": 20, "multimod": 20, "homolog": 20, "couldn": [20, 39, 47, 79, 87, 119, 154, 160, 161, 165, 171, 238, 272, 278, 279, 287, 299], "gutfreund": 20, "zheng": 20, "knudson": 20, "illus": 20, "evalu": [7, 20, 24, 28, 39, 55, 65, 69, 79, 93, 94, 97, 100, 105, 113, 120, 136, 141, 152, 157, 160, 161, 166, 170, 174, 177, 184, 186, 195, 196, 199, 202, 214, 223, 232, 239, 255, 260, 270, 275, 278, 279, 288, 298, 303, 306, 313, 315], "devianc": 20, "violat": [20, 127, 129, 175, 246, 248, 304], "conclud": [1, 20, 24, 50, 65], "blood": 20, "beep": 20, "boop": 20, "eeg": 20, "mismatch": [1, 20, 50], "evok": 20, "under": [1, 4, 5, 6, 10, 12, 20, 24, 25, 28, 33, 39, 44, 48, 50, 52, 53, 54, 58, 60, 65, 66, 69, 73, 79, 85, 88, 96, 117, 122, 123, 126, 127, 130, 132, 133, 141, 146, 156, 159, 161, 172, 173, 176, 198, 236, 241, 242, 245, 246, 249, 251, 252, 260, 265, 274, 277, 279, 301, 302, 305], "conditiopn": [], "mmn": 20, "150": [20, 100, 107, 117, 156, 166, 202, 225, 236, 274, 288], "unexpect": [13, 20, 61, 137, 161, 168, 177, 256, 279, 296, 306], "cadenc": 20, "anaesthet": 20, "rariti": 20, "elicit": 20, "border": 20, "melodi": 20, "rodent": 20, "discrimin": [20, 171, 299], "irregular": 20, "anesthet": 20, "Such": [20, 34, 40, 74, 80, 109, 228], "ph0t0": [], "0p": [], "physiolog": 20, "heart": [0, 7, 9, 20, 49, 55, 57, 100, 112, 150, 188, 202, 231, 268, 317], "phy": 20, "smile": [12, 20, 60], "distinct": [20, 34, 74, 117, 130, 133, 136, 152, 168, 175, 236, 249, 252, 255, 270, 296, 304], "emotino": [], "roll": [20, 162, 176, 280, 305], "reward": [20, 102, 204], "punnish": 20, "arnold": 20, "damasio": 20, "bodili": 20, "adapt": [20, 28, 69, 96, 130, 157, 198, 249, 275], "secondari": [20, 169, 297], "conserv": 20, "amygdala": 20, "fear": [20, 93, 119, 136, 153, 195, 238, 255, 271], "vta": 20, "midbrain": 20, "dopamin": [20, 44, 85], "acumben": 20, "outcom": [20, 30, 39, 71, 79, 152, 270], "sex": [20, 45, 84, 168, 296], "mamallian": 20, "zatorr": 20, "pet": [20, 34, 74, 147, 264], "mri": 20, "anterior": 20, "cingul": 20, "ventral": 20, "striatum": 20, "decreas": [20, 146, 215, 265], "speech": 20, "grandmoth": 20, "tast": [3, 4, 20, 28, 51, 52, 69, 93, 132, 171, 184, 195, 251, 299, 313], "textur": 20, "madelein": 20, "proust": 20, "passag": [20, 168, 210, 296], "9th": 20, "neuroeth": 20, "augment": 20, "dissemin": 20, "mooc": 20, "frontier": 20, "acccess": 20, "farewel": [], "franci": 20, "crick": 20, "claud": 20, "shannon": 20, "repair": 20, "trick": [1, 11, 20, 33, 44, 50, 59, 73, 85, 90, 102, 133, 136, 160, 164, 177, 178, 192, 204, 216, 252, 255, 278, 286, 306, 307], "fantast": [9, 20, 57, 129, 152, 248, 270], "transmiss": 20, "corresponsdsd": 20, "21st": [9, 20, 57], "lack": [20, 45, 84, 118, 120, 122, 129, 130, 138, 160, 170, 171, 179, 184, 187, 237, 239, 241, 248, 249, 257, 278, 298, 299, 308, 313, 316], "mood": [12, 20, 60], "brighten": 20, "privaci": 20, "reproduc": [20, 24, 35, 47, 65, 75, 87, 95, 97, 117, 118, 122, 162, 197, 199, 236, 237, 241, 280], "accuraci": 20, "magnet": 20, "reson": 20, "health": [0, 20, 49], "belief": [20, 171, 299], "intent": [6, 20, 54, 101, 118, 127, 137, 139, 162, 165, 184, 203, 237, 246, 256, 258, 280, 287, 313], "lie": [20, 174, 303], "agrress": 20, "technic": [3, 17, 20, 51, 64, 93, 142, 144, 157, 171, 179, 195, 261, 263, 275, 299, 308, 314], "indirectli": 20, "encod": [20, 30, 48, 71, 88, 144, 158, 162, 263, 276, 280], "kawabata": 20, "zeki": 20, "paint": [20, 43, 44, 83, 85], "ugli": [12, 20, 60, 98, 101, 103, 104, 129, 130, 133, 153, 200, 203, 205, 206, 248, 249, 252, 271], "quantifi": 20, "dislik": 20, "orbit": [20, 171, 299], "frontal": 20, "hemispher": 20, "avers": 20, "intest": 20, "england": [20, 130, 131, 139, 171, 249, 250, 258, 299], "Willful": 20, "modul": [3, 6, 8, 11, 12, 13, 20, 24, 25, 27, 28, 30, 31, 40, 41, 42, 43, 46, 47, 48, 51, 54, 56, 59, 60, 61, 65, 66, 68, 69, 71, 72, 80, 81, 82, 83, 86, 87, 88, 93, 95, 99, 101, 106, 117, 118, 123, 127, 128, 129, 133, 136, 138, 146, 153, 155, 156, 158, 161, 165, 176, 177, 178, 195, 197, 201, 203, 224, 236, 237, 242, 246, 247, 248, 252, 255, 257, 265, 271, 273, 274, 276, 279, 287, 305, 306, 307], "monti": [20, 34, 74], "willfulli": 20, "rais": [0, 9, 20, 30, 33, 34, 47, 49, 57, 71, 73, 74, 87, 113, 131, 136, 138, 139, 141, 143, 144, 146, 148, 150, 152, 156, 157, 158, 161, 162, 172, 215, 232, 250, 255, 257, 258, 260, 262, 263, 265, 266, 268, 270, 274, 275, 276, 279, 280, 301], "polygraph": 20, "fmri": 20, "succcess": 20, "calibr": 20, "cooper": [2, 20, 43, 83, 103, 125, 152, 205, 270], "transcrani": 20, "tm": [20, 28, 69], "sack": 20, "curiou": [16, 20, 24, 63, 65, 96, 102, 111, 121, 124, 129, 131, 136, 141, 143, 148, 153, 160, 162, 170, 175, 178, 198, 204, 230, 240, 243, 248, 250, 255, 260, 262, 266, 271, 278, 280, 298, 304, 307], "markham": 20, "phinea": 20, "gage": 20, "famou": [10, 20, 39, 48, 58, 79, 88, 121, 126, 139, 140, 240, 245, 258, 259], "patent": 20, "damag": 20, "vermont": [20, 139, 258], "1848": 20, "rod": [20, 119, 238], "pfc": 20, "determinist": [20, 138, 162, 172, 257, 280, 301], "automota": 20, "isaac": 20, "bashevi": 20, "singer": 20, "benjamin": 20, "libet": 20, "ball": [20, 97, 155, 199, 273], "freeli": 20, "press": [3, 9, 14, 20, 24, 28, 43, 47, 51, 57, 62, 65, 69, 83, 87, 117, 164, 169, 174, 236, 286, 297, 303], "button": [1, 20, 25, 28, 37, 50, 66, 69, 77, 96, 97, 99, 120, 123, 164, 167, 174, 198, 199, 201, 210, 239, 242, 286, 289, 303], "2000": 20, "readi": [1, 5, 6, 7, 8, 20, 24, 26, 28, 37, 43, 44, 45, 47, 50, 53, 54, 55, 56, 65, 67, 69, 77, 83, 84, 85, 87, 89, 90, 97, 101, 105, 110, 121, 123, 128, 144, 147, 149, 151, 153, 164, 168, 169, 174, 176, 178, 191, 192, 199, 203, 223, 229, 240, 242, 247, 263, 264, 267, 269, 271, 286, 296, 297, 303, 305, 307], "subconsci": 20, "liber": [123, 242], "flex": 20, "wrist": 20, "17": [2, 8, 9, 10, 11, 34, 41, 56, 57, 58, 59, 74, 81, 107, 113, 116, 123, 126, 130, 147, 148, 152, 156, 158, 161, 177, 210, 214, 215, 225, 232, 235, 242, 245, 249, 264, 266, 270, 276, 279, 306], "49": [4, 52, 156, 160, 274, 278], "transcript17": [], "causal": 20, "bend": 20, "irrelev": [20, 27, 68, 171, 299], "furthermor": [20, 24, 65], "2009": 20, "undergon": [12, 20, 60], "surgeri": [8, 20, 56], "pariet": 20, "desir": [11, 20, 27, 59, 68, 116, 130, 138, 162, 164, 168, 170, 171, 176, 184, 235, 249, 257, 280, 286, 296, 298, 299, 305, 313], "lick": [20, 148, 266], "lip": 20, "mouth": [20, 132, 251], "premotor": 20, "wolf": 20, "max": [3, 6, 10, 20, 26, 48, 51, 54, 58, 67, 88, 115, 123, 126, 234, 242, 245], "planck": 20, "frankfort": 20, "crime": 20, "evid": [20, 94, 138, 196, 257], "abnorm": 20, "stress": [3, 12, 20, 39, 44, 51, 60, 79, 85, 120, 239], "judg": 20, "incorrect": [20, 26, 67, 133, 137, 252, 256], "onedr": 210, "epa2mi8hzba": [], "tuesdai": [41, 81, 109, 130, 136, 210, 228, 249, 255], "mathjax_displai": [], "sicosn": [], "onenot": 210, "latex": [2, 92, 97, 148, 194, 199, 210, 266], "identitit": [], "altern": [2, 4, 11, 13, 15, 24, 25, 28, 45, 51, 52, 59, 61, 65, 66, 69, 84, 92, 97, 98, 108, 109, 112, 113, 117, 121, 129, 136, 149, 150, 153, 156, 157, 160, 161, 165, 168, 171, 172, 174, 184, 186, 194, 199, 200, 208, 227, 228, 231, 232, 236, 240, 248, 255, 267, 268, 271, 274, 275, 278, 279, 287, 296, 299, 301, 303, 313, 315], "cosin": [26, 67, 106, 113, 208, 224, 232], "commonli": [24, 28, 48, 65, 69, 88, 93, 94, 95, 102, 116, 117, 121, 131, 148, 152, 157, 160, 175, 182, 184, 186, 195, 196, 197, 204, 208, 235, 236, 240, 250, 266, 270, 275, 278, 304, 311, 313, 315], "wednesdai": [130, 136, 210, 249, 255], "frixion": 210, "rocketbook": 210, "schoolyourself": 210, "forkula": [], "sqrt2": [], "14": [26, 30, 34, 39, 41, 43, 47, 67, 71, 74, 79, 81, 83, 87, 100, 113, 130, 132, 136, 147, 156, 158, 175, 178, 202, 210, 216, 217, 232, 249, 251, 255, 264, 274, 276, 304, 307], "trigonometr": [171, 208, 299], "discret": [48, 88, 93, 106, 195, 210, 224], "playlist": 210, "search": [2, 4, 7, 9, 25, 28, 33, 37, 45, 46, 52, 55, 57, 66, 69, 73, 77, 84, 86, 91, 94, 99, 103, 117, 123, 131, 143, 157, 164, 170, 173, 174, 175, 176, 177, 183, 184, 187, 193, 196, 201, 205, 210, 236, 242, 250, 262, 275, 286, 298, 302, 303, 304, 305, 306, 312, 313, 316], "k\u00f6nigsberg": 210, "wwhgcwlcox": [], "pllippkeh9v3zfehvnd5xqurckqlgxnekl": [], "19": [37, 77, 95, 98, 113, 116, 129, 130, 152, 156, 158, 170, 197, 200, 210, 232, 235, 248, 249, 270, 274, 276, 298], "preview": [93, 97, 120, 177, 195, 199, 210, 239, 306], "igraph": 210, "graphwork": 210, "magic": [1, 5, 30, 34, 40, 50, 53, 71, 74, 80, 93, 101, 120, 129, 130, 131, 133, 138, 141, 157, 160, 161, 168, 175, 195, 203, 210, 239, 248, 249, 250, 252, 257, 260, 275, 278, 279, 296, 304], "intro": 210, "tutori": [1, 2, 15, 33, 37, 41, 44, 47, 50, 73, 77, 81, 85, 87, 90, 96, 97, 99, 100, 102, 103, 104, 106, 109, 111, 115, 123, 127, 130, 131, 134, 135, 137, 144, 147, 149, 152, 153, 155, 156, 157, 158, 161, 168, 171, 172, 175, 177, 179, 182, 183, 192, 198, 199, 201, 202, 204, 205, 206, 210, 224, 228, 230, 234, 242, 246, 250, 253, 256, 263, 264, 267, 270, 271, 273, 274, 275, 279, 296, 299, 304, 306, 308, 311, 312], "calculus_test": 210, "file": [1, 2, 5, 6, 8, 11, 14, 15, 17, 24, 25, 29, 30, 34, 35, 37, 39, 46, 50, 53, 54, 56, 59, 62, 64, 65, 66, 70, 71, 74, 75, 77, 79, 86, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 109, 110, 114, 116, 118, 120, 122, 123, 127, 128, 129, 132, 133, 137, 138, 141, 146, 153, 155, 156, 157, 161, 164, 166, 167, 168, 169, 170, 174, 175, 176, 179, 180, 182, 184, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 210, 228, 229, 233, 235, 237, 239, 241, 242, 246, 247, 248, 251, 252, 256, 257, 260, 265, 271, 273, 274, 275, 279, 286, 288, 289, 296, 297, 298, 303, 304, 305, 308, 309, 311, 313], "precalc_demo": 210, "dec": [41, 81, 172, 210, 301], "geogebra": 210, "board": [13, 45, 61, 84, 94, 119, 138, 168, 196, 210, 238, 257, 296], "probl": 210, "saturdai": [41, 81, 130, 136, 210, 249, 255], "sundai": [41, 81, 136, 210, 255], "nochebuena": 210, "quadratur": 210, "lune": 210, "geniu": [2, 12, 60, 173, 210], "parametr": 210, "lamar": [], "edu": [], "calcii": [], "parametriceqn": [], "aspx": [], "26": [3, 6, 9, 51, 54, 57, 114, 130, 147, 148, 210, 216, 233, 249, 264, 266], "logarithm": [136, 210, 255], "invers": [214, 215], "log_a": [214, 215], "iff": [214, 215], "log_3": [214, 215], "space9": [214, 215], "log_10": 214, "space10000": [214, 215], "log_": [214, 215], "log_2": [214, 215], "spaceso": [], "weird": [30, 39, 71, 79, 94, 119, 143, 161, 177, 181, 196, 214, 215, 238, 262, 279, 306, 310], "space0": 215, "undefin": [214, 215], "ln": [210, 214, 215, 216], "space1": [214, 215], "rearang": [214, 215], "ln_e": [214, 215], "log_x": [214, 215], "32": [1, 26, 50, 67, 100, 114, 127, 135, 149, 157, 162, 169, 202, 214, 215, 233, 246, 254, 267, 275, 280, 297], "space32": [214, 215], "log_5": [], "125": [92, 160, 194, 214, 215, 278], "log_5x": [214, 215], "space7": [214, 215], "498": [], "807354922057604": [214, 215], "euler": 210, "logarthim": 210, "prelud": 210, "27": [1, 2, 6, 10, 39, 41, 50, 54, 58, 79, 81, 114, 116, 127, 130, 141, 156, 158, 164, 169, 182, 210, 233, 235, 246, 249, 260, 276, 286, 297, 311], "spacex": [], "spacelog_a": [], "12x": [214, 215], "9x": [214, 215], "log_b": [214, 215], "throw": [37, 77, 95, 96, 107, 130, 133, 139, 152, 156, 157, 172, 186, 197, 198, 214, 215, 225, 249, 252, 258, 270, 274, 275, 301, 315], "equival": [1, 4, 28, 41, 44, 47, 50, 52, 69, 81, 85, 87, 102, 103, 123, 130, 136, 137, 146, 148, 157, 160, 161, 168, 170, 171, 186, 204, 205, 214, 215, 242, 249, 255, 256, 265, 266, 275, 278, 279, 296, 298, 299, 315], "error": [2, 4, 6, 7, 15, 16, 24, 26, 27, 28, 30, 33, 34, 44, 46, 47, 52, 54, 55, 63, 65, 67, 68, 69, 71, 73, 74, 85, 86, 87, 100, 104, 113, 114, 117, 127, 128, 131, 136, 137, 138, 143, 148, 152, 158, 161, 164, 169, 170, 172, 174, 175, 177, 182, 186, 202, 206, 214, 215, 232, 233, 236, 246, 247, 250, 255, 256, 257, 262, 266, 270, 276, 279, 286, 297, 298, 301, 303, 304, 306, 311, 315], "q": [30, 47, 71, 87, 113, 132, 148, 168, 232, 251, 266, 296], "land": [1, 4, 9, 50, 52, 57, 119, 164, 171, 238, 286, 299], "proposit": 210, "_2": [10, 58, 126, 245], "init_print": [10, 58, 126, 170, 214, 245, 298], "eval": [24, 30, 65, 71, 91, 193], "docstr": [30, 39, 71, 79, 129, 133, 140, 158, 170, 175, 186, 248, 252, 259, 276, 298, 304, 315], "specifi": [1, 10, 24, 27, 30, 39, 41, 44, 47, 48, 50, 58, 65, 68, 71, 79, 81, 85, 87, 88, 91, 99, 100, 106, 107, 115, 116, 123, 124, 126, 130, 131, 132, 134, 137, 144, 146, 147, 148, 152, 157, 158, 161, 165, 166, 169, 172, 175, 176, 177, 180, 182, 193, 201, 202, 224, 225, 234, 235, 242, 243, 245, 249, 250, 251, 253, 256, 263, 264, 265, 266, 270, 275, 276, 279, 287, 288, 297, 301, 304, 305, 306, 309, 311], "builtin_function_or_method": [], "210340371976184": 214, "29": [2, 3, 6, 51, 54, 100, 156, 202, 210, 274], "ac": [179, 210, 308], "logreview": 210, "rework": [3, 11, 12, 16, 33, 51, 59, 60, 63, 73, 134, 146, 147, 175, 186, 210, 216, 253, 264, 265, 304, 315], "init": [6, 24, 34, 42, 47, 54, 65, 74, 82, 87, 91, 169, 193, 297], "signatur": [12, 30, 34, 60, 71, 74, 129, 139, 161, 210, 248, 258, 279], "arg": [29, 70, 132, 140, 157, 164, 251, 259, 275, 286], "explan": [99, 129, 171, 184, 201, 248, 299, 313], "princip": [123, 242], "johnlockwood": [4, 28, 52, 69, 91, 133, 134, 157, 164, 166, 182, 193, 252, 253, 275, 286, 288, 311], "io": [3, 5, 11, 29, 39, 51, 53, 59, 70, 79, 96, 97, 100, 114, 116, 117, 120, 123, 146, 151, 161, 184, 198, 199, 202, 233, 235, 236, 239, 242, 265, 269, 279, 313], "venv": [2, 5, 13, 28, 42, 45, 53, 61, 69, 82, 84, 92, 93, 95, 97, 100, 117, 118, 122, 128, 149, 153, 156, 159, 182, 194, 195, 197, 199, 202, 236, 237, 241, 247, 267, 271, 274, 277, 311], "lib": [11, 24, 28, 47, 59, 65, 69, 87, 122, 124, 134, 153, 157, 182, 241, 243, 253, 271, 275, 311], "python3": [5, 24, 28, 42, 53, 65, 69, 82, 91, 97, 100, 118, 123, 128, 134, 153, 157, 182, 193, 199, 202, 237, 242, 247, 253, 271, 275, 311], "packag": [2, 5, 6, 8, 10, 11, 14, 16, 25, 26, 30, 34, 37, 41, 42, 43, 46, 47, 53, 54, 56, 58, 59, 62, 63, 66, 67, 71, 74, 77, 81, 82, 83, 86, 87, 91, 92, 94, 99, 100, 101, 106, 110, 113, 114, 116, 117, 120, 121, 123, 126, 128, 132, 134, 144, 148, 150, 156, 157, 159, 160, 164, 168, 170, 171, 175, 178, 179, 181, 183, 186, 193, 194, 196, 201, 202, 203, 224, 229, 232, 233, 235, 239, 240, 242, 245, 247, 251, 253, 263, 266, 268, 274, 275, 277, 278, 286, 296, 298, 299, 304, 307, 308, 310, 312, 315], "py": [1, 6, 28, 30, 39, 46, 47, 50, 54, 69, 71, 79, 86, 87, 93, 100, 123, 127, 133, 134, 138, 152, 153, 157, 169, 174, 175, 177, 181, 182, 184, 195, 202, 210, 242, 246, 252, 253, 257, 270, 271, 275, 297, 303, 304, 306, 310, 311, 313], "functionclass": [], "subclass": [30, 34, 71, 74, 162, 169, 280, 297], "ttupl": [], "expr": [10, 58, 126, 156, 245, 274], "_singular": [], "complexinfin": [], "def": [1, 6, 26, 27, 28, 30, 33, 34, 39, 40, 46, 47, 50, 54, 67, 68, 69, 71, 73, 74, 79, 80, 86, 87, 93, 95, 100, 105, 115, 123, 127, 129, 130, 131, 133, 137, 138, 139, 141, 144, 146, 148, 153, 157, 160, 161, 165, 169, 172, 175, 176, 186, 195, 197, 202, 223, 234, 242, 246, 248, 249, 250, 252, 256, 257, 258, 260, 263, 265, 266, 271, 275, 278, 279, 287, 297, 301, 304, 305, 315], "fdiff": [], "argindex": [], "argumentindexerror": [], "classmethod": [34, 74, 144, 263], "cl": [144, 170, 263, 298], "accumbound": [], "setexpr": [], "sympifi": [], "nan": [27, 68, 105, 223], "handl": [2, 10, 11, 15, 16, 24, 25, 26, 28, 37, 41, 48, 58, 59, 63, 65, 66, 67, 69, 77, 81, 88, 90, 93, 94, 101, 102, 104, 106, 114, 123, 126, 129, 138, 139, 141, 151, 152, 160, 164, 165, 172, 177, 178, 186, 192, 195, 196, 203, 204, 206, 224, 233, 242, 245, 248, 257, 258, 260, 269, 270, 278, 286, 287, 301, 306, 307, 314, 315], "extract": [1, 41, 50, 81, 95, 99, 100, 106, 143, 157, 166, 197, 201, 202, 224, 262, 275, 288], "expand_log": [], "mul": [], "valueerror": [41, 81, 186, 315], "exp1": [], "is_numb": [28, 69], "is_zero": [], "elif": [26, 67, 134, 139, 157, 186, 253, 258, 275, 315], "negativeinfin": [], "is_rat": [], "is_pow": [], "is_extended_r": [], "isinst": [28, 69, 144, 263], "match_real_imag": [], "is_compar": [], "expand_mul": [], "fals": [1, 7, 10, 27, 30, 34, 37, 40, 45, 48, 50, 55, 58, 68, 71, 74, 77, 80, 84, 88, 92, 93, 99, 100, 101, 106, 113, 115, 124, 126, 127, 129, 130, 137, 139, 144, 152, 157, 158, 161, 164, 166, 168, 169, 170, 176, 177, 194, 195, 201, 202, 203, 224, 232, 234, 243, 245, 246, 248, 249, 256, 258, 263, 270, 275, 276, 279, 286, 288, 296, 297, 298, 305, 306], "exp_polar": [], "unpolarifi": [], "min": [3, 10, 26, 48, 51, 58, 67, 88, 115, 126, 234, 245], "is_posit": [], "_eval_func": [], "is_neg": [], "autoexpand": [], "pow": [170, 298], "3351": [], "is_add": [], "coeff": [], "as_coeffici": [], "is_nonneg": [], "is_algebra": [], "arg_": [], "as_independ": [], "as_add": [], "is_real": [], "ratsimp": [], "t1": [1, 10, 50, 58, 126, 160, 245, 278], "atan_t": [], "_log_atan_t": [], "modulu": [], "ab": [129, 248], "as_base_exp": [], "staticmethod": [34, 74, 144, 263], "cacheit": [], "taylor_term": [], "previous_term": [], "taylor": [], "seri": [2, 3, 6, 10, 11, 12, 14, 17, 27, 30, 39, 45, 47, 48, 51, 54, 58, 59, 60, 62, 64, 68, 71, 79, 84, 87, 88, 95, 101, 102, 103, 106, 110, 111, 115, 119, 126, 130, 135, 136, 148, 150, 152, 156, 160, 162, 164, 166, 174, 176, 197, 203, 204, 205, 224, 229, 230, 234, 238, 245, 249, 254, 255, 266, 268, 270, 274, 278, 280, 286, 288, 303, 305], "expans": [47, 87], "powsimp": [], "_eval_expand_log": [], "concret": [34, 74, 134, 137, 176, 253, 256, 305], "len": [3, 7, 10, 27, 30, 33, 37, 39, 47, 51, 55, 58, 68, 71, 73, 77, 79, 87, 92, 106, 114, 119, 126, 135, 136, 139, 141, 143, 146, 147, 158, 162, 172, 194, 224, 233, 238, 245, 254, 255, 258, 260, 262, 264, 265, 276, 280, 301], "is_integ": [], "perfect_pow": [], "logarg": [], "expand": [134, 253], "prime": [6, 8, 54, 56], "factorint": [], "val": [47, 87, 105, 129, 160, 175, 223, 248, 278, 304], "is_mul": [], "nonpo": [], "is_polar": [], "append": [4, 6, 28, 46, 52, 54, 69, 86, 101, 114, 135, 137, 146, 147, 153, 176, 182, 203, 233, 254, 256, 264, 265, 271, 305, 311], "negativeon": [], "is_nonposit": [], "_eval_simplifi": [], "kwarg": [140, 259], "inversecombin": [], "unevalu": [], "as_real_imag": [], "abc": [10, 30, 34, 58, 71, 74, 126, 160, 184, 245, 278, 313], "sarg": [], "sarg_ab": [], "sarg_arg": [], "_eval_is_r": [], "fuzzy_not": [], "_eval_is_algebra": [], "_eval_is_extended_r": [], "is_extended_posit": [], "_eval_is_complex": [], "z": [10, 58, 94, 113, 126, 130, 162, 170, 176, 196, 232, 245, 249, 280, 298, 305], "fuzzy_and": [], "is_complex": [], "_eval_is_finit": [], "is_finit": [], "_eval_is_extended_posit": [], "_eval_is_zero": [], "_eval_is_extended_nonneg": [], "is_extended_nonneg": [], "_eval_nseri": [], "logx": [], "cdir": [], "label": [1, 3, 7, 11, 26, 28, 37, 48, 50, 51, 55, 59, 67, 69, 77, 88, 95, 97, 103, 106, 116, 131, 161, 164, 166, 176, 187, 197, 199, 205, 224, 235, 250, 279, 286, 288, 305, 316], "logcombin": [], "dummi": [], "wild": [124, 243], "xxx": [], "assumpt": [34, 74], "coeff_exp": [], "make_arg": [], "leadterm": [], "todo": [36, 76, 123, 131, 242, 250], "notimplementederror": [], "poleerror": [], "is_ord": [], "removeo": [], "as_leading_term": [], "getn": [], "_re": [], "logflag": [], "power_exp": [], "power_bas": [], "multinomi": [], "could_extract_minus_sign": [], "d1": [40, 80], "d2": [40, 80], "ex": [113, 117, 123, 133, 161, 232, 236, 242, 252, 279], "pterm": [], "co1": [], "pk": [], "nsimplifi": [], "im": [], "delta_funct": [], "heavisid": [], "enumer": [10, 58, 101, 126, 143, 203, 245, 262], "lseri": [], "as_coeff_expon": [], "_eval_as_leading_term": [], "refer": [4, 8, 9, 28, 30, 34, 37, 40, 42, 47, 52, 56, 57, 69, 71, 74, 77, 80, 82, 87, 90, 91, 102, 104, 113, 117, 119, 121, 123, 131, 134, 135, 136, 138, 143, 146, 147, 152, 157, 158, 160, 175, 177, 178, 192, 193, 204, 206, 217, 232, 236, 238, 240, 242, 250, 253, 254, 255, 257, 262, 264, 265, 270, 275, 276, 278, 304, 306, 307], "23592": [], "arg0": [], "remain": [6, 8, 24, 54, 56, 65, 92, 100, 104, 106, 148, 157, 160, 161, 169, 171, 175, 176, 182, 194, 202, 206, 214, 224, 266, 275, 278, 279, 297, 299, 304, 305, 311], "21034037197618": 214, "transcendent": 210, "tangl": 210, "puzzl": [39, 43, 44, 79, 83, 85, 97, 148, 177, 199, 210, 266, 306], "prof": [210, 215], "jan": [130, 178, 210, 249, 307], "chapter": [4, 43, 52, 83, 94, 164, 196, 210, 286], "trudeau": 210, "planar": 210, "logarithmsandexpon": [], "0x11ce48210": [], "0x11cbb4a50": [], "keyerror": [47, 87, 131, 250], "traceback": [100, 133, 137, 157, 202, 252, 256, 275], "evalf": [], "1481": [], "prec": [161, 279], "option": [1, 3, 4, 6, 7, 10, 11, 24, 25, 26, 28, 34, 37, 39, 43, 45, 47, 48, 50, 51, 52, 54, 55, 58, 59, 65, 66, 67, 69, 74, 77, 79, 83, 84, 87, 88, 89, 90, 92, 93, 95, 99, 102, 110, 120, 123, 126, 129, 130, 131, 132, 136, 137, 146, 147, 151, 153, 156, 157, 160, 161, 167, 170, 172, 175, 177, 178, 182, 186, 191, 192, 194, 195, 197, 201, 204, 229, 239, 242, 245, 248, 249, 250, 251, 255, 256, 264, 265, 269, 271, 274, 275, 278, 279, 289, 298, 301, 304, 306, 307, 311, 315], "1480": [], "rf": [11, 59, 164, 286], "evalf_t": [], "1482": [], "int": [11, 25, 28, 34, 40, 41, 59, 66, 69, 74, 80, 81, 91, 92, 114, 127, 129, 131, 136, 138, 139, 143, 146, 158, 169, 172, 175, 176, 193, 194, 233, 246, 248, 250, 255, 257, 258, 262, 265, 276, 297, 301, 304, 305], "attributeerror": [], "1749": [], "1727": [], "1728": [], "1729": [], "1745": [], "1746": [], "1747": [], "1748": [], "exact": [24, 28, 65, 69, 96, 120, 129, 130, 134, 152, 157, 188, 198, 239, 248, 249, 253, 270, 275, 317], "float": [26, 28, 30, 34, 39, 40, 67, 69, 71, 74, 79, 80, 92, 95, 115, 119, 127, 129, 130, 136, 139, 144, 146, 152, 158, 161, 162, 165, 166, 168, 175, 194, 197, 234, 238, 246, 248, 249, 255, 258, 263, 265, 270, 276, 279, 280, 287, 288, 296, 304], "1647": [], "evalfmixin": [], "maxn": [], "chop": [], "quad": 210, "verbos": [1, 4, 11, 33, 39, 50, 52, 59, 73, 79, 93, 94, 113, 127, 157, 160, 174, 175, 176, 195, 196, 232, 246, 275, 278, 303, 304, 305], "1645": [], "1646": [], "1648": [], "1649": [], "ordinari": [], "1650": [], "hasattr": [], "20291": [], "1487": [], "1485": [], "1486": [], "evalf_sub": [], "xe": [], "_eval_evalf": [], "1488": [], "1489": [], "attribut": [4, 28, 30, 31, 41, 48, 52, 69, 71, 72, 81, 88, 95, 106, 113, 116, 129, 130, 134, 138, 157, 164, 166, 176, 178, 197, 224, 232, 235, 248, 249, 253, 257, 275, 286, 288, 305, 307], "07944154167984": [], "00000000000000": [], "0x10f96ad10": [], "0x10fca3890": [], "moe": [137, 143, 147, 256, 262, 264], "hei": [13, 61, 93, 109, 143, 195, 228, 262], "0x12537cfd0": [], "0x1253b0890": [], "0x121332850": [], "0x1214c4ad0": [], "flalign": [], "0x129433410": [], "0x12949de10": [], "alignat": [], "alig": [], "0x111338850": [], "0x11137f110": [], "rac": [], "0x126132c90": [], "0x126131890": [], "polynomi": [170, 215, 298], "weekli": [15, 35, 75, 130, 150, 249, 268], "fun": [4, 5, 6, 7, 8, 10, 13, 14, 24, 30, 37, 43, 44, 45, 47, 52, 53, 54, 55, 56, 58, 61, 62, 65, 71, 77, 83, 84, 85, 87, 92, 93, 95, 97, 98, 101, 102, 104, 109, 110, 116, 121, 126, 130, 137, 143, 150, 151, 153, 164, 173, 176, 177, 184, 194, 195, 197, 199, 200, 203, 204, 206, 216, 228, 229, 235, 240, 245, 249, 256, 262, 268, 269, 271, 286, 302, 305, 306, 313], "background": [5, 9, 30, 46, 47, 53, 57, 71, 86, 87, 94, 95, 97, 100, 113, 123, 124, 128, 137, 153, 183, 184, 185, 196, 197, 199, 202, 232, 242, 243, 247, 256, 271, 312, 313], "weirder": [], "wow": [8, 28, 37, 45, 56, 69, 77, 84, 95, 110, 119, 129, 150, 197, 229, 238, 248, 268], "retro": [92, 103, 194, 205], "nancypi": 215, "nanci": [], "ax": [10, 16, 26, 27, 48, 58, 63, 67, 68, 88, 105, 106, 126, 160, 215, 216, 223, 224, 245, 278], "bx": 215, "exponsneti": 215, "pp": [37, 77, 210], "101": [127, 129, 210, 246, 248], "104": 210, "gpt": 210, "diamond": [3, 51, 116, 210, 235], "tomorrow": [130, 210, 249], "rough": [35, 75, 210], "portion": [1, 28, 39, 48, 50, 69, 79, 88, 96, 100, 130, 134, 157, 160, 165, 167, 171, 184, 198, 202, 210, 249, 253, 275, 278, 287, 289, 299, 313, 314], "mandatori": 210, "polici": [123, 210, 242], "brightspac": 210, "mat": 210, "271": 210, "emma": 210, "scothorn": 210, "rain": [7, 55, 210], "met": [4, 28, 52, 69, 135, 138, 142, 152, 173, 184, 210, 254, 257, 261, 270, 302, 313], "homework": [171, 210, 299], "cengag": 210, "webassign": [210, 216], "master": [2, 4, 5, 7, 11, 12, 43, 45, 47, 52, 53, 55, 59, 60, 83, 84, 87, 90, 101, 102, 103, 107, 131, 133, 136, 137, 138, 139, 153, 164, 171, 172, 173, 192, 203, 204, 205, 210, 217, 225, 250, 252, 255, 256, 257, 258, 271, 286, 299, 301, 302], "ahead": [5, 6, 12, 25, 33, 46, 53, 54, 60, 66, 73, 86, 89, 90, 91, 93, 96, 101, 123, 128, 130, 141, 146, 151, 160, 165, 169, 170, 171, 182, 184, 191, 192, 193, 195, 198, 203, 210, 242, 247, 249, 260, 265, 269, 278, 287, 297, 298, 299, 311, 313], "skill": [2, 8, 9, 43, 44, 45, 56, 57, 83, 84, 85, 97, 99, 101, 102, 103, 104, 107, 109, 112, 123, 131, 133, 135, 136, 139, 140, 142, 155, 162, 167, 171, 172, 187, 189, 199, 201, 203, 204, 205, 206, 210, 225, 228, 231, 242, 250, 252, 254, 255, 258, 259, 261, 273, 280, 289, 299, 301, 316, 318], "kerjigg": 210, "devic": [4, 52, 136, 164, 210, 255, 286], "smackerel": 210, "redo": [210, 216], "problemat": [5, 30, 47, 53, 71, 87, 100, 129, 136, 138, 157, 170, 202, 210, 248, 255, 257, 275, 298], "robert": 210, "stoll": 210, "thorni": 210, "troubleshot": 210, "nasti": [133, 210, 252], "yesterdai": [44, 85, 210], "box": [1, 4, 26, 46, 47, 50, 52, 67, 86, 87, 90, 92, 101, 105, 118, 136, 139, 178, 180, 192, 194, 203, 210, 223, 237, 255, 258, 307, 309], "halfwai": [12, 60, 90, 192, 210], "holidai": [17, 64, 110, 130, 131, 210, 229, 249, 250], "attend": [0, 9, 49, 57, 183, 210, 312], "coq": 210, "download": [6, 7, 8, 11, 16, 24, 25, 26, 27, 28, 34, 37, 41, 45, 46, 47, 48, 54, 55, 56, 59, 63, 65, 66, 67, 68, 69, 74, 77, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 115, 117, 124, 128, 132, 137, 159, 169, 170, 174, 177, 178, 180, 182, 191, 192, 193, 194, 195, 197, 210, 234, 236, 243, 247, 251, 256, 277, 297, 298, 303, 306, 307, 309, 311], "microsoft": [28, 69, 90, 91, 120, 160, 164, 184, 192, 193, 210, 239, 278, 286, 313], "365": [41, 81, 210], "boyer": 210, "russel": 210, "philosophi": [24, 65, 93, 107, 144, 195, 210, 225, 263], "peano": 210, "axiom": [8, 56, 100, 202, 210, 314], "51": [100, 105, 116, 156, 202, 210, 223, 235, 274], "52": [10, 58, 91, 123, 171, 193, 210, 242, 299], "euclid": [105, 210, 223], "golden": [137, 210, 256], "solid": [12, 60, 115, 133, 138, 171, 173, 210, 234, 252, 257, 299, 302], "interior": 210, "polygon": 210, "pentagon": 210, "540": 210, "108": [39, 79, 146, 162, 210, 265, 280], "arbitrari": [1, 26, 47, 50, 67, 87, 95, 105, 141, 172, 176, 182, 197, 217, 223, 260, 301, 305, 311], "integ": [10, 11, 30, 33, 40, 48, 58, 59, 71, 73, 80, 88, 105, 113, 116, 119, 126, 127, 129, 130, 136, 138, 139, 143, 146, 148, 152, 158, 162, 166, 169, 170, 172, 175, 217, 223, 232, 235, 238, 245, 246, 248, 249, 255, 257, 258, 262, 265, 266, 270, 276, 280, 288, 297, 298, 301, 304], "hmxnaqqijc": 217, "relist": 217, "tabset": 217, "dust": [8, 56], "java": [4, 6, 8, 9, 24, 30, 34, 40, 46, 52, 54, 56, 57, 65, 71, 74, 80, 86, 93, 101, 102, 111, 117, 120, 121, 123, 133, 139, 141, 143, 147, 154, 157, 160, 175, 178, 179, 181, 184, 188, 195, 203, 204, 230, 236, 239, 240, 242, 252, 258, 260, 262, 264, 272, 275, 278, 304, 307, 308, 310, 313, 317], "peasant": [8, 56], "factori": [8, 11, 56, 59, 175, 176, 179, 304, 305, 308], "trivial": [8, 44, 56, 85, 92, 93, 104, 107, 111, 129, 138, 160, 171, 194, 195, 206, 216, 225, 230, 248, 257, 278, 299], "pipelin": [1, 8, 50, 56, 110, 229], "kubernet": [8, 9, 37, 47, 56, 57, 77, 87, 93, 151, 195, 269], "api": [2, 3, 5, 8, 14, 15, 37, 39, 51, 53, 56, 62, 77, 79, 93, 94, 102, 104, 106, 113, 114, 122, 123, 133, 134, 146, 150, 151, 168, 169, 178, 184, 195, 196, 204, 206, 224, 232, 233, 241, 242, 252, 253, 265, 268, 269, 296, 297, 307, 313], "server": [1, 2, 8, 14, 26, 45, 47, 50, 54, 56, 62, 67, 84, 87, 93, 96, 97, 103, 112, 117, 123, 132, 133, 135, 155, 156, 180, 184, 195, 198, 199, 205, 231, 236, 242, 251, 252, 254, 273, 274, 309, 313], "nginx": [8, 56, 149, 180, 267, 309], "auth": [8, 47, 56, 87], "fusionauth": [8, 56], "gall": [8, 56], "fond": [8, 11, 56, 59, 97, 173, 184, 199, 302, 313], "invari": [8, 56, 107, 138, 225, 257], "pod": [8, 56], "simplest": [8, 11, 27, 30, 33, 56, 59, 68, 71, 73, 106, 115, 118, 123, 127, 134, 136, 137, 141, 175, 224, 234, 237, 242, 246, 253, 255, 256, 260, 304], "mod": [8, 56], "gorilla": [8, 56], "tasti": [8, 56, 129, 140, 248, 259], "morsel": [8, 56], "port": [6, 8, 25, 47, 54, 56, 66, 87, 96, 124, 127, 132, 136, 151, 157, 161, 180, 198, 243, 246, 251, 255, 269, 275, 279, 309], "oh": [2, 3, 8, 9, 10, 13, 37, 46, 51, 56, 57, 58, 61, 77, 86, 91, 119, 126, 137, 152, 162, 168, 193, 238, 256, 270, 280, 296], "horror": [8, 25, 56, 66, 91, 193], "hello": [4, 7, 8, 11, 13, 14, 15, 25, 30, 40, 46, 47, 52, 55, 56, 59, 61, 62, 66, 71, 80, 86, 87, 89, 95, 96, 101, 109, 123, 124, 127, 133, 136, 137, 140, 143, 146, 152, 153, 158, 172, 174, 175, 179, 182, 191, 197, 198, 203, 228, 242, 243, 246, 252, 255, 256, 259, 262, 265, 270, 271, 276, 301, 303, 304, 308, 311], "rocket": [8, 56, 107, 160, 225, 278], "mux": [8, 56], "newrout": [8, 56], "handlefunc": [8, 56], "responsewrit": [8, 56], "request": [6, 8, 9, 28, 30, 39, 46, 47, 54, 56, 57, 69, 71, 79, 86, 87, 93, 94, 100, 103, 115, 123, 124, 157, 160, 161, 164, 182, 186, 195, 196, 202, 205, 234, 242, 243, 275, 278, 279, 286, 311, 315], "byte": [4, 8, 29, 30, 52, 56, 70, 71, 114, 141, 146, 156, 157, 161, 162, 181, 233, 260, 265, 274, 275, 279, 280, 310], "listenandserv": [8, 56], "9000": [8, 56], "rout": [6, 8, 43, 47, 54, 56, 83, 87, 107, 225], "heck": [8, 43, 44, 56, 83, 85], "chanc": [8, 25, 39, 43, 56, 66, 79, 83, 95, 104, 114, 162, 182, 186, 197, 206, 233, 280, 311, 315], "honor": [4, 8, 17, 26, 47, 52, 56, 64, 67, 87, 93, 111, 118, 186, 195, 230, 237, 315], "messag": [7, 8, 25, 28, 37, 46, 47, 55, 56, 66, 69, 77, 86, 87, 95, 96, 104, 132, 133, 136, 137, 138, 141, 146, 148, 152, 164, 172, 174, 175, 186, 197, 198, 206, 251, 252, 255, 256, 257, 260, 265, 266, 270, 286, 301, 303, 304, 315], "docker": [1, 2, 4, 9, 24, 25, 28, 50, 52, 56, 57, 65, 66, 69, 91, 92, 93, 97, 101, 120, 123, 144, 151, 154, 170, 180, 184, 193, 194, 195, 199, 203, 239, 242, 263, 298, 309, 313], "dockerfil": [8, 25, 56, 66, 132, 164, 251, 286], "worri": [1, 3, 5, 8, 12, 24, 34, 47, 50, 51, 53, 56, 60, 65, 74, 87, 90, 91, 94, 95, 96, 104, 130, 132, 134, 143, 169, 187, 188, 192, 193, 196, 197, 198, 206, 249, 251, 253, 262, 297, 316, 317], "golang": [2, 56, 95, 114, 155, 176, 180, 197, 273, 305, 309], "workdir": [8, 47, 56, 87, 132, 164, 251, 286], "entrypoint": [8, 56, 132, 251], "grab": [8, 25, 26, 37, 56, 66, 67, 77, 92, 143, 146, 153, 157, 182, 194, 262, 265, 271, 275, 311], "latest": [5, 8, 16, 24, 25, 42, 47, 53, 56, 63, 65, 66, 82, 87, 91, 93, 95, 97, 109, 112, 118, 121, 123, 132, 149, 160, 164, 174, 182, 193, 195, 197, 199, 228, 231, 237, 240, 242, 251, 267, 278, 286, 303, 311], "dockerhub": [8, 25, 47, 56, 66, 87, 164, 286], "directori": [5, 6, 8, 11, 24, 25, 26, 28, 29, 36, 42, 46, 47, 53, 54, 56, 59, 65, 66, 67, 69, 70, 76, 82, 86, 87, 91, 93, 95, 96, 98, 99, 103, 106, 114, 117, 118, 120, 121, 132, 133, 153, 156, 157, 161, 168, 174, 178, 180, 181, 182, 193, 195, 197, 198, 200, 201, 205, 224, 233, 236, 237, 239, 240, 251, 252, 271, 274, 275, 279, 296, 303, 307, 309, 310, 311], "execut": [4, 6, 7, 8, 11, 17, 30, 39, 44, 47, 52, 54, 55, 56, 59, 64, 71, 79, 85, 87, 93, 94, 95, 99, 115, 117, 120, 123, 130, 135, 155, 157, 160, 161, 164, 169, 170, 174, 178, 181, 184, 195, 196, 197, 201, 234, 236, 239, 242, 249, 254, 273, 275, 278, 279, 286, 297, 298, 303, 307, 310, 313], "tag": [1, 8, 11, 25, 34, 35, 47, 50, 56, 59, 66, 74, 75, 87, 92, 132, 153, 164, 194, 251, 271, 286], "detach": [8, 47, 56, 87], "mode": [3, 6, 8, 10, 47, 51, 54, 56, 58, 87, 95, 126, 127, 164, 178, 197, 245, 246, 286, 307], "8080": [1, 8, 47, 50, 56, 87, 180, 309], "p8080": [8, 56], "browser": [1, 2, 8, 15, 25, 26, 39, 47, 50, 56, 66, 67, 79, 87, 93, 96, 97, 98, 120, 123, 124, 132, 136, 163, 177, 180, 195, 199, 200, 239, 242, 243, 251, 255, 285, 306, 309], "localhost": [1, 6, 8, 47, 50, 54, 56, 87, 97, 127, 180, 199, 246, 309], "curl": [8, 56, 117, 236], "exec": [8, 39, 56, 79], "forest": [8, 56], "happili": [8, 56], "greet": [8, 46, 56, 86, 110, 133, 137, 143, 152, 153, 175, 182, 229, 252, 256, 262, 270, 271, 304, 311], "visitor": [8, 56, 96, 198], "honestli": [8, 12, 30, 56, 60, 71, 94, 134, 155, 167, 196, 253, 273, 289], "toi": [8, 11, 28, 56, 59, 69, 99, 141, 201, 260], "store": [4, 5, 7, 8, 24, 25, 33, 34, 37, 47, 52, 53, 55, 56, 65, 66, 73, 74, 77, 87, 90, 93, 98, 99, 107, 114, 123, 127, 130, 131, 135, 141, 146, 147, 153, 156, 161, 162, 168, 175, 176, 178, 186, 192, 195, 200, 201, 225, 233, 242, 246, 249, 250, 254, 260, 264, 265, 271, 274, 279, 280, 296, 304, 305, 307, 315], "size": [7, 8, 10, 13, 26, 30, 39, 45, 47, 48, 55, 56, 58, 61, 67, 71, 79, 84, 87, 88, 99, 105, 106, 107, 110, 113, 114, 115, 116, 117, 123, 126, 136, 141, 143, 146, 148, 152, 156, 160, 162, 173, 178, 201, 223, 224, 225, 229, 232, 233, 234, 235, 236, 242, 245, 255, 260, 262, 265, 266, 270, 274, 278, 280, 302, 307], "id": [1, 2, 8, 9, 25, 28, 44, 45, 47, 48, 50, 56, 57, 66, 69, 84, 85, 87, 88, 99, 100, 101, 116, 123, 125, 129, 131, 132, 138, 140, 143, 151, 157, 160, 162, 164, 167, 169, 175, 184, 188, 201, 202, 203, 235, 242, 244, 248, 250, 251, 257, 259, 262, 269, 275, 278, 280, 286, 289, 297, 304, 313, 317], "67edf2eee9fa": [8, 56], "782mb": [8, 56], "gigabyt": [8, 13, 56, 61, 100, 156, 202, 274], "notwithstand": [8, 56, 184, 188, 313, 317], "havoc": [8, 56], "wreak": [8, 56], "anywai": [8, 37, 56, 77, 116, 131, 146, 160, 161, 180, 235, 250, 265, 278, 279, 309], "eleg": [2, 8, 47, 56, 87, 147, 161, 182, 264, 279, 311], "straightforward": [1, 5, 6, 8, 11, 16, 24, 33, 37, 39, 40, 47, 50, 53, 54, 56, 59, 63, 65, 73, 77, 79, 80, 87, 89, 93, 96, 97, 118, 126, 129, 133, 136, 141, 144, 147, 148, 149, 151, 152, 157, 160, 162, 168, 169, 170, 174, 176, 180, 191, 195, 198, 199, 237, 245, 248, 252, 255, 260, 263, 264, 266, 267, 269, 270, 275, 278, 280, 296, 297, 298, 303, 305, 309], "ship": [1, 8, 47, 50, 56, 87, 93, 102, 155, 178, 181, 186, 195, 204, 273, 307, 310, 315], "secur": [0, 8, 37, 47, 49, 56, 77, 87, 117, 129, 132, 153, 182, 236, 248, 251, 271, 311], "claus": [7, 8, 55, 56, 95, 133, 153, 161, 197, 252, 271, 279], "entir": [0, 1, 3, 7, 8, 24, 39, 47, 49, 50, 51, 55, 56, 65, 79, 87, 93, 99, 107, 115, 116, 124, 129, 156, 158, 161, 166, 170, 178, 183, 184, 187, 195, 201, 216, 225, 234, 235, 243, 248, 274, 276, 279, 288, 298, 307, 312, 313, 316], "modifi": [1, 4, 8, 11, 26, 28, 30, 34, 37, 39, 45, 47, 50, 52, 56, 59, 67, 69, 71, 74, 77, 79, 84, 87, 113, 116, 123, 124, 127, 129, 132, 138, 141, 156, 157, 161, 162, 172, 179, 182, 232, 235, 242, 243, 246, 248, 251, 257, 260, 274, 275, 279, 280, 301, 308, 311], "builder": [8, 11, 56, 59, 95, 153, 178, 182, 197, 271, 307, 311], "env": [4, 8, 24, 28, 47, 52, 56, 65, 69, 87, 117, 128, 132, 164, 236, 247, 251, 286], "goo": [8, 56, 114, 183, 233, 312], "goarch": [8, 56, 114, 233], "amd64": [8, 56, 114, 233], "cgo_en": [8, 56], "alpin": [8, 47, 56, 87], "mini": [0, 4, 8, 15, 28, 49, 52, 56, 69, 92, 117, 122, 136, 142, 174, 194, 236, 241, 255, 261, 303], "5ae087964c8d": [8, 56], "53": [2, 3, 8, 41, 51, 56, 81, 100, 116, 130, 156, 202, 235, 249], "2mb": [8, 56], "782": [8, 56], "mb": [8, 56, 123, 242], "59": [2, 8, 9, 41, 45, 56, 57, 81, 84, 116, 130, 156, 235, 249], "gorilla2": [8, 56], "p9000": [8, 56], "anywher": [3, 8, 24, 51, 56, 65, 91, 118, 141, 143, 151, 153, 171, 193, 237, 260, 262, 269, 271, 299], "stood": [8, 56, 184, 313], "clean": [2, 8, 9, 11, 12, 14, 17, 28, 33, 36, 37, 47, 56, 57, 59, 60, 62, 64, 69, 73, 76, 77, 87, 91, 99, 100, 104, 138, 143, 157, 164, 166, 181, 184, 193, 201, 202, 206, 257, 262, 275, 286, 288, 310, 313], "rm": [8, 11, 47, 56, 59, 87, 132, 164, 181, 251, 286, 310], "vert": 216, "asmyptot": 216, "nequal": [], "neq": 216, "consid": [0, 4, 6, 9, 10, 11, 17, 24, 30, 33, 34, 39, 40, 43, 44, 48, 49, 52, 54, 57, 58, 59, 64, 65, 71, 73, 74, 79, 80, 83, 85, 88, 91, 94, 100, 103, 107, 113, 117, 120, 126, 129, 130, 133, 138, 141, 142, 146, 147, 148, 152, 155, 156, 157, 158, 160, 161, 167, 168, 170, 171, 175, 176, 177, 178, 179, 181, 186, 193, 196, 202, 205, 216, 225, 232, 236, 239, 245, 248, 249, 252, 257, 260, 261, 264, 265, 266, 270, 273, 274, 275, 276, 278, 279, 289, 296, 298, 299, 304, 305, 306, 307, 308, 310, 314, 315], "6x": 216, "01": [2, 11, 28, 41, 45, 47, 59, 69, 81, 84, 87, 91, 116, 130, 156, 187, 193, 216, 235, 249, 316], "005": 216, "spaceg": [], "limlimits_": [], "limits_": 216, "conjug": 216, "74": [123, 156, 216, 242, 274], "retri": 210, "5x": [177, 216, 306], "8x": 216, "dy": 216, "dx": 216, "unclear": [39, 79, 104, 121, 129, 138, 144, 147, 172, 176, 206, 216, 240, 248, 257, 263, 264, 301, 305], "4x": [156, 216, 274], "4xh": 216, "2h": 216, "3h": 216, "worst": [156, 186, 188, 216, 274, 315, 317], "sove": 216, "1st": [130, 158, 216, 249, 276], "indent": [7, 34, 55, 74, 135, 147, 161, 174, 184, 188, 254, 264, 279, 303, 313, 317], "substitu": 216, "secant": 216, "pandoc": [], "choke": [], "successfulli": [24, 44, 65, 85, 100, 115, 117, 118, 123, 157, 161, 182, 202, 216, 234, 236, 237, 242, 275, 279, 311], "revisit": [10, 26, 36, 45, 58, 67, 76, 84, 126, 164, 170, 178, 183, 210, 245, 286, 298, 307, 312], "999": [130, 143, 216, 249, 262], "99": [41, 45, 81, 84, 90, 95, 107, 115, 131, 139, 146, 147, 158, 171, 186, 192, 197, 216, 225, 234, 250, 258, 264, 265, 276, 299, 315], "5t": 216, "625": 216, "heavi": [6, 35, 39, 47, 54, 75, 79, 87, 94, 160, 161, 164, 196, 216, 278, 279, 286], "mass": [116, 216, 235], "particl": 216, "casei": 210, "slope": [105, 216, 223], "langent": [], "93": [1, 50, 129, 131, 162, 210, 248, 250, 280], "ba": 210, "sheet": [2, 17, 24, 64, 65, 97, 171, 199, 210, 299, 314], "bisector": 210, "supplement": [171, 210, 299], "apart": [45, 84, 135, 210, 254], "runner": [179, 308], "parameter": [179, 308], "arrai": [2, 3, 10, 33, 39, 40, 45, 47, 51, 58, 73, 79, 80, 84, 87, 93, 95, 97, 102, 105, 106, 116, 119, 121, 124, 126, 127, 134, 141, 143, 147, 148, 152, 155, 156, 157, 160, 162, 165, 166, 176, 177, 179, 184, 195, 197, 199, 204, 223, 224, 235, 238, 240, 243, 245, 246, 253, 260, 262, 264, 266, 270, 273, 274, 275, 278, 280, 287, 288, 305, 306, 308, 313], "grain": [11, 39, 59, 79, 106, 144, 179, 224, 263, 308], "author": [3, 11, 14, 15, 17, 34, 45, 47, 51, 59, 62, 64, 74, 84, 87, 92, 93, 96, 97, 99, 101, 107, 119, 123, 127, 128, 129, 130, 137, 152, 153, 155, 162, 179, 185, 194, 195, 198, 199, 201, 203, 225, 238, 242, 246, 247, 248, 249, 256, 270, 271, 273, 280, 308], "websit": [5, 15, 16, 26, 53, 63, 67, 99, 102, 103, 109, 116, 120, 123, 124, 128, 138, 141, 144, 153, 160, 161, 171, 174, 179, 182, 185, 201, 204, 205, 228, 235, 239, 242, 243, 247, 257, 260, 263, 271, 278, 279, 299, 303, 308, 311], "newcom": [3, 9, 17, 34, 43, 44, 51, 57, 64, 74, 83, 85, 93, 101, 102, 103, 107, 110, 128, 133, 135, 139, 143, 146, 149, 150, 175, 179, 187, 188, 195, 203, 204, 205, 225, 229, 247, 252, 254, 258, 262, 265, 267, 268, 304, 308, 316, 317], "inclin": [14, 62, 100, 138, 151, 171, 179, 202, 257, 269, 299, 308], "intellij": [120, 179, 239, 308], "eclips": [93, 120, 179, 195, 239, 308], "pain": [24, 65, 100, 179, 187, 202, 308, 316], "market": [2, 12, 36, 45, 60, 76, 84, 93, 102, 103, 120, 123, 136, 142, 173, 179, 195, 204, 205, 239, 242, 255, 261, 308], "keyword": [7, 27, 55, 68, 93, 94, 123, 133, 135, 136, 140, 141, 146, 152, 166, 179, 195, 196, 242, 252, 254, 255, 259, 260, 265, 270, 288, 308], "bingo": [179, 308], "stick": [25, 66, 105, 121, 137, 156, 179, 223, 240, 256, 274, 308], "favor": [3, 51, 153, 157, 178, 179, 184, 271, 275, 307, 308, 313], "cent": [123, 179, 242, 308], "bean": [100, 144, 179, 202, 263, 308], "gave": [11, 37, 41, 44, 59, 77, 81, 85, 104, 107, 129, 132, 147, 151, 165, 179, 206, 225, 248, 251, 264, 269, 287, 308], "migrat": [1, 14, 47, 50, 62, 87, 93, 151, 179, 183, 184, 195, 269, 308, 312, 313], "pom": [179, 308], "contextconfigur": [179, 308], "annot": [1, 26, 39, 50, 67, 79, 129, 161, 169, 175, 179, 248, 279, 297, 304, 308], "compil": [6, 7, 17, 25, 54, 55, 64, 66, 93, 94, 117, 121, 130, 133, 150, 151, 155, 156, 157, 164, 174, 175, 177, 179, 182, 184, 188, 195, 196, 236, 240, 249, 252, 268, 269, 273, 274, 275, 286, 303, 304, 306, 308, 311, 313, 317], "springframework": [179, 308], "context": [2, 10, 11, 24, 28, 35, 37, 39, 45, 47, 58, 59, 65, 69, 75, 77, 79, 84, 87, 94, 95, 100, 101, 119, 120, 123, 126, 129, 133, 141, 151, 152, 157, 160, 162, 169, 176, 179, 182, 184, 196, 197, 202, 203, 238, 239, 242, 245, 248, 252, 260, 269, 270, 275, 278, 280, 297, 305, 308, 311, 313], "assert": [11, 30, 39, 40, 46, 59, 71, 79, 80, 86, 93, 119, 133, 139, 141, 153, 172, 175, 179, 195, 238, 252, 258, 260, 271, 301, 304, 308], "asserttru": [179, 308], "config": [1, 4, 25, 28, 37, 47, 50, 52, 66, 69, 77, 87, 114, 127, 168, 178, 179, 180, 233, 246, 296, 307, 308, 309], "xml": [34, 74, 179, 308], "simpletest": [179, 308], "void": [29, 70, 143, 179, 262, 308], "sometest": [179, 308], "runwith": [179, 308], "abstracttestngspringcontexttext": [179, 308], "junit4": [179, 308], "springjunit4classrunn": [179, 308], "autowir": [179, 308], "applicationcontext": [179, 308], "userstori": [179, 308], "user": [1, 3, 5, 6, 10, 24, 27, 28, 30, 33, 34, 35, 37, 39, 42, 46, 47, 50, 51, 53, 54, 58, 65, 68, 69, 71, 73, 74, 75, 77, 79, 82, 86, 87, 91, 93, 96, 97, 98, 99, 100, 101, 102, 104, 106, 109, 117, 118, 123, 126, 128, 129, 130, 132, 136, 138, 141, 142, 146, 147, 148, 150, 151, 153, 156, 157, 158, 160, 164, 167, 168, 171, 174, 175, 176, 179, 181, 182, 193, 195, 198, 199, 200, 201, 202, 203, 204, 206, 224, 228, 236, 237, 242, 245, 247, 248, 249, 251, 255, 257, 260, 261, 264, 265, 266, 268, 269, 271, 274, 275, 276, 278, 286, 289, 296, 299, 303, 304, 305, 308, 310, 311], "contexttest": [179, 308], "suppresswarn": [179, 308], "springjavaautowiringinspect": [179, 308], "protect": [171, 179, 299, 308], "getbean": [179, 308], "workhors": [101, 176, 179, 203, 305, 308], "testusernotnul": [179, 308], "assertnotnul": [179, 308], "getus": [179, 308], "instanti": [1, 34, 50, 74, 129, 162, 179, 248, 280, 308], "null": [48, 88, 164, 172, 179, 286, 301, 308], "testuserstorynotfromcontext": [179, 308], "assertnul": [179, 308], "constructor": [3, 33, 34, 41, 51, 73, 74, 81, 99, 113, 119, 129, 131, 134, 146, 147, 157, 176, 177, 179, 186, 201, 232, 238, 248, 250, 253, 264, 265, 275, 305, 306, 308, 315], "testnonspringuserdefaultrol": [179, 308], "assertequ": [93, 179, 195, 308], "getrol": [179, 308], "overrod": [176, 179, 305, 308], "supergeniu": [179, 308], "presum": [24, 65, 92, 130, 175, 179, 194, 249, 304, 308], "wile": [179, 308], "coyot": [179, 308], "testuserroleisasexpect": [179, 308], "0x14672ecd0": [], "0x14676ac50": [], "rogrammin": [], "boot": [0, 2, 9, 49, 57, 103, 107, 167, 171, 205, 225, 289, 299], "camp": [0, 2, 9, 49, 57, 103, 107, 167, 171, 205, 225, 289, 299], "2019": [0, 2, 41, 49, 81, 116, 156, 235], "2020": [0, 3, 14, 41, 49, 51, 62, 81, 95, 117, 197, 236], "she": [0, 49, 110, 125, 171, 229, 244, 299], "substanti": [0, 6, 9, 15, 44, 47, 49, 54, 57, 85, 87, 100, 121, 157, 171, 202, 240, 275, 299], "unrel": [0, 27, 44, 49, 68, 85, 142, 183, 184, 261, 312, 313], "instructor": [0, 49, 119, 238], "curriculum": [0, 49], "peer": [0, 12, 49, 60, 103, 205], "admit": [0, 3, 13, 17, 25, 49, 51, 61, 64, 66, 97, 118, 124, 138, 155, 171, 199, 237, 243, 257, 273, 299], "skeptic": [0, 49], "profit": [0, 43, 49, 83], "season": [0, 17, 49, 64], "practition": [0, 9, 49, 57], "suspect": [0, 30, 34, 49, 71, 74, 94, 151, 196, 269], "cost": [0, 3, 9, 37, 41, 43, 45, 49, 51, 57, 77, 81, 83, 84, 93, 100, 108, 118, 122, 123, 139, 157, 164, 195, 202, 227, 237, 241, 242, 258, 275, 286], "salari": [0, 9, 49, 57], "quick": [0, 3, 7, 15, 17, 24, 30, 33, 45, 47, 49, 51, 55, 64, 65, 71, 73, 84, 87, 90, 92, 93, 97, 98, 105, 120, 130, 134, 135, 136, 153, 156, 162, 164, 167, 172, 174, 175, 176, 184, 192, 194, 195, 199, 200, 223, 239, 249, 253, 254, 255, 271, 274, 280, 286, 289, 301, 303, 304, 305, 313], "valid": [0, 30, 34, 39, 44, 45, 47, 49, 71, 74, 79, 84, 85, 87, 94, 95, 119, 123, 129, 130, 133, 135, 138, 144, 147, 152, 162, 167, 171, 175, 176, 185, 196, 197, 238, 242, 248, 249, 252, 254, 257, 263, 264, 270, 280, 289, 299, 304, 305], "unfortun": [0, 30, 39, 49, 71, 79, 93, 151, 160, 186, 195, 269, 278, 315], "behind": [0, 2, 4, 5, 9, 10, 25, 39, 40, 42, 49, 52, 53, 57, 58, 66, 79, 80, 82, 94, 101, 120, 121, 126, 129, 130, 132, 133, 141, 142, 160, 161, 167, 168, 171, 178, 196, 203, 239, 240, 245, 248, 249, 251, 252, 260, 261, 278, 279, 289, 296, 299, 307, 314], "paywal": [0, 49], "handbook": [0, 45, 49, 84], "caution": [0, 1, 25, 47, 49, 50, 66, 87, 91, 93, 137, 160, 193, 195, 256, 278], "op": [0, 49, 114, 233], "fund": [0, 49, 108, 227], "socialist": [0, 49], "mac": [0, 1, 2, 10, 11, 25, 28, 42, 47, 49, 50, 58, 59, 66, 69, 82, 87, 89, 90, 91, 92, 93, 97, 100, 117, 118, 122, 126, 128, 130, 132, 133, 157, 162, 164, 175, 178, 181, 182, 183, 191, 192, 194, 195, 199, 202, 236, 237, 241, 245, 247, 249, 251, 252, 275, 280, 286, 304, 307, 310, 311, 312], "latt": [0, 49], "capit": [0, 7, 34, 44, 47, 49, 55, 74, 85, 87, 113, 136, 148, 158, 232, 255, 266, 276], "bag": [0, 28, 49, 69, 157, 275], "sock": [0, 49, 161, 279], "american": [0, 49, 94, 196], "mercenari": [0, 49], "updat": [1, 2, 5, 14, 15, 25, 26, 35, 37, 47, 50, 53, 62, 66, 67, 75, 77, 87, 91, 92, 95, 103, 113, 114, 117, 123, 132, 158, 161, 164, 176, 177, 193, 194, 197, 205, 232, 236, 242, 251, 276, 279, 286, 305, 306], "warehous": [1, 9, 50, 57, 133, 178, 252, 307], "unlik": [1, 3, 7, 9, 15, 24, 28, 33, 34, 37, 39, 42, 44, 48, 50, 51, 55, 57, 65, 69, 73, 74, 77, 79, 82, 85, 88, 93, 95, 96, 97, 100, 102, 119, 120, 127, 130, 131, 134, 136, 137, 141, 144, 146, 148, 152, 155, 160, 164, 166, 170, 175, 176, 178, 180, 182, 195, 197, 198, 199, 202, 204, 238, 239, 246, 249, 250, 253, 255, 256, 260, 263, 265, 266, 270, 273, 278, 286, 288, 298, 304, 305, 307, 309, 311], "conveni": [1, 4, 24, 26, 28, 41, 42, 45, 47, 50, 52, 65, 67, 69, 81, 82, 84, 87, 94, 103, 116, 118, 120, 127, 129, 130, 131, 132, 134, 136, 138, 139, 143, 144, 157, 160, 164, 175, 176, 196, 205, 235, 237, 239, 246, 248, 249, 250, 251, 253, 255, 257, 258, 262, 263, 275, 278, 286, 304, 305], "bash": [1, 4, 11, 24, 28, 45, 47, 50, 52, 59, 65, 69, 84, 87, 91, 93, 101, 132, 134, 164, 181, 184, 193, 195, 203, 251, 253, 286, 310, 313], "script": [1, 4, 5, 6, 9, 11, 24, 25, 28, 34, 39, 45, 50, 52, 53, 54, 57, 59, 65, 66, 69, 74, 79, 84, 94, 95, 97, 101, 118, 122, 127, 128, 130, 132, 133, 134, 153, 159, 160, 164, 172, 174, 175, 178, 182, 184, 186, 188, 196, 197, 199, 203, 237, 241, 246, 247, 249, 251, 252, 253, 271, 277, 278, 286, 301, 303, 304, 307, 311, 313, 315, 317], "cloud": [1, 2, 45, 47, 50, 84, 87, 102, 109, 114, 120, 122, 123, 124, 157, 160, 184, 204, 228, 233, 239, 242, 243, 275, 278, 313], "amazon": [1, 50, 91, 114, 122, 123, 134, 150, 171, 180, 184, 186, 193, 233, 241, 242, 253, 268, 299, 309, 313, 315], "workflow": [1, 2, 5, 35, 39, 50, 53, 75, 79, 90, 96, 99, 101, 103, 117, 151, 167, 192, 198, 201, 203, 205, 236, 269, 289], "mwaa": [1, 50], "azur": [1, 9, 45, 50, 57, 84], "quickstart": [1, 47, 50, 87, 153, 271], "templat": [1, 14, 25, 34, 47, 50, 62, 66, 74, 87, 96, 119, 124, 128, 161, 181, 198, 238, 243, 247, 279, 310], "deploi": [1, 5, 47, 50, 53, 87, 96, 122, 123, 151, 180, 198, 241, 242, 269, 309], "postgresql": [1, 47, 50, 87, 101, 112, 180, 203, 231, 309], "encount": [1, 6, 14, 30, 34, 47, 50, 54, 62, 71, 74, 87, 90, 93, 96, 101, 119, 123, 132, 133, 143, 157, 160, 161, 169, 171, 176, 177, 182, 183, 186, 192, 195, 198, 203, 238, 242, 251, 252, 262, 275, 278, 279, 297, 299, 305, 306, 311, 312, 315], "address": [1, 11, 34, 37, 50, 59, 74, 77, 97, 129, 131, 138, 153, 162, 175, 180, 185, 186, 199, 248, 250, 257, 271, 280, 304, 309, 315], "wsl2": [1, 50], "sqlite": [1, 47, 50, 87, 154, 168, 169, 272, 296, 297], "binari": [1, 6, 47, 50, 54, 87, 92, 94, 107, 117, 123, 127, 132, 152, 153, 155, 170, 172, 178, 181, 182, 184, 194, 196, 225, 236, 242, 246, 251, 270, 271, 273, 298, 301, 307, 310, 311, 313], "miniconda": [1, 24, 50, 65, 92, 97, 128, 194, 199, 247], "pyenv": [1, 2, 4, 50, 52, 93, 121, 134, 157, 159, 182, 195, 240, 253, 275, 277, 311], "conda": [1, 2, 3, 4, 6, 13, 14, 16, 48, 50, 51, 52, 54, 61, 62, 63, 82, 88, 91, 97, 100, 127, 149, 157, 159, 160, 170, 175, 177, 193, 199, 202, 246, 267, 275, 277, 278, 298, 304, 306], "tradeoff": [1, 24, 50, 65, 104, 117, 130, 141, 144, 157, 206, 236, 249, 260, 263, 275], "airflowb": [1, 50], "pip": [1, 2, 3, 4, 5, 6, 13, 14, 25, 26, 28, 37, 39, 41, 45, 47, 48, 50, 51, 52, 53, 54, 61, 62, 66, 67, 69, 77, 79, 81, 84, 87, 88, 90, 92, 93, 95, 97, 99, 100, 106, 122, 123, 126, 127, 129, 130, 132, 157, 159, 160, 169, 170, 175, 177, 181, 192, 194, 195, 197, 199, 201, 202, 224, 241, 242, 245, 246, 248, 249, 251, 275, 277, 278, 297, 298, 304, 306, 310], "document": [1, 2, 4, 7, 9, 11, 12, 15, 24, 25, 30, 35, 37, 39, 40, 46, 47, 50, 52, 55, 57, 59, 60, 65, 66, 71, 75, 77, 79, 80, 86, 87, 91, 92, 93, 94, 95, 96, 97, 100, 104, 115, 117, 118, 120, 123, 127, 130, 131, 132, 136, 137, 140, 144, 146, 151, 152, 153, 156, 157, 161, 168, 169, 170, 174, 176, 177, 178, 180, 186, 193, 194, 195, 196, 197, 198, 199, 202, 206, 234, 236, 237, 239, 242, 246, 249, 250, 251, 255, 256, 259, 263, 265, 269, 270, 271, 274, 275, 279, 296, 297, 298, 303, 305, 306, 307, 309, 315], "gloss": [1, 50, 141, 171, 260, 299], "rush": [1, 50], "dirti": [1, 50, 97, 172, 175, 199, 301, 304], "standalon": [1, 17, 26, 50, 64, 67, 102, 103, 181, 204, 205, 310], "navig": [1, 24, 25, 28, 35, 47, 50, 65, 66, 69, 75, 87, 96, 97, 120, 123, 138, 140, 175, 198, 199, 239, 242, 257, 259, 304], "acycl": [1, 50], "word": [1, 5, 7, 9, 10, 28, 30, 33, 39, 44, 48, 50, 53, 55, 57, 58, 69, 71, 73, 79, 85, 88, 90, 91, 92, 93, 119, 131, 135, 137, 138, 141, 143, 147, 148, 149, 156, 158, 161, 166, 171, 176, 185, 192, 193, 194, 195, 238, 250, 254, 256, 257, 260, 262, 264, 266, 267, 274, 276, 279, 288, 299, 305], "paus": [1, 50, 90, 96, 192, 198], "tab": [1, 4, 7, 25, 28, 50, 52, 55, 66, 69, 96, 97, 98, 123, 133, 147, 198, 199, 200, 242, 252, 264], "promis": [1, 7, 16, 26, 33, 50, 55, 63, 67, 73, 94, 118, 119, 123, 138, 152, 175, 196, 237, 238, 242, 257, 270, 304], "popup": [1, 50], "wealth": [1, 30, 50, 71, 120, 157, 160, 239, 275, 278], "navbar": [1, 50], "grid": [1, 10, 26, 48, 50, 58, 67, 88, 105, 126, 223, 245], "statu": [1, 27, 50, 68, 95, 115, 123, 130, 157, 161, 186, 197, 234, 242, 249, 275, 279, 315], "graphic": [1, 4, 15, 48, 50, 52, 88, 93, 97, 103, 106, 120, 157, 160, 195, 199, 205, 224, 239, 275, 278], "print_dat": [1, 50], "sleep": [1, 6, 34, 44, 47, 50, 54, 74, 85, 87, 104, 113, 116, 130, 135, 141, 161, 176, 186, 206, 232, 235, 249, 254, 260, 279, 305, 315], "accomplish": [1, 24, 30, 33, 39, 43, 44, 47, 50, 65, 71, 73, 79, 83, 85, 87, 91, 96, 100, 101, 105, 130, 132, 134, 136, 137, 147, 157, 160, 161, 169, 176, 181, 182, 193, 198, 202, 203, 223, 249, 251, 253, 255, 256, 264, 275, 278, 279, 297, 305, 310, 311], "cryptic": [1, 28, 50, 69], "t2": [1, 10, 50, 58, 126, 245], "t3": [1, 50], "respectfulli": [1, 50], "bashoper": [1, 50], "task_id": [1, 50], "bash_command": [1, 50], "concis": [1, 17, 27, 50, 64, 68, 101, 127, 130, 131, 135, 136, 141, 143, 146, 147, 152, 161, 170, 172, 175, 203, 246, 249, 250, 254, 255, 260, 262, 264, 265, 270, 279, 298, 301, 304], "overload": [1, 40, 50, 80, 95, 130, 134, 148, 170, 197, 249, 253, 266, 298], "__lshift__": [1, 50], "__rshift__": [1, 50], "right_shift": [1, 50], "set_downstream": [1, 50], "clarifi": [1, 30, 50, 71, 127, 139, 160, 172, 246, 258, 278, 301], "leftshift": [1, 50], "rightshift": [1, 50], "consol": [1, 28, 29, 47, 50, 69, 70, 87, 92, 93, 96, 97, 107, 132, 133, 134, 148, 194, 195, 198, 199, 225, 251, 252, 253, 266], "alon": [1, 3, 9, 47, 50, 51, 57, 87, 91, 102, 107, 116, 128, 160, 173, 177, 193, 204, 225, 235, 247, 278, 302, 306], "easier": [1, 3, 7, 10, 14, 24, 26, 28, 33, 36, 37, 41, 44, 45, 50, 51, 55, 58, 62, 65, 67, 69, 73, 76, 77, 81, 84, 85, 89, 90, 93, 94, 95, 99, 100, 101, 102, 105, 106, 120, 126, 129, 130, 135, 138, 139, 144, 160, 161, 164, 175, 176, 182, 186, 189, 191, 192, 195, 196, 197, 201, 202, 203, 204, 223, 224, 239, 245, 248, 249, 254, 257, 258, 263, 278, 279, 286, 304, 305, 311, 315, 318], "pair": [1, 4, 50, 52, 107, 116, 131, 144, 161, 169, 177, 225, 235, 250, 263, 279, 297, 306], "retriev": [1, 33, 34, 47, 50, 73, 74, 87, 100, 123, 130, 131, 134, 137, 143, 147, 154, 161, 176, 202, 242, 249, 250, 253, 256, 262, 264, 272, 279, 305], "main_flow": [1, 50], "order_data": [1, 50], "order_summari": [1, 50], "total_order_valu": [1, 50], "quibbl": [1, 50], "snippet": [1, 28, 39, 50, 69, 79, 93, 130, 174, 184, 195, 249, 303, 313], "plain": [1, 11, 50, 59, 93, 98, 100, 105, 127, 129, 137, 160, 164, 172, 177, 184, 195, 200, 202, 223, 246, 248, 256, 278, 286, 301, 306, 313], "hardcod": [1, 50, 124, 243], "json": [1, 2, 6, 25, 26, 28, 34, 37, 50, 54, 66, 67, 69, 74, 77, 93, 94, 98, 99, 101, 122, 123, 134, 164, 169, 176, 182, 184, 195, 196, 200, 201, 203, 241, 242, 253, 286, 297, 305, 311, 313], "data_str": [1, 50], "1001": [1, 13, 50, 61], "301": [1, 50, 141, 183, 260, 312], "1002": [1, 50], "433": [1, 50], "1003": [1, 50], "502": [1, 50], "order_data_dict": [1, 50], "hood": [1, 39, 50, 79, 141, 161, 260, 279], "mechan": [1, 10, 24, 47, 50, 58, 65, 87, 101, 123, 126, 131, 133, 146, 147, 151, 155, 158, 161, 186, 203, 242, 245, 250, 252, 264, 265, 269, 273, 276, 279, 315], "xcom": [1, 50], "realist": [1, 50, 161, 279], "temporari": [1, 50, 157, 161, 178, 182, 186, 275, 279, 307, 311, 315], "parquet": [1, 2, 50, 100, 110, 202, 229], "filenam": [1, 4, 24, 30, 35, 39, 47, 50, 52, 65, 71, 75, 79, 87, 93, 114, 123, 133, 137, 146, 157, 161, 181, 184, 195, 233, 242, 252, 256, 265, 275, 279, 310, 313], "invok": [1, 30, 50, 71, 123, 242], "handi": [1, 3, 4, 24, 25, 39, 50, 51, 52, 65, 66, 79, 89, 91, 92, 99, 114, 118, 134, 143, 176, 191, 193, 194, 201, 233, 237, 253, 262, 305], "cli": [1, 4, 5, 25, 50, 52, 53, 66, 90, 103, 114, 122, 192, 205, 233, 241], "dag_nam": [1, 50], "task_nam": [1, 50], "aggress": [1, 6, 50, 54], "unrealist": [1, 50], "schedule_interv": [1, 50], "deprec": [1, 3, 50, 51, 107, 136, 150, 157, 175, 225, 255, 268, 275, 304], "start_dat": [1, 50], "pendulum": [1, 50], "datetim": [1, 2, 50, 101, 116, 127, 136, 146, 175, 203, 235, 246, 255, 265, 304], "tz": [1, 50], "utc": [1, 41, 50, 81, 130, 249], "catchup": [1, 50], "leverag": [1, 33, 50, 73, 156, 274], "cron": [1, 50], "asterisk": [1, 50, 113, 136, 137, 148, 232, 255, 256, 266], "spars": [1, 50, 133, 180, 252, 309], "statement": [1, 3, 7, 11, 28, 39, 47, 50, 51, 55, 59, 69, 79, 87, 93, 99, 101, 113, 123, 129, 132, 133, 135, 138, 141, 143, 147, 153, 154, 157, 165, 166, 168, 172, 184, 195, 201, 203, 232, 242, 248, 251, 252, 254, 257, 260, 262, 264, 271, 272, 275, 287, 288, 296, 301, 313], "echo": [1, 4, 5, 39, 50, 52, 53, 79, 91, 153, 157, 158, 164, 169, 193, 271, 275, 276, 286, 297], "custom": [1, 2, 5, 15, 16, 26, 30, 33, 34, 45, 47, 50, 53, 63, 67, 71, 73, 74, 84, 87, 92, 95, 101, 102, 106, 109, 116, 120, 123, 127, 130, 131, 133, 151, 155, 161, 176, 194, 197, 203, 204, 224, 228, 235, 239, 242, 246, 249, 250, 252, 269, 273, 279, 305], "logger": [1, 50], "simpler": [1, 4, 10, 31, 33, 34, 43, 50, 52, 58, 72, 73, 74, 83, 93, 94, 95, 101, 106, 113, 114, 118, 126, 141, 146, 160, 161, 165, 168, 195, 196, 197, 203, 224, 232, 233, 237, 245, 260, 265, 278, 279, 287, 296], "compat": [1, 11, 39, 47, 50, 59, 79, 87, 90, 91, 96, 101, 121, 130, 168, 170, 175, 177, 192, 193, 198, 203, 240, 249, 296, 298, 304, 306], "forward": [1, 4, 5, 10, 24, 43, 44, 50, 52, 53, 58, 65, 83, 85, 91, 93, 94, 95, 96, 110, 125, 136, 137, 141, 177, 180, 181, 185, 193, 195, 196, 197, 198, 229, 244, 255, 256, 260, 306, 309, 310], "motiv": [1, 43, 44, 50, 83, 85, 171, 173, 299, 302], "decor": [1, 34, 39, 40, 50, 74, 79, 80, 161, 169, 176, 279, 297, 305], "pathlib": [1, 50, 157, 275], "get_log_info": [1, 50], "logfil": [1, 50], "airflow_hom": [1, 50], "joinpath": [1, 50], "log_dir": [1, 50], "task_log": [1, 50], "log_fil": [1, 50], "scheduled_task": [1, 50], "setup": [1, 2, 5, 6, 39, 47, 50, 53, 54, 79, 87, 95, 97, 101, 128, 146, 149, 153, 156, 161, 164, 168, 177, 197, 199, 203, 247, 265, 267, 271, 274, 279, 286, 296, 306], "overkil": [1, 50, 132, 251], "mkdir": [1, 4, 11, 42, 50, 52, 59, 82, 97, 134, 153, 164, 182, 199, 253, 271, 286, 311], "prove_python_task": [1, 50], "echo_d": [1, 50], "log_dat": [1, 50], "conjunct": [1, 39, 50, 79, 143, 262], "xcomarg": [1, 50], "set_upstream": [1, 50], "cd": [1, 4, 5, 9, 11, 14, 28, 42, 50, 52, 53, 57, 59, 62, 69, 82, 91, 96, 97, 123, 153, 164, 182, 193, 198, 199, 242, 271, 286, 311], "toggl": [1, 28, 50, 69], "unpaus": [1, 50], "dags_are_paused_at_cr": [1, 50], "cfg": [1, 50, 153, 271], "wherev": [1, 12, 24, 37, 50, 60, 65, 77, 134, 171, 253, 299], "warn": [1, 5, 7, 10, 14, 50, 53, 55, 58, 62, 97, 100, 109, 118, 126, 130, 133, 138, 156, 161, 169, 178, 186, 199, 202, 228, 237, 245, 249, 252, 257, 274, 279, 297, 307, 315], "iter": [1, 12, 27, 34, 36, 39, 50, 60, 68, 74, 76, 79, 95, 101, 112, 113, 114, 129, 134, 137, 138, 139, 143, 146, 160, 161, 164, 174, 197, 203, 231, 232, 233, 248, 253, 256, 257, 258, 262, 265, 278, 279, 286, 303], "folder": [1, 2, 5, 11, 24, 25, 35, 36, 46, 50, 53, 59, 65, 66, 75, 76, 86, 89, 91, 94, 95, 117, 120, 134, 153, 157, 164, 174, 178, 191, 193, 196, 197, 236, 239, 271, 275, 286, 303, 307], "beg": [1, 11, 50, 59, 100, 129, 160, 202, 248, 278], "murkier": [1, 50], "suffici": [1, 11, 50, 59, 93, 103, 118, 123, 130, 134, 138, 147, 167, 178, 186, 195, 205, 237, 242, 249, 253, 257, 264, 289, 307, 315], "refresh": [1, 45, 50, 84, 98, 116, 131, 135, 136, 144, 164, 170, 200, 235, 250, 254, 255, 263, 286, 298], "ui": [1, 11, 26, 28, 50, 59, 67, 69, 109, 160, 188, 228, 278, 317], "dag_dir_list_interv": [1, 50], "300": [1, 6, 10, 37, 50, 54, 58, 77, 97, 105, 126, 143, 171, 199, 223, 245, 262, 299], "lower": [1, 7, 9, 39, 50, 55, 57, 79, 96, 106, 131, 143, 148, 152, 175, 182, 198, 224, 250, 262, 266, 270, 304, 311], "unnecessari": [1, 30, 42, 50, 71, 82, 138, 187, 257, 316], "arrang": [1, 3, 36, 50, 51, 76, 111, 131, 162, 230, 250, 280], "heirarch": [1, 50], "dag_id": [1, 50], "run_id": [1, 50], "altough": [1, 50], "sesns": [1, 50], "scheduled__2023": [1, 50], "03": [1, 2, 27, 41, 47, 50, 68, 81, 87, 95, 100, 116, 123, 136, 156, 175, 197, 202, 235, 242, 255, 304], "09t17": [1, 50], "00": [1, 6, 41, 50, 54, 81, 100, 106, 116, 123, 127, 130, 139, 156, 172, 202, 224, 235, 242, 246, 249, 258, 274, 301], "dropdown": [1, 26, 28, 37, 50, 67, 69, 77, 99, 113, 123, 181, 201, 232, 242, 310], "middl": [1, 2, 39, 48, 50, 79, 88, 107, 113, 232], "drill": [1, 6, 50, 54, 157, 165, 275, 287], "bottom": [1, 26, 37, 39, 43, 48, 50, 67, 77, 79, 83, 88, 97, 106, 123, 164, 199, 224, 242, 286], "subprocess": [1, 50], "75": [1, 7, 50, 55, 156, 274], "bin": [1, 5, 6, 24, 28, 45, 47, 48, 50, 53, 54, 65, 69, 84, 87, 88, 91, 92, 95, 97, 100, 106, 117, 118, 122, 128, 132, 153, 156, 157, 159, 164, 172, 178, 182, 193, 194, 197, 199, 202, 224, 236, 237, 241, 247, 251, 271, 274, 275, 277, 286, 301, 307, 311], "86": [1, 37, 50, 77], "mar": [1, 50, 91, 193], "est": [1, 50], "97": [1, 50, 131, 250], "exit": [1, 47, 50, 87, 90, 95, 114, 135, 157, 161, 164, 172, 182, 192, 197, 233, 254, 275, 279, 286, 301, 311], "taskinst": [1, 50], "1318": [1, 50], "execution_d": [1, 50], "20230310t183100": [1, 50], "20230310t183205": [1, 50], "end_dat": [1, 50], "grant": [1, 37, 50, 77, 138, 257], "beat": [1, 50, 160, 171, 278, 299], "seen": [1, 5, 7, 9, 11, 17, 34, 39, 47, 48, 50, 53, 55, 57, 59, 64, 74, 79, 87, 88, 91, 93, 94, 95, 106, 118, 120, 126, 129, 130, 131, 133, 134, 135, 138, 141, 144, 146, 147, 152, 156, 160, 161, 162, 166, 184, 186, 193, 195, 196, 197, 224, 237, 239, 245, 248, 249, 250, 252, 253, 254, 257, 260, 263, 264, 265, 270, 274, 278, 279, 280, 288, 313, 315], "quirki": [1, 3, 50, 51, 157, 165, 167, 275, 287, 289], "valuabl": [1, 5, 34, 50, 53, 74, 99, 104, 157, 161, 171, 201, 206, 275, 279, 299], "instal": [2, 3, 4, 5, 6, 10, 11, 14, 16, 25, 26, 28, 35, 37, 39, 41, 44, 45, 46, 48, 51, 52, 53, 54, 58, 59, 62, 63, 66, 67, 69, 75, 77, 79, 81, 82, 84, 85, 86, 88, 93, 95, 97, 99, 100, 101, 103, 104, 106, 110, 116, 120, 122, 123, 124, 126, 127, 129, 130, 132, 134, 139, 149, 150, 157, 159, 160, 164, 165, 168, 169, 175, 177, 180, 181, 183, 195, 197, 199, 201, 202, 203, 205, 206, 224, 229, 235, 239, 241, 242, 243, 245, 246, 248, 249, 251, 253, 258, 267, 268, 275, 277, 278, 286, 287, 296, 297, 304, 306, 309, 310, 312], "export": [3, 4, 11, 24, 25, 46, 51, 52, 59, 65, 66, 86, 91, 92, 93, 118, 121, 124, 134, 144, 193, 194, 195, 237, 240, 243, 253, 263], "dimension": [3, 26, 30, 45, 51, 67, 71, 84, 93, 94, 116, 119, 138, 146, 148, 150, 156, 160, 176, 177, 184, 195, 196, 235, 238, 257, 265, 266, 268, 274, 278, 305, 306, 313], "spreadsheet": [3, 44, 51, 85, 93, 116, 119, 148, 152, 195, 235, 238, 266, 270], "row": [3, 30, 37, 39, 45, 48, 51, 71, 77, 79, 84, 88, 93, 97, 113, 123, 148, 155, 156, 160, 161, 166, 168, 177, 178, 195, 199, 232, 242, 266, 273, 274, 278, 279, 288, 296, 306, 307], "columnar": [3, 51, 156, 274], "pro": [3, 15, 16, 51, 63, 101, 103, 144, 160, 173, 174, 203, 205, 263, 278, 302, 303], "con": [3, 15, 51, 101, 160, 174, 203, 278, 303], "depth": [3, 4, 9, 11, 26, 45, 51, 52, 57, 59, 67, 84, 93, 94, 101, 111, 116, 131, 150, 153, 160, 170, 182, 195, 196, 203, 230, 235, 250, 268, 271, 278, 298, 311], "weav": [3, 51], "apach": [2, 3, 6, 9, 51, 54, 57, 156, 274], "intern": [3, 4, 7, 33, 39, 51, 52, 55, 73, 79, 126, 127, 130, 131, 136, 137, 141, 144, 146, 150, 161, 162, 170, 178, 182, 245, 246, 249, 250, 255, 256, 260, 263, 265, 268, 279, 280, 298, 307, 311], "numpi": [2, 3, 5, 9, 15, 24, 26, 27, 37, 39, 45, 48, 51, 53, 57, 65, 67, 68, 77, 79, 84, 88, 93, 94, 95, 97, 100, 101, 105, 106, 115, 116, 117, 118, 119, 121, 123, 128, 141, 151, 160, 162, 164, 170, 171, 177, 178, 186, 195, 196, 197, 199, 202, 203, 223, 224, 234, 235, 236, 237, 238, 240, 242, 247, 260, 269, 278, 280, 286, 298, 299, 306, 307, 315], "mckinnei": [3, 45, 51, 84, 184, 313], "hate": [3, 4, 25, 51, 52, 66, 157, 186, 188, 275, 315, 317], "metal": [3, 51, 139, 258], "huge": [3, 5, 14, 24, 39, 44, 46, 51, 53, 62, 65, 79, 85, 86, 93, 94, 97, 116, 121, 123, 136, 160, 171, 176, 195, 196, 199, 235, 240, 242, 255, 278, 299, 305], "mover": [3, 51], "2008": [3, 30, 51, 71, 184, 313], "domin": [3, 51, 93, 103, 160, 184, 195, 205, 278, 313], "ecosystem": [3, 51, 93, 120, 127, 130, 160, 171, 182, 195, 239, 246, 249, 278, 299, 311], "nativ": [3, 13, 43, 47, 51, 61, 83, 87, 93, 94, 95, 113, 144, 151, 155, 157, 168, 170, 171, 176, 178, 183, 184, 195, 196, 197, 232, 263, 269, 273, 275, 296, 298, 299, 305, 307, 312, 313], "seaborn": [2, 3, 5, 14, 15, 24, 26, 45, 48, 51, 53, 62, 65, 67, 84, 88, 93, 97, 99, 110, 128, 156, 168, 178, 184, 195, 199, 201, 229, 247, 274, 296, 307, 313], "extens": [3, 4, 16, 24, 26, 28, 35, 39, 41, 47, 51, 52, 63, 65, 67, 69, 75, 79, 81, 87, 91, 92, 93, 94, 97, 106, 120, 121, 127, 129, 130, 133, 148, 149, 151, 160, 168, 170, 175, 177, 178, 181, 182, 184, 193, 194, 195, 196, 199, 224, 239, 240, 246, 248, 249, 252, 266, 267, 269, 278, 296, 298, 304, 306, 307, 310, 311, 313], "analys": [3, 51, 100, 202], "consider": [3, 9, 30, 51, 57, 71, 95, 96, 100, 119, 131, 134, 138, 144, 174, 186, 197, 198, 202, 238, 250, 253, 257, 263, 303, 315], "moreov": [3, 9, 11, 25, 26, 27, 47, 48, 51, 57, 59, 66, 67, 68, 87, 88, 94, 95, 97, 103, 105, 106, 115, 123, 129, 130, 135, 138, 143, 151, 160, 162, 164, 167, 177, 178, 184, 186, 196, 197, 199, 205, 223, 224, 234, 242, 248, 249, 254, 257, 262, 269, 278, 280, 286, 289, 306, 307, 313, 314, 315], "interoper": [3, 51, 144, 178, 184, 263, 307, 313], "pyarrow": [2, 3, 51, 100, 110, 178, 202, 229, 307], "jupyterlab": [3, 5, 24, 26, 42, 45, 51, 53, 65, 67, 82, 84, 96, 97, 98, 100, 156, 160, 168, 170, 198, 199, 200, 202, 274, 278, 296, 298], "alias": [3, 4, 24, 45, 51, 52, 65, 84, 91, 93, 113, 123, 157, 186, 193, 195, 232, 242, 275, 315], "pl": [3, 51, 100, 202], "pd": [3, 27, 37, 41, 48, 51, 68, 77, 81, 88, 99, 100, 106, 115, 116, 118, 166, 168, 201, 202, 224, 234, 235, 237, 288, 296], "np": [3, 10, 26, 27, 37, 39, 48, 51, 58, 67, 68, 77, 79, 88, 95, 100, 105, 106, 113, 115, 116, 118, 126, 146, 148, 160, 177, 197, 202, 223, 224, 232, 234, 235, 237, 245, 265, 266, 278, 306], "sn": [3, 45, 51, 84, 106, 156, 168, 224, 274, 296], "creation": [3, 47, 51, 87, 93, 99, 106, 160, 161, 195, 201, 224, 278, 279], "np_arrai": [3, 51, 146, 265], "arang": [3, 10, 37, 39, 51, 58, 77, 79, 113, 116, 126, 177, 232, 235, 245, 306], "reshap": [3, 37, 51, 77, 113, 116, 148, 160, 177, 232, 235, 266, 278, 306], "df_polars_from_numpi": [3, 51], "df_pandas_from_numpi": [3, 51], "column_": [3, 51], "raw": [3, 5, 6, 27, 39, 51, 53, 54, 68, 79, 94, 99, 116, 121, 146, 162, 166, 169, 170, 178, 184, 196, 201, 235, 240, 265, 280, 288, 297, 298, 307, 313], "overrid": [3, 6, 30, 34, 47, 51, 54, 71, 74, 87, 90, 93, 116, 137, 144, 161, 172, 186, 192, 195, 235, 256, 263, 279, 301, 315], "cosmet": [3, 51], "dispens": [3, 51, 171, 299], "altogeth": [3, 4, 12, 51, 52, 60, 94, 98, 151, 196, 200, 269], "style": [3, 11, 12, 26, 35, 45, 46, 51, 59, 60, 67, 75, 84, 86, 90, 92, 95, 104, 108, 111, 127, 129, 134, 152, 169, 176, 178, 184, 192, 194, 197, 206, 227, 230, 246, 248, 253, 270, 297, 305, 307, 313], "bracket": [3, 27, 35, 51, 68, 75, 95, 116, 131, 136, 141, 143, 146, 147, 166, 174, 175, 177, 197, 235, 250, 255, 260, 262, 264, 265, 288, 303, 304, 306], "zillow": [3, 45, 51, 84, 116, 235], "csv": [3, 27, 48, 51, 68, 88, 93, 95, 99, 100, 113, 155, 156, 160, 166, 168, 178, 184, 195, 197, 201, 202, 232, 273, 274, 278, 288, 296, 307, 313], "url": [3, 51, 97, 98, 116, 120, 127, 144, 153, 161, 162, 169, 175, 199, 200, 235, 239, 246, 263, 271, 279, 280, 297, 304], "zillowstat": [3, 51, 116, 235], "public_csv": [3, 51, 116, 235], "zhvi": [3, 51, 116, 235], "metro_zhvi_uc_sfrcondo_tier_0": [3, 51, 116, 235], "33_0": [3, 51, 116, 235], "67_sm_sa_month": [3, 51, 116, 235], "df_homes_panda": [3, 51], "read_csv": [3, 27, 48, 51, 68, 88, 99, 100, 115, 166, 201, 202, 234, 288], "df_homes_polar": [3, 51], "read_excel": [3, 37, 51, 77, 99, 201], "read_json": [3, 51], "read_parquet": [3, 51, 100, 156, 202, 274], "read_sql": [3, 51, 168, 296], "unavail": [3, 51, 157, 275], "dataset": [2, 3, 13, 14, 27, 51, 61, 62, 68, 100, 106, 109, 115, 116, 150, 156, 166, 168, 178, 202, 224, 228, 234, 235, 268, 274, 288, 296, 307], "df_pandas_penguin": [3, 51], "load_dataset": [3, 45, 51, 84, 106, 116, 156, 168, 224, 235, 274, 296], "penguin": [3, 51, 116, 235], "df_polars_penguin": [3, 51], "revert": [3, 51, 143, 262], "to_panda": [3, 51, 156, 274], "still_more_pandas_penguin": [3, 51], "dictionari": [2, 3, 10, 27, 28, 33, 39, 51, 58, 68, 69, 73, 79, 94, 100, 101, 119, 126, 129, 137, 139, 147, 152, 153, 157, 175, 176, 196, 202, 203, 238, 245, 248, 256, 258, 264, 270, 271, 275, 304, 305], "to_numpi": [3, 51], "to_dict": [3, 51], "dtype": [3, 27, 51, 68, 100, 113, 116, 166, 202, 232, 235, 288], "difficulti": [3, 6, 17, 51, 54, 64, 95, 101, 113, 117, 133, 171, 197, 203, 232, 236, 252, 299], "joi": [3, 51, 184, 313], "filter": [3, 26, 47, 51, 67, 87, 95, 100, 116, 141, 147, 156, 166, 197, 202, 235, 260, 264, 274, 288], "underscor": [3, 30, 33, 40, 51, 71, 73, 80, 136, 153, 177, 255, 271, 306], "api_panda": [3, 51], "dir": [2, 3, 4, 17, 29, 30, 51, 52, 64, 70, 71, 72, 92, 96, 134, 170, 194, 198, 253, 298], "startswith": [3, 30, 51, 71], "api_polar": [3, 51], "intersect": [3, 51, 176, 190, 305], "unstack": [3, 51, 95, 106, 197, 224], "pivot": [3, 51], "renam": [3, 4, 14, 46, 51, 52, 62, 86, 98, 200], "transpos": [3, 51, 113, 232], "pipe": [3, 42, 51, 82, 95, 157, 177, 197, 275, 306], "std": [3, 6, 11, 25, 51, 54, 59, 66, 113, 165, 232, 287], "quantil": [3, 51], "explod": [3, 51], "groupbi": [2, 3, 45, 51, 84, 100, 144, 158, 202, 263, 276], "appli": [3, 7, 9, 10, 11, 14, 26, 27, 34, 37, 39, 41, 45, 48, 51, 55, 57, 58, 59, 62, 67, 68, 74, 77, 79, 81, 84, 88, 103, 104, 105, 119, 123, 126, 130, 133, 139, 152, 154, 155, 156, 158, 160, 162, 169, 171, 173, 175, 187, 205, 206, 223, 238, 242, 245, 249, 252, 258, 270, 272, 273, 274, 276, 278, 280, 297, 299, 302, 304, 316], "median": [3, 27, 48, 51, 68, 88, 106, 115, 116, 224, 234, 235], "join": [3, 7, 51, 55, 95, 134, 137, 141, 154, 157, 158, 161, 162, 169, 176, 197, 253, 256, 260, 272, 275, 276, 279, 280, 297, 305], "iterrow": [3, 51], "var": [3, 10, 47, 51, 58, 87, 114, 115, 126, 233, 234, 245], "melt": [3, 51], "interpol": [3, 5, 51, 53, 136, 255], "fifti": [3, 43, 51, 83, 95, 171, 197, 299], "eight": [3, 4, 9, 51, 52, 57, 130, 152, 183, 249, 270, 312], "thirti": [3, 51, 101, 103, 164, 171, 203, 205, 286, 299], "aggreg": [3, 51, 146, 156, 265, 274], "expert": [2, 3, 9, 15, 29, 30, 44, 45, 51, 55, 57, 70, 71, 74, 84, 85, 95, 101, 104, 114, 115, 116, 130, 131, 134, 135, 137, 138, 141, 152, 155, 157, 158, 161, 162, 172, 175, 182, 197, 206, 233, 234, 249, 250, 253, 254, 256, 257, 260, 270, 273, 275, 276, 279, 280, 301, 304, 311], "disagre": [3, 51, 138, 257], "loc": [3, 27, 51, 68, 100, 106, 116, 202, 224, 235], "iloc": [3, 51, 100, 202], "price": [2, 3, 7, 27, 30, 45, 51, 55, 68, 71, 84, 92, 93, 114, 116, 120, 123, 139, 160, 194, 195, 233, 235, 239, 242, 258], "carat": [3, 51, 116, 235], "subset": [3, 51, 93, 101, 102, 113, 115, 116, 121, 130, 134, 143, 147, 152, 156, 169, 176, 177, 195, 203, 204, 232, 234, 235, 240, 249, 253, 262, 264, 270, 274, 297, 305, 306], "326": [3, 51], "327": [3, 51], "334": [3, 51, 160, 278], "335": [3, 51], "336": [3, 51], "337": [3, 51], "338": [3, 51], "proper": [3, 10, 27, 51, 58, 68, 126, 161, 245, 279], "_locationindex": [3, 51], "diamonds_polar": [3, 51], "800": [3, 51, 160, 278], "18800": [3, 51], "col": [3, 37, 45, 51, 77, 84, 100, 148, 166, 202, 266, 288], "reminisc": [3, 51, 157, 275], "sql": [2, 3, 9, 13, 37, 47, 51, 57, 61, 77, 87, 93, 95, 100, 150, 154, 160, 166, 169, 175, 184, 195, 197, 202, 268, 272, 278, 288, 297, 304, 313], "editor": [3, 7, 28, 37, 51, 55, 69, 77, 89, 90, 93, 97, 104, 123, 124, 125, 133, 144, 153, 164, 167, 174, 177, 184, 188, 191, 192, 195, 199, 206, 242, 243, 244, 252, 263, 271, 286, 289, 303, 306, 313, 317], "queri": [3, 6, 9, 13, 42, 45, 51, 54, 57, 61, 82, 84, 93, 94, 99, 100, 114, 134, 152, 154, 157, 169, 175, 188, 195, 196, 201, 202, 233, 253, 270, 272, 275, 297, 304, 317], "bashir": [3, 14, 51, 62, 150, 268], "alam": [3, 14, 27, 51, 62, 68, 150, 268], "accrual": [3, 51], "syntact": [3, 34, 51, 74, 94, 160, 196, 278], "exploratori": [3, 51, 124, 130, 165, 170, 243, 249, 287, 298], "parallel": [3, 6, 51, 54, 94, 100, 178, 196, 202, 307], "lazi": [3, 51, 129, 135, 141, 152, 248, 254, 260, 270], "eager": [3, 51, 151, 269], "pola": [3, 15, 51], "howcani": [3, 51], "selecting_data": [3, 51], "selecting_data_intro": [3, 51], "940": [3, 51, 126, 245], "boast": [3, 51, 93, 102, 103, 107, 149, 156, 160, 177, 195, 204, 205, 225, 267, 274, 278, 306], "outperform": [3, 51, 150, 160, 268, 278], "acquaint": [3, 51], "soon": [3, 12, 16, 44, 51, 60, 63, 85, 93, 95, 96, 103, 108, 114, 120, 136, 140, 151, 155, 170, 175, 182, 195, 197, 198, 205, 227, 233, 239, 255, 259, 269, 273, 298, 304, 311], "firmli": [4, 44, 52, 85, 137, 256], "advoc": [4, 52], "dinosaur": [4, 9, 52, 57, 103, 110, 205, 229], "interfac": [4, 11, 26, 33, 39, 52, 59, 67, 73, 79, 90, 92, 93, 94, 97, 99, 103, 106, 109, 121, 122, 123, 124, 130, 133, 134, 138, 146, 150, 152, 157, 160, 161, 162, 178, 184, 192, 194, 195, 196, 199, 201, 205, 224, 228, 240, 241, 242, 243, 249, 252, 253, 257, 265, 268, 270, 275, 278, 279, 280, 307, 313], "swipe": [4, 52], "star": [4, 52, 93, 96, 139, 141, 195, 198, 258, 260], "maco": [4, 52, 91, 95, 117, 134, 157, 170, 193, 197, 236, 253, 275, 298], "quaint": [4, 52], "rotari": [4, 52], "dial": [4, 52], "utterli": [4, 44, 52, 85], "adept": [4, 9, 52, 57], "cmd": [4, 25, 28, 35, 47, 52, 66, 69, 75, 87, 91, 97, 117, 132, 157, 164, 175, 193, 199, 236, 251, 275, 286, 304], "powershel": [4, 11, 52, 59, 123, 157, 184, 242, 275, 313], "worthi": [4, 52], "administr": [4, 9, 34, 45, 47, 52, 57, 74, 84, 87, 102, 123, 127, 157, 174, 184, 204, 242, 246, 275, 303, 313], "justic": [4, 10, 52, 58, 126, 171, 245, 299], "subfold": [4, 5, 52, 53, 91, 193], "autom": [2, 4, 11, 15, 25, 30, 34, 45, 47, 52, 59, 66, 71, 74, 84, 87, 99, 101, 123, 134, 135, 138, 142, 144, 149, 155, 161, 169, 172, 175, 176, 184, 187, 188, 201, 203, 242, 253, 254, 257, 261, 263, 267, 273, 279, 297, 301, 304, 305, 313, 316, 317], "launcher": [4, 28, 52, 69, 92, 97, 194, 199], "relev": [4, 28, 46, 47, 52, 69, 86, 87, 95, 96, 98, 99, 105, 157, 162, 166, 181, 197, 198, 200, 201, 223, 275, 280, 288, 310], "npm": [4, 25, 52, 66, 104, 122, 124, 206, 241, 243], "yarn": [4, 52], "agnost": [4, 52], "git": [2, 4, 5, 9, 11, 24, 25, 35, 36, 47, 52, 53, 57, 59, 65, 66, 75, 76, 87, 89, 91, 95, 104, 108, 118, 125, 128, 153, 157, 167, 175, 181, 193, 197, 206, 237, 244, 247, 271, 275, 289, 304, 310], "gh": [4, 5, 52, 53], "broad": [4, 26, 52, 67, 97, 172, 199, 301], "outlin": [4, 26, 36, 52, 67, 76, 89, 93, 95, 103, 104, 108, 125, 153, 167, 171, 175, 191, 195, 197, 205, 206, 227, 244, 271, 289, 299, 304], "whirlwind": [4, 28, 52, 69], "zsh": [4, 52, 91, 134, 193, 253], "subtl": [4, 52, 130, 136, 137, 141, 249, 255, 256, 260], "beginn": [2, 4, 5, 9, 15, 16, 24, 29, 30, 33, 34, 44, 45, 52, 53, 55, 57, 63, 65, 70, 71, 73, 74, 84, 85, 94, 95, 97, 102, 104, 110, 114, 118, 122, 127, 128, 130, 131, 133, 134, 135, 138, 139, 140, 141, 144, 151, 152, 157, 161, 162, 167, 171, 172, 174, 176, 182, 187, 196, 197, 199, 204, 206, 229, 233, 237, 241, 246, 247, 249, 253, 254, 257, 258, 259, 260, 263, 269, 270, 275, 279, 280, 289, 299, 301, 305, 311, 316], "wsl": [4, 47, 52, 87, 92, 133, 194, 252], "subsystem": [4, 52, 157, 275], "launchpad": [4, 52, 92, 174, 194, 303], "iterm": [4, 52], "icon": [4, 25, 28, 52, 66, 69, 89, 90, 97, 120, 164, 191, 192, 199, 239, 286], "pin": [4, 9, 11, 12, 52, 57, 59, 60, 90, 192], "taskbar": [4, 52, 90, 192], "dock": [4, 52], "studio": [2, 4, 25, 35, 45, 52, 66, 75, 76, 84, 90, 91, 97, 164, 167, 192, 193, 199, 286, 289], "keyboard": [4, 28, 35, 52, 69, 75, 97, 120, 199, 239], "ctrl": [4, 25, 28, 35, 47, 52, 66, 69, 75, 87, 95, 97, 133, 135, 164, 174, 197, 199, 252, 254, 286, 303], "backtick": [4, 52], "pycharm": [2, 4, 12, 16, 28, 39, 44, 52, 60, 63, 69, 79, 85, 93, 101, 103, 104, 120, 133, 151, 160, 167, 174, 195, 203, 205, 206, 252, 269, 278, 303], "alt": [4, 28, 52, 69, 175, 304], "f12": [4, 52], "yourusernam": [4, 52], "pwd": [4, 52, 132, 164, 251, 286], "myfold": [4, 52], "shorter": [4, 52], "backslash": [4, 52, 134, 168, 253, 296], "slash": [4, 52, 134, 137, 253, 256], "grandpar": [4, 52, 169, 297], "tild": [4, 52], "alia": [4, 45, 52, 84, 91, 93, 133, 146, 157, 162, 168, 175, 182, 193, 195, 252, 265, 275, 280, 296, 304, 311], "drive": [4, 9, 36, 37, 45, 46, 52, 57, 76, 77, 84, 86, 108, 114, 123, 178, 184, 227, 233, 242, 307, 313], "letter": [4, 27, 35, 44, 46, 52, 68, 75, 85, 86, 97, 113, 115, 131, 135, 136, 141, 142, 143, 147, 148, 158, 199, 232, 234, 250, 254, 255, 260, 261, 262, 264, 266, 276], "homepath": [4, 52, 98, 200], "colon": [4, 5, 7, 30, 52, 53, 55, 71, 113, 131, 136, 143, 147, 158, 160, 175, 232, 250, 255, 262, 264, 276, 278, 304], "wield": [4, 52], "kid": [4, 52, 91, 119, 130, 138, 153, 171, 184, 193, 238, 249, 257, 271, 299, 313], "runnabl": [4, 52, 97, 199], "badprogram": [4, 52], "panel": [4, 52, 117, 236], "sysdm": [4, 52], "cpl": [4, 52], "underneath": [4, 11, 24, 29, 52, 59, 65, 70, 99, 135, 147, 157, 160, 177, 201, 254, 264, 275, 278, 306], "dialog": [4, 52, 90, 192], "newer": [4, 33, 52, 73, 93, 117, 129, 137, 160, 186, 195, 236, 248, 256, 278, 315], "zprofil": [4, 52, 91, 92, 193, 194], "older": [4, 5, 24, 52, 53, 65, 117, 127, 162, 182, 236, 246, 280, 311, 314], "bash_profil": [4, 52], "reload": [4, 52, 100, 113, 144, 202, 232, 263], "crucial": [4, 44, 52, 85, 101, 103, 110, 148, 157, 171, 172, 176, 203, 205, 229, 266, 275, 299, 301, 305], "util": [4, 10, 11, 52, 58, 59, 106, 109, 114, 117, 124, 126, 127, 129, 134, 154, 157, 162, 177, 224, 228, 233, 236, 243, 245, 246, 248, 253, 272, 275, 280, 306], "shim": [4, 24, 52, 65], "serial": [4, 6, 52, 54], "3885": [4, 52], "2fc1": [4, 52], "04": [2, 4, 27, 41, 52, 68, 81, 116, 130, 132, 156, 235, 249, 251], "294": [4, 52], "031": [4, 52], "634": [4, 52], "432": [4, 52], "dot": [4, 26, 28, 46, 48, 52, 67, 69, 86, 88, 106, 127, 148, 160, 224, 246, 266, 278], "everywher": [4, 11, 30, 43, 52, 59, 71, 83, 92, 95, 129, 146, 177, 194, 197, 248, 265, 306], "greater": [4, 7, 24, 30, 45, 52, 55, 65, 71, 84, 93, 94, 97, 113, 118, 129, 135, 136, 138, 143, 152, 164, 166, 172, 182, 186, 195, 196, 199, 232, 237, 248, 254, 255, 257, 262, 270, 286, 288, 301, 311, 315], "recreat": [4, 24, 52, 65], "myfil": [4, 52], "txt": [4, 5, 6, 11, 24, 25, 26, 28, 47, 52, 53, 54, 59, 65, 66, 67, 69, 87, 96, 117, 121, 123, 128, 133, 134, 146, 158, 161, 164, 168, 170, 181, 184, 198, 236, 240, 242, 247, 252, 253, 265, 276, 279, 286, 296, 298, 310, 313], "besid": [4, 39, 52, 79, 117, 119, 120, 130, 136, 156, 171, 183, 236, 238, 239, 249, 255, 274, 299, 312], "filelist": [4, 52], "cp": [4, 52, 164, 286], "newfil": [4, 52], "wildcard": [4, 52, 157, 275], "myf": [4, 52], "recurs": [4, 39, 52, 79, 157, 275], "new_fold": [4, 52], "xcopi": [4, 52], "wrestl": [4, 13, 52, 61], "taught": [4, 9, 10, 33, 43, 44, 52, 57, 58, 73, 83, 85, 105, 126, 134, 142, 160, 171, 223, 245, 253, 261, 278, 299], "hidden": [4, 11, 25, 48, 52, 59, 66, 88, 103, 129, 134, 182, 205, 248, 253, 311], "everyth": [4, 7, 9, 11, 14, 27, 28, 30, 34, 37, 44, 46, 47, 52, 55, 57, 59, 62, 68, 69, 71, 74, 77, 85, 86, 87, 93, 96, 98, 100, 101, 104, 118, 128, 130, 132, 133, 136, 137, 139, 141, 143, 144, 147, 158, 160, 165, 168, 172, 174, 175, 178, 182, 195, 198, 200, 202, 203, 206, 237, 247, 249, 251, 252, 255, 256, 258, 260, 262, 263, 264, 276, 278, 287, 296, 301, 303, 304, 307, 311], "pare": [4, 33, 52, 73, 91, 193], "afil": [4, 52], "bash_histori": [4, 52], "zcompdump": [4, 52], "zsh_histori": [4, 52], "zsh_session": [4, 52], "zshrc": [4, 52, 91, 181, 193, 310], "thumb": [4, 52], "meant": [4, 5, 7, 26, 34, 39, 52, 53, 55, 67, 74, 79, 91, 93, 95, 113, 118, 129, 132, 133, 138, 148, 152, 160, 181, 182, 184, 193, 195, 197, 232, 237, 248, 251, 252, 257, 266, 270, 278, 310, 311, 313], "safe": [4, 52, 98, 118, 130, 138, 146, 152, 160, 161, 162, 171, 176, 178, 200, 237, 249, 257, 265, 270, 278, 279, 280, 299, 305, 307], "bat": [4, 5, 28, 52, 53, 69, 97, 118, 122, 128, 131, 153, 199, 237, 241, 247, 250, 271], "sidetrack": [4, 52], "reveal": [2, 4, 11, 39, 52, 59, 79, 106, 142, 157, 224, 261, 275], "logpath": [4, 52], "rem": [4, 52], "remark": [4, 52], "insensit": [4, 7, 52, 55], "uppercas": [4, 46, 52, 86, 95, 147, 158, 175, 197, 264, 276, 304], "mainfram": [4, 52], "dateetc": [4, 52], "die": [4, 24, 52, 65], "unix": [4, 24, 52, 65, 90, 130, 134, 157, 192, 249, 253, 275], "insist": [4, 52], "resort": [4, 52, 94, 113, 160, 182, 186, 196, 232, 278, 311, 315], "servic": [4, 30, 39, 47, 52, 71, 79, 87, 96, 114, 122, 123, 133, 150, 186, 198, 233, 241, 242, 252, 268, 315], "taskmac": [4, 52], "linuxwindowscr": [4, 52], "directorymkdir": [4, 52], "namemkdir": [4, 52], "namemd": [4, 52], "namemov": [4, 52], "onecd": [4, 52], "namecd": [4, 52], "namenavig": [4, 52], "homedr": [4, 52, 98, 200], "filecat": [4, 52], "filenametyp": [4, 52], "filenameprint": [4, 52], "screenecho": [4, 52], "somethingecho": [4, 52], "somethingprint": [4, 52], "filenameecho": [4, 52], "filenamecopi": [4, 52], "filecp": [4, 52], "targetxcopi": [4, 52], "targetcopi": [4, 52], "anothercp": [4, 52], "targetmov": [4, 52], "directorymv": [4, 52], "targetget": [4, 52], "helpcommand": [4, 52], "helpman": [4, 52], "primer": [5, 53, 103, 205], "binder": [5, 53, 171, 299], "cocalc": [5, 45, 53, 84, 92, 97, 160, 194, 199, 278], "fulli": [5, 53, 97, 104, 160, 171, 174, 176, 199, 206, 278, 299, 303, 305], "meantim": [5, 11, 26, 28, 44, 53, 59, 67, 69, 85, 91, 94, 97, 103, 130, 160, 161, 174, 183, 193, 196, 199, 205, 249, 278, 279, 303, 312], "stumbl": [5, 53, 114, 233], "qualiti": [5, 9, 12, 53, 57, 60, 99, 115, 133, 153, 160, 201, 234, 252, 271, 278], "jupytext": [5, 53], "readthedoc": [5, 53], "felt": [5, 12, 44, 53, 60, 85, 160, 171, 278, 299, 314], "somewher": [5, 12, 25, 46, 53, 60, 66, 86, 90, 91, 94, 118, 123, 130, 153, 157, 186, 192, 193, 196, 237, 242, 249, 271, 275, 315], "experienc": [5, 24, 44, 53, 65, 85, 94, 102, 103, 146, 161, 175, 182, 196, 204, 205, 265, 279, 304, 311], "goodhart": [5, 53], "campbel": [5, 53], "famili": [5, 9, 17, 44, 53, 57, 64, 85, 162, 280], "julia": [2, 5, 45, 53, 84, 97, 101, 152, 160, 184, 187, 199, 203, 270, 278, 313, 316], "avaiabl": [5, 53], "wordpress": [5, 53, 169, 297], "commonmark": [5, 53], "inevit": [5, 53], "sister": [5, 53], "pursu": [5, 53], "restructuredtext": [5, 53], "markup": [5, 53, 122, 241], "flexibl": [5, 9, 11, 39, 44, 47, 53, 57, 59, 79, 85, 87, 97, 101, 123, 129, 130, 136, 137, 138, 143, 144, 147, 157, 164, 168, 172, 186, 199, 203, 242, 248, 249, 255, 256, 257, 262, 263, 264, 275, 286, 296, 301, 315], "myst": [5, 53], "rst": [5, 53, 153, 271], "wish": [5, 44, 47, 53, 85, 87, 96, 110, 117, 127, 130, 131, 155, 160, 164, 172, 181, 198, 229, 236, 246, 249, 250, 273, 278, 286, 301, 310], "bake": [5, 47, 53, 87, 160, 278], "familiar": [5, 6, 24, 30, 39, 44, 46, 47, 48, 53, 54, 65, 71, 79, 85, 86, 87, 88, 92, 93, 94, 96, 101, 116, 120, 123, 125, 126, 127, 134, 135, 138, 143, 152, 155, 156, 157, 161, 164, 170, 171, 176, 194, 195, 196, 198, 203, 235, 239, 242, 244, 245, 246, 253, 254, 257, 262, 270, 273, 274, 275, 279, 286, 298, 299, 305], "jekyl": [5, 53], "organiz": [5, 36, 53, 76], "prefix": [5, 24, 47, 53, 65, 87, 120, 127, 137, 143, 146, 157, 158, 239, 246, 256, 262, 265, 275, 276], "clone": [5, 25, 28, 33, 53, 66, 69, 73, 138, 141, 155, 257, 260, 273], "empti": [5, 6, 25, 46, 48, 53, 54, 66, 86, 88, 113, 114, 133, 134, 135, 138, 139, 147, 153, 157, 172, 176, 232, 233, 252, 253, 254, 257, 258, 264, 271, 275, 301, 305], "toolset": [5, 53, 157, 275], "gitignor": [5, 11, 24, 47, 53, 59, 65, 87, 118, 134, 181, 237, 253, 310], "panda": [2, 5, 9, 13, 14, 15, 16, 24, 26, 42, 47, 53, 57, 61, 62, 63, 65, 67, 82, 87, 93, 94, 97, 99, 100, 101, 102, 106, 109, 110, 113, 118, 119, 144, 149, 150, 151, 158, 170, 171, 178, 182, 184, 186, 195, 196, 199, 201, 203, 204, 224, 228, 229, 232, 237, 238, 263, 267, 268, 269, 276, 298, 299, 307, 311, 313, 315], "freez": [5, 24, 53, 65, 117, 236], "slug": [5, 53], "sail": [5, 53], "ran": [5, 6, 24, 28, 39, 53, 54, 65, 69, 79, 91, 92, 95, 118, 121, 123, 127, 132, 141, 146, 154, 156, 160, 161, 168, 170, 180, 186, 193, 194, 197, 237, 240, 242, 246, 251, 260, 265, 272, 274, 278, 279, 296, 298, 309, 315], "_config": [5, 53], "yml": [5, 24, 53, 65, 96, 117, 127, 128, 180, 198, 236, 246, 247, 309], "nest": [5, 34, 39, 53, 74, 79, 91, 95, 101, 113, 127, 131, 135, 144, 156, 172, 193, 197, 203, 232, 246, 250, 254, 263, 274, 301], "_python_in_practic": [5, 53], "booksourc": [5, 53, 116, 235], "docuement": [5, 53], "duress": [5, 53], "plow": [5, 53, 123, 242], "confid": [5, 9, 53, 57, 115, 164, 187, 234, 286, 316], "yaml": [5, 34, 53, 74, 122, 241], "v2": [5, 10, 26, 53, 58, 67, 126, 160, 245, 278], "reloc": [5, 53], "repository_root": [5, 53], "ubuntu": [5, 25, 53, 66], "checkout": [5, 53, 91, 193], "peaceiri": [5, 53], "v3": [5, 53], "github_token": [5, 53], "publish_dir": [5, 53], "_build": [5, 53], "decent": [5, 53, 138, 142, 151, 160, 171, 184, 257, 261, 269, 278, 299, 313], "logo": [5, 53, 177, 306], "outset": [5, 53, 104, 107, 120, 134, 167, 206, 225, 239, 253, 289], "adjunct": [5, 53], "disappoint": [5, 53], "mybind": [5, 53], "proven": [5, 12, 53, 60, 111, 230], "tini": [5, 53, 100, 160, 202, 278], "needl": [5, 53, 143, 262], "colab": [5, 45, 53, 84, 116, 143, 151, 160, 184, 235, 262, 269, 278, 313], "jupyterhub": [5, 53], "forthcom": [5, 53], "pitch": [5, 17, 53, 64], "asynchron": [6, 54], "breed": [6, 34, 54, 74, 121, 176, 240, 305], "chose": [6, 9, 54, 57, 94, 114, 132, 134, 196, 233, 251, 253], "axum": [6, 54], "tokio": [6, 54], "blacksheep": [6, 54], "uvicorn": [6, 54, 149, 267], "vindic": [6, 54], "blazingli": [6, 54], "edg": [6, 9, 35, 54, 57, 75, 100, 120, 157, 202, 239, 275], "async_serv": [6, 54], "unzip": [6, 54, 99, 201], "shell": [2, 6, 9, 24, 25, 42, 45, 47, 54, 57, 65, 66, 82, 84, 87, 91, 92, 93, 95, 101, 120, 132, 153, 164, 174, 178, 182, 184, 193, 194, 195, 197, 203, 239, 251, 271, 286, 303, 307, 311, 313], "testrun": [6, 54], "jmx": [6, 54], "endpoint": [6, 54, 123, 162, 242, 280], "ramp": [6, 9, 54, 57, 167, 289], "instant": [6, 26, 54, 67], "pane": [6, 45, 54, 84, 97, 120, 199, 239], "3000": [6, 10, 54, 58, 126, 160, 245, 278], "rustup": [6, 54], "cargo": [6, 25, 54, 66, 183, 312], "toml": [6, 54, 95, 197], "2021": [6, 54, 115, 118, 121, 184, 234, 237, 240, 313], "router": [6, 54], "socketaddr": [6, 54], "durat": [6, 54, 94, 123, 196, 242], "i32": [6, 54], "vec": [6, 54], "mut": [6, 54], "temp": [6, 54], "test_async": [6, 54], "str": [6, 27, 30, 34, 37, 46, 47, 54, 68, 71, 74, 77, 86, 87, 95, 123, 127, 129, 131, 137, 139, 143, 144, 146, 158, 162, 169, 172, 175, 176, 177, 197, 242, 246, 248, 250, 256, 258, 262, 263, 265, 276, 280, 297, 301, 304, 305, 306], "const": [6, 54, 143, 262], "should_delai": [6, 54], "bool": [6, 7, 28, 40, 54, 55, 69, 80, 127, 138, 139, 144, 157, 246, 257, 258, 263, 275], "delay_m": [6, 54], "u64": [6, 54], "from_milli": [6, 54], "await": [6, 25, 54, 66, 94, 161, 196, 279], "test_fibonacci": [6, 54], "100000000": [6, 54], "flavor": [6, 47, 54, 87, 101, 133, 154, 160, 164, 182, 203, 252, 272, 278, 286, 311], "multi_thread": [6, 54], "worker_thread": [6, 54], "with_stat": [6, 54], "addr": [6, 54], "127": [6, 54, 96, 97, 132, 162, 198, 199, 251, 280], "println": [6, 54, 95, 114, 197, 233], "bind": [6, 54, 102, 164, 204, 286], "into_make_servic": [6, 54], "unwrap": [6, 54], "accident": [6, 54, 91, 193], "debug": [2, 6, 11, 14, 25, 30, 54, 59, 62, 66, 71, 90, 97, 101, 107, 120, 133, 138, 150, 164, 167, 174, 176, 192, 199, 203, 225, 239, 252, 257, 268, 286, 289, 303, 305], "multi": [6, 10, 11, 39, 45, 47, 54, 58, 59, 79, 84, 87, 106, 109, 119, 126, 157, 158, 178, 224, 228, 238, 245, 275, 276, 307], "runtim": [6, 34, 39, 54, 74, 79, 93, 95, 97, 102, 123, 133, 134, 137, 138, 157, 160, 164, 174, 175, 178, 182, 195, 197, 199, 204, 242, 252, 253, 256, 257, 275, 278, 286, 303, 304, 307, 311], "worker": [6, 46, 54, 86], "counterintuit": [6, 54], "scenario": [6, 15, 28, 54, 69, 98, 151, 161, 182, 200, 269, 279, 311], "crud": [6, 54, 109, 228], "highest": [6, 7, 9, 54, 55, 57, 116, 171, 235, 299], "245": [6, 54], "986": [6, 54], "uvircorn": [6, 54], "asyncio": [6, 13, 39, 54, 61, 79, 94, 121, 196, 240], "002": [6, 41, 54, 81], "uvicod": [6, 54], "stdout": [6, 54, 155, 157, 273, 275], "gone": [6, 25, 37, 54, 66, 77, 91, 92, 95, 114, 129, 155, 162, 170, 172, 193, 194, 197, 233, 248, 273, 280, 298, 301, 314], "warm": [6, 17, 54, 64, 107, 225], "discard": [6, 54, 115, 234], "slight": [6, 44, 54, 85, 93, 137, 147, 195, 256, 264], "cython": [6, 54, 121, 150, 151, 240, 268, 269], "pythonrust": [6, 54], "mt": [6, 54], "avg": [6, 54, 95, 197], "rpserroravg": [6, 54], "rpserrorrun": [6, 54], "13651": [6, 54], "4753": [6, 54], "77": [6, 39, 54, 79], "27910": [6, 54], "6280": [6, 54], "34528": [6, 54], "6250": [6, 54], "average5363": [6, 54], "44": [6, 26, 54, 67, 139, 258], "5761": [6, 54], "3211": [6, 54], "8290": [6, 54], "8210": [6, 54], "24301": [6, 54], "67": [6, 45, 54, 84], "4930": [6, 54], "5343": [6, 54], "88": [6, 54, 115, 129, 162, 234, 248, 280], "2851": [6, 54], "8170": [6, 54], "0740": [6, 54], "average1": [6, 54], "0121": [6, 54], "3800": [6, 54], "1431": [6, 54], "advantag": [6, 10, 24, 25, 28, 34, 37, 44, 47, 54, 58, 65, 66, 69, 74, 77, 85, 87, 90, 93, 94, 97, 102, 103, 112, 116, 126, 131, 132, 136, 138, 144, 148, 154, 156, 157, 161, 164, 165, 168, 170, 175, 178, 184, 192, 195, 196, 199, 204, 205, 231, 235, 245, 250, 251, 255, 257, 263, 266, 272, 274, 275, 279, 286, 287, 296, 298, 304, 307, 313], "fewest": [6, 54], "partisan": [6, 54], "favorit": [6, 9, 10, 17, 26, 31, 34, 37, 47, 54, 57, 58, 64, 67, 72, 74, 77, 87, 90, 92, 93, 94, 97, 123, 126, 136, 137, 138, 144, 147, 155, 160, 165, 170, 171, 174, 176, 182, 184, 186, 192, 194, 195, 196, 199, 242, 245, 255, 256, 257, 263, 264, 273, 278, 287, 298, 299, 303, 305, 311, 313, 315], "bug": [6, 11, 14, 26, 28, 34, 54, 59, 62, 67, 69, 74, 91, 94, 112, 118, 141, 154, 168, 175, 193, 196, 231, 237, 260, 272, 296, 304], "fan": [6, 15, 17, 25, 35, 37, 42, 54, 64, 66, 75, 77, 82, 94, 98, 100, 110, 120, 136, 146, 149, 155, 157, 160, 171, 186, 196, 200, 202, 229, 239, 255, 265, 267, 273, 275, 278, 299, 315], "seven": [6, 7, 39, 44, 54, 55, 79, 85, 130, 152, 160, 171, 249, 270, 278, 299], "percent": [6, 9, 54, 57], "willing": [6, 54, 91, 102, 105, 193, 204, 223], "counterpoint": [6, 54], "envis": [6, 54, 91, 193], "justifi": [6, 54, 107, 125, 160, 225, 244, 278], "forego": [6, 26, 54, 67, 95, 171, 197, 299], "simplic": [2, 6, 7, 54, 55, 94, 101, 102, 118, 131, 138, 143, 174, 196, 203, 204, 237, 250, 257, 262, 303], "carefulli": [6, 54, 104, 206], "msg": [7, 30, 55, 71, 186, 315], "evenli": [7, 55, 105, 139, 223, 258], "divis": [7, 55, 97, 135, 139, 152, 199, 254, 258, 270], "modulo": [7, 55, 135, 152, 254, 270], "trip": [7, 30, 39, 46, 55, 71, 79, 86, 95, 96, 107, 141, 197, 198, 225, 260], "hardwar": [7, 55, 102, 117, 152, 164, 204, 236, 270, 286], "pack": [7, 25, 55, 66, 93, 95, 151, 152, 164, 195, 197, 269, 270, 286], "charl": [7, 55], "mathematician": [7, 10, 55, 58, 126, 148, 171, 245, 266, 299], "philosoph": [7, 44, 55, 85], "nine": [7, 9, 46, 55, 57, 86, 143, 173, 262, 302], "operatorhow": [7, 55], "itx": [7, 55], "yx": [7, 55], "english": [7, 43, 55, 83, 127, 130, 136, 146, 171, 184, 246, 249, 255, 265, 299, 313], "seamlessli": [7, 26, 30, 55, 67, 71, 97, 121, 168, 176, 199, 240, 296, 305], "my_numb": [7, 55], "condition": [7, 55], "easiest": [7, 34, 40, 44, 48, 55, 74, 80, 85, 88, 105, 118, 123, 138, 177, 178, 223, 237, 242, 257, 306, 307], "tall": [7, 55, 129, 171, 173, 248, 299, 302], "potato": [7, 40, 55, 80, 137, 256], "uncov": [7, 14, 55, 62], "sold": [7, 55], "groceri": [7, 55], "inch": [7, 55, 105, 171, 173, 223, 299, 302], "diamet": [7, 55], "smallest": [7, 55, 156, 274], "chef": [7, 9, 55, 57, 180, 309], "sorter": [7, 55], "potato_size_inch": [7, 55], "unknown": [7, 34, 55, 74, 108, 127, 160, 227, 246, 278], "s1": [7, 55, 136, 255], "s2": [7, 55, 136, 255], "declar": [7, 11, 26, 30, 34, 39, 47, 55, 59, 67, 71, 74, 79, 87, 119, 121, 123, 130, 131, 132, 135, 161, 169, 172, 175, 177, 184, 186, 238, 240, 242, 249, 250, 251, 254, 279, 297, 301, 304, 306, 313, 314, 315], "procedur": [7, 55, 95, 98, 102, 148, 157, 172, 197, 200, 204, 266, 275, 301], "some_vari": [7, 55], "some_numb": [7, 55, 147, 264], "some_str": [7, 55], "umbrella": [7, 55], "cloudi": [7, 55], "bold": [7, 10, 30, 33, 43, 44, 55, 58, 71, 73, 83, 85, 102, 123, 126, 133, 204, 242, 245, 252], "time_available_minut": [7, 55], "120": [7, 9, 10, 55, 57, 58, 126, 156, 160, 175, 245, 274, 278, 304], "money_available_dollar": [7, 55], "time_avaialble_minut": [7, 55], "circuit": [7, 55, 101, 203], "1connectorexpress": [7, 55], "2resulttrueandtruetruefalseandtruefals": [7, 55], "trueandfalsefalsefalseandfalsefals": [7, 55], "trueortruetru": [7, 55], "falseortruetruetrueorfalsetru": [7, 55], "falseorfalsefals": [7, 55], "compon": [7, 10, 55, 58, 113, 117, 122, 124, 126, 130, 134, 138, 165, 170, 171, 232, 236, 241, 243, 245, 249, 253, 257, 287, 298, 299], "lowest": [7, 55, 116, 162, 235, 280], "parenthes": [7, 27, 34, 55, 68, 74, 141, 146, 166, 172, 174, 178, 260, 265, 288, 301, 303, 307], "luck": [7, 55, 93, 100, 113, 195, 202, 232], "water_level": [7, 55], "flood": [7, 55], "my_vari": [7, 55], "noise_level": [7, 55], "heat_output_perc": [7, 55], "98": [7, 34, 55, 74, 100, 121, 186, 202, 240, 315], "95": [7, 55, 115, 131, 156, 160, 234, 250, 274, 278], "technician": [7, 55], "to_b": [7, 55], "time_of_dai": [7, 55], "heat_ouput_perc": [7, 55], "gotcha": [7, 55, 95, 140, 197, 259], "rebound": [7, 55], "light_level": [7, 55], "decibel_level": [7, 55], "neither": [7, 10, 37, 55, 58, 77, 94, 107, 118, 122, 124, 126, 129, 142, 160, 169, 170, 196, 225, 237, 241, 243, 245, 248, 261, 278, 297, 298], "nor": [7, 10, 25, 55, 58, 66, 107, 118, 126, 129, 175, 225, 237, 245, 248, 304], "citi": [7, 27, 41, 45, 55, 68, 81, 84, 116, 156, 176, 235, 274, 305], "foot": [9, 57, 91, 193], "devop": [9, 34, 57, 74, 102, 122, 123, 149, 184, 186, 188, 204, 241, 242, 267, 313, 315, 317], "mobil": [9, 57, 184, 188, 313, 317], "vari": [9, 24, 28, 39, 57, 65, 69, 79, 95, 113, 123, 130, 141, 148, 162, 171, 173, 176, 184, 188, 197, 232, 242, 249, 260, 266, 280, 299, 302, 305, 313, 317], "significantli": [9, 57, 102, 106, 114, 144, 146, 153, 160, 164, 171, 204, 224, 233, 263, 265, 271, 278, 286, 299], "vital": [9, 57], "portfolio": [9, 12, 57, 60, 103, 108, 110, 167, 173, 185, 205, 227, 229, 289, 302], "certif": [9, 45, 57, 84, 96, 198], "entri": [9, 35, 39, 47, 57, 75, 79, 87, 99, 109, 131, 134, 141, 161, 173, 182, 201, 228, 250, 253, 260, 279, 302, 311], "barrier": [9, 57], "promin": [9, 57, 94, 96, 120, 196, 198, 239], "train": [9, 57, 100, 107, 115, 170, 202, 225, 234, 298], "elabor": [9, 57, 184, 313], "laid": [9, 57], "regard": [9, 25, 39, 57, 66, 79, 102, 130, 148, 156, 157, 204, 249, 266, 274, 275], "snapshot": [9, 57, 116, 123, 156, 188, 235, 242, 274, 317], "nationwid": [9, 57], "hobbyist": [2, 9, 57], "django": [9, 28, 44, 57, 69, 85, 93, 101, 127, 133, 169, 171, 184, 195, 203, 246, 252, 297, 299, 313], "flask": [9, 14, 26, 28, 57, 62, 67, 69, 93, 101, 120, 133, 155, 184, 195, 203, 239, 252, 273, 313], "told": [9, 12, 24, 28, 44, 57, 60, 65, 69, 85, 95, 116, 118, 155, 171, 174, 197, 235, 237, 273, 299, 303], "broke": [9, 24, 57, 65, 124, 142, 243, 261], "necess": [9, 57], "glare": [9, 57], "skew": [9, 48, 57, 88, 106, 224], "772": [9, 57], "bootcamp": [2, 9, 43, 49, 57, 83, 102, 125, 142, 173, 204, 244, 261, 302], "spark": [9, 13, 57, 61, 100, 202], "606": [9, 57], "79": [9, 57, 156, 274], "graduat": [9, 57, 171, 299, 314], "kaggl": [2, 9, 45, 48, 57, 84, 88, 100, 202], "competit": [9, 45, 57, 84, 93, 99, 195, 201], "tensorflow": [9, 57, 93, 94, 102, 117, 148, 160, 184, 195, 196, 204, 236, 266, 278, 313], "kera": [9, 57, 93, 195], "scikit": [9, 45, 57, 84, 93, 99, 102, 117, 128, 151, 160, 195, 201, 204, 236, 247, 269, 278], "pytorch": [9, 57, 93, 117, 184, 195, 236, 313], "997": [9, 57], "cloudform": [9, 57, 109, 122, 123, 228, 241, 242], "terraform": [9, 57, 97, 109, 120, 122, 123, 199, 228, 239, 241, 242], "596": [9, 57], "72": [9, 10, 57, 58, 136, 146, 255, 265], "airflow": [2, 9, 57], "redshift": [9, 13, 57, 61], "etl": [2, 9, 50, 57], "pyspark": [2, 9, 57, 100, 202], "034": [9, 57], "54": [9, 57, 176, 305], "jenkin": [9, 57], "ansibl": [2, 9, 57, 114, 180, 233], "puppet": [9, 57, 180, 309], "974": [9, 57], "javascript": [2, 9, 25, 26, 28, 57, 66, 67, 69, 101, 117, 120, 124, 137, 143, 144, 147, 151, 175, 177, 184, 187, 188, 203, 236, 239, 243, 256, 262, 263, 264, 269, 304, 306, 313, 316], "nosql": [9, 57, 162, 168, 280, 296], "backend": [9, 10, 15, 26, 39, 47, 57, 58, 67, 79, 87, 93, 126, 133, 153, 167, 184, 195, 245, 252, 271, 289, 313], "fastapi": [9, 14, 57, 62, 149, 267], "37381": [9, 57], "36": [9, 39, 57, 79, 113, 148, 156, 162, 232, 266, 274, 280], "968": [9, 57], "304": [9, 57], "38": [9, 57, 113, 116, 156, 232, 235, 274], "tester": [9, 57], "pytest": [9, 46, 57, 86, 93, 153, 195, 271], "unittest": [9, 57, 93, 195], "selenium": [9, 15, 57], "jira": [9, 57], "925": [9, 57], "compani": [9, 57, 93, 104, 120, 123, 125, 182, 195, 206, 239, 242, 244, 311], "2012": [9, 41, 57, 81, 123, 242], "sexiest": [9, 57], "salaci": [9, 57], "assess": [9, 57, 120, 171, 239, 299], "ow": [9, 44, 57, 85, 117, 236], "sa": [9, 57], "statistician": [9, 57], "signific": [9, 24, 39, 41, 47, 57, 65, 79, 81, 87, 100, 118, 123, 151, 156, 162, 165, 171, 184, 202, 237, 242, 269, 274, 280, 287, 299, 313, 314], "inroad": [9, 57, 184, 313], "demand": [9, 57, 94, 102, 108, 171, 196, 204, 227, 299], "specialti": [9, 57, 167, 289], "tableau": [9, 57], "emploi": [9, 34, 57, 74, 106, 136, 224, 255], "rank": [9, 57, 119, 160, 238, 278], "894": [9, 57], "scientif": [9, 57, 94, 102, 107, 177, 188, 196, 204, 225, 306, 317], "fortran": [9, 57, 102, 117, 170, 204, 236, 298], "tl": [9, 57, 96, 198], "252": [9, 57], "percentag": [9, 39, 48, 57, 79, 88, 116, 168, 235, 296], "55": [2, 9, 41, 57, 81, 116, 130, 131, 156, 235, 249, 250], "lambda": [2, 9, 10, 27, 45, 57, 58, 68, 84, 93, 94, 115, 122, 126, 131, 133, 140, 144, 151, 166, 168, 171, 172, 182, 195, 196, 234, 241, 245, 250, 252, 259, 263, 269, 288, 296, 299, 301, 311], "massag": [9, 30, 57, 71], "heurist": [9, 57], "80": [9, 47, 57, 87, 108, 113, 131, 146, 161, 162, 180, 227, 232, 250, 265, 279, 280, 309], "absolut": [9, 35, 43, 57, 75, 83, 101, 113, 115, 155, 160, 203, 232, 234, 273, 278], "overlook": [9, 57], "door": [9, 12, 30, 57, 60, 71, 107, 225], "confirm": [9, 24, 30, 47, 57, 65, 71, 87, 95, 98, 121, 174, 197, 200, 240, 303], "overlap": [9, 28, 42, 45, 57, 69, 82, 84, 95, 106, 116, 118, 120, 134, 143, 155, 157, 162, 165, 170, 176, 197, 224, 235, 237, 239, 253, 262, 273, 275, 280, 287, 298, 305], "vendor": [9, 47, 57, 87, 122, 168, 241, 296], "68": [9, 45, 57, 84, 148, 266], "firsthand": [9, 57], "inasmuch": [9, 57, 151, 157, 269, 275], "shop": [9, 57, 93, 160, 161, 195, 278, 279], "tech": [2, 9, 45, 57, 84, 142, 173, 302], "candid": [9, 28, 39, 57, 69, 79, 103, 104, 109, 141, 178, 205, 206, 228, 260, 307], "belong": [9, 28, 31, 57, 69, 72, 94, 133, 169, 196, 252, 297], "css": [9, 57, 124, 130, 243, 249], "defens": [9, 26, 57, 67, 120, 133, 239, 252], "artifact": [9, 11, 57, 59], "nowadai": [9, 57], "confus": [9, 13, 24, 34, 44, 57, 61, 65, 74, 85, 101, 102, 115, 117, 119, 121, 129, 135, 148, 152, 164, 168, 172, 181, 203, 204, 234, 236, 238, 240, 248, 254, 266, 270, 286, 296, 301, 310], "monolith": [9, 24, 57, 65, 93, 195], "j": [9, 10, 46, 57, 58, 86, 113, 122, 123, 124, 126, 130, 146, 148, 160, 232, 241, 242, 243, 245, 249, 265, 266, 278], "php": [9, 57, 160, 188, 278, 317], "rail": [9, 57], "325": [9, 57, 160, 278], "tricki": [9, 41, 57, 81], "assur": [9, 24, 57, 65, 107, 109, 225, 228], "qa": [9, 57, 93, 127, 187, 195, 246, 316], "invent": [9, 57, 108, 152, 168, 227, 270, 296], "attract": [9, 43, 57, 83, 106, 120, 155, 157, 160, 167, 184, 224, 239, 273, 275, 278, 289, 313], "brittl": [9, 26, 57, 67], "keenli": [9, 57], "possess": [9, 57], "prestig": [9, 57], "qualifi": [9, 57, 94, 141, 165, 196, 260, 287], "profess": [9, 10, 28, 57, 58, 69, 107, 126, 225, 245], "scarc": [9, 57], "gamut": [9, 57], "wash": [9, 57], "1993": [9, 57, 173, 302], "furthest": [9, 57], "borland": [9, 57], "pascal": [9, 57], "santa": [9, 57, 130, 249], "cruz": [9, 57], "headquart": [9, 57], "widen": [9, 57], "57": [9, 57], "recruit": [9, 12, 57, 60, 187, 316], "hr": [9, 39, 57, 79], "rep": [9, 57], "paycheck": [9, 57], "ph": [9, 57], "dig": [9, 11, 57, 59, 91, 93, 94, 97, 101, 123, 129, 130, 143, 151, 161, 170, 183, 184, 193, 195, 196, 199, 203, 242, 248, 249, 262, 269, 279, 298, 312, 313], "loan": [9, 57, 107, 171, 225, 299], "breez": [9, 57, 171, 299], "vote": [9, 57], "chemistri": [2, 10, 17, 58, 64, 109, 228], "wholeheartedli": [10, 58, 126, 245], "embrac": [10, 58, 107, 126, 225, 245], "quantum": [10, 16, 58, 63, 126, 245], "facilit": [10, 58, 95, 121, 126, 182, 197, 240, 245, 311], "eas": [10, 26, 30, 39, 40, 45, 47, 58, 67, 71, 79, 80, 84, 87, 94, 102, 120, 126, 127, 129, 134, 170, 196, 204, 239, 245, 246, 248, 253, 298], "toolbox": [10, 58, 126, 160, 245, 278], "companion": [10, 58, 97, 101, 106, 126, 148, 199, 203, 224, 245, 266], "alli": [10, 58, 126, 245], "deeper": [10, 58, 101, 126, 137, 183, 203, 245, 256, 312], "stranger": [10, 58, 126, 245], "ch4": [10, 58], "4h": [10, 58, 126, 245], "upon": [10, 26, 58, 67, 100, 103, 133, 138, 157, 202, 205, 252, 257, 275], "reserv": [10, 44, 58, 85, 126, 180, 182, 245, 309, 311], "od": [10, 58, 126, 245], "combust": [10, 58, 126, 245], "methan": [10, 58, 126, 245], "carbon": [10, 58, 126, 131, 245, 250], "dioxid": [10, 58, 126, 245], "o2": [10, 58], "co2": [10, 58], "h2o": [10, 58], "properli": [10, 58, 102, 126, 137, 204, 245, 256], "atom": [10, 44, 58, 85, 126, 130, 245, 249], "quantiti": [10, 48, 58, 88, 106, 126, 141, 171, 224, 245, 260, 299], "destroi": [10, 58, 126, 245], "antoin": [10, 58, 126, 131, 245, 250], "lavoisi": [10, 58, 126, 245], "sp": [10, 58, 126, 245], "reactant": [10, 58, 126, 245], "coeffici": [10, 58, 126, 245], "denot": [10, 58, 126, 137, 170, 245, 256, 298], "vch4": [10, 58, 126, 245], "vo2": [10, 58, 126, 245], "vco2": [10, 58, 126, 245], "vh2o": [10, 58, 126, 245], "atombal": [10, 58, 126, 245], "hydrogen": [10, 58, 126, 131, 245, 250], "oxygen": [10, 58, 126, 131, 245, 250], "eqn": [10, 58, 126, 245], "vector": [10, 26, 30, 58, 67, 71, 95, 126, 148, 160, 177, 197, 245, 266, 278, 306], "h3": [2, 10, 58, 126], "po": [10, 47, 58, 87, 126, 245], "ca3": [10, 58, 126, 245], "po4": [2, 10, 58, 126], "vcaohoh": [10, 58, 126, 245], "vca3po4po4": [10, 58, 126, 245], "calcium": [10, 58, 126, 245], "vh3po4": [10, 58, 126, 245], "phosphoru": [10, 58, 126, 245], "variat": [10, 58, 126, 137, 147, 155, 245, 256, 264, 273], "trail": [10, 27, 58, 68, 94, 126, 177, 196, 245, 306], "barbequ": [10, 58], "propan": [10, 58, 126, 245], "grill": [10, 58, 126, 245], "ideal": [10, 11, 44, 58, 59, 85, 97, 100, 126, 130, 165, 188, 199, 202, 245, 249, 287, 317], "ga": [10, 58, 126, 245], "pv": [10, 58, 126, 245], "nrt": [10, 58, 126, 245], "introduc": [2, 10, 11, 26, 41, 58, 59, 67, 81, 92, 94, 101, 105, 117, 122, 129, 132, 134, 136, 137, 148, 152, 157, 163, 170, 187, 196, 203, 223, 236, 241, 248, 251, 253, 255, 256, 266, 270, 275, 285, 298, 316], "useless": [10, 58, 126, 245], "cleverli": [10, 58, 126, 186, 245, 315], "exasper": [10, 58, 126, 245], "van": [10, 58, 94, 126, 184, 196, 245, 313], "der": [10, 58, 126, 245], "waal": [10, 58, 126, 245], "rearrang": [10, 58, 126, 245], "constraint": [10, 58, 117, 126, 141, 146, 236, 245, 260, 265], "posipt": [10, 58, 126, 245], "ideal_p": [10, 58, 126, 245], "vdw_eo": [10, 58, 126, 245], "r1": [10, 58], "r2": [10, 58, 141, 260], "r3": [10, 58], "capabl": [10, 47, 58, 87, 106, 116, 118, 120, 126, 224, 235, 237, 239, 245], "versu": [10, 58, 121, 126, 151, 240, 245, 269], "temperatur": [10, 58, 126, 245], "isotherm": [10, 58, 126, 245], "butan": [10, 58, 126, 245], "liquifi": [10, 58, 126, 245], "lng": [10, 58, 126, 245], "molar": [10, 58, 126, 245], "minimum": [10, 48, 58, 88, 105, 115, 126, 131, 136, 138, 171, 223, 234, 245, 250, 255, 257, 299], "dp": [10, 58, 126, 245], "diff": [10, 58, 126, 170, 245, 298], "ddp": [10, 58, 126, 245], "pressure_eq": [10, 58, 126, 245], "dp_eq": [10, 58, 126, 245], "ddp_eq": [10, 58, 126, 245], "pc": [10, 58, 126, 156, 245, 274], "tc": [10, 58, 126, 245], "p_c": [10, 58, 126, 245], "v_c": [10, 58, 126, 245], "t_c": [10, 58, 126, 245], "critpoint": [10, 58, 126, 245], "pcr": [10, 58, 126, 245], "vcr": [10, 58, 126, 245], "tcr": [10, 58, 126, 245], "\ud835\udc5d\ud835\udc50": [10, 58], "\ud835\udc4e": [10, 58], "27\ud835\udc4f": [10, 58], "\ud835\udc49\ud835\udc50": [10, 58], "3\ud835\udc4f": [10, 58], "\ud835\udc47\ud835\udc50": [10, 58], "8\ud835\udc4e": [10, 58], "27\ud835\udc45\ud835\udc4f": [10, 58], "314": [10, 58, 126, 245], "literatur": [10, 34, 44, 58, 74, 85, 126, 245], "si": [10, 58, 126, 131, 245, 250], "provis": [10, 58, 126, 180, 245, 309], "lambdifi": [10, 58, 126, 245], "numeric_pressur": [10, 58, 126, 245], "e6": [10, 58, 126, 245], "03707": [10, 58, 126, 245], "942009245580326": [10, 58, 126, 245], "thermodynam": [10, 58, 126, 245], "barbecu": [10, 58, 126, 245], "tank": [10, 58, 126, 245], "reiter": [10, 58, 126, 245], "deliv": [10, 39, 58, 79, 108, 126, 167, 227, 245, 289], "36616": [10, 58, 126, 245], "2925e": [10, 58, 126, 245], "press_z": [10, 58, 126, 245], "223": [10, 58, 126, 245], "6e": [10, 58, 126, 245], "6943008": [10, 58, 126, 245], "947454035": [10, 58, 126, 245], "pyplot": [10, 26, 58, 67, 105, 106, 126, 162, 223, 224, 245, 280], "plt": [10, 26, 58, 67, 105, 106, 126, 162, 223, 224, 245, 280], "t_step": [10, 58, 126, 245], "myt": [10, 58, 126, 245], "273": [10, 58, 126, 245], "00006": [10, 58, 126, 245], "m3": [10, 58, 126, 245], "v_step": [10, 58, 126, 245], "000001": [10, 41, 58, 81, 126, 245], "myv": [10, 58, 126, 245], "myp": [10, 58, 126, 245], "routin": [10, 44, 58, 85, 114, 126, 130, 151, 157, 170, 233, 245, 249, 269, 275, 298], "pukumarath": [10, 58], "6e3710190fb0": [10, 58], "mpl": [10, 58, 126, 245], "vmin": [10, 58, 126, 245], "vmax": [10, 58, 126, 245], "cmap": [10, 58, 126, 245], "cm": [10, 58, 106, 126, 166, 224, 245, 288], "scalarmapp": [10, 58, 126, 245], "jet": [10, 58, 126, 245], "set_arrai": [10, 58, 126, 245], "yi": [10, 58, 126, 245], "to_rgba": [10, 58, 126, 245], "weight": [10, 58, 116, 126, 235, 245], "xlabel": [10, 58, 106, 126, 224, 245], "ylabel": [10, 58, 106, 126, 224, 245], "cbar": [10, 58, 126, 245], "colorbar": [10, 58, 126, 245], "tick": [10, 58, 105, 126, 223, 245], "set_tick": [10, 58, 105, 126, 223, 245], "set_ticklabel": [10, 58, 126, 245], "set_yticklabel": [10, 58, 126, 245], "0f": [10, 58, 126, 245], "set_ylabel": [10, 58, 126, 245], "chempi": [2, 10, 17, 58, 64], "straight": [10, 42, 58, 82, 105, 141, 223, 260], "sundial": [10, 58, 126, 245], "solver": [10, 58, 126, 165, 245, 287], "lh": [10, 58, 126, 245], "rh": [10, 58, 126, 245], "balance_stoichiometri": [10, 58, 126, 245], "nh4clo4": [10, 58, 126, 245], "al2o3": [10, 58, 126, 245], "hcl": [10, 58, 122, 126, 241, 245], "n2": [10, 58, 126, 172, 245, 301], "dict": [10, 26, 30, 33, 34, 40, 58, 67, 71, 73, 74, 80, 126, 127, 131, 144, 175, 176, 245, 246, 250, 263, 304, 305], "mass_fract": [10, 58, 126, 245], "3g": [10, 58, 126, 245], "wt": [10, 58, 126, 245], "62": [10, 58, 100, 202], "\ud835\udc63\ud835\udc36\ud835\udc3b4": [10, 58, 126, 245], "\ud835\udc63\ud835\udc36\ud835\udc422": [10, 58, 126, 245], "\ud835\udc63\ud835\udc3b2\ud835\udc42": [10, 58, 126, 245], "\ud835\udc63\ud835\udc422": [10, 58, 126, 245], "tougher": [10, 58, 126, 245], "\ud835\udc63\ud835\udc36\ud835\udc4e3\ud835\udc43\ud835\udc424\ud835\udc43\ud835\udc424": [10, 58, 126, 245], "\ud835\udc63\ud835\udc36\ud835\udc4e\ud835\udc42\ud835\udc3b\ud835\udc42\ud835\udc3b": [10, 58, 126, 245], "\ud835\udc63\ud835\udc3b3\ud835\udc43\ud835\udc424": [10, 58, 126, 245], "kinet": [10, 58, 126, 245], "adequ": [10, 58, 101, 126, 138, 203, 245, 257], "notat": [10, 11, 58, 59, 107, 126, 127, 144, 225, 245, 246, 263], "molecular": [10, 58, 126, 245], "bromin": [10, 58, 126, 245], "nitrou": [10, 58, 126, 245], "oxid": [10, 58, 126, 245], "synthes": [10, 58, 126, 245], "nitrosyl": [10, 58, 126, 245], "bromid": [10, 58, 126, 245], "equilibrium": [10, 58, 126, 245], "indic": [10, 58, 97, 106, 115, 117, 123, 126, 136, 138, 143, 157, 158, 160, 161, 167, 199, 224, 234, 236, 242, 245, 255, 257, 262, 275, 276, 278, 279, 289], "defaultdict": [10, 58, 101, 126, 203, 245], "reactionsystem": [10, 58, 126, 245], "get_odesi": [10, 58, 126, 245], "NO": [10, 58, 126, 245], "br2": [10, 58, 126, 245], "nobr": [10, 58, 126, 245], "str_massact": [10, 58, 126, 245], "k1": [10, 58, 126, 245], "k2": [10, 58, 126, 245], "rsy": [10, 58, 126, 245], "from_str": [10, 58, 126, 245], "substance_factori": [10, 58, 126, 245], "substance_nam": [10, 58, 126, 245], "peek": [10, 58, 126, 142, 245, 261], "odesi": [10, 58, 126, 245], "include_param": [10, 58, 126, 245], "lower_bound": [10, 58, 126, 245], "param": [10, 58, 126, 175, 245, 304], "param_nam": [10, 58, 126, 245], "t_max": [10, 58, 126, 245], "a0": [10, 58, 126, 245], "b0": [10, 58, 126, 245], "c0": [10, 58, 126, 245], "tout": [10, 58, 126, 245], "yout": [10, 58, 126, 245], "42": [2, 10, 34, 58, 74, 113, 116, 126, 129, 137, 143, 146, 147, 156, 162, 169, 175, 176, 232, 235, 245, 248, 256, 262, 264, 265, 280, 297, 304, 305], "cvode": [10, 58, 126, 245], "nstep": [10, 58, 126, 143, 245, 262], "legend": [10, 15, 26, 58, 67, 126, 245], "br": [10, 58, 126, 146, 245, 265], "stir": [10, 58, 126, 245], "reactor": [10, 58, 126, 245], "cstr": [10, 58, 126, 245], "extra2": [10, 58, 126, 245], "new_rsi": [10, 58, 126, 245], "commerci": [10, 26, 58, 67, 92, 97, 107, 125, 126, 160, 164, 170, 194, 199, 225, 244, 245, 278, 286, 298], "equilibria": [10, 58, 126, 245], "appropri": [10, 13, 28, 34, 39, 44, 46, 47, 58, 61, 69, 74, 79, 85, 86, 87, 94, 97, 100, 101, 104, 120, 126, 127, 128, 129, 130, 131, 133, 136, 144, 146, 152, 156, 157, 160, 161, 166, 167, 169, 170, 178, 181, 183, 186, 196, 199, 202, 203, 206, 239, 245, 246, 247, 248, 249, 250, 252, 255, 263, 265, 270, 274, 275, 278, 279, 288, 289, 297, 298, 307, 310, 312, 315], "energet": [10, 58, 126, 245], "fold": [10, 58, 97, 126, 199, 245], "truli": [10, 11, 13, 37, 58, 59, 61, 77, 93, 126, 136, 146, 195, 245, 255, 265], "twofold": [11, 59], "verg": [11, 59], "slog": [11, 59], "profici": [11, 45, 59, 84], "urg": [11, 59, 91, 164, 193, 286], "swap": [11, 15, 59, 94, 113, 124, 129, 131, 139, 148, 196, 232, 243, 248, 250, 258, 266], "broken": [11, 59, 89, 103, 137, 138, 191, 205, 256, 257], "suffer": [11, 59, 107, 186, 225, 315], "drawback": [11, 24, 59, 65, 149, 267], "usag": [2, 11, 30, 37, 59, 71, 77, 117, 120, 138, 156, 236, 239, 257, 274], "fetchcont": [11, 25, 59, 66], "drunk": [11, 59], "deepli": [11, 42, 59, 82, 91, 107, 193, 225], "pitcher": [11, 59], "tdd": [11, 30, 59, 71], "kool": [11, 59], "aid": [11, 59], "cliff": [11, 59], "ocean": [11, 59], "murder": [11, 59], "chase": [11, 59, 164, 286], "hardli": [11, 13, 59, 61, 101, 113, 133, 178, 203, 232, 252, 307], "target_sourc": [11, 59], "makefil": [11, 25, 47, 59, 66, 87, 132, 251], "gnu": [11, 25, 47, 59, 66, 87, 117, 160, 236, 278], "conan": [11, 25, 59, 66], "largest": [11, 59], "catch2": [11, 59], "googletest": [11, 59], "cmakelist": [11, 59, 164, 286], "helper": [11, 30, 59, 71, 90, 192], "readm": [11, 15, 24, 25, 28, 39, 47, 59, 65, 66, 69, 79, 87, 96, 103, 104, 153, 177, 185, 198, 205, 206, 271, 306], "header": [2, 11, 28, 37, 39, 44, 47, 59, 69, 77, 79, 85, 87, 102, 140, 204, 259], "subdirectori": [11, 59, 134, 182, 253, 311], "source_root": [11, 59], "cmake_minimum_requir": [11, 59], "cmake_cxx_standard": [11, 59], "cmake_cxx_standard_requir": [11, 59], "add_execut": [11, 59], "add_subdirectori": [11, 59], "boilerpl": [11, 59, 123, 129, 169, 242, 248, 297], "humbli": [11, 59], "add_librari": [11, 59], "clue": [11, 59, 182, 311], "complain": [11, 59, 113, 120, 133, 171, 175, 183, 232, 239, 252, 299, 304, 312], "cpp": [11, 25, 59, 66], "fetchcontent_declar": [11, 59], "git_repositori": [11, 59], "catchorg": [11, 59], "git_tag": [11, 59], "4acc51828f7f93f3b2058a63f54d112af4034503": [11, 59], "devel": [11, 59], "fetchcontent_makeavail": [11, 59], "target_link_librari": [11, 59], "catch2withmain": [11, 59], "highlight": [11, 59, 103, 106, 118, 123, 124, 174, 205, 224, 237, 242, 243, 303], "redund": [11, 26, 30, 59, 67, 71], "fetch": [11, 59, 100, 129, 175, 202, 248, 304], "shamelessli": [11, 59], "catch_test_macro": [11, 59], "hpp": [11, 59], "unsign": [11, 59, 146, 265], "test_cas": [11, 59], "3628800": [11, 59], "macro": [11, 59, 95, 138, 197, 257], "halt": [11, 59, 94, 196], "matcher": [11, 59], "expect_my_puppy_to_be_named_bori": [11, 59], "purist": [11, 59, 138, 257], "vapor": [11, 59], "paraphras": [11, 59], "antoni": [11, 59], "prais": [11, 44, 59, 85], "dcmake_build_typ": [11, 59, 164, 286], "seed": [11, 59, 162, 280], "phoni": [11, 59], "prototyp": [11, 59, 95, 188, 197, 317], "pragma": [11, 59], "target_include_directori": [11, 59], "cmake_current_source_dir": [11, 59], "confess": [11, 15, 30, 59, 71, 100, 114, 121, 202, 233, 240], "iostream": [11, 25, 59, 66], "argc": [11, 25, 59, 66], "char": [11, 25, 59, 66, 113, 139, 143, 146, 158, 232, 258, 262, 265, 276], "argv": [11, 25, 59, 66, 93, 127, 157, 195, 246, 275], "cout": [11, 25, 59, 66], "endl": [11, 25, 59, 66], "stoi": [11, 59], "to_str": [11, 59], "referenc": [11, 30, 47, 59, 71, 87], "overflow": [11, 59], "33": [11, 59, 100, 116, 123, 131, 202, 235, 242, 250], "2147483648": [11, 59], "stub": [11, 34, 59, 74], "tediou": [11, 59, 129, 161, 248, 279], "batch": [11, 59, 90, 157, 192, 275], "corner": [11, 26, 28, 59, 67, 69, 97, 99, 107, 123, 164, 199, 201, 225, 242, 286], "pars": [11, 24, 34, 41, 59, 65, 74, 81, 93, 101, 102, 114, 120, 127, 144, 156, 157, 176, 177, 195, 203, 204, 233, 239, 246, 263, 274, 275, 305, 306], "client": [11, 12, 30, 47, 59, 60, 71, 87, 96, 99, 114, 120, 121, 122, 123, 150, 161, 169, 180, 186, 198, 201, 233, 239, 240, 241, 242, 268, 279, 297, 309, 315], "exclud": [11, 28, 39, 59, 69, 79, 95, 114, 147, 162, 197, 233, 264, 280], "suit": [11, 13, 25, 35, 59, 61, 66, 75, 97, 100, 131, 135, 154, 156, 184, 199, 202, 250, 254, 272, 274, 313], "cite": [11, 14, 59, 62], "submodul": [11, 59, 93, 195], "isabella": [11, 59], "muert": [11, 59], "buzz": [11, 59, 96, 139, 152, 198, 258, 270], "meson": [11, 25, 59, 66], "cmake_start": [11, 59], "finest": [12, 60], "buzzword": [12, 60, 168, 296], "craftsmanship": [12, 60], "virtu": [12, 60], "behold": [12, 60], "succinct": [12, 60], "hasn": [12, 60, 92, 94, 194, 196], "awhil": [12, 44, 60, 85, 146, 172, 265, 301], "deadlin": [12, 60], "colleagu": [12, 35, 60, 75, 91, 93, 97, 107, 154, 182, 186, 193, 195, 199, 225, 272, 311, 315], "incorpor": [12, 60, 92, 117, 194, 236], "hadn": [12, 44, 60, 85, 91, 132, 160, 193, 251, 278], "superpow": [12, 60, 131, 250], "permiss": [12, 37, 47, 60, 77, 87, 96, 100, 123, 132, 133, 198, 202, 242, 251, 252], "elev": [12, 60], "rock": [2, 12, 52, 60, 101, 123, 129, 142, 203, 242, 248, 261], "ka": [12, 60], "ching": [12, 60], "vocabulari": [12, 60], "dear": [13, 44, 61, 85, 168, 171, 296, 299], "subscrib": [13, 14, 16, 61, 62, 63], "thanksgiv": [13, 61], "exclus": [13, 24, 61, 65, 92, 152, 194, 270], "schedul": [2, 13, 15, 17, 35, 61, 64, 75, 101, 103, 130, 183, 203, 205, 249, 312], "massiv": [13, 24, 39, 61, 65, 79, 176, 305], "hadoop": [13, 61, 94, 100, 196, 202], "wareh": [13, 61], "bigqueri": [13, 61], "pandassql": [2, 13, 61], "duckdb": [13, 61, 150, 268], "datafram": [2, 13, 15, 26, 37, 41, 45, 48, 61, 67, 77, 81, 84, 88, 93, 97, 99, 119, 150, 166, 184, 195, 199, 201, 238, 268, 288, 313], "brilliantli": [13, 47, 61, 87, 101, 110, 177, 203, 229, 306], "olap": [13, 61, 168, 296], "bonu": [13, 47, 61, 87, 100, 135, 202, 254, 314], "fring": [13, 61, 129, 248], "accompani": [13, 61, 111, 117, 230, 236], "cuter": [13, 61], "babi": [13, 61, 109, 228], "duck": [13, 61, 161, 279], "hundr": [13, 44, 61, 85, 160, 172, 186, 278, 301, 314, 315], "sped": [13, 61, 100, 160, 202, 278], "jason": [13, 61], "brownle": [13, 61], "superfast": [13, 61], "chri": [13, 61], "moffitt": [13, 61], "vent": [13, 61], "chime": [13, 14, 61, 62], "poetri": [13, 61, 91, 93, 182, 193, 195, 311], "beneficiari": [13, 61, 184, 313], "affair": [13, 61], "interweb": [14, 17, 62, 64], "starter": [2, 14, 25, 42, 46, 48, 62, 66, 82, 86, 88, 97, 101, 111, 123, 131, 132, 151, 199, 203, 242, 250, 251, 269], "swing": [14, 62], "pygri": [14, 62], "geograph": [14, 62], "censu": [14, 62], "bureau": [14, 62], "tiger": [14, 62], "cartograph": [14, 62], "goedatafram": [14, 62], "benchmark": [2, 14, 15, 54, 62, 94, 95, 100, 101, 121, 130, 156, 165, 170, 196, 197, 202, 203, 240, 249, 274, 287, 298], "disclosur": [14, 62], "reddit": [14, 17, 25, 44, 62, 64, 66, 85, 149, 150, 155, 165, 171, 267, 268, 273, 287, 299], "miguel": [14, 62], "grinberg": [14, 62], "eminin": [14, 62], "despit": [14, 62, 146, 160, 165, 168, 265, 278, 287, 296], "falcon": [14, 62], "verb": [14, 62, 137, 138, 256, 257], "handler": [14, 26, 30, 62, 67, 71, 104, 123, 133, 157, 161, 182, 206, 242, 252, 275, 279, 311], "on_get": [14, 62], "hardest": [14, 62], "overcom": [14, 62, 160, 171, 176, 184, 278, 299, 305, 313], "stack": [14, 24, 28, 39, 45, 47, 48, 62, 65, 69, 79, 84, 87, 88, 93, 94, 106, 112, 113, 116, 120, 133, 154, 157, 160, 161, 164, 171, 176, 184, 186, 188, 195, 196, 224, 231, 232, 235, 239, 252, 272, 275, 278, 279, 286, 299, 305, 313, 315, 317], "mock": [14, 62, 93, 195], "kitchen": [14, 62], "sink": [14, 62], "hybrid": [14, 62], "discrep": [14, 62], "inherit": [14, 62, 129, 188, 248, 317], "satir": [14, 62], "abject": [14, 62], "vacat": [15, 149, 267], "aizham": [15, 110, 229], "zhetigenova": [15, 110, 229], "modin": 15, "dask": [15, 117, 236], "megabyt": 15, "terabyt": 15, "lightn": [15, 100, 202], "rust": [2, 15, 17, 24, 25, 64, 65, 66, 100, 109, 124, 164, 175, 183, 202, 228, 243, 286, 304, 312], "impress": [15, 17, 25, 26, 30, 64, 66, 67, 71, 93, 95, 100, 125, 160, 164, 195, 197, 202, 244, 278, 286], "playwright": 15, "shantnu": 15, "tiwari": 15, "abner": 15, "bogan": 15, "levenberg": [15, 165, 287], "marquardt": [15, 165, 287], "testament": 15, "spike": 15, "samir": 15, "leetcod": 15, "brought": [16, 26, 63, 67, 95, 160, 171, 197, 278, 299], "jupypterlab": [16, 63], "hopefulli": [16, 25, 63, 66, 113, 232], "portal": [16, 63, 124, 160, 243, 278], "makeov": [16, 63], "elementor": [16, 63], "upgrad": [16, 45, 47, 63, 84, 87, 91, 92, 100, 132, 136, 156, 164, 178, 182, 193, 194, 202, 251, 255, 274, 286, 307, 311], "unintuit": [16, 63, 127, 246], "bang": [16, 63], "li": [16, 63, 133, 138, 252, 257], "laura": [16, 63], "mersini": [16, 63], "houghton": [16, 63], "chapel": [16, 63], "hill": [16, 63, 156, 274], "sucker": [16, 63], "cosmologi": [16, 63], "snowbank": [17, 64], "roundup": [17, 64, 110, 229], "goodi": [17, 24, 64, 65, 109, 121, 171, 228, 240, 299], "retir": [17, 64, 190], "chemist": [2, 17, 58, 64, 126, 245], "tim": [17, 64, 144, 263], "hockswend": [17, 64], "dunder": [2, 17, 33, 34, 40, 64, 73, 74, 80, 101, 129, 161, 175, 186, 203, 248, 279, 304, 315], "ugliest": [2, 17, 64, 101, 203], "sauc": [2, 17, 64, 101, 203], "pycod": [17, 64], "yearli": [17, 64, 92, 194], "pythonhub": [17, 64], "regularli": [17, 64, 171, 299], "tidbit": [17, 64], "nuitka": [17, 64], "nevertheless": [17, 24, 47, 64, 65, 87, 123, 134, 136, 143, 144, 149, 182, 184, 186, 242, 253, 255, 262, 263, 267, 311, 313, 315], "cheatsheet": [17, 64], "cheat": [17, 24, 33, 34, 64, 65, 73, 74, 97, 199], "offici": [17, 64, 91, 92, 102, 118, 136, 175, 176, 193, 194, 204, 237, 255, 304, 305], "doc": [17, 36, 37, 39, 46, 64, 76, 77, 79, 86, 138, 144, 157, 161, 170, 175, 176, 180, 257, 263, 275, 279, 298, 304, 305, 309], "sheer": [17, 64, 156, 274], "scope": [17, 64, 121, 129, 131, 240, 248, 250], "lawrenc": [17, 64], "eagl": [17, 64], "forum": [24, 65], "clunki": [24, 36, 65, 76], "expens": [24, 39, 65, 79, 93, 100, 151, 164, 170, 195, 202, 269, 286, 298], "symptom": [24, 65], "decad": [24, 65], "horrifi": [24, 65], "jar": [24, 44, 65, 85], "maven": [24, 46, 65, 86], "gradl": [24, 65], "ivi": [24, 65], "muddi": [24, 33, 65, 73], "veteran": [24, 65, 101, 167, 203, 289], "flush": [24, 65], "pride": [2, 24, 60, 65], "ceas": [24, 65], "skinner": [24, 65], "tanenbaum": [24, 65], "anaconda": [24, 45, 65, 84, 95, 122, 197, 241], "conflict": [24, 28, 42, 65, 69, 82, 100, 117, 118, 153, 202, 236, 237, 271], "unfair": [24, 65, 160, 278], "fight": [24, 65, 118, 171, 183, 237, 299, 312], "swiss": [24, 65, 120, 182, 239, 311], "armi": [24, 65, 120, 182, 239, 311], "knife": [24, 65, 120, 182, 239, 311], "unaccept": [24, 65], "contrari": [24, 65, 168, 181, 296, 310], "degrad": [24, 65], "python_vers": [24, 65, 91, 153, 193, 271], "culprit": [24, 39, 65, 79], "preced": [24, 65, 106, 176, 224, 305], "disgust": [24, 65], "pyenv_root": [24, 65, 91, 193], "0rc2": [24, 65], "bullsey": [24, 47, 65, 87, 132, 251], "hesit": [24, 43, 65, 83, 102, 164, 204, 286], "lover": [24, 65, 146, 152, 265, 270], "appreci": [24, 65], "excerpt": [24, 65], "virtualenv": [24, 65, 118, 237], "virtualenvwrapp": [24, 65], "addition": [24, 65, 106, 157, 170, 224, 275, 298], "brows": [24, 25, 35, 65, 66, 75, 164, 286], "disadvantag": [24, 27, 65, 68, 95, 102, 127, 164, 175, 197, 204, 246, 286, 304], "destin": [24, 65, 136, 255], "obtus": [24, 65, 150, 268], "ensur": [24, 26, 28, 33, 34, 39, 47, 65, 67, 69, 73, 74, 79, 87, 95, 99, 103, 106, 117, 118, 123, 128, 130, 133, 138, 139, 143, 156, 161, 169, 175, 178, 181, 197, 201, 205, 224, 236, 237, 242, 247, 249, 252, 257, 258, 262, 274, 279, 297, 304, 307, 310], "deactiv": [24, 42, 65, 82, 153, 159, 271, 277], "prereleas": [24, 65], "unabl": [24, 65, 92, 194], "pypi": [2, 24, 39, 47, 65, 79, 87, 117, 168, 177, 182, 236, 296, 306, 311], "forg": [24, 65, 156, 168, 178, 274, 296, 307], "suppress": [24, 37, 47, 65, 77, 87, 129, 161, 168, 170, 175, 248, 279, 296, 298, 304], "commandnam": [24, 65], "rich": [24, 65, 95, 127, 137, 151, 157, 158, 160, 172, 197, 246, 256, 269, 275, 276, 278, 301], "transit": [24, 65, 95, 103, 116, 142, 197, 205, 235, 261], "dispos": [24, 65], "screenshot": [24, 25, 46, 65, 66, 86, 92, 93, 96, 97, 105, 115, 132, 133, 134, 161, 170, 175, 177, 194, 195, 198, 199, 223, 234, 251, 252, 253, 279, 298, 304, 306], "intric": [24, 65], "juptyerlab": [24, 65], "opt": [24, 65, 100, 117, 164, 202, 236, 286], "homebrew": [24, 65, 91, 193], "caskroom": [24, 65], "py310hf450f58_0": [24, 65], "restor": [24, 65, 122, 151, 161, 174, 241, 269, 279, 303], "condavalueerror": [24, 65], "lengthi": [24, 30, 65, 71, 89, 98, 191, 200], "rc": [24, 65], "conda_prefix": [24, 65], "pushd": [24, 65], "popd": [24, 65], "facto": [24, 25, 65, 66], "typescript": [25, 66, 111, 120, 122, 124, 188, 230, 239, 241, 243, 317], "cmake": [2, 25, 66], "upvot": [25, 66], "201": [25, 66], "albeit": [25, 66, 151, 161, 269, 279], "overengin": [25, 66], "spectacularli": [25, 66], "romantic": [25, 66], "brimston": [25, 66], "wail": [25, 66], "gnash": [25, 66], "teeth": [25, 66], "findboost": [25, 66], "find_packag": [25, 66], "archiv": [25, 66, 99, 130, 157, 164, 201, 249, 275, 286], "bootstrap": [25, 66, 117, 164, 236, 286], "poorli": [25, 66, 142, 175, 261, 304], "anxiou": [25, 66], "dealbreak": [25, 66], "vscode": [25, 28, 35, 36, 66, 69, 75, 76, 120, 133, 239, 252], "shortli": [25, 34, 66, 74, 109, 120, 175, 228, 239, 304], "palett": [25, 28, 35, 66, 69, 75, 120, 175, 239, 304], "visibl": [25, 28, 48, 66, 69, 88, 95, 132, 141, 197, 251, 260], "scene": [25, 40, 66, 80, 116, 129, 142, 153, 161, 178, 235, 248, 261, 271, 279, 307], "mount": [25, 66], "f5": [25, 28, 66, 69, 174, 303], "breakpoint": [25, 28, 66, 69, 164, 174, 286, 303], "spin": [25, 66, 111, 120, 132, 183, 230, 239, 251, 312], "hoc": [25, 66, 100, 144, 186, 202, 263, 315], "floppi": [25, 66, 103, 174, 205, 303], "apologi": [25, 66, 129, 130, 248, 249], "uphil": [25, 66], "devcontain": [25, 66], "room": [25, 27, 44, 66, 68, 85, 105, 150, 223, 268], "gcc": [25, 66, 164, 286], "defeat": [25, 66], "newli": [25, 28, 66, 69], "forck": [25, 66], "tmp": [25, 66], "debian_frontend": [25, 66], "noninteract": [25, 66], "uncom": [25, 66, 114, 233], "vcpkg": [25, 66], "su": [25, 66], "vcpkg_root": [25, 66], "forwardport": [25, 66], "postcreatecommand": [25, 66], "cpptool": [25, 66], "remoteus": [25, 66], "registry_nam": [25, 66], "your_account_nam": [25, 66], "fork": [25, 28, 66, 69, 96, 189, 198, 318], "cpu": [25, 66, 92, 94, 135, 141, 184, 194, 196, 254, 260, 313], "inact": [25, 66], "pan": [26, 67], "briefli": [26, 28, 33, 45, 67, 69, 73, 84, 89, 91, 92, 94, 116, 117, 118, 123, 144, 148, 151, 152, 157, 170, 171, 172, 180, 191, 193, 194, 196, 235, 236, 237, 242, 263, 266, 269, 270, 275, 298, 299, 301, 309], "shortag": [26, 67], "matplotib": [26, 67], "mainstream": [26, 67, 182, 188, 311, 317], "superset": [26, 67, 102, 106, 151, 176, 204, 224, 269, 305], "widget": [26, 67, 133, 160, 252, 278], "chart": [26, 67, 95, 99, 103, 105, 106, 107, 186, 197, 201, 205, 223, 224, 225, 315], "slider": [26, 67], "mediat": [26, 67], "payload": [26, 67], "bokeh": [26, 67], "vega": [26, 67], "altair": [26, 67], "plotli": [26, 67], "dash": [26, 67, 90, 158, 192, 276], "enterpris": [26, 67], "jupyterdash": [26, 67], "primetim": [26, 67], "ipympl": [26, 67], "labextens": [26, 67], "plane": [26, 67, 135, 254], "vector_1": [26, 67], "aco": [26, 67], "vector_2": [26, 67], "geometr": [26, 67, 119, 238], "magnitud": [26, 30, 39, 67, 71, 79, 95, 113, 119, 123, 141, 146, 160, 197, 232, 238, 242, 260, 265, 278], "get_label": [26, 67], "which_vector": [26, 67], "plot_lin": [26, 67], "xytext": [26, 67], "xy": [26, 67], "arrowprop": [26, 67], "get_color": [26, 67], "arrowstyl": [26, 67], "configure_graph_grid": [26, 67, 105, 223], "grid_min": [26, 67, 105, 223], "grid_max": [26, 67, 105, 223], "line_1": [26, 67], "line_2": [26, 67], "get_titl": [26, 67], "concaten": [26, 67, 113, 136, 155, 158, 232, 255, 273, 276], "marker": [26, 67, 106, 182, 224, 311], "rectangl": [26, 34, 48, 67, 74, 88, 106, 129, 139, 224, 248, 258], "resiz": [26, 34, 67, 74], "expos": [26, 30, 34, 67, 71, 74, 102, 114, 132, 133, 141, 146, 148, 169, 171, 175, 204, 233, 251, 252, 260, 265, 266, 297, 299, 304], "synonym": [26, 67, 109, 133, 228, 252], "itch": [26, 45, 67, 84], "vector_angl": [26, 67], "vectors_to_datafram": [26, 67], "vector1": [26, 67], "vector2": [26, 67], "linalg": [26, 67, 113, 148, 160, 165, 232, 266, 278, 287], "consolid": [26, 30, 67, 71], "do_upd": [26, 67], "intereract": [26, 67], "redraw": [26, 67], "clf": [26, 67], "handle_ev": [26, 67], "v1_x": [26, 67], "v1_y": [26, 67], "v2_x": [26, 67], "v2_y": [26, 67], "repack": [26, 67], "slider_config": [26, 67], "intslid": [26, 67], "slider_control": [26, 67], "win": [2, 26, 42, 44, 67, 82, 85, 94, 100, 104, 120, 124, 129, 157, 167, 184, 196, 202, 206, 239, 243, 248, 275, 289, 313], "award": [26, 67], "unus": [26, 47, 67, 87], "repackag": [26, 67], "formerli": [26, 67, 184, 313], "37": [26, 28, 41, 67, 69, 81, 156, 274], "lat": [26, 27, 67, 68], "norm1": [26, 67], "norm2": [26, 67], "cuemath": [26, 67], "geometri": [26, 67, 119, 171, 238, 299], "cos_of_angl": [26, 67], "availbl": [26, 67, 161, 279], "figsiz": [26, 48, 67, 88, 105, 106, 162, 223, 224, 280], "workaround": [26, 67, 100, 151, 171, 202, 269, 299], "cleans": [27, 68], "scrub": [27, 68], "hous": [27, 45, 68, 84, 171, 180, 182, 299, 309, 311], "dushanb": [27, 68], "floor": [27, 68, 152, 270], "dushanbe_hous": [27, 68], "trust": [27, 36, 44, 68, 76, 85, 170, 298], "5579": [27, 68], "unnam": [27, 68, 137, 172, 256, 301], "data1": [27, 68], "drope": [27, 68], "inplac": [27, 48, 68, 88], "del": [27, 40, 68, 80, 158, 181, 276, 310], "data2": [27, 68], "ramg": [27, 68], "df": [27, 41, 68, 81, 95, 99, 100, 113, 115, 116, 166, 178, 197, 201, 202, 232, 234, 235, 288, 307], "df1": [27, 68], "5000000": [27, 39, 68, 79], "number_of_room": [27, 68], "latitud": [27, 68], "longitud": [27, 68], "set_axi": [27, 68], "lon": [27, 68], "isnul": [27, 48, 68, 88], "1849": [27, 68], "int64": [27, 68, 95, 100, 113, 116, 156, 197, 202, 232, 235, 274], "notnul": [27, 68], "3730": [27, 68], "panada": [27, 68], "fillna": [27, 68], "nupmi": [27, 68], "to_replac": [27, 68], "dropna": [27, 68, 95, 197], "immut": [27, 30, 68, 71, 129, 131, 138, 146, 156, 158, 248, 250, 257, 265, 274, 276], "set_index": [27, 68, 100, 202], "109": [27, 68], "3732": [27, 68], "1139": [27, 68], "unusu": [27, 68, 123, 169, 242, 297], "azia": [27, 68], "bahir": [27, 68], "erlan": [27, 68], "marri": [27, 68], "strip": [27, 68, 158, 276], "iat": [27, 68], "regex": [27, 68], "aim": [28, 69, 100, 120, 127, 181, 185, 202, 239, 246, 310], "debugg": [28, 69, 93, 97, 101, 107, 111, 151, 164, 187, 195, 199, 203, 225, 230, 269, 286, 316], "zip": [28, 40, 47, 69, 80, 87, 99, 123, 134, 157, 176, 177, 182, 201, 242, 253, 275, 305, 306, 311], "marketplac": [28, 69, 120, 239], "workspac": [28, 69], "dismiss": [28, 69, 171, 299], "session": [28, 44, 69, 85, 98, 101, 114, 161, 169, 174, 200, 203, 233, 279, 297, 303], "perfect_math": [28, 69], "somebodi": [28, 69], "nemesi": [28, 69, 137, 256], "brad": [28, 69], "bumblekei": [28, 69], "architect": [28, 69], "certifi": [28, 69], "copyright": [28, 69, 185], "bradlei": [28, 69], "robust": [28, 69, 106, 116, 117, 157, 160, 161, 172, 224, 235, 236, 275, 278, 279, 301], "unlimit": [28, 69, 176, 305], "get_numbers_from_dictionari": [28, 69], "dct": [28, 69, 144, 263], "tupl": [28, 30, 40, 69, 71, 80, 113, 119, 129, 131, 135, 141, 143, 147, 152, 157, 172, 176, 177, 232, 238, 248, 250, 254, 260, 262, 264, 270, 275, 301, 305, 306], "test_get_numbers_from_dictionari": [28, 69], "printout": [28, 34, 69, 74], "bond": [28, 69], "agent": [28, 69], "jame": [28, 44, 69, 85], "agent_numb": [28, 69], "__name__": [28, 30, 39, 47, 69, 71, 79, 87, 123, 157, 169, 242, 275, 297], "__main__": [28, 30, 39, 69, 71, 79, 123, 129, 157, 169, 242, 248, 275, 297], "paid": [28, 45, 69, 84, 96, 114, 120, 142, 151, 160, 171, 185, 187, 198, 233, 239, 261, 269, 278, 299, 316], "submit": [28, 46, 47, 69, 86, 87, 104, 124, 206, 243], "upper": [28, 69, 97, 106, 123, 139, 143, 147, 148, 156, 158, 162, 164, 174, 199, 224, 242, 258, 262, 264, 266, 274, 276, 280, 286, 303], "fashion": [28, 30, 69, 71, 100, 167, 186, 202, 289, 315], "girlfriends_per_episod": [28, 69], "shaken_not_stir": [28, 69], "ppk_calib": [28, 69], "380": [28, 69], "rerun": [28, 69, 174, 303], "alright": [28, 37, 69, 77, 130, 171, 249, 299], "shouldn": [28, 37, 39, 69, 77, 79, 107, 123, 129, 131, 133, 161, 162, 225, 242, 248, 250, 252, 279, 280], "f9": [28, 69], "ON": [28, 69, 157, 169, 275, 297], "faint": [28, 69, 150, 268], "toolbar": [28, 69], "hover": [28, 39, 69, 79, 90, 132, 164, 175, 192, 251, 286, 304], "f10": [28, 69], "Into": [28, 69, 174, 303], "f11": [28, 69], "caller": [28, 69, 123, 133, 137, 138, 161, 172, 242, 252, 256, 257, 279, 301], "restart": [28, 47, 69, 87, 89, 98, 160, 191, 200, 278], "cursor": [28, 69, 160, 161, 278, 279], "temporarili": [28, 69, 123, 242], "narrow": [28, 42, 69, 82, 95, 120, 130, 138, 144, 161, 177, 197, 239, 249, 257, 263, 279, 306], "uncaught": [28, 69], "neatli": [28, 69, 169, 170, 177, 297, 298, 306], "blank": [28, 35, 69, 75, 114, 129, 136, 164, 233, 248, 255, 286], "usr": [28, 69, 91, 117, 193, 236], "ging": [28, 69], "pythonfil": [28, 69], "debugpi": [28, 69], "52437": [28, 69], "johnl": [28, 69], "ockwood": [28, 69], "frozen": [28, 69, 129, 134, 176, 248, 253, 305], "envirom": [28, 69], "newlin": [28, 69, 177, 306], "intellisens": [28, 69, 120, 164, 239, 286], "fwlink": [28, 69, 164, 286], "linkid": [28, 69, 164, 286], "830387": [28, 69, 164, 286], "integratedtermin": [28, 69], "justmycod": [28, 69], "internalconsol": [28, 69], "internalconsoleopt": [28, 69], "openonsessionstart": [28, 69], "inconsist": [28, 69, 95, 126, 144, 184, 197, 245, 263, 313], "misfit": [28, 69], "jetbrain": [28, 69, 97, 120, 151, 167, 199, 239, 269, 289], "subscript": [28, 69, 138, 257], "whet": [28, 69, 93, 195], "appetit": [28, 69, 93, 137, 195, 256], "vanilla": [28, 69, 92, 93, 130, 157, 160, 170, 194, 195, 249, 275, 278, 298], "02": [28, 41, 47, 69, 81, 87, 95, 117, 156, 197, 236, 274], "spirit": [29, 30, 34, 70, 71, 74, 138, 142, 257, 261], "driveinfo": [29, 70], "directoryinfoexampl": [29, 70], "writelin": [29, 70], "dilist": [29, 70], "foreach": [29, 70, 141, 260], "di": [29, 70, 129, 175, 248, 304], "getdirectori": [29, 70], "fullnam": [29, 70], "fileinfo": [29, 70, 114, 233], "fi": [29, 70, 164, 286], "getfil": [29, 70], "ncreat": [29, 70], "nlength": [29, 70], "creationtim": [29, 70], "readkei": [29, 70], "glad": [30, 71], "beautifulli": [30, 71], "claim": [30, 39, 43, 71, 79, 83, 94, 102, 107, 118, 121, 143, 160, 165, 173, 178, 196, 204, 225, 237, 240, 262, 278, 287, 302, 307], "__init__": [30, 33, 34, 39, 46, 71, 73, 74, 79, 86, 100, 129, 134, 139, 141, 144, 146, 153, 161, 169, 181, 182, 202, 248, 253, 258, 260, 263, 265, 271, 279, 297, 310, 311], "abracadabra": [30, 71], "unburden": [30, 71], "pointer": [30, 71], "javaspeak": [30, 71], "burden": [30, 71], "misfortun": [30, 71], "underbar": [30, 34, 71, 74, 101, 129, 131, 203, 248, 250], "gatewai": [30, 71, 171, 299], "inner": [30, 71, 113, 116, 148, 176, 232, 235, 266, 305], "0x110fb0af0": [30, 71], "paradox": [30, 71], "beautifi": [30, 71], "readabl": [30, 34, 39, 71, 74, 79, 93, 94, 100, 102, 135, 136, 144, 146, 156, 157, 166, 168, 172, 195, 196, 202, 204, 254, 255, 263, 265, 274, 275, 288, 296, 301], "needn": [30, 71, 116, 235], "secondli": [30, 34, 44, 71, 74, 85, 92, 117, 120, 127, 128, 131, 133, 138, 141, 154, 157, 169, 184, 194, 236, 239, 246, 247, 250, 252, 257, 260, 272, 275, 297, 313], "points_list": [30, 71], "points_dict": [30, 71], "marti": [30, 71], "mathmajor": [30, 71], "unimpress": [30, 71], "clamor": [30, 71], "subtract": [30, 41, 71, 81, 113, 141, 152, 232, 260, 270], "__sub__": [30, 71], "proud": [30, 71, 104, 185, 206], "excitedli": [30, 71], "pandem": [30, 71, 95, 197], "mildli": [30, 71], "oddbal": [30, 71], "pour": [30, 71], "incid": [30, 71], "mr": [30, 71], "__len__": [30, 71], "jot": [30, 44, 71, 85], "distance_from_origin": [30, 71], "obscur": [30, 71], "imaginari": [30, 71, 136, 162, 255, 280], "firm": [30, 71, 124, 148, 243, 266], "__add__": [30, 34, 71, 74], "__mul__": [30, 71], "__div__": [30, 71], "__eq__": [30, 33, 40, 71, 73, 80, 101, 169, 176, 203, 297, 305], "nd": [30, 71, 148, 266], "__ne__": [30, 71], "__hash__": [30, 33, 71, 73, 129, 131, 176, 248, 250, 305], "hashabl": [30, 71, 131, 176, 250, 305], "hash": [30, 33, 71, 73, 98, 118, 129, 131, 176, 200, 237, 248, 250, 305], "hypermegagiantcarsal": [30, 71], "6300": [30, 71], "toyota": [30, 71], "cruiser": [30, 71], "274117": [30, 71], "black": [30, 71, 171, 299], "2899": [30, 71], "ford": [30, 71, 171, 299], "se": [30, 40, 71, 80, 96, 127, 171, 177, 198, 246, 299, 306], "2011": [30, 71, 130, 249], "190552": [30, 71], "silver": [30, 71], "5350": [30, 71], "dodg": [30, 71], "mpv": [30, 71], "2018": [30, 45, 71, 84], "39590": [30, 71], "25000": [30, 71], "64146": [30, 71], "blue": [30, 71, 106, 224], "duplic": [2, 30, 71, 109, 135, 136, 139, 147, 162, 228, 254, 255, 258, 264, 280], "namedtupl": [30, 71, 101, 203], "carlist": [30, 71], "tuple_nam": [30, 71], "brand": [30, 44, 71, 85, 91, 93, 100, 110, 120, 123, 155, 164, 171, 193, 195, 202, 229, 239, 242, 273, 286, 299], "mileag": [30, 71, 173, 184, 302, 313], "tuple_class": [30, 71], "__iter__": [30, 71, 141, 260], "list_iter": [30, 71], "__next__": [30, 71, 141, 260], "redun": [30, 71], "stopiter": [30, 71, 141, 260], "exhaust": [30, 71, 113, 121, 141, 155, 232, 240, 260, 273], "unpack": [30, 71, 129, 131, 144, 176, 248, 250, 263, 305], "car_tupl": [30, 71], "nerd": [30, 42, 45, 71, 82, 84, 151, 269], "__dunder__": [30, 71], "__doc__": [30, 71], "inspect": [30, 71, 105, 106, 175, 223, 224, 304], "explore_dund": [30, 71], "033": [30, 71], "1m": [30, 71], "0m": [30, 71], "any_var": [30, 71], "dir_list": [30, 71], "__": [30, 71, 178, 307], "endswith": [30, 71], "__getattribute__": [30, 71], "ansi": [30, 71, 130, 249], "necessarili": [30, 71, 138, 144, 155, 186, 257, 263, 273, 315], "__class__": [30, 71], "bytes_or_buff": [30, 71], "buffer": [30, 71, 141, 260], "repr": [30, 71, 113, 129, 130, 186, 232, 248, 249, 315], "sy": [30, 46, 71, 86, 93, 127, 141, 153, 156, 157, 182, 195, 246, 260, 271, 274, 275, 311], "getdefaultencod": [30, 71], "__contains__": [30, 71], "__delattr__": [30, 71], "delattr": [30, 71], "__dir__": [30, 71], "__format__": [30, 71], "format_spec": [30, 71], "__ge__": [30, 40, 71, 80, 129, 248], "getattr": [30, 71], "__getitem__": [30, 71], "__getnewargs__": [30, 71], "__gt__": [30, 71, 129, 248], "accur": [30, 39, 71, 79, 161, 171, 279, 299], "__init_subclass__": [30, 71], "overridden": [30, 34, 71, 74, 176, 305], "__le__": [30, 71, 129, 248], "__lt__": [30, 40, 71, 80, 129, 248], "__mod__": [30, 71], "__new__": [30, 71], "__reduce__": [30, 71], "pickl": [30, 71], "__reduce_ex__": [30, 71], "__rmod__": [30, 71], "__rmul__": [30, 71], "__setattr__": [30, 71], "setattr": [30, 71], "__sizeof__": [30, 71], "__subclasshook__": [30, 71], "issubclass": [30, 71], "abcmeta": [30, 71], "__subclasscheck__": [30, 71], "notimpl": [30, 71], "cach": [30, 45, 71, 84, 94, 95, 100, 132, 141, 154, 196, 197, 202, 251, 260, 272], "dataclass": [2, 30, 34, 71, 74, 101, 134, 135, 138, 144, 149, 161, 172, 176, 184, 203, 253, 254, 257, 263, 267, 279, 301, 305, 313], "entiti": [31, 72, 149, 151, 169, 267, 269, 297], "pprint": [31, 37, 72, 77, 127, 144, 182, 246, 263, 311], "puzzler": [31, 72], "poll": [31, 72, 135, 254], "analyst": [33, 73], "contend": [33, 73, 171, 184, 299, 313], "dive": [33, 34, 37, 45, 73, 74, 77, 84, 101, 129, 136, 141, 148, 157, 166, 203, 248, 255, 260, 266, 275, 288], "guarante": [33, 73, 119, 129, 147, 148, 161, 162, 238, 248, 264, 266, 279, 280], "gold": [33, 73, 138, 186, 257, 315], "medal": [33, 73, 171, 299], "get_unique_el": [33, 73], "too_much_chees": [33, 73], "chees": [33, 73, 129, 186, 248, 315], "pizza": [33, 73], "chicken": [33, 73, 148, 176, 266, 305], "grape": [33, 73], "fromkei": [33, 73], "ordereddict": [33, 73], "get_unique_elements_ord": [33, 73], "unique_ord": [33, 73], "eturn": [33, 73], "__repr__": [33, 34, 73, 74, 101, 130, 144, 169, 175, 178, 203, 249, 263, 297, 304, 307], "melissa": [33, 73], "9193612495": [33, 73], "jon": [33, 73], "5083412318": [33, 73], "ida": [33, 73], "7043756942": [33, 73], "intermedi": [33, 73, 167, 172, 181, 182, 289, 301, 310, 311], "a_dict": [33, 73, 176, 305], "a_set": [33, 73], "sale": [33, 73, 104, 136, 138, 142, 172, 206, 255, 257, 261, 301], "oubl": [33, 73], "score": [33, 37, 44, 73, 77, 85, 97, 100, 131, 136, 171, 199, 202, 250, 255, 299, 314], "track": [33, 34, 36, 44, 73, 74, 76, 85, 103, 113, 118, 130, 135, 174, 184, 205, 232, 237, 249, 254, 303, 313], "hashtabl": [33, 73, 131, 176, 250, 305], "counter": [33, 73, 101, 131, 141, 144, 176, 203, 250, 260, 263, 305], "demo": [33, 37, 73, 77, 96, 97, 104, 109, 123, 130, 134, 137, 141, 146, 157, 159, 160, 161, 162, 182, 198, 199, 206, 228, 242, 249, 253, 256, 260, 265, 275, 277, 278, 279, 280, 311], "father": [33, 73], "wood": [33, 73], "woodchuck": [33, 73], "chuck": [33, 73], "split": [33, 73, 93, 113, 131, 141, 143, 147, 157, 158, 172, 176, 177, 182, 195, 232, 250, 260, 262, 264, 275, 276, 301, 305, 306, 311], "squirrel": [33, 73], "punctuat": [33, 73, 131, 137, 162, 250, 256, 280], "bigger": [33, 47, 73, 87], "terminologi": [34, 47, 74, 87, 182, 311], "cooki": [34, 74], "cutter": [34, 74], "christma": [34, 74, 101, 136, 203, 255], "dog": [34, 44, 74, 85, 135, 158, 176, 254, 276, 305], "fritz": [34, 74], "smokei": [34, 74], "convent": [34, 46, 74, 86, 95, 116, 126, 127, 137, 138, 144, 148, 160, 175, 176, 197, 235, 245, 246, 256, 257, 263, 266, 278, 304, 305], "convention": [34, 74], "interview": [34, 74, 94, 104, 139, 143, 152, 155, 187, 196, 206, 258, 262, 270, 273, 316], "encapsul": [34, 47, 74, 87, 93, 138, 141, 195, 257, 260], "bundl": [34, 47, 74, 87, 95, 117, 197, 236], "subtyp": [34, 74], "polymorph": [34, 74], "fanci": [34, 44, 74, 85, 138, 171, 190, 257, 299, 314], "enforc": [34, 74, 91, 96, 104, 137, 139, 175, 186, 188, 193, 198, 206, 256, 258, 304, 315, 317], "dry": [34, 74, 129, 248], "deceas": [34, 74], "parrot": [34, 40, 74, 80, 147, 176, 264, 305], "sketch": [34, 74], "elips": [34, 74], "canva": [34, 74], "orang": [34, 74], "child": [34, 74, 171, 186, 299, 315], "edibl": [34, 74], "hop": [34, 74, 95, 197], "pit": [34, 74], "bull": [34, 74], "fluffi": [34, 74], "enclos": [34, 74, 103, 136, 141, 143, 158, 205, 255, 260, 262, 276], "parent_class_nam": [34, 74], "other_paramet": [34, 74], "poor": [34, 74, 97, 100, 115, 116, 129, 131, 133, 199, 202, 234, 235, 248, 250, 252], "bunni": [34, 74], "overus": [34, 74], "ini": [34, 74, 127, 246], "admittedli": [34, 39, 74, 79, 104, 116, 120, 123, 146, 160, 206, 235, 239, 242, 265, 278], "borderlin": [34, 74], "composit": [34, 74, 119, 238], "first_nam": [34, 74, 144, 176, 263, 305], "last_nam": [34, 74, 176, 305], "las_nam": [34, 74], "ben": [34, 74], "franklin": [34, 74], "postmast": [34, 74], "usp": [34, 74], "achiev": [34, 40, 47, 74, 80, 87, 99, 106, 107, 171, 184, 201, 224, 225, 299, 313], "emailaddress": [34, 74], "husband": [34, 74], "wive": [34, 74], "is_confirm": [34, 74], "__str__": [34, 74, 101, 129, 130, 136, 175, 203, 248, 249, 255, 304], "pitfal": [34, 74], "tempt": [34, 74, 94, 138, 144, 165, 171, 196, 257, 263, 287, 299], "wrapper": [34, 74, 109, 123, 124, 146, 162, 182, 184, 228, 242, 243, 265, 280, 311, 313], "eat": [34, 74, 137, 157, 256, 275], "abstractmethod": [34, 74], "typeerror": [34, 74, 113, 133, 137, 144, 146, 158, 169, 186, 232, 252, 256, 263, 265, 276, 297, 315], "cake": [34, 74, 157, 275], "snooz": [34, 74], "tweeti": [34, 74], "sugar": [34, 74], "clearer": [34, 74], "spot": [34, 74, 160, 184, 189, 278, 313, 318], "rewrit": [34, 39, 74, 79, 135, 137, 152, 164, 254, 256, 270, 286], "hierarchi": [34, 35, 74, 75, 91, 133, 186, 193, 252, 315], "thirsti": [34, 74], "gang": [34, 74], "luciano": [34, 74, 175, 304], "ramalho": [34, 74, 175, 304], "fluent": [34, 40, 74, 80, 175, 304], "gtd": [35, 75], "smart": [35, 39, 75, 79, 170, 298], "lookup": [35, 39, 75, 79, 101, 130, 131, 157, 161, 176, 203, 249, 250, 275, 279, 305], "coolest": [35, 75, 95, 197], "instantli": [35, 75, 120, 239], "inbox": [35, 75], "wiki": [35, 47, 75, 87, 103, 175, 205, 304], "hit": [35, 44, 75, 85, 91, 117, 133, 139, 185, 193, 236, 252, 258], "hashtag": [35, 44, 75, 85, 173, 302], "silli": [35, 75], "backlink": [35, 75], "interconnect": [35, 75], "dismal": [35, 75], "vault": [35, 75], "prudent": [35, 75], "calendar": [35, 75], "appoint": [35, 75], "daili": [35, 44, 75, 85, 120, 173, 239, 302], "breaker": [35, 75], "salespeopl": [35, 75], "schema": [35, 75, 100, 112, 127, 156, 202, 231, 246, 274], "hierarch": [35, 75, 110, 156, 229, 274], "dedic": [35, 75, 101, 105, 136, 203, 223, 255], "exacerb": [36, 76, 157, 171, 275, 299], "tenet": [36, 76], "scatter": [36, 76, 162, 280], "trello": [36, 76], "haphazard": [36, 76], "bore": [36, 44, 76, 85], "reorgan": [36, 76], "metadata": [36, 76, 127, 153, 169, 246, 271, 297], "dendron": [2, 36, 75, 76], "openpyxl": [37, 77, 156, 274], "xlx": [37, 77], "gspread_datafram": [37, 77], "upload": [37, 77, 99, 114, 123, 153, 201, 233, 242, 271], "employe": [37, 77, 107, 129, 225, 248], "hurdl": [37, 77, 165, 287], "loyal": [37, 77], "fanboi": [37, 77, 93, 151, 195, 269], "somedai": [37, 77, 103, 167, 205, 289], "sorri": [37, 77, 93, 110, 132, 133, 149, 152, 158, 161, 195, 229, 251, 252, 267, 270, 276, 279], "spread": [37, 77, 137, 176, 256, 305], "authent": [37, 77, 93, 98, 103, 195, 200, 205], "gcp": [37, 77], "googlesheetsaccess": [37, 77], "quidditch": [37, 77], "service_account": [37, 77], "appdata": [37, 77], "clipboard": [37, 77, 123, 124, 242, 243], "gc": [37, 77], "sh": [37, 47, 77, 87, 132, 164, 251, 286], "analyticssnapshot": [37, 77, 116, 235], "s_rang": [37, 77], "a1": [37, 77], "d4": [37, 77], "1800": [37, 77], "280": [37, 77, 160, 278], "542": [37, 77], "1700": [37, 77], "298": [37, 39, 77, 79], "470": [37, 77], "47": [37, 39, 77, 79, 123, 242], "2534": [37, 77], "436": [37, 77], "481": [37, 77], "rjust": [37, 77], "unlink": [37, 77], "range_copi": [37, 77], "new_worksheet": [37, 77], "add_worksheet": [37, 77], "c1": [37, 77], "entrant": [37, 47, 77, 87, 141, 169, 176, 260, 297, 305], "okai": [37, 77, 89, 90, 191, 192], "get_as_datafram": [37, 77], "set_with_datafram": [37, 77], "worksheet_titl": [37, 77], "worksheetnotfound": [37, 77], "df_test": [37, 77], "64": [37, 39, 77, 79, 91, 113, 135, 157, 193, 232, 254, 275, 314], "df_read": [37, 77], "usecol": [37, 77], "nrow": [37, 77], "skiprow": [37, 77], "include_column_head": [37, 77], "casual": [37, 77], "offic": [37, 44, 77, 85], "moot": [37, 77, 108, 151, 227, 269], "oner": [37, 77, 165, 287], "alloc": [39, 79, 95, 146, 161, 197, 265, 279], "viewer": [39, 79, 144, 263], "dictum": [39, 79], "prematur": [39, 79], "evil": [39, 79, 171, 299], "bottleneck": [39, 79, 94, 196], "lifecycl": [39, 47, 79, 87, 176, 305], "convinc": [39, 79, 167, 171, 289, 299], "coars": [39, 79], "bench": [39, 79, 114, 233], "deduc": [39, 79, 106, 224], "crunch": [39, 79], "likewis": [39, 79, 102, 117, 204, 236], "exagger": [39, 79], "cryptocurr": [39, 79], "fry": [39, 79], "egg": [39, 79, 137, 256], "gpu": [39, 79, 93, 94, 117, 184, 195, 196, 236, 313], "dmv": [39, 79], "paperwork": [39, 79], "codebas": [39, 79, 91, 94, 136, 138, 161, 193, 196, 255, 257, 279], "ineffici": [39, 79, 136, 156, 255, 274], "states_list": [39, 79], "alabama": [39, 79], "alaska": [39, 79], "ak": [39, 79], "list_lookup": [39, 79], "state_nam": [39, 79], "states_dct": [39, 79], "dict_lookup": [39, 79], "test_lookup": [39, 79], "code1": [39, 79], "code2": [39, 79], "stare": [39, 79], "bump": [39, 79, 112, 136, 141, 153, 170, 231, 255, 260, 271, 298], "contriv": [39, 79, 133, 160, 169, 252, 278, 297], "slowdown": [39, 79, 146, 265], "impos": [39, 79], "overhead": [39, 79, 94, 121, 133, 167, 175, 196, 240, 252, 289, 304], "pstat": [39, 79], "cumul": [39, 44, 79, 85, 171, 299], "200000": [39, 79], "descend": [39, 79, 113, 116, 232, 235], "ncall": [39, 79, 95, 197], "tottim": [39, 79], "percal": [39, 79], "cumtim": [39, 79], "lineno": [39, 79], "breakdown": [39, 79, 120, 239], "384": [39, 79], "019": [39, 79], "027": [39, 79], "troublesom": [39, 79, 127, 138, 246, 257], "cleaner": [39, 79], "sortkei": [39, 79], "pr": [39, 79], "stat": [39, 79], "sort_stat": [39, 79], "strip_dir": [39, 79], "print_stat": [39, 79], "compris": [39, 79], "uninterest": [39, 79], "nearli": [39, 79, 143, 262], "programmat": [39, 79, 100, 134, 202, 253], "york": [39, 79, 171, 299], "nsec": [39, 79], "500000": [39, 79], "573": [39, 79], "result_long": [39, 79], "stmt": [39, 79, 146, 265], "result_short": [39, 79], "subtli": [39, 79], "instrument": [39, 43, 79, 83, 171, 299], "lprof": [39, 79], "unwieldi": [39, 79, 93, 100, 195, 202], "load_ext": [39, 79, 129, 168, 175, 248, 296, 304], "10_000_000": [39, 79], "039": [39, 79], "029": [39, 79], "010": [39, 79], "038": [39, 79], "builtin": [39, 79, 92, 194], "_lsprof": [39, 79], "718": [39, 79, 160, 278], "411": [39, 79], "260": [39, 79], "listcomp": [39, 79], "047": [39, 79], "convers": [39, 41, 79, 81, 100, 127, 146, 156, 158, 168, 171, 175, 202, 246, 265, 274, 276, 296, 299, 304], "n64": [39, 79], "drag": [39, 79, 95, 197], "freed": [39, 79, 161, 279], "garbag": [39, 79, 94, 102, 175, 196, 204, 304], "collector": [39, 79, 102, 204], "asymmetr": [39, 79], "dealloc": [39, 79, 161, 279], "memoryeat": [39, 79], "big_list": [39, 79], "make_arrai": [39, 79], "big_arrai": [39, 79], "delete_arrai": [39, 79], "delete_list": [39, 79], "use_memori": [39, 79], "memory_demo": [39, 79], "892": [39, 79], "mib": [39, 79], "increment": [39, 79, 105, 123, 131, 161, 162, 175, 176, 223, 242, 250, 279, 280, 304, 305], "306": [39, 79], "967": [39, 79], "76": [39, 79, 131, 160, 250, 278], "584": [39, 79], "84": [39, 79, 141, 162, 171, 260, 280, 299, 314], "382": [39, 79], "mpru": [39, 79], "attest": [39, 79], "offend": [39, 79, 119, 156, 238, 274], "flag": [39, 79, 114, 233], "poke": [39, 79], "scrun": [39, 79], "same_str": [40, 80], "same_numb": [40, 80], "same_boolean": [40, 80], "pig": [40, 80], "canari": [40, 80], "favorite_websit": [40, 80], "same_dictionari": [40, 80], "key_ad": [40, 80], "key_remov": [40, 80], "value_chang": [40, 80], "type_chang": [40, 80], "type_aware_equ": [40, 80], "favorite_food": [40, 80], "chilli": [40, 80], "list_copi": [40, 80], "foods_as_set": [40, 80], "second_set": [40, 80], "tuple1": [40, 80], "tuple2": [40, 80], "array1": [40, 80], "array_copi": [40, 80], "ubiquit": [40, 80, 144, 156, 171, 184, 188, 263, 274, 299, 313, 317], "functool": [40, 80], "total_ord": [40, 80], "arithmet": [41, 81, 161, 184, 279, 313], "strptime": [41, 81], "date_str": [41, 81, 130, 152, 249, 270], "dd": [41, 81], "yyyi": [41, 81], "directivemeaningreturn": [41, 81], "aabbrevi": [41, 81], "weekdayssun": [41, 81], "aful": [41, 81], "weekdayssundai": [41, 81], "wweekdai": [41, 81], "saturday0": [41, 81], "ddai": [41, 81], "pad": [41, 81, 130, 171, 249, 299], "numbers01": [41, 81], "babbrevi": [41, 81], "monthsjan": [41, 81], "feb": [41, 81, 116, 130, 235, 249], "bfull": [41, 81], "monthsjanuari": [41, 81], "mmonth": [41, 81], "yyear": [41, 81], "numbers00": [41, 81], "numbers0001": [41, 81], "0002": [41, 81], "0003": [41, 81], "9998": [41, 81], "9999": [41, 81, 130, 249], "hhour": [41, 81], "ihour": [41, 81], "pthe": [41, 81], "pmam": [41, 81], "mminut": [41, 81], "ssecond": [41, 81], "fmicrosecond": [41, 81], "numbers000000": [41, 81], "000002": [41, 81], "999999": [41, 81], "zutc": [41, 81], "offset": [41, 81, 101, 106, 160, 203, 224, 278], "hhmm": [41, 81], "ss": [41, 81], "ffffff": [41, 81], "0000": [41, 81], "0400": [41, 81], "1030": [41, 81, 130, 249], "063415": [41, 81], "030712": [41, 81], "345216": [41, 81], "ztime": [41, 81], "nameutc": [41, 81], "gmt": [41, 81], "jdai": [41, 81], "numbers001": [41, 81], "003": [41, 81], "366": [41, 81], "uweek": [41, 81], "week00": [41, 81], "wweek": [41, 81], "cdate": [41, 81], "representationmon": [41, 81], "jun": [41, 81], "xdate": [41, 81], "representation01": [41, 81], "0201": [41, 81], "200214": [41, 81], "xtime": [41, 81], "representation21": [41, 81], "date_obj": [41, 81], "ncurrent": [41, 81], "pytz": [41, 81, 118, 237], "berlin": [41, 81], "timezon": [41, 81, 127, 130, 246, 249], "datetime_berlin": [41, 81], "all_timezon": [41, 81], "contin": [41, 81, 95, 115, 197, 234], "date_todai": [41, 81], "textual": [41, 81], "strftime": [41, 81], "weekdai": [41, 81, 136, 255], "time_now": [41, 81], "ntime": [41, 81], "to_datetim": [41, 81], "frame": [41, 44, 48, 81, 85, 88, 94, 106, 115, 116, 156, 166, 168, 173, 178, 196, 224, 234, 235, 274, 288, 296, 302, 307], "from_dict": [41, 81], "alex": [41, 81, 158, 276], "mia": [41, 81], "bena": [41, 81], "birthdai": [41, 81, 130, 149, 249, 267], "1975": [41, 81], "2005": [41, 81, 184, 313], "07": [41, 81, 100, 123, 130, 202, 242, 249], "uk": [41, 81], "kg": [41, 81], "kz": [41, 81], "datefram": [41, 81], "timedelta": [41, 81, 101, 127, 203, 246], "_get_valu": [41, 81], "date1": [41, 81], "date2": [41, 81], "parser": [41, 81, 95, 127, 133, 150, 157, 177, 197, 246, 252, 268, 275, 306], "dates_list": [41, 81], "243860": [41, 81], "nov": [41, 81], "40am": [41, 81], "septemb": [41, 81], "2007": [41, 81], "1998": [41, 81], "30pm": [41, 81], "08": [41, 81, 127, 130, 246, 249], "586525": [41, 81], "6th": [41, 81], "13t20": [41, 81], "25z": [41, 81], "to_timezon": [41, 81], "tzinfo": [41, 81, 127, 130, 246, 249], "america": [41, 81, 130, 249], "new_york": [41, 81], "x_float": [41, 81], "x_int": [41, 81], "intig": [41, 81], "x_str": [41, 81], "entrench": [42, 44, 82, 85, 137, 256], "hat": [42, 82, 153, 271], "heavyweight": [42, 82, 97, 199], "exchang": [42, 82], "bloatwar": [42, 82], "lightweight": [42, 47, 82, 87, 93, 97, 120, 164, 167, 195, 199, 239, 286, 289], "bloat": [42, 82], "grep": [42, 82], "miniconda2": [42, 82], "miniconda3": [42, 82], "revis": [42, 82, 166, 168, 288, 296], "datasci": [42, 45, 82, 84], "cleanli": [42, 82], "freedom": [42, 44, 82, 85, 171, 299], "tradit": [42, 44, 82, 85, 97, 101, 107, 114, 118, 137, 171, 177, 199, 203, 225, 233, 237, 256, 299, 306], "outlet": [43, 83, 142, 261], "disneyland": [43, 83], "woodwork": [43, 83], "broadli": [43, 83, 142, 164, 182, 184, 261, 286, 311, 313], "stock": [43, 83], "trader": [43, 83], "wall": [43, 83, 126, 141, 183, 245, 260, 312], "mad": [43, 83, 142, 261], "grand": [43, 83, 186, 315], "passion": [43, 83], "heaven": [43, 83], "trumpet": [43, 83], "miser": [43, 83], "boom": [43, 83], "buck": [43, 83], "unsur": [43, 83, 131, 189, 250, 318], "invest": [43, 47, 83, 87, 102, 104, 157, 171, 188, 204, 206, 275, 299, 317], "spare": [43, 83], "crash": [43, 44, 45, 83, 84, 85, 141, 160, 260, 278], "zell": [43, 83], "affili": [43, 83, 171, 299], "meati": [43, 83], "hone": [43, 44, 83, 85], "cute": [43, 83, 104, 206], "pathwai": [43, 83], "repetit": [43, 45, 83, 84, 158, 276], "catchi": [43, 83], "translat": [2, 43, 83, 102, 117, 131, 139, 181, 204, 236, 250, 258, 310], "indulg": [43, 83, 107, 225, 314], "curios": [43, 44, 83, 85, 121, 141, 240, 260], "unstick": [43, 83], "spoken": [43, 83], "agricultur": [43, 83], "splice": [43, 83], "golf": [43, 83], "underwat": [43, 83], "foundat": [43, 83, 97, 101, 102, 171, 199, 203, 204, 299], "solitari": [43, 83], "speci": [43, 48, 83, 88, 106, 116, 166, 224, 235, 288], "craft": [43, 83, 95, 104, 120, 185, 197, 206, 239], "allei": [43, 83], "volunt": [43, 83], "shout": [44, 85, 93, 195], "writer": [44, 85, 109, 152, 185, 228, 270], "blame": [44, 45, 84, 85, 94, 153, 196, 271], "cold": [44, 85, 107, 225], "treadmil": [44, 85], "debt": [44, 85], "undertook": [44, 85], "georg": [44, 85, 129, 130, 248, 249], "flub": [44, 85], "sentenc": [44, 85, 147, 176, 177, 264, 305, 306], "cia": [44, 85], "director": [44, 85, 139, 258], "wooli": [44, 85], "mammoth": [44, 85], "roam": [44, 85], "portabl": [44, 85, 117, 157, 160, 236, 275, 278], "lunch": [44, 85, 137, 256], "troubleshoot": [44, 47, 85, 87, 94, 133, 134, 138, 157, 164, 174, 196, 252, 253, 257, 275, 286, 303], "spyder": [44, 85, 97, 160, 199, 278], "weigh": [44, 85, 100, 133, 150, 202, 252, 268], "tie": [44, 85], "breakfast": [44, 85, 137, 256], "___": [44, 85, 178, 307], "woke": [44, 85], "fuzzi": [44, 85, 107, 119, 225, 238], "stupid": [44, 85], "tough": [44, 85, 95, 171, 182, 197, 299, 311], "danc": [44, 85], "gym": [44, 85], "strive": [44, 85, 182, 311], "chocol": [44, 85], "mileston": [44, 85], "chimpanze": [44, 85], "tremend": [44, 85], "stingi": [44, 85], "harsher": [44, 85], "shini": [44, 85, 171, 299, 314], "baubl": [44, 85], "sake": [44, 85, 148, 160, 171, 266, 278, 299], "distast": [44, 85], "prerequisit": [44, 85, 123, 171, 242, 299], "march": [44, 85], "feet": [44, 85, 171, 173, 299, 302], "agreement": [44, 85, 89, 97, 191, 199], "stoic": [44, 85], "greek": [44, 85], "darn": [44, 85], "dessert": [44, 45, 84, 85], "satisfi": [44, 85, 96, 97, 100, 105, 113, 141, 166, 198, 199, 202, 223, 232, 260, 288], "tap": [44, 85], "gear": [44, 85, 164, 168, 286, 296], "freshen": [45, 84], "octav": [45, 84, 165, 170, 287, 298], "sagemath": [2, 45, 84, 92, 93, 97, 132, 160, 165, 171, 184, 194, 195, 199, 278, 287, 299, 313], "wrangl": [45, 84, 116, 156, 235, 274], "jake": [45, 84], "vanderpla": [45, 84], "rung": [45, 84], "caffein": [45, 84], "diner": [45, 84], "to_html": [45, 84], "total_bil": [45, 84], "smoker": [45, 84], "femal": [45, 84], "dinner": [45, 84, 137, 148, 256, 266], "66": [45, 84, 148, 266], "61": [45, 84, 115, 234], "244": [45, 84, 160, 278], "set_them": [45, 84], "relplot": [45, 84], "hue": [45, 84, 106, 224], "get_dataset_nam": [45, 84, 168, 296], "searchabl": [45, 84], "curat": [45, 84, 149, 267], "nation": [45, 84, 130, 188, 249, 317], "gov": [45, 84], "feder": [45, 84], "overwhelm": [45, 84], "superhero": [45, 84], "comfort": [45, 84, 102, 103, 106, 127, 171, 204, 205, 224, 246, 299], "meaning": [2, 45, 84, 162, 280], "merg": [45, 84, 103, 115, 169, 205, 234, 297], "pensk": [45, 84], "truck": [45, 84], "intricaci": [45, 84], "struggl": [46, 86, 128, 171, 173, 247, 299, 302], "mypackag": [46, 86], "greeter": [46, 86], "testabl": [46, 86, 138, 257], "test_greet": [46, 86, 153, 271], "myapp": [46, 86], "test_greeter_returns_hello_world_if_no_name_provid": [46, 86], "test_greeter_returns_hello_name_if_name_provid": [46, 86], "plenti": [46, 86, 105, 142, 171, 184, 223, 261, 299, 313], "exclam": [46, 86, 137, 157, 256, 275], "boil": [46, 86, 94, 96, 102, 118, 120, 130, 136, 139, 140, 161, 184, 187, 196, 198, 204, 237, 239, 249, 255, 258, 259, 279, 313, 316], "modulenotfounderror": [46, 86, 101, 128, 203, 247], "pythonpath": [46, 86, 182, 311], "gem": [46, 86, 157, 275], "idiomat": [46, 86, 141, 260], "lift": [46, 86], "blinder": [46, 86], "wear": [46, 86], "deploy": [47, 87, 96, 122, 198, 241], "daemon": [47, 87, 176, 305], "premis": [47, 87, 93, 195], "acknowledg": [47, 87, 157, 186, 275, 315], "microservic": [47, 87], "orchestr": [47, 87, 93, 195], "en": [47, 87, 175, 304], "cloud_native_comput": [47, 87], "dividend": [47, 87], "impati": [47, 87], "desktop": [47, 87, 89, 130, 160, 184, 191, 249, 278, 313], "sudo": [47, 87], "hub": [47, 87], "image_nam": [47, 87], "slim": [47, 87, 117, 123, 132, 236, 242, 251], "buster": [47, 87], "alpine3": [47, 87], "flaskapp": [47, 87], "flask_main": [47, 87], "h1": [47, 87, 124, 243], "useradd": [47, 87], "myuser": [47, 87], "chown": [47, 87], "flask_app": [47, 87], "flask_run_port": [47, 87], "flask_run_host": [47, 87], "some_packag": [47, 87], "sad": [47, 87], "hexadecim": [47, 87, 127, 162, 172, 246, 280, 301], "fraught": [47, 87], "addus": [47, 87, 132, 251], "minutia": [47, 87], "underli": [47, 87, 106, 116, 130, 141, 146, 161, 177, 186, 224, 235, 249, 260, 265, 279, 306, 315], "tightli": [47, 87, 117, 118, 135, 138, 176, 236, 237, 254, 257, 305], "mongodb": [47, 87], "dyanmodb": [47, 87], "forethought": [47, 87], "guidelin": [47, 87], "admin": [47, 87, 93, 195], "startproject": [47, 87], "modif": [47, 87], "password": [2, 47, 87, 129, 153, 158, 162, 174, 248, 271, 276, 280, 303], "postgres_us": [47, 87], "appnam": [47, 87, 178, 307], "postgres_password": [47, 87], "appnamekth1pjvmecyknzna": [47, 87], "postgres_db": [47, 87], "appname_db": [47, 87], "pgdata": [47, 87], "postgres_host_auth_method": [47, 87], "md5": [47, 87, 114, 233], "postgres_port": [47, 87], "5432": [47, 87], "postgres_remote_host": [47, 87], "django_settings_modul": [47, 87], "codesolid_demo": [47, 87], "django_superus": [47, 87], "appname_admin": [47, 87], "django_superuser_email": [47, 87], "your_email": [47, 87], "django_superuser_password": [47, 87], "appnameotwegxaapj5zlmsq": [47, 87], "dev": [2, 47, 87, 113, 155, 165, 181, 232, 273, 287, 310], "tai": [47, 87], "tah": [47, 87], "encrypt": [47, 87], "scram": [47, 87], "frontend": [47, 87], "container_nam": [47, 87], "env_fil": [47, 87], "8000": [47, 87, 96, 160, 198, 278], "db": [47, 87, 161, 168, 169, 279, 296, 297], "hostnam": [47, 87], "get_config": [47, 87], "getenv": [47, 87, 157, 275], "ssm": [47, 87], "postgresql_psycopg2": [47, 87], "superus": [47, 87], "runserv": [47, 87], "contrib": [47, 87], "get_user_model": [47, 87], "is_superus": [47, 87], "user_nam": [47, 87], "user_email": [47, 87], "user_password": [47, 87], "create_superus": [47, 87], "libpq": [47, 87], "chmod": [47, 87, 133, 164, 252, 286], "766": [47, 87], "login": [47, 87], "command_nam": [47, 87], "cleanup": [47, 87, 157, 275], "taskcommand": [47, 87], "examplesconnect": [47, 87], "service_nam": [47, 87, 123, 242], "containersdock": [47, 87], "pslist": [47, 87], "akil": [47, 87], "kill": [47, 87], "dangl": [47, 87], "prune": [47, 87], "fdelet": [47, 87], "hammer": [47, 87, 165, 287], "situat": [47, 87, 104, 135, 136, 152, 184, 206, 254, 255, 270, 313], "daunt": [47, 87, 134, 150, 253, 268], "collabor": [47, 87, 92, 103, 184, 194, 205, 313], "preprocess": [48, 88, 93, 99, 195, 201], "histogram": [48, 88, 93, 195], "iri": [48, 88, 100, 106, 166, 202, 224, 288], "sklearn": [48, 88], "flower": [48, 88, 106, 166, 224, 288], "sepal": [48, 88, 106, 166, 224, 288], "sepalwidthcm": [48, 88], "subplot": [48, 88, 105, 106, 223, 224], "sepallengthcm": [48, 88], "petal": [48, 88, 106, 166, 224, 288], "petallengthcm": [48, 88], "labelencod": [48, 88], "label_encod": [48, 88], "marrig": [48, 88], "fit_transform": [48, 88], "petalwidthcm": [48, 88], "colormap": [48, 88], "viridi": [48, 88], "rectangular": [48, 88, 106, 224], "contribut": [48, 88, 94, 109, 196, 228], "rendit": [48, 88], "quartil": [48, 88, 106, 224], "outlier": [48, 88, 106, 121, 173, 188, 224, 240, 302, 317], "boxplot": [48, 88, 106, 224], "circular": [48, 88], "rand": [48, 88, 113, 160, 162, 232, 278, 280], "kernel": [48, 88, 92, 93, 94, 95, 97, 100, 106, 132, 160, 168, 194, 195, 196, 197, 199, 202, 224, 251, 278, 296], "hexagon": [48, 88], "honeycomb": [48, 88], "shade": [48, 88], "hexabin": [48, 88], "haxbin": [48, 88], "gridsiz": [48, 88], "licens": [89, 120, 153, 160, 174, 191, 239, 271, 278, 303], "msi": [89, 191], "reopen": [89, 191], "synchron": [89, 114, 161, 191, 233, 279], "pat": [89, 191], "intimid": [90, 192], "slideshow": [90, 192], "monitor": [90, 96, 192, 198], "hyphen": [90, 162, 192, 280], "lowercas": [90, 131, 136, 147, 148, 158, 175, 192, 250, 255, 264, 266, 276, 304], "unimport": [90, 172, 192, 301], "gitforwindow": [90, 192], "yeah": [90, 192], "vim": [90, 192], "ssh": [90, 103, 180, 192, 205, 309], "ssl": [90, 96, 192, 198], "lifestyl": [90, 192], "credenti": [90, 114, 123, 192, 233, 242], "uncheck": [90, 133, 192, 252], "frankli": [90, 192], "beast": [90, 192, 314], "tidi": [91, 193], "python2": [91, 117, 193, 236], "pip3": [91, 118, 182, 193, 237, 311], "chug": [91, 193], "wors": [91, 94, 100, 101, 129, 160, 193, 196, 202, 203, 248, 278], "bite": [91, 193], "bullet": [91, 100, 104, 133, 143, 193, 202, 206, 252, 262], "regress": [91, 93, 106, 193, 195, 224], "guido": [91, 94, 184, 193, 196, 313], "ride": [91, 193], "sunset": [91, 193], "prison": [91, 116, 193, 235], "yard": [91, 193], "shoot": [91, 193], "brew": [91, 93, 183, 193, 195, 312], "unalia": [91, 193], "fresh": [91, 133, 193, 252], "ensurepip": [91, 193], "awscli": [91, 193], "unsupport": [91, 193], "tackl": [91, 101, 102, 171, 193, 203, 204, 299], "pipenv": [2, 91, 93, 153, 193, 195, 271], "viabl": [92, 127, 151, 184, 194, 246, 269, 313], "magma": [92, 184, 194, 313], "mapl": [92, 184, 194, 313], "matlab": [2, 92, 93, 97, 106, 148, 170, 184, 194, 195, 199, 224, 266, 298, 313], "proprietari": [92, 120, 122, 167, 184, 194, 239, 241, 289, 313], "nineti": [92, 171, 194, 299], "maxima": [92, 194], "lisp": [92, 95, 170, 194, 197, 298], "pari": [92, 194], "sagemathcel": [92, 194], "liner": [92, 134, 165, 178, 180, 194, 253, 287, 307, 309], "stein": [92, 194], "modest": [92, 160, 183, 194, 278, 312], "monthli": [92, 194], "disk": [92, 95, 100, 103, 117, 156, 168, 178, 181, 194, 197, 202, 205, 236, 274, 296, 307, 310], "m1": [92, 95, 100, 160, 164, 194, 197, 202, 278, 286], "manifold": [92, 194], "__builtins__": [92, 194], "156": [92, 194], "1918": [92, 194], "caret": [92, 136, 194, 255], "bitwis": [92, 194], "xor": [92, 152, 194, 270], "cast": [92, 107, 113, 168, 176, 194, 225, 232, 296, 305], "stolen": [92, 194], "gregori": [92, 194], "bard": [92, 194], "undergradu": [92, 171, 194, 299, 314], "swift": [93, 184, 195, 313], "skim": [93, 146, 195, 265], "jayamann": [93, 195], "avid": [93, 195], "idl": [93, 135, 195, 254], "batteri": [93, 144, 195, 263], "idle3": [93, 195], "thonni": [2, 93, 101, 195, 203], "appl": [93, 95, 100, 135, 160, 164, 186, 195, 197, 202, 254, 278, 286, 315], "silicon": [93, 100, 131, 160, 164, 195, 202, 250, 278, 286], "intel": [93, 117, 164, 195, 236, 286], "intrigu": [93, 195], "solemn": [93, 195], "uglier": [93, 195], "xonsh": [93, 157, 195, 275], "whip": [93, 153, 195, 271], "kinda": [93, 195], "clockwis": [93, 195], "randomwalk": [93, 195], "get_random_point": [93, 195], "junit": [93, 195], "testcas": [93, 195], "testprogrammerremembersfirstgrademath": [93, 195], "test_basic_math": [93, 195], "wordi": [93, 195], "render": [93, 124, 169, 170, 195, 243, 297, 298], "my_modul": [93, 195], "test_my_modul": [93, 195], "make_purchas": [93, 195], "cart": [93, 195], "purchas": [93, 151, 171, 174, 195, 269, 299, 303], "declin": [93, 195], "unreach": [93, 195], "transact": [93, 168, 169, 195, 296, 297], "creditcardprocessor": [93, 195], "postman": [93, 195], "fourier": [93, 195], "pandasql": [93, 168, 195, 296], "keen": [93, 195], "scipi": [2, 93, 94, 101, 102, 117, 151, 184, 195, 196, 203, 204, 236, 269, 313], "thrive": [93, 195], "incur": [93, 121, 133, 195, 240, 252], "scalabl": [93, 184, 195, 313], "grown": [93, 160, 195, 278], "ryan": [93, 195], "connor": [93, 195], "asp": [93, 184, 195, 313], "ec": [93, 195], "serverless": [2, 93, 94, 123, 163, 168, 188, 195, 196, 242, 285, 296, 317], "boto3": [93, 122, 150, 184, 186, 195, 241, 268, 313, 315], "sdk": [93, 114, 195, 233], "glue": [93, 94, 123, 157, 195, 196, 242, 275], "s3": [2, 93, 114, 123, 195, 242], "bucket": [93, 114, 123, 195, 233, 242], "dynamodb": [93, 123, 195, 242], "orm": [93, 151, 154, 169, 195, 269, 272, 297], "middlewar": [93, 195], "intercept": [93, 105, 195, 223], "elegantli": [93, 195], "setuptool": [2, 93, 117, 127, 182, 195, 236, 246, 311], "traction": [93, 111, 182, 195, 230, 311], "bento": [93, 182, 195, 311], "flit": [93, 182, 195, 311], "pep": [93, 109, 129, 137, 138, 148, 150, 153, 162, 175, 195, 228, 248, 256, 257, 266, 268, 271, 280, 304], "517": [93, 195], "whew": [93, 161, 195, 279], "perl": [93, 160, 184, 195, 278, 313], "shutil": [93, 157, 195, 275], "popen": [93, 157, 195, 275], "argpars": [93, 127, 157, 195, 246, 275], "crowd": [93, 119, 120, 124, 174, 195, 238, 239, 243, 303], "amazingli": [94, 196], "iron": [94, 131, 196, 250], "voic": [94, 119, 171, 196, 238, 299], "wilder": [94, 196], "algol": [94, 196], "bytecod": [94, 175, 181, 196, 304, 310], "elaps": [94, 100, 160, 196, 202, 278, 314], "161": [94, 162, 196, 280], "fee": [94, 196], "race": [94, 196], "234": [94, 136, 196, 255], "160": [94, 196], "rossum": [94, 184, 196, 313], "creator": [94, 99, 174, 184, 196, 201, 303, 313], "1999": [94, 152, 196, 270], "everydai": [94, 129, 146, 151, 160, 196, 248, 265, 269, 278], "specialist": [94, 136, 196, 255], "enthusiasm": [94, 196], "rapid": [94, 108, 117, 184, 196, 227, 236, 313], "scijava": [94, 196], "jama": [94, 196], "doctor": [94, 196], "thrown": [94, 133, 155, 161, 196, 252, 273, 279], "mapreduc": [94, 196], "overwhelmingli": [94, 196], "alik": [94, 152, 196, 270], "disgruntl": [94, 196], "assembli": [94, 102, 160, 184, 188, 196, 204, 278, 313, 317], "lurk": [94, 196], "plausibl": [94, 196], "__pycache__": [94, 181, 196, 310], "pyc": [2, 94, 181, 196], "ly": [94, 196], "deadlock": [94, 196], "crop": [94, 171, 181, 196, 299, 310], "multithread": [94, 161, 196, 279], "brett": [94, 146, 176, 196, 265, 305], "slatkin": [94, 146, 176, 196, 265, 305], "devot": [94, 101, 151, 162, 171, 196, 203, 269, 280, 299], "concurr": [94, 196], "coroutin": [94, 133, 196, 252], "async": [2, 94, 141, 161, 196, 260, 279], "function_nam": [94, 170, 172, 196, 298, 301], "ru": [94, 196], "multiprocess": [94, 176, 196, 305], "intention": [94, 157, 174, 196, 275, 303], "threadpoolexecutor": [94, 196], "processpoolexecutor": [94, 196], "geolog": [94, 176, 196, 305], "crawl": [94, 102, 196, 204], "entitl": [94, 129, 171, 196, 248, 299], "ambiti": [94, 102, 157, 170, 196, 204, 275, 298], "duo": [2, 94, 95, 121, 131, 147, 196, 197, 240, 250, 264], "untoward": [95, 197], "repl": [95, 120, 130, 178, 197, 239, 249, 307], "pkg": [95, 114, 174, 197, 233, 303], "ijulia": [95, 197], "nifti": [95, 129, 197, 248], "a_list": [95, 152, 177, 197, 270, 306], "lightli": [95, 197], "anytim": [95, 153, 197, 271], "unregist": [95, 197], "remotefil": [95, 197], "manifest": [95, 197], "dep": [95, 197], "336ed68f": [95, 197], "0bac": [95, 197], "5ca0": [95, 197], "87d4": [95, 197], "7b16caf5d00b": [95, 197], "a93c6f00": [95, 197], "e57d": [95, 197], "5684": [95, 197], "b7b6": [95, 197], "d8193f3e46c0": [95, 197], "cbe49d4c": [95, 197], "5af1": [95, 197], "5b60": [95, 197], "bb70": [95, 197], "0a60aa018e1b": [95, 197], "uuid": [95, 138, 175, 197, 257, 304], "codeczlib": [95, 197], "filepathsbas": [95, 197], "inlinestr": [95, 197], "mmap": [95, 197], "pooledarrai": [95, 197], "sentinelarrai": [95, 197], "unicod": [95, 146, 158, 197, 265, 276], "weakrefstr": [95, 197], "sha1": [95, 197], "9519274b50500b8029973d241d32cfbf0b127d97": [95, 197], "juliasandbox": [95, 197], "jupyter1": [95, 197], "v0": [95, 197], "covid": [95, 197], "mortal": [95, 197], "canada": [95, 131, 147, 197, 250, 264], "colder": [95, 197], "climat": [95, 197], "covid_data": [95, 197], "ourworldindata": [95, 197], "owid": [95, 197], "isfil": [95, 197], "file_path": [95, 134, 197, 253], "iso_codecontinentlocationdatetotal_casesnew_casesnew_cases_smoothedstring15string15": [95, 197], "stringdatefloat64": [95, 197], "float64": [95, 100, 113, 197, 202, 232], "afgasiaafghanistan2020": [95, 197], "2455missingafgasiaafghanistan2020": [95, 197], "2550missingafgasiaafghanistan2020": [95, 197], "2650missingafgasiaafghanistan2020": [95, 197], "2750missingafgasiaafghanistan2020": [95, 197], "2850missingafgasiaafghanistan2020": [95, 197], "29500": [95, 197], "714": [95, 197], "iso_cod": [95, 197], "total_cas": [95, 197], "new_deaths_smoothed_per_million": [95, 197], "continentlocationnew_deaths_smoothed_per_millionstring15": [95, 197], "stringfloat64": [95, 197], "asiaafghanistanmissingasiaafghanistanmissingasiaafghanistanmissingasiaafghanistanmissingasiaafghanistanmissingasiaafghanistanmiss": [95, 197], "forgotten": [95, 197], "linq": [95, 197], "df_column_subset": [95, 197], "df_north_america": [95, 197], "orderbi": [95, 197], "locationnew_deaths_smoothed_per_milliondatestringfloat64dateunit": [95, 197], "states02020": [95, 197], "29unit": [95, 197], "01unit": [95, 197], "states0": [95, 197], "0032020": [95, 197], "02unit": [95, 197], "03unit": [95, 197], "0052020": [95, 197], "04unit": [95, 197], "05unit": [95, 197], "0062020": [95, 197], "06unit": [95, 197], "0072020": [95, 197], "07unit": [95, 197], "0092020": [95, 197], "08canada0": [95, 197], "0042020": [95, 197], "09": [2, 95, 116, 136, 156, 197, 235, 255], "column_nam": [95, 197], "popul": [95, 147, 162, 169, 197, 264, 280, 297], "total_deaths_per_million": [95, 197], "df_plottabl": [95, 197], "dateunit": [95, 197], "statescanadadatefloat64": [95, 197], "290missing2020": [95, 197], "010missing2020": [95, 197], "020": [95, 197], "003missing2020": [95, 197], "030": [95, 197], "040": [95, 197], "005missing2020": [95, 197], "050": [95, 121, 197, 240], "060": [95, 197], "006missing2020": [95, 197], "070": [95, 197], "007missing2020": [95, 197], "080": [95, 197], "009missing2020": [95, 197], "090": [95, 197], "0070": [95, 197], "0090": [95, 197], "004": [95, 197], "grim": [95, 197], "x_valu": [95, 105, 116, 197, 223, 235], "passport": [95, 197], "eh": [95, 197], "nod": [95, 162, 170, 197, 280, 298], "timeit": [95, 100, 101, 141, 146, 156, 160, 165, 197, 202, 203, 260, 265, 274, 278, 287], "accommod": [95, 105, 143, 146, 197, 223, 262, 265], "accumul": [95, 197], "kristoff": [95, 197], "carlsson": [95, 197], "timeroutput": [95, 197], "255": [95, 172, 197, 301], "inclus": [95, 113, 116, 139, 147, 162, 197, 232, 235, 258, 264, 280], "test_implicit_typ": [95, 197], "tot": [95, 197], "557\u03bc": [95, 197], "08mib": [95, 197], "00k": [95, 197], "223\u03bc": [95, 197], "223n": [95, 197], "12kib": [95, 197], "233": [95, 197], "display_tim": [95, 197], "ttime": [95, 197], "u00b5": [95, 197], "1000000": [95, 197], "the_list": [95, 197], "\u00b5": [95, 141, 165, 197, 260, 287], "12535": [95, 197], "66699961084": [95, 197], "53566699961084": [95, 197], "883": [95, 197], "5419976094272": [95, 197], "8835419976094272": [95, 197], "leg": [95, 106, 197, 224], "resembl": [95, 197], "dispatch": [95, 197], "unoffici": [96, 198], "summer": [96, 198], "pyscript": [96, 124, 198, 243], "pyodid": [96, 124, 198, 243], "cpython": [96, 102, 121, 124, 150, 151, 161, 164, 181, 198, 204, 240, 243, 268, 269, 279, 286, 310], "webassembli": [96, 124, 198, 243], "rougher": [96, 198], "youraccountnam": [96, 198], "reusabl": [96, 198], "lua": [96, 117, 188, 198, 236, 317], "wren": [96, 198], "route53": [96, 198], "cname": [96, 198], "recheck": [96, 198], "indexdb": [96, 198], "dist": [96, 153, 198, 271], "unsuccess": [96, 198], "yourpag": [96, 198], "righthand": [97, 199], "gmail": [97, 199], "esc": [97, 199], "curent": [97, 199], "rocketship": [97, 199], "juptyer": [97, 199], "usernam": [97, 98, 99, 153, 199, 200, 201, 271], "jpserver": [97, 199], "37474": [97, 199], "8889": [97, 199], "token": [97, 98, 99, 143, 157, 162, 176, 199, 200, 201, 262, 275, 280, 305], "4a63802ed46f749388b6069b5eea48bd7f4bb09288a9c2eb": [97, 199], "tile": [97, 199], "data_fram": [97, 199], "pristin": [97, 199], "incompat": [97, 129, 199, 248], "minimalist": [97, 199], "unfamiliar": [97, 131, 137, 199, 250, 256], "swear": [97, 199], "latenc": [97, 199], "wager": [97, 199], "baud": [97, 199], "modem": [97, 199], "anagram": [97, 199], "ju": [97, 199], "pyt": [97, 199], "gordon": [97, 199], "straddl": [97, 199], "fenc": [97, 125, 199, 244], "everybodi": [97, 136, 199, 255], "versatil": [97, 102, 115, 166, 188, 199, 204, 234, 288, 317], "settl": [98, 160, 200, 278], "nbclassic": [98, 200], "whichev": [98, 200], "whatsoev": [98, 138, 200, 257], "medusa": [98, 200], "stone": [98, 110, 116, 200, 229, 235], "jupyter_notebook_config": [98, 200], "jupyter_server_config": [98, 200], "argon2": [98, 200], "panic": [98, 200], "safest": [98, 200], "precaut": [98, 200], "juptyer_server_config": [98, 200], "serverapp": [98, 200], "argon2id": [98, 200], "10240": [98, 200], "dft": [98, 200], "cfcfathgybfzt": [98, 200], "xwvw": [98, 200], "wn0dewtxxschts3qd02wtqxuukdmf0zsbkyqloscuj": [98, 200], "juptyer_notebook_config": [98, 200], "notebookapp": [98, 200], "twafangevngfix4gdrip4w": [98, 200], "f1xjnyqobltqx5": [98, 200], "gwh5i": [98, 200], "fcvhcr95kq3pstlhv62cgu": [98, 200], "avatar": [99, 201], "dataset_list": [99, 201], "datasets_list": [99, 201], "air": [99, 115, 201, 234], "senapatirajesh": [99, 201], "netflix": [99, 201], "tv": [99, 119, 201, 238], "zipfil": [99, 157, 201, 275], "zip_ref": [99, 201], "extractal": [99, 201], "dataset_download_fil": [99, 201], "cv": [99, 201], "dataset_identifi": [99, 201], "dataset_id": [99, 201], "themrityunjaypathak": [99, 201], "imdb": [99, 201], "ahbab911": [99, 201], "250": [99, 201], "korean": [99, 201], "drama": [99, 201], "kdrama": [99, 201], "xl": [99, 201], "xlsx": [99, 115, 116, 201, 234, 235], "xlsm": [99, 201], "xlsb": [99, 201], "enthusiast": [99, 137, 201, 256], "academia": [99, 201], "convei": [99, 201], "particip": [99, 201], "streamlin": [99, 201], "jupit": [99, 201], "reduc": [100, 117, 202, 236], "fulfil": [100, 131, 202, 250], "riiid": [100, 202], "gb": [100, 160, 202, 278], "fastparquet": [100, 156, 202, 274], "timer": [100, 130, 162, 202, 249, 280], "__enter__": [100, 161, 202, 279], "tstart": [100, 202], "perf_count": [100, 202], "__exit__": [100, 161, 202, 279], "elapst": [100, 202], "65": [100, 131, 156, 165, 202, 250, 274, 287], "row_id": [100, 202], "timestamp": [100, 162, 202, 280], "int32": [100, 113, 202, 232], "user_id": [100, 138, 175, 202, 257, 304], "content_id": [100, 202], "content_type_id": [100, 202], "task_container_id": [100, 202], "user_answ": [100, 202], "answered_correctli": [100, 202], "prior_question_elapsed_tim": [100, 202], "prior_question_had_explan": [100, 202], "shave": [100, 202], "feather": [100, 150, 156, 202, 268, 274], "readili": [100, 106, 116, 155, 165, 202, 224, 235, 273, 287], "to_parquet": [100, 156, 178, 202, 274, 307], "threw": [100, 202], "Be": [100, 173, 202, 302], "write_parquet": [100, 202], "storag": [100, 110, 178, 202, 229, 307], "catalyst": [100, 202], "lazili": [100, 202], "impract": [100, 202], "ram": [100, 160, 202, 278], "spill": [100, 161, 202, 279], "advis": [100, 117, 133, 136, 186, 202, 236, 252, 255, 315], "low_memori": [100, 202], "40828": [100, 202], "set_index_and_fetch": [100, 202], "scan_csv": [100, 202], "2147470777": [100, 202], "10th": [100, 202], "ton": [101, 153, 171, 203, 271, 299], "hassl": [101, 203], "compound": [101, 203], "comb": [101, 203], "road": [101, 171, 203, 299], "zoneinfo": [101, 203], "dateutil": [101, 118, 203, 237], "recur": [101, 203], "stump": [101, 203], "anymor": [101, 203], "nineteen": [101, 129, 203, 248], "tradition": [101, 203], "forti": [101, 113, 116, 183, 203, 232, 235, 312], "brush": [101, 111, 155, 171, 203, 230, 273, 299, 314], "acronym": [101, 127, 142, 203, 246, 261], "queue": [101, 203], "mutabl": [101, 113, 129, 143, 146, 147, 203, 232, 248, 262, 264, 265], "cprofil": [101, 203], "line_profil": [101, 203], "memory_profil": [101, 203], "belov": [102, 204], "financ": [102, 204], "trade": [102, 144, 171, 204, 263, 299], "paradigm": [102, 204], "tax": [102, 204], "merit": [102, 204], "poni": [102, 204], "blaze": [102, 204], "jpython": [102, 204], "ironpython": [102, 121, 204, 240], "callback": [102, 204], "w3school": [102, 155, 204, 273], "cplusplu": [102, 204], "tutorialspoint": [102, 204], "udac": [102, 204], "nanodegre": [102, 204], "dug": [103, 118, 205, 237], "tart": [103, 186, 205, 315], "backup": [103, 151, 205, 269], "jurass": [103, 205], "saver": [103, 205], "screensav": [103, 205], "jealou": [103, 205], "polish": [103, 120, 171, 178, 205, 239, 299, 307], "checklist": [2, 103, 205], "metric": [103, 160, 205, 278], "longest": [103, 116, 155, 171, 205, 235, 273, 299], "squash": [103, 205], "rebas": [103, 205], "flesh": [103, 108, 161, 205, 227, 279], "tina": [104, 206], "turner": [104, 206], "lost": [104, 154, 206, 272], "bout": [104, 206], "mari": [104, 130, 206, 249], "plainli": [104, 206], "burn": [104, 206], "scrabbl": [104, 206], "clarif": [104, 206], "stink": [104, 206], "undon": [104, 206], "ajax": [104, 206], "borrow": [104, 129, 206, 248], "linter": [104, 175, 206, 304], "coverag": [104, 206], "sweat": [104, 206], "afraid": [104, 187, 206, 316], "confront": [105, 223], "compress": [105, 130, 156, 157, 178, 223, 249, 274, 275, 307], "trauma": [105, 223], "detour": [105, 178, 223, 307], "subroutin": [105, 172, 223, 301], "y_valu": [105, 116, 223, 235], "min_val": [105, 223], "max_val": [105, 223], "tick_siz": [105, 223], "set_xtick": [105, 106, 223, 224], "set_ytick": [105, 223], "ruler": [105, 223], "plot_ax": [105, 223], "fig": [105, 106, 223, 224], "wrinkl": [105, 223], "linspac": [105, 106, 223, 224], "x_as_arrai": [105, 223], "x_as_list": [105, 223], "guard": [105, 223], "function_with_asympot": [105, 223], "x_arrai": [105, 113, 223, 232], "y_arrai": [105, 223], "matplolib": [106, 224], "univari": [106, 224], "bivari": [106, 224], "matplotlibseabornmatplotlib": [106, 224], "pie": [106, 224], "comprehend": [106, 224], "barplot": [106, 224], "oom": [106, 224], "__version__": [106, 224], "maplotlib": [106, 224], "x_axi": [106, 224], "y_axi": [106, 224], "setosa": [106, 166, 224, 288], "versicolor": [106, 224], "virginica": [106, 166, 224, 288], "seborn": [106, 224], "scatterplot": [106, 224], "x_data": [106, 224], "lineplot": [106, 224], "hist": [106, 224], "distplot": [106, 224], "displot": [106, 224], "kde": [106, 224], "interquartil": [106, 224], "overlaid": [106, 157, 224, 275], "violinplot": [106, 224], "add_ax": [106, 224], "bp": [106, 224], "initialiaz": [106, 224], "plote": [106, 224], "asix": [106, 224], "sine": [106, 113, 224, 232], "frameon": [106, 224], "ncol": [106, 224], "fancybox": [106, 224], "framealpha": [106, 224], "borderpad": [106, 224], "conclus": [106, 165, 224, 287], "buddha": [107, 225], "enlighten": [107, 225], "counsel": [107, 155, 225, 273], "adopt": [107, 110, 118, 127, 130, 138, 184, 225, 229, 237, 246, 249, 257, 313], "sensual": [107, 225], "ascetic": [107, 225], "uncomfort": [107, 225], "goldilock": [107, 225], "porridg": [107, 225], "dumbif": [107, 225], "engineeri": [107, 225], "neolog": [107, 225], "tendenc": [107, 225], "portrai": [107, 225], "abstrus": [107, 225], "preval": [107, 152, 171, 225, 270, 299], "humor": [107, 157, 161, 225, 275, 279], "negat": [107, 113, 152, 225, 232, 270], "printf": [107, 114, 136, 143, 225, 233, 255, 262], "ought": [107, 225], "mastercard": [107, 225], "visa": [107, 225], "men": [107, 171, 225, 299], "clueless": [107, 225], "snuck": [107, 225], "indign": [107, 225], "idiot": [107, 225], "swarm": [107, 225], "hive": [107, 225], "bee": [107, 225], "nit": [107, 225], "hairi": [107, 225], "insecur": [107, 225], "flowchart": [107, 225], "spout": [107, 225], "knock": [107, 225], "conced": [107, 225], "admir": [107, 225], "unaccompani": [107, 225], "bathroom": [107, 225], "loss": [107, 225], "rumsfeld": [108, 227], "famous": [108, 161, 227, 279], "guidanc": [108, 133, 138, 155, 227, 252, 257, 273], "trial": [108, 160, 227, 278], "enrol": [108, 227], "quarter": [108, 227], "coach": [108, 227], "elect": [109, 228], "democraci": [109, 228], "pachunt": [109, 228], "closet": [109, 228], "polit": [109, 228], "committe": [109, 228], "denier": [109, 228], "horizon": [109, 228], "gil": [109, 228], "684": [109, 228], "streamlit": [109, 228], "depart": [109, 130, 228, 249], "kit": [2, 109, 111, 122, 178, 228, 230, 307], "cdk": [2, 109, 228], "scorpion": [109, 228], "snake": [109, 228], "moral": [109, 228], "tropospher": [109, 228], "relax": [110, 113, 229, 232], "17th": [110, 229], "cousin": [110, 229], "niec": [110, 229], "contributor": [110, 229], "nail": [110, 165, 229, 287], "distinguish": [110, 160, 172, 186, 229, 278, 301, 315], "herself": [110, 152, 229, 270], "showroom": [110, 229], "winner": [110, 120, 146, 148, 184, 229, 239, 265, 266, 313], "funni": [110, 229], "fourteen": [110, 130, 160, 168, 229, 249, 278, 296], "mocha": [111, 230], "chai": [111, 230], "jest": [111, 230], "killer": [111, 230], "webstorm": [111, 230], "mcclaren": [111, 230], "stater": [111, 230], "gitpod": [111, 120, 151, 167, 230, 239, 269, 289], "theia": [111, 230], "advertis": [112, 231], "stall": [113, 232], "pillar": [113, 232], "unqualifi": [113, 232], "scalar": [113, 148, 166, 232, 266, 288], "ascii_uppercas": [113, 143, 162, 232, 262, 280], "u1": [113, 232], "chr": [113, 158, 232, 276], "ord": [113, 158, 232, 276], "randint": [113, 141, 148, 176, 232, 260, 266, 305], "mu": [113, 232], "53449952": [113, 232], "65468816": [113, 232], "82071586": [113, 232], "86682187": [113, 232], "21763168": [113, 232], "80572274": [113, 232], "97562422": [113, 232], "58591293": [113, 232], "44201627": [113, 232], "80652277": [113, 232], "83698711": [113, 232], "24264316": [113, 232], "30675551": [113, 232], "63795295": [113, 232], "87011717": [113, 232], "27054306": [113, 232], "65159876": [113, 232], "49426323": [113, 232], "68323172": [113, 232], "69278983": [113, 232], "radio": [113, 148, 232, 266], "royal": [113, 148, 232, 266], "crown": [113, 148, 232, 266], "cola": [113, 148, 232, 266], "myarrai": [113, 232], "outer": [113, 131, 133, 148, 169, 232, 250, 252, 266, 297], "ndim": [113, 119, 232, 238], "original_arrai": [113, 232], "new_arrai": [113, 232], "z_list": [113, 232], "y_list": [113, 232], "x_list": [113, 232], "tilt": [113, 232], "arr": [113, 232], "four_by_f": [113, 232], "one_dim": [113, 232], "brainbust": [113, 232], "matric": [113, 119, 160, 232, 238, 278], "num_decim": [113, 232], "npz": [113, 232], "jennif": [113, 232], "helen": [113, 137, 232, 256], "miryam": [113, 232], "savez": [113, 232], "people2": [113, 232], "languages2": [113, 232], "jenniff": [113, 232], "myrrai": [113, 232], "savetxt": [113, 232], "delimit": [113, 160, 184, 232, 278, 313], "arr2": [113, 232], "loadtxt": [113, 232], "wise": [113, 148, 232, 266], "lumberjack": [113, 232], "u10": [113, 232], "lemon": [113, 232], "squeezi": [113, 232], "surround": [113, 131, 136, 138, 232, 250, 255, 257], "step1": [113, 232], "step2": [113, 164, 232, 286], "search_result": [113, 232], "str_len": [113, 232], "rsync": [114, 233], "bulk": [114, 233], "sync": [114, 132, 233, 251], "crypto": [114, 233], "fmt": [114, 233], "ioutil": [114, 233], "filepath": [114, 233], "gets3sess": [114, 233], "gets3servic": [114, 233], "newsess": [114, 233], "getconfigur": [114, 233], "newsharedcredenti": [114, 233], "struct": [114, 156, 233, 274], "localdirectori": [114, 233], "east": [114, 123, 156, 233, 242, 274], "strategi": [114, 133, 138, 233, 252, 257], "checksum": [114, 233], "getawss3itemmap": [114, 233], "multipart": [114, 233], "s3servic": [114, 233], "loi": [114, 233], "listobjectsinput": [114, 233], "setbucket": [114, 233], "obj": [114, 123, 144, 233, 242, 263], "err": [114, 133, 138, 172, 233, 252, 257, 301], "listobject": [114, 233], "etag": [114, 233], "nil": [114, 233], "s3obj": [114, 233], "trim": [114, 175, 233, 304], "filewalkwithoutgoroutin": [114, 233], "awsitem": [114, 233], "testfilenogoroutin": [114, 233], "filestoupload": [114, 233], "blogdir": [114, 233], "isdir": [114, 233], "relativefil": [114, 233], "checksumremot": [114, 233], "readfil": [114, 233], "sumstr": [114, 233], "sprintf": [114, 233], "testfil": [114, 123, 233, 242], "filewalk": [114, 233], "numfil": [114, 233], "ch": [114, 233], "chan": [114, 233], "main_test": [114, 233], "testmain": [114, 233], "fatal": [114, 233], "benchmarkfilewalkgoroutin": [114, 233], "benchmarkfilewalkwithoutgoroutin": [114, 233], "prettybench": [114, 233], "goroutinesbenchmarkfilewalkgoroutin": 233, "543": [114, 233], "ssd": [114, 233], "hecka": [114, 161, 233, 279], "cheer": [114, 119, 233, 238], "vagrant": [2, 114, 233], "enorm": [115, 160, 234, 278], "aq": [115, 234], "bangladesh": [115, 234], "173": [115, 234], "south": [115, 156, 234, 274], "asia": [115, 234], "chad": [115, 234], "147": [115, 166, 171, 234, 288, 299], "africa": [115, 234], "pakistan": [115, 234], "131": [115, 234], "tajikistan": [115, 234], "116": [115, 234], "mongolia": [115, 234], "107": [115, 162, 234, 280], "uganda": [115, 234], "moder": [115, 234], "arab": [115, 234], "emir": [115, 234], "uzbekistan": [115, 234], "india": [115, 234], "kyrgyzstan": [115, 234], "lh5": [115, 234], "googleusercont": [115, 234], "yz_g_om2rz9p7lhspdmlol4fa4v2lw6otwmbbyzxx6lhxtwajbmuszs6kcfnyf9grlvhudem2oznxrsvwnuegf": [115, 234], "3lzf8lhu_axwmgvni": [115, 234], "hvvcay3a68nwrrvsx0vf7cn5a7jytoktlmmj6mdmjku3": [115, 234], "fmvqgwpizjpnb8pptfxewet5tyapats8nd0q": [115, 234], "cont": [115, 234], "dataframegroupbi": [115, 234], "0x0000018f426ac760": [115, 234], "lh4": [115, 234], "qjufc7icmlbmjkk5m6horsxlwgehwk0cqrdyw63mdpls3zrkeeulzpqi6j1slmsehsyey_mw85cjlyxtbrxikx3rmosvunvkhznhxda8eol6qva8": [115, 234], "jwgx0lwx0qb8ieyrghrsh3ikng6sak": [115, 234], "heh3tfzoaacbjnt2luwbi38gzmtarojao8kxmm1shw": [115, 234], "proce": [115, 234], "pocm5yvdku0teuk2kdei6fpc": [115, 234], "fe8llsjsvsdyc_8tjw4drgyir3": [115, 234], "bi6zkht72ux9kw5qqtoxyvmjx7gq9tfxyl2sufd4necpexghpmr7z8kky5gsio8wam": [115, 234], "j0pehvr1egjgxmpobbm18_vl_n5zxajanttdgv00qibrzdetykf_fwklh2w2v4ghppa": [115, 234], "916l7q2ojf8": [115, 234], "mxveskgxjmk": [115, 234], "nolgdtdkt9t4rmibjvjzthouqdt2_9jwqk2rcvpgca3h8rmxrossudhekqheqh1detkypw30y1_z_yz3dcjnnnizncyjv6sjrpwme1kykxkyx46raujsipatemp4ol": [115, 234], "eohldciufbkd9xqkf": [115, 234], "dcrego03gf54i_dw": [115, 234], "get_group": [115, 234], "lh3": [115, 234], "_eopsoa_mkoi8o_uxcndx4h6nhui1vw": [115, 234], "27t91z8xs5jh210dzcvxwkb6x2nl7unsxm9vdakegh9xp57yx5ta1kdmykqw6kgufwvxvttdjtc8jrw": [115, 234], "ufaxo5yvnrundmsf9z": [115, 234], "kf9xpwbdrze3ksmqvxi2nfgomohsi9jvltu74ntrcamaotk9p6mubhw": [115, 234], "q2gshqxuvvr_pqt2swgsjbw": [115, 234], "jlzxsvf7r_o_qbx9ve9pyv": [115, 234], "qwg4hx4rla": [115, 234], "fijkoxdjesyakbihjqety_4": [115, 234], "3bqljbwju": [115, 234], "nihx": [115, 234], "cposgs_sr2c0pvwqsgofztia413rrfw5koa1uvegvl9e984l_xwwkwvv0wy8ucutpgqzwt": [115, 234], "kmxldfuvwqw8gkoomq": [115, 234], "pint": [115, 234], "zf7": [115, 234], "q6lbzpegumheqnfiv1r_gp": [115, 234], "hrakbkyk3ycnjec9fscntkmudiuxeczxzevzht_kf9i": [115, 234], "zntkfjrmp1g4yj3d5zbkshupicyf0hzyioo41fkny2c1qzbz5zez5_bz_owi8i4f5svdb4efim7movzzkougkd8xbzkwpai3tyb": [115, 234], "pziidp2bfy09ouq": [115, 234], "dmdbchdui5o": [115, 234], "ew09ou_rdpf3wb": [115, 234], "kqfz5": [115, 234], "idj_ft3e_zxpgkiq6naa3sebx91rvbnt0zljwopoi7mvxrpldjw2yejjrcsskxmwcm0gymcf2pu3wxh": [115, 234], "sv4xxtatxshvtca_fmqwzen8a8t_sikki_": [115, 234], "jufhurfqarskraiveu9pzlcyygbjm2y_bm0g": [115, 234], "impot": [115, 234], "vscrtflkpurrndz8fupmdfermgovamjzh9k": [115, 234], "c1mr37jw5flpp": [115, 234], "vhmbgjtaa": [115, 234], "0ztjtg3m7temiltjyst8yveokp07jcifiqnbc6uby_t7dubepk2n4xknw0iaqcvpujbxv2d7lbhglkscg3bumeegi0n9wybdhws_utyopg_4koz5": [115, 234], "zp55bfzghj8za": [115, 234], "tnkua61gb04d8krlqov7anxgd": [115, 234], "f0vxyoohtcc1tnm2tdqi": [115, 234], "_c4tuupzsu4ruxcifqckjziaf0mpweleh2tyj1rklp2l6tevqg8sb_6ferhryevw5k7ij7bpom82wkeegn3tr13bc4x3yp5r1ox": [115, 234], "uztuow_qvoejy3stha78rkysaicaqufq9": [115, 234], "qwepw": [115, 234], "lh6": [115, 234], "c4fy": [115, 234], "2pk5no0dx_9iet07at4jo1doa2ibuorydkz": [115, 234], "kdaiypjkn2cgzap4gasbswgkvaighejhl40qerbd6zsjtevqdjkibdp6hruoijyn01vdltjlcrjnzcsw9ctm2": [115, 234], "kx3jwtpftq0xyevwpboyr3lrsfjcffdzb_uujpwlx4tadprvc31vqwpyaca": [115, 234], "perc": [115, 234], "g0ketahtmn3mbwm5ank9ly0pamrndgxte3in64crq64ccq3_6pavfsytvhy7ogawwnu7aa8_vbodwkwpkmsrh8lcwostv1rj": [115, 234], "j_ydxy1uw94aq7u1nm2khbupblndh_qg3dppijyhgbtfcew0laljjvswvg_42p8igxcz4b0qvkimurepcnsqhq4yg": [115, 234], "aggregationdescriptioncount": [115, 234], "itemsfirst": [115, 234], "nbsp": [115, 117, 158, 234, 236, 276], "itemmean": [115, 234], "medianmin": [115, 234], "maximumstd": [115, 234], "deviat": [115, 162, 234, 280], "variancemad": [115, 234], "deviationprod": [115, 234], "itemssum": [115, 234], "tnfzvs9fdirndqbhghyuqzjdl5sayxt_dmckw6oq": [115, 234], "0r0_9": [115, 234], "34j485hcvamakedch2n5bssjb7zpz": [115, 234], "trst8w0t9ykxmqun": [115, 234], "qclygeladqtlcetf3wjfiajqimcygbc2lghsjz3wd2fqizighbupy0y8zzl3obo1qty1r4km5ggydvjloglfowkxkkta": [115, 234], "agg": [115, 234], "39zxn0s3u5dhu6vfknvickudvzoansabm4y_jww": [115, 234], "d5dap_wopphpheqy36tcg56minifv7phxv96lcgxraqb6ryjrf1y8c3mykropnfhippdoulbhsup0iwhvgi7bea7a0cfriu8ttghboj8epuqhddqhd9cyleho96gkl_ywmwtrrxebtvfbpenmw": [115, 234], "jndpfxsm8djcwq": [115, 234], "0cxxdlgiu7hjeo2mpny4vwu6qgsy9ufvcbp7ozzevyzipuhfyjk9grszgtilzrh1m5tfimstrlaug": [115, 234], "cm2xb7i9m5o0tfxk9mdczljhjfognhyknyl3ehbwxi_zibjdvpjlsakozjt80p3c_a2xv5ucswa0iuyor6evrrgmfw08w": [115, 234], "recombin": [115, 234], "aqi": [115, 234], "transfor": [115, 234], "jn8kseuc3jucrxbbxjhxxa_yyqzbp": [115, 234], "0l_v0": [115, 234], "ebmiqmqaswdvcx_zvkckhse7zbjarmf": [115, 234], "ilfjweau35mv7lebgteuxosusfsjmycftemfipc52ptritr61ikj0codumqwdzz7lbegwfjc7p9cgkykivsbx7ucw2h4o7s5qglkjg463": [115, 234], "ezt4qkoev5hg": [115, 234], "jg3wlguvswgkzbv3xvoy5z4conteqzuwwmttnzdefg9hjdjrtmwf6qftigwiatittme8yzf": [115, 234], "kmemyubxyvme0ktua2jojit7m_pdgoqddlubfop10njqyhh9cubtwm44ldxnccn3n1udaprukfinoduj240utinzuok7j3_d": [115, 234], "lhn27eadeta87tag": [115, 234], "to_csv": [115, 234], "datset": [115, 234], "my_df": [115, 234], "reset_index": [115, 234], "grouped_fil": [115, 234], "6u4xjjnfbdseplznaq9jxrocs0eal1uimw9nfulwcl_w_5mfy1hgzaoqr6q2cl2prsys8e4lfrkeszs1ki5mzhr0v95wgorssjj9eion": [115, 234], "l6mfsd8clbahn5fxhr0zeids": [115, 234], "tjz1drfdjucpkxsrc4mskdcxthfqtglvmhivcqyp7m0ppec9d": [115, 234], "b7dq": [115, 234], "to_excel": [115, 234], "to_xlsx": [115, 234], "ztjfbt2aerelpi0hmv41wukzsqymyh8r5rr": [115, 234], "yuoklipqc4r": [115, 234], "3_7efkitby4keilrqjhd9mbwgp7lsf": [115, 234], "zypauyx2a1jf3oacwhm7rgar7wrqe9oarf5yypdlu1ko71b79sqmwb1phouplej6_vz2ayghy8cpzg2xzciz_nt3wbkzrq_j5zbfs3alprw": [115, 234], "sb": [116, 235], "afford": [116, 171, 235, 299], "attornei": [116, 235], "rangeindex": [116, 235], "dognamedblu": [116, 235], "homogen": [116, 129, 235, 248], "point3": [116, 235], "pickup": [116, 168, 235, 296], "dropoff": [116, 168, 235, 296], "passeng": [116, 156, 168, 178, 235, 274, 296, 307], "fare": [116, 156, 168, 178, 235, 274, 296, 307], "toll": [116, 156, 178, 235, 274, 307], "payment": [116, 156, 235, 274], "pickup_zon": [116, 156, 235, 274], "dropoff_zon": [116, 156, 235, 274], "pickup_borough": [116, 156, 178, 235, 274, 307], "dropoff_borough": [116, 156, 235, 274], "6428": [116, 235], "6429": [116, 235], "6430": [116, 235], "6431": [116, 235], "6432": [116, 235], "6433": [116, 156, 235, 274], "rider": [116, 235], "cab": [116, 235], "isin": [116, 235], "queen": [116, 158, 235, 276], "bronx": [116, 235], "df_home": [116, 235], "zillow_home_data": [116, 235], "df_homes_2": [116, 235], "hypothet": [116, 134, 235, 253], "leftmost": [116, 156, 175, 235, 274, 304], "df_penguin": [116, 235], "df_penguins_ful": [116, 235], "millimet": [116, 235], "flipper": [116, 119, 235, 238], "preciou": [116, 235], "pickup_tim": [116, 235], "taxis_one_dai": [116, 235], "06": [116, 121, 130, 156, 175, 235, 240, 249, 274, 304], "exlus": [116, 235], "midnight": [116, 130, 235, 249], "taxis_mean": [116, 235], "tip_in_perc": [116, 235], "time_interv": [116, 235], "variant": [117, 162, 236, 280], "pypa": [117, 236], "restrict": [117, 236], "interrupt": [117, 133, 236, 252], "vistualenv": [117, 236], "registri": [117, 130, 157, 236, 249, 275], "rubi": [117, 123, 138, 175, 236, 242, 257, 304], "scala": [117, 129, 160, 176, 178, 236, 248, 278, 305, 307], "supervisor": [117, 236], "thoroughli": [117, 123, 175, 236, 242, 304], "proceed": [117, 236], "zlib": [117, 157, 236, 275], "manner": [117, 236], "prebuilt": [117, 236], "particularli": [117, 151, 171, 236, 269, 299], "x86": [117, 236], "nvidia": [117, 236], "mkl": [117, 236], "cuda": [117, 236], "speedup": [117, 236], "condo": [117, 236], "720": [117, 236], "planemo": [117, 236], "libjpeg": [117, 236], "surprisingli": [117, 236], "differencepipcondamulti": [117, 236], "dependencynot": [117, 236], "supportedsupportedpackag": [117, 236], "installationbuild": [117, 236], "wheelsdownload": [117, 236], "availability235": [117, 236], "packages1": [117, 236], "packagesdepend": [117, 236], "managementno": [117, 236], "testperform": [117, 236], "managementin": [117, 236], "systemminimalisticyesno": [117, 236], "discourag": [118, 133, 153, 171, 173, 237, 252, 271, 299, 302], "housekeep": [118, 237], "victori": [118, 173, 237, 302], "someproject": [118, 237], "autoremov": [118, 237], "uninstal": [118, 237], "tactic": [118, 237], "ipenv": [118, 237], "pipenv_venv_in_project": [118, 237], "highwai": [118, 237], "glimps": [118, 237], "pipfil": [118, 237], "pipdeptre": [118, 237], "latin": [119, 127, 238, 246], "carrier": [119, 238], "growabl": [119, 238], "contigu": [119, 156, 238, 274], "loos": [119, 171, 172, 175, 238, 299, 301, 304], "stoog": [119, 137, 143, 147, 238, 256, 262, 264], "musket": [119, 238], "euclidean": [119, 238], "shrink": [119, 143, 238, 262], "dolphin": [119, 238], "sight": [119, 129, 175, 238, 248, 304], "wondrou": [119, 238], "twilight": [119, 124, 238, 243], "zone": [119, 238], "1950": [119, 238], "1960": [119, 238], "narrat": [119, 238], "televis": [119, 238], "serl": [119, 238], "episod": [119, 238], "blow": [119, 238], "comma": [119, 131, 147, 172, 238, 250, 264, 301], "smartest": [119, 238], "approv": [119, 238], "tensor": [119, 160, 238, 278], "earth": [119, 139, 238, 258], "vaccin": [119, 238], "faith": [119, 238], "patholog": [120, 142, 176, 184, 239, 261, 305, 313], "loser": [120, 239], "nich": [120, 184, 188, 239, 313, 317], "privileg": [120, 123, 125, 150, 171, 239, 242, 244, 268, 299], "verdict": [120, 239], "scribbl": [120, 170, 239, 298], "cloud9": [120, 239], "struck": [120, 151, 184, 239, 269, 313], "freemium": [120, 160, 170, 239, 278, 298], "classroom": [120, 171, 239, 299], "pricier": [120, 239], "codespac": [120, 151, 167, 239, 269, 289], "staff": [120, 239], "ski": [120, 239], "cumbersom": [120, 239], "connector": [120, 239], "seamless": [120, 161, 239, 279], "competitor": [120, 239], "premium": [120, 152, 239, 270], "wander": [120, 239], "199": [120, 239], "stride": [120, 239], "richer": [120, 239], "weak": [120, 171, 239, 299], "jython": [121, 240], "jvm": [121, 178, 240, 307], "stackless": [121, 240], "microthread": [121, 240], "tasklet": [121, 240], "callabl": [121, 126, 131, 172, 240, 245, 250, 301], "micropython": [121, 240], "constrain": [121, 240], "microcontrol": [121, 240], "rpython": [121, 240], "offshoot": [121, 240], "pypy3": [121, 240], "pyzmq": [121, 240], "zeromq": [121, 240], "cflag": [121, 240], "stdlib": [121, 240], "libc": [121, 240], "benchmarktim": [121, 240], "cpythontim": [121, 240], "pypydifference10000": [121, 240], "iterated0": [121, 240], "825588750": [121, 240], "2362114583": [121, 240], "faster10000": [121, 240], "iterated1": [121, 240], "3694779580": [121, 240], "2289802925": [121, 240], "fasterpython": [121, 240], "numbers0": [121, 240], "5970": [121, 240], "292": [121, 240], "bytearrai": [121, 146, 240, 265], "5440": [121, 240], "6331": [121, 240], "slowerpython": [121, 240], "numbers4": [121, 240], "854474": [121, 240], "739715": [121, 240], "slowernumpi": [121, 240], "0561": [121, 240], "infrastructur": [122, 241], "tear": [122, 241], "pluggabl": [122, 241], "hashicorp": [122, 241], "nodej": [122, 184, 241, 313], "meme": [123, 124, 242, 243], "joke": [123, 187, 242, 316], "coin": [123, 176, 242, 305], "administ": [123, 242], "tier": [123, 242], "anonym": [123, 172, 242, 301], "lambda_funct": [123, 242], "lambda_handl": [123, 242], "statuscod": [123, 242], "dump": [123, 144, 182, 242, 263, 311], "pretend": [123, 242], "whop": [123, 171, 242, 299], "architectur": [123, 157, 242, 275], "x86_64": [123, 242], "iam": [123, 242], "eventnam": [123, 242], "amazonaw": [123, 242], "st": [123, 242], "assumerol": [123, 242], "arn": [123, 242], "rolenam": [123, 242], "roleid": [123, 242], "aroavjirr95yujtabcd": [123, 242], "36349901212": [123, 242], "created": [123, 242], "15t19": [123, 242], "assumerolepolicydocu": [123, 242], "fileb": [123, 242], "arn_from_when_you_created_rol": [123, 242], "operation_nam": [123, 242], "functionnam": [123, 242], "functionarn": [123, 242], "339698421837": [123, 242], "myoutput": [123, 242], "executedvers": [123, 242], "cloudwatch": [123, 242], "behalf": [123, 242], "lamda": [123, 242], "bucket_and_fil": [123, 242], "bucket_nam": [123, 242], "boto": [123, 242], "create_bucket": [123, 242], "get_test_fil": [123, 242], "upload_fil": [123, 242], "content_length": [123, 242], "last_modifi": [123, 242], "nobodi": [123, 129, 136, 242, 248, 255], "attach": [123, 164, 242, 286], "amazons3": [123, 242], "amazons3readonlyaccess": [123, 242], "download_fileobj": [123, 242], "bytesio": [123, 242], "seek": [123, 242], "utf8": [123, 242], "file_info": [123, 242], "requestid": [123, 242], "4fed7a21": [123, 242], "7051": [123, 242], "43d0": [123, 242], "b2b5": [123, 242], "96e36fb53c30": [123, 242], "374": [123, 242], "375": [123, 160, 242, 278], "128": [123, 146, 162, 242, 265, 280], "codebuild": [123, 242], "codedeploi": [123, 242], "localstack": [123, 242], "lite": [2, 96, 124, 163, 243, 285], "jupyterlit": [124, 160, 243, 278], "rustl": [124, 243], "reilli": [124, 243], "exerc": [124, 243], "vue": [124, 243], "spun": [124, 148, 183, 243, 266, 312], "npx": [124, 243], "pythonapp": [124, 243], "compoent": [124, 243], "tsx": [124, 243], "codeeditor": [124, 243], "cruel": [124, 243], "strictmod": [124, 243], "reactprismeditor": [124, 243], "prop": [124, 243], "div": [124, 243], "classnam": [124, 243], "linenumb": [124, 243], "readonli": [124, 243], "node_modul": [124, 243], "compliment": [125, 244], "simmer": [125, 244], "ripen": [125, 244], "sibwp_form": [125, 140, 244, 259], "van_der_walls_solved_for_volum": [126, 245], "van_der_walls_solved_for_temparatur": [126, 245], "gca": [126, 245], "thrill": [127, 246], "bob": [127, 133, 246, 252], "toolavailabilityprosconssimpl": [127, 246], "dictionariesbuilt": [127, 246], "ineasi": [127, 246], "configparserbuilt": [127, 246], "supportedvalu": [127, 246], "localconfigpypi": [127, 246], "jsonbuilt": [127, 246], "tomllibbuilt": [127, 246], "tomlinstal": [127, 246], "condaexcel": [127, 246], "pyamlinstal": [127, 246], "condaload": [127, 246], "mediev": [127, 246], "renaiss": [127, 246], "main_top": [127, 246], "unreason": [127, 246], "blur": [127, 246], "overriden": [127, 246], "8888": [127, 132, 246, 251], "443": [127, 246], "fp": [127, 169, 246, 297], "read_fil": [127, 246], "loader": [127, 134, 246, 253], "localhost_port": [127, 246], "glanc": [127, 130, 136, 162, 171, 175, 246, 249, 255, 280, 299, 304], "to_dictionari": [127, 246], "config_as_dict": [127, 246], "getboolean": [127, 246], "localconfig": [127, 246], "tom": [127, 246], "semant": [127, 176, 246, 305], "tommlib": [127, 246], "pyproject": [127, 246], "original_cr": [127, 246], "preston": [127, 246], "werner": [127, 246], "dob": [127, 246], "1979": [127, 138, 246, 257], "27t07": [127, 246], "codesolid_vers": [127, 246], "example_modifi": [127, 246], "14159": [127, 246], "71828": [127, 246], "rb": [127, 246], "toml_311": [127, 246], "57600": [127, 246], "bypass": [127, 246], "toml_pre_311": [127, 246], "pyyaml": [127, 246], "librariessit": 246, "posts_publish": [127, 246], "subtop": [127, 246], "himself": [128, 142, 190, 247, 261], "usabl": [128, 141, 160, 247, 260, 278], "requr": [128, 247], "__repr__and": [129, 248], "fuss": [129, 248], "parameter_nam": [129, 248], "height_in_met": [129, 248], "0x123029150": [129, 248], "refrain": [129, 248], "metoo": [129, 248], "me_too": [129, 248], "__every__": [129, 248], "__last__": [129, 248], "__one_of_them__": [129, 248], "__match_args__": [129, 248], "nicer": [129, 153, 248, 271], "nb_mypi": [129, 175, 248, 304], "princess": [129, 248], "diana": [129, 248], "spencer": [129, 248], "washington": [129, 130, 248, 249], "duan": [129, 248], "johnson": [129, 171, 248, 299], "sandwich": [129, 137, 152, 248, 256, 270], "ladi": [129, 248], "disrespect": [129, 248], "hungri": [129, 137, 248, 256], "myclass": [129, 248], "my_field": [129, 248], "my_var": [129, 248], "unsafe_hash": [129, 248], "557": [129, 248], "nametupl": [129, 248], "p1": [129, 176, 248, 305], "p2": [129, 176, 248, 305], "frozeninstanceerror": [129, 248], "point1": [129, 248], "point2": [129, 248], "238092144646713039": [129, 248], "9078147046843256684": [129, 248], "omit": [129, 136, 143, 147, 166, 168, 169, 248, 255, 262, 264, 288, 296, 297], "canon": [129, 248], "player_on": [129, 248], "ready_player_on": [129, 248], "secret123": [129, 248], "kept": [129, 144, 166, 248, 263, 288], "retain": [129, 248], "__post_init__": [129, 248], "couch": [129, 176, 248, 305], "personbyheight": [129, 248], "lincoln": [129, 248], "abraham": [129, 165, 248, 287], "lexicograph": [129, 248], "forb": [129, 248], "wisdom": [129, 134, 248, 253], "allud": [129, 248], "namedupl": [129, 248], "occurr": [129, 248], "resound": [129, 248], "101025": [130, 249], "flexibli": [130, 249], "now_dat": [130, 249], "now_tim": [130, 249], "825771": [130, 249], "greenwich": [130, 249], "clock": [130, 138, 160, 249, 257, 278], "gregorian": [130, 249], "leap": [130, 172, 249, 301], "julian": [130, 249], "honest": [130, 249], "virginia": [130, 171, 249, 299], "1731": [130, 249], "1752": [130, 249], "britain": [130, 249], "coloni": [130, 249], "1732": [130, 249], "audit": [130, 249], "legal": [130, 171, 249, 299], "complianc": [130, 249], "datetime_is_awar": [130, 249], "utcoffset": [130, 249], "astimezon": [130, 249], "dt_naiv": [130, 249], "dt_awar": [130, 249], "time_zon": [130, 249], "285527": [130, 249], "72000": [130, 249], "edt": [130, 249], "timetz": [130, 249], "my_tim": [130, 249], "544156": [130, 249], "guam": [130, 249], "saluda": [130, 249], "iana": [130, 249], "protocol": [130, 141, 146, 249, 260, 265], "available_timezon": [130, 249], "pacif": [130, 249], "tz_guam": [130, 249], "eastern": [130, 249], "australia": [130, 249], "daylight": [130, 249], "now_her": [130, 249], "now_guam": [130, 249], "744449": [130, 249], "27th": [130, 249], "guam_now": [130, 249], "boss": [130, 249], "incredibli": [130, 154, 249, 272], "zen": [2, 130, 134, 138, 143, 144, 249, 253, 257, 262, 263], "independence_dai": [130, 249], "1776": [130, 249], "infami": [130, 249], "pearl_harbor": [130, 249], "1941": [130, 143, 249, 262], "pearl_harbor_more_exactli": [130, 249], "honolulu": [130, 249], "hawaii": [130, 249], "td1": [130, 249], "td2": [130, 249], "td3": [130, 249], "loan_period_dai": [130, 249], "due_dat": [130, 249], "minutes_ago": [130, 249], "562711": [130, 249], "prettier": [130, 249], "pseudocod": [130, 131, 161, 249, 250, 279], "datetime_1": [130, 249], "datetime_2": [130, 249], "countdown": [130, 249], "winter": [130, 249], "ou": [130, 249], "get_christmas_year": [130, 249], "days_till_christma": [130, 249], "1989": [130, 249], "hail": [130, 249], "los_angel": [130, 249], "special_dai": [130, 249], "123456": [130, 249], "special_d": [130, 249], "special_tim": [130, 249], "oct": [130, 172, 249, 301], "274": [130, 160, 249, 278], "0700": [130, 249], "hhhh": [130, 249], "1900": [130, 249], "earliest": [130, 249], "format_str": [130, 249], "date_string2": [130, 249], "isoformat": [130, 249], "fromisoformat": [130, 249], "weren": [130, 161, 171, 249, 279, 299], "01t10": [130, 249], "spain": [130, 249], "juli": [130, 164, 249, 286], "1810": [130, 249], "textcalendar": [130, 249], "prmonth": [130, 249], "htmlcalendar": [130, 249], "suspend": [130, 161, 249, 279], "outlook": [130, 249], "tutorialdecemb": 249, "june": [130, 249], "upfront": [130, 186, 249, 315], "cycl": [130, 138, 184, 249, 257, 313], "31st": [130, 249], "one_month_from_now": [130, 249], "six_weeks_ago": [130, 249], "dtstart": [130, 249], "novel": [131, 250], "screenplai": [131, 250], "cave": [131, 250], "basebal": [131, 250], "curli": [131, 133, 136, 137, 143, 147, 158, 177, 250, 252, 255, 256, 262, 264, 276, 306], "grade_map": [131, 250], "brace": [131, 133, 136, 158, 174, 177, 250, 252, 255, 276, 303, 306], "key1": [131, 176, 250, 305], "value1": [131, 176, 250, 305], "keyn": [131, 250], "valuen": [131, 250], "min_grade_for_a": [131, 250], "vain": [131, 169, 250, 297], "unhappi": [131, 250], "key2": [131, 176, 250, 305], "value2": [131, 250], "good_grad": [131, 250], "massachusett": [131, 139, 250, 258], "pseudo": [131, 250], "ri": [131, 139, 250, 258], "ct": [131, 139, 250, 258], "state_abrevi": [131, 250], "long_state_nam": [131, 250], "rapidli": [131, 250], "super_pow": [131, 250], "superman": [131, 250], "sue": [131, 250], "storm": [131, 250], "invisibl": [131, 250], "dict_item": [131, 250], "count_word": [131, 176, 250, 305], "presult": [131, 250], "make_grade_list": [131, 250], "all_grad": [131, 250], "smith": [131, 250], "jone": [131, 135, 250, 254], "codes_to_countri": [131, 250], "china": [131, 147, 171, 250, 264, 299], "cn": [131, 250], "mexico": [131, 250], "countries_to_cod": [131, 250], "bismuth": [131, 250], "bi": [131, 250], "fe": [131, 250], "helium": [131, 250], "find_symbol": [131, 250], "zinc": [131, 250], "zn": [131, 250], "sensor_id": [131, 250], "reading1": [131, 250], "reading2": [131, 250], "reading_list": [131, 250], "id001": [131, 250], "id007": [131, 250], "id003": [131, 250], "kalea": [131, 250], "sympathet": [132, 251], "spoil": [132, 251], "excus": [132, 160, 187, 251, 278, 316], "arg_gid": [132, 251], "arg_uid": [132, 251], "gid": [132, 251], "uid": [132, 251], "sageus": [132, 251], "debian": [132, 251], "settabl": [132, 251], "run_lab": [132, 251], "ip": [132, 180, 251, 309], "clickabl": [132, 251], "gift": [132, 251], "sageexampl": [132, 251], "delight": [133, 252], "opaqu": [133, 252], "mindset": [133, 171, 252, 299], "pep8": [133, 137, 252, 256], "reformat": [133, 252], "caught": [133, 252], "rational": [133, 252], "oserror": [133, 161, 186, 252, 279, 315], "bubbl": [133, 161, 252, 279], "hobbl": [133, 252], "inadequ": [133, 252], "grasp": [133, 148, 252, 266], "filenotfounderror": [133, 161, 252, 279], "show_cont": [133, 252], "not_her": [133, 252], "unhandl": [133, 172, 252, 301], "exceptiontyp": [133, 252], "variable_nam": [133, 252], "logging_exampl": [133, 252], "errno": [133, 161, 252, 279], "cookbook": [2, 133, 156, 157, 252, 274, 275], "ioerror": [133, 186, 252, 315], "unread": [133, 184, 252, 313], "nix": [133, 252], "deni": [133, 252], "baseexcept": [133, 186, 252, 315], "order_widget": [133, 252], "gadget": [133, 252], "danger": [133, 252], "crispi": [133, 252], "fireproof": [133, 252], "purs": [133, 252], "recap": [133, 252], "chosen": [133, 144, 157, 252, 263, 275], "httpstatu": [133, 161, 252, 279], "pii": [133, 162, 252, 280], "shot": [133, 252], "withstood": [133, 252], "glamor": [133, 252], "glob": [134, 157, 253, 275], "filesystem": [134, 253], "robustli": [134, 253], "pyth": [134, 253], "posixpath": [134, 253], "windowspath": [134, 253], "list_dir": [134, 253], "list_dirs_recurs": [134, 253], "find_fil": [134, 253], "my_subdirectori": [134, 253], "ometh": [134, 253], "posix": [134, 253], "__file__": [134, 157, 161, 253, 275, 279], "print_path": [134, 253], "print_directori": [134, 253], "output_path": [134, 253], "ng": [134, 160, 253, 278], "is_fil": [134, 253], "is_dir": [134, 253], "list_path": [134, 253], "path_typ": [134, 253], "abs_path": [134, 253], "construct_filenam": [134, 253], "directory_par": [134, 253], "file_in_modul": [134, 253], "cwd": [134, 164, 253, 286], "directory_nam": [134, 182, 253, 311], "config_directori": [134, 253], "0a6": [134, 253], "python311": [134, 253], "dynload": [134, 182, 253, 311], "alter": [134, 253], "frozenload": [134, 253], "find_spec": [134, 253], "importlib": [134, 153, 253, 271], "spec": [134, 253], "suffic": [134, 137, 253, 256], "bask": [134, 253], "dutch": [134, 144, 253, 263], "plural": [135, 254], "singular": [135, 254], "banana": [135, 254], "cherri": [135, 254], "doh": [135, 254], "fruit_kei": [135, 254], "fruit_valu": [135, 254], "indefinit": [135, 170, 171, 254, 298, 299], "boolean_condit": [135, 254], "uncondition": [135, 254], "unnecessarili": [135, 254], "eric": [135, 254], "terri": [135, 254], "1942": [135, 254], "clees": [135, 254], "todo_set": [135, 254], "milk": [135, 254], "bookmark": [135, 254], "brown": [135, 254], "fox": [135, 254], "vowel": [135, 139, 254, 258], "sling": [136, 255], "matrix": [2, 136, 146, 160, 170, 171, 177, 255, 265, 278, 298, 299, 306], "daisha": [136, 255], "nurseri": [136, 255], "rhyme": [136, 255], "buckl": [136, 255], "shoe": [136, 255], "mother": [136, 255], "goos": [136, 255], "forgiv": [136, 162, 255, 280], "gentl": [136, 137, 255, 256], "newest": [136, 255], "appet": [136, 255], "scale_info": [136, 255], "placehold": [136, 166, 255, 288], "prepend": [136, 146, 152, 255, 265, 270], "1980": [136, 184, 255, 313], "141592653589793": [136, 255], "718281828459045": [136, 255], "yike": [136, 255], "how_old": [136, 255], "10101": [136, 255], "hex": [136, 172, 255, 301], "astrophysicist": [136, 255], "viral": [136, 255], "fifth": [136, 158, 176, 255, 276, 305], "10\u2075": [136, 255], "1e5": [136, 255], "100000": [136, 255], "big_num": [136, 255], "1_234_567_890": [136, 255], "small_num": [136, 255], "1234": [136, 175, 255, 304], "23457e": [136, 255], "234568e": [136, 255], "234000e": [136, 255], "567": [136, 255], "890": [136, 255], "germani": [136, 255], "sweden": [136, 255], "setlocal": [136, 255], "lc_all": [136, 255], "heidi": [136, 255], "olaf": [136, 255], "font": [136, 255], "ascii": [136, 139, 146, 178, 255, 258, 265, 307], "ho": [136, 255], "3f": [136, 255], "142": [136, 255], "weapon": [136, 255], "fanat": [136, 255], "pope": [136, 255], "spanish": [136, 171, 183, 255, 299, 312], "inquisit": [136, 255], "day_of_week": [136, 255], "priweformat": [136, 255], "oyster": [136, 255], "1f": [136, 255], "legaci": [136, 255], "changeabl": [137, 256], "interchang": [137, 144, 162, 256, 263, 280], "guilti": [137, 256], "my_nam": [137, 256], "argument_nam": [137, 256], "type_nam": [137, 256], "argnam": [137, 256], "lame": [137, 256], "append_one_item_to_list": [137, 256], "item_list": [137, 256], "list_one_numb": [137, 256], "dog_list": [137, 256], "fuction": [137, 256], "larri": [137, 143, 147, 256, 262, 264], "more_stoog": [137, 256], "mixtur": [137, 256], "print_food": [137, 256], "soup": [137, 147, 256, 264], "splat": [137, 256], "feast": [137, 256], "traditional_thanksgiving_list": [137, 256], "turkei": [137, 256], "gravi": [137, 256], "mash": [137, 256], "vegan_thanksgiving_tupl": [137, 256], "burger": [137, 256], "meat": [137, 256], "loaf": [137, 256], "mushroom": [137, 256], "turnip": [137, 256], "print_main_cours": [137, 256], "meal": [137, 140, 256, 259], "main_cours": [137, 256], "bagel": [137, 256], "chili": [137, 256], "chuck_norri": [137, 256], "broken_funct": [137, 256], "print_person_info": [137, 256], "codes_in_python": [137, 256], "onward": [137, 256], "570": [137, 256], "greet_flex": [137, 256], "greet_posit": [137, 256], "shemp": [137, 256], "chess": [138, 172, 257, 301], "oppon": [138, 257], "grandmast": [138, 257], "validate_and_save_us": [138, 257], "recast": [138, 257], "validate_us": [138, 257], "save_us": [138, 257], "judgment": [138, 172, 257, 301], "user_is_subscrib": [138, 257], "user_subscription_level": [138, 257], "is_platinum_us": [138, 257], "is_subscrib": [138, 257], "subscription_level": [138, 257], "platinum_level": [138, 257], "refactor": [138, 257], "platinum": [138, 257], "condemn": [138, 257], "noun": [138, 257], "load_us": [138, 257], "load_user_from_databas": [138, 257], "buri": [138, 257], "pirat": [138, 257], "treasur": [138, 257], "banish": [138, 143, 171, 257, 262, 299], "autoincr": [138, 257], "lookup_us": [138, 257], "lint": [138, 175, 257, 304], "257": [138, 257], "unambigu": [138, 257], "ideolog": [138, 257], "penalti": [138, 257], "feasibl": [138, 184, 257, 313], "pragmat": [138, 257], "trump": [138, 257], "zealot": [138, 257], "indebt": [138, 257], "steve": [138, 257], "macguir": [138, 257], "precondit": [138, 257], "count_sales_over_one_hundr": [138, 172, 257, 301], "progam_nam": [138, 257], "something_import": [138, 257], "timeworn": [138, 257], "1972": [138, 257], "smalltalk": [138, 257], "stateless": [138, 154, 257, 272], "reverse_list": [139, 258], "odd_length": [139, 258], "even_length": [139, 258], "empty_list": [139, 258], "half_list": [139, 258], "idx": [139, 143, 258, 262], "orgin": [139, 258], "remove_vowel": [139, 258], "lv": [139, 258], "pythn": [139, 258], "aeiouaeiou": [139, 258], "new_str": [139, 258], "has_dupl": [139, 258], "twelfth": [139, 258], "print_powers_of_two": [139, 258], "calculate_valu": [139, 258], "12th": [139, 258], "4096": [139, 258], "display_box": [139, 258], "xxxxx": [139, 258], "fizzbuzz": [139, 152, 258, 270], "fizz": [139, 152, 258, 270], "hampshir": [139, 258], "postal": [139, 258], "ma": [139, 258], "vt": [139, 258], "nh": [139, 258], "get_state_full_nam": [139, 258], "state_cod": [139, 258], "year_releas": [139, 258], "display_movi": [139, 258], "jacket": [139, 258], "stanlei": [139, 258], "kubrick": [139, 258], "1987": [139, 258], "trek": [139, 258], "wrath": [139, 258], "khan": [139, 258], "nichola": [139, 258], "meyer": [139, 258], "1982": [139, 258], "cutoff": [139, 258], "calculate_pric": [139, 258], "small_order_r": [139, 258], "medium_order_r": [139, 258], "large_order_r": [139, 258], "minimum_medium_ord": [139, 258], "minimum_large_ord": [139, 258], "veloc": [139, 258], "acceler": [139, 258], "still_fal": [139, 258], "seconds_ago": [139, 258], "starting_height": [139, 258], "underwai": [140, 259], "dice": [140, 162, 259, 280], "newslett": [2, 61, 63, 110, 140, 149, 150, 259], "unbound": [141, 260], "luminos": [141, 260], "telescop": [141, 260], "num_list": [141, 146, 147, 260, 264, 265], "num_gener": [141, 260], "ngener": [141, 260], "118": [141, 260], "119": [141, 260], "330": [141, 260], "414": [141, 260], "437": [141, 260], "rand_str": [141, 260], "ascii_lowercas": [141, 162, 260, 280], "str_list": [141, 260], "str_gener": [141, 260], "56": [141, 158, 180, 260, 276, 309], "305": [141, 260], "yield": [141, 146, 161, 170, 260, 265, 279, 298], "presenc": [141, 161, 260, 279], "generaor": [141, 260], "my_gener": [141, 260], "demo_list": [141, 260], "demo_gener": [141, 260], "genexpr": [141, 260], "0x107ef2500": [141, 260], "town": [141, 143, 260, 262], "shrubberi": [141, 143, 260, 262], "gen": [141, 260], "ranger": [141, 260], "pos_count": [141, 260], "neg_count": [141, 260], "l1": [141, 260], "l2": [141, 260], "demo_rang": [141, 260], "nsame": [141, 260], "nnot": [141, 260], "Being": [2, 141, 171, 172, 260, 299, 301], "fivenumb": [141, 260], "gen_exp": [141, 260], "closest": [141, 260], "0x1078cf4c0": [141, 260], "get_random": [141, 260], "pal": [142, 261], "lap": [142, 161, 261, 279], "alp": [142, 261], "british": [142, 261], "uncontoversi": [142, 261], "happiest": [142, 261], "eb": [142, 261], "contradictori": [142, 261], "softwaer": [142, 261], "sucess": [142, 261], "ist": [143, 262], "1066": [143, 262], "1969": [143, 262], "last_index": [143, 262], "funniest": [143, 262], "indexoutofbound": [143, 262], "stdio": [143, 262], "nindex": [143, 262], "nlist": [143, 262], "substr": [143, 152, 158, 262, 270, 276], "order_item": [143, 262], "19098": [143, 262], "brian": [143, 262], "count_to_ten": [143, 262], "num": [143, 262], "400": [143, 160, 262, 278], "ascii_upercas": [143, 262], "alphabet": [143, 156, 262, 274], "haystack": [143, 262], "hai": [143, 262], "nah": [143, 262], "knight": [143, 262], "ni": [143, 262], "taskpython": [144, 263], "jsonadvantagesdisadvantagesconvert": [144, 263], "stringjson": [144, 263], "dumpsextrem": [144, 263], "dictionaryjson": [144, 263], "loadsa": [144, 263], "abovea": [144, 263], "abovewrit": [144, 263], "filejson": [144, 263], "dumpa": [144, 263], "aboveread": [144, 263], "objectjson": [144, 263], "loada": [144, 263], "jsonapproach": [144, 263], "json_str": [144, 263], "conver": [144, 263], "json_dictionari": [144, 263], "file_nam": [144, 263], "dicitonari": [144, 176, 263, 305], "outfil": [144, 263], "infil": [144, 263], "vaulu": [144, 263], "mold": [144, 170, 263, 298], "firstnam": [144, 263], "restaur": [144, 263], "lunchtim": [144, 263], "cuisin": [144, 263], "bean2": [144, 263], "__dict__": [144, 263], "deseri": [144, 263], "restaurantdecod": [144, 263], "object_hook": [144, 263], "restaurantencod": [144, 263], "cava": [144, 263], "cava_str": [144, 263], "cava_copi": [144, 263], "pydant": [144, 263], "pharmaci": [147, 264], "todo_list": [147, 264], "prime_numb": [147, 264], "all_my_list": [147, 264], "some_list": [147, 264], "yugoslavia": [147, 264], "japan": [147, 264], "kenya": [147, 264], "republ": [147, 264], "list_nam": [147, 264], "belgium": [147, 171, 264, 299], "grammarian": [147, 264], "prestigi": [147, 264], "long_word": [147, 264], "first_four": [147, 264], "last_thre": [147, 264], "last_three_again": [147, 264], "every_other_numb": [147, 264], "congratul": [147, 153, 173, 264, 271, 302], "other_list": [147, 264], "short_list": [146, 265], "long_list": [146, 265], "long_list_2": [146, 265], "dispar": [146, 265], "mutat": [146, 265], "ins": [146, 265], "item1": [146, 265], "item2": [146, 265], "itemn": [146, 265], "123": [146, 162, 265, 280], "n4": [146, 265], "b2": [146, 265], "bytes_object": [146, 265], "bytearray_object": [146, 265], "x00": [146, 265], "compactli": [146, 265], "string_el": [146, 265], "items": [146, 265], "wchar_t": [146, 265], "utf": [146, 157, 161, 162, 265, 275, 279, 280], "111": [146, 265], "double_arrai": [146, 265], "fileiter": [146, 265], "file_handl": [146, 265], "readlin": [146, 265], "giant_fil": [146, 265], "1000000000": [146, 265], "6914394581690431": [146, 265], "num_arrai": [146, 265], "3694779579527676": [146, 265], "dip": [146, 183, 265, 312], "readinto": [146, 265], "memoryview": [146, 265], "list_numb": [146, 265], "first_thre": [146, 265], "stream": [146, 149, 156, 265, 267, 274], "memoryview_numb": [146, 265], "tolist": [146, 265], "ndarrai": [146, 265], "counterpart": [146, 265], "elapsed_tim": [146, 265], "597": [146, 265], "729": [146, 265], "585": [146, 175, 265, 304], "051": [146, 265], "hadamard": [148, 266], "465": [148, 266], "matrix_multiply_elementwis": [148, 266], "tf": [148, 266], "airplan": [148, 266], "multipi": [148, 266], "rember": [148, 266], "prone": [148, 266], "get_test_matrix": [148, 266], "dimmens": [148, 266], "tender": [149, 267], "sqlalchemi": [2, 149, 151, 154, 168, 267, 269, 272, 296], "sqllite3": [149, 161, 169, 267, 279, 297], "redowan": [149, 267], "delowar": [149, 267], "doggi": [149, 267], "mors": [149, 267], "whimsic": [149, 267], "notabl": [149, 267], "gunicorn": [149, 267], "proxi": [149, 267], "wishlist": [149, 267], "kindl": [150, 268], "704": [150, 268], "unruli": [150, 268], "drunken": [150, 268], "eleph": [150, 268], "jupysql": [150, 268], "poster": [150, 268], "ruffl": [150, 268], "laundri": [151, 269], "nickel": [151, 269], "dime": [151, 269], "epdb": [151, 269], "pgadmin": [151, 269], "jupyterbook": [2, 151, 269], "notori": [151, 269], "ctype": [151, 269], "dll": [151, 181, 182, 269, 310, 311], "zillion": [151, 186, 269, 315], "operand": [152, 270], "nubmber": [152, 270], "Will": [152, 270], "exponent": [152, 270], "nearest": [152, 166, 270, 288], "peanut": [152, 270], "butter": [152, 270], "jelli": [152, 270], "nameerror": [152, 158, 270, 276], "shakespear": [152, 270], "flashback": [152, 270], "b_list": [152, 270], "another_list": [152, 270], "critical_object": [152, 270], "hoorai": [152, 170, 270, 298], "1operatoroperand": [152, 270], "2resultdiscussiontrueandtruetruefalseandtruefalseshort": [152, 270], "circuitstrueandfalsefalsefalseandfalsefalseshort": [152, 270], "circuitstrueortruetrueshort": [152, 270], "circuitsfalseortruetruetrueortruetrueshort": [152, 270], "circuitsfalseortruetruen": [152, 270], "anottruefalsesimpl": [152, 270], "negationn": [152, 270], "anotfalsetruesimpl": [152, 270], "idiom": [152, 176, 184, 186, 270, 305, 313, 315], "some_kei": [152, 270], "some_dictionari": [152, 270], "my_object": [152, 270], "do_someth": [152, 161, 270, 279], "some_object": [152, 270], "early_primes_set": [152, 270], "early_primes_list": [152, 270], "0b": [152, 172, 270, 301], "0011": [152, 270], "0101": [152, 270], "0001": [152, 270], "0111": [152, 270], "0b0011": [152, 270], "0b0101": [152, 270], "0b1101": [152, 270], "0b1000": [152, 270], "complement": [152, 164, 171, 270, 286, 299], "unari": [152, 270], "sixteen": [152, 270], "tusk": [152, 270], "wheel": [153, 183, 271, 312], "build_meta": [153, 271], "518": [153, 271], "hellosetup": [153, 182, 271, 311], "hello_setuptool": [153, 271], "module1": [153, 271], "get_article_url": [153, 271], "humbl": [153, 271], "test_hellosetup": [153, 271], "sensibl": [153, 271], "test_get_article_url": [153, 271], "package_dir": [153, 271], "install_requir": [153, 271], "twine": [153, 182, 271, 311], "whl": [153, 271], "tar": [153, 157, 164, 271, 275, 286], "gz": [153, 164, 271, 286], "hellosetuptools_test": [153, 271], "rhetor": [153, 271], "cooler": [153, 271], "mate": [153, 271], "regist": [153, 271], "fridg": [153, 271], "beverag": [153, 271], "slick": [153, 271], "long_descript": [153, 271], "long_description_content_typ": [153, 271], "bsd": [153, 271], "project_url": [153, 271], "ream": [153, 271], "dba": [154, 272], "ripe": [154, 272], "mysql": [154, 168, 272, 296], "hibern": [154, 272], "h2": [154, 272], "matur": [154, 167, 183, 272, 289, 312], "understood": [154, 272], "misconcept": [154, 175, 272, 304], "ddl": [154, 272], "brainstorm": [155, 273], "clich\u00e9": [155, 273], "truism": [155, 273], "presuppos": [155, 273], "intim": [155, 273], "crystal": [155, 273], "teaser": [155, 273], "entertain": [155, 273], "justif": [155, 273], "qt": [155, 273], "orc": [156, 178, 274, 307], "pa": [156, 274], "df_taxi": [156, 274], "lenox": [156, 274], "west": [156, 274], "turtl": [156, 274], "bai": [156, 274], "manhattan": [156, 274], "cash": [156, 274], "villag": [156, 274], "hudson": [156, 274], "sq": [156, 274], "yorkvil": [156, 274], "midtown": [156, 274], "from_": [156, 274], "arrow_taxi": [156, 274], "from_panda": [156, 274], "58": [156, 274], "criteria": [156, 274], "high_far": [156, 274], "130": [156, 274], "103": [156, 162, 274, 280, 314], "143": [156, 274], "doublescalar": [156, 274], "getsizeof": [156, 274], "3019880": [156, 274], "982757": [156, 274], "operationspeedfil": [156, 274], "sizedf_taxi": [156, 274], "ms191": [156, 274], "788panda": [156, 274], "msdf_taxi": [156, 274], "ms275": [156, 274], "765panda": [156, 274], "to_feather2": [156, 274], "ms428": [156, 274], "818panda": [156, 274], "read_feather1": [156, 274], "to_orc7": [156, 274], "ms751": [156, 274], "897panda": [156, 274], "read_orc5": [156, 274], "to_excel874": [156, 274], "ms540": [156, 274], "683panda": [156, 274], "read_excel560": [156, 274], "to_csv32": [156, 274], "ms900": [156, 274], "405panda": [156, 274], "read_csv8": [156, 274], "191": [156, 274], "788": [156, 274], "stabil": [156, 160, 274, 278], "flight": [156, 171, 274, 299], "odbc": [156, 274], "jdbc": [156, 274], "detractor": [157, 275], "relianc": [157, 275], "winreg": [157, 275], "putenv": [157, 275], "getcwd": [157, 275], "chdir": [157, 275], "darwin": [157, 178, 275, 307], "win32": [157, 275], "version_info": [157, 275], "getopt": [157, 275], "win32_edit": [157, 275], "mac_ver": [157, 275], "tempfil": [157, 275], "copytre": [157, 275], "filecmp": [157, 275], "difflib": [157, 275], "gzip": [157, 275], "bz2": [157, 275], "lzma": [157, 275], "tarfil": [157, 275], "sword": [157, 275], "subprocess_demo": [157, 275], "file_list": [157, 275], "lister": [157, 184, 275, 313], "call_subprocess": [157, 275], "capture_output": [157, 275], "display_summari": [157, 275], "suprocess": [157, 275], "stderr": [157, 275], "returncod": [157, 275], "felin": [157, 275], "untrust": [157, 275], "supbrocess": [157, 275], "completedprocess": [157, 275], "no_such_fil": [157, 275], "private_work": [157, 275], "524": [157, 275], "calledprocesserror": [157, 275], "retcod": [157, 275], "handle_except": [157, 161, 275, 279], "print_except": [157, 275], "format_exc": [157, 275], "print_last": [157, 275], "stack_trac": [157, 275], "print_cal": [157, 275], "splitlin": [157, 275], "automag": [157, 275], "slist": [157, 275], "tripl": [158, 276], "my_str": [158, 276], "multilinestr": [158, 276], "indexerror": [158, 276], "2nd": [158, 276], "nslice": [158, 276], "5th": [158, 276], "hel": [158, 276], "nmy": [158, 276], "operationoperatorassign": [158, 276], "membership": [158, 176, 276, 305], "checkinginnot": [158, 276], "inescap": [158, 276], "str1": [158, 276], "str2": [158, 276], "nthi": [158, 276], "str3": [158, 276], "str4": [158, 276], "helloworld": [158, 276], "memebership": [158, 276], "nhello": [158, 276], "printabl": [158, 276], "operatordescript": [158, 276], "dsign": [158, 276], "uunsign": [158, 276], "ccharact": [158, 276], "sstring": [158, 276], "ffloat": [158, 276], "560000": [158, 276], "functiondescript": [158, 276], "stringstr": [158, 276], "incomprehens": [158, 276], "itisnot_str": [158, 276], "nthe": [158, 276], "methoddescript": [158, 276], "letterlow": [158, 276], "stringupp": [158, 276], "stringencod": [158, 276], "stringreplac": [158, 276], "insidesplit": [158, 276], "leftjoin": [158, 276], "stringtitl": [158, 276], "stringindex": [158, 276], "wanna": [158, 276], "innput": [158, 276], "getpass": [158, 276], "str_name": [158, 276], "phrase": [158, 276], "wooow": [158, 276], "split_str": [158, 276], "ndisplai": [158, 177, 276, 306], "whitespac": [158, 175, 184, 188, 276, 304, 313, 317], "first_char": [158, 276], "last_char": [158, 276], "except_first": [158, 276], "except_last": [158, 276], "321": [158, 276], "join_str": [158, 276], "\u0441ompar": [158, 276], "queen_str": [158, 276], "strengthen": [158, 189, 276, 318], "youtu": [159, 163, 277, 285], "b_j": [159, 277], "ix0caha": [159, 277], "cheapskat": [160, 278], "mathemetician": [160, 278], "3x2": [160, 278], "nx1": [160, 278], "perpetu": [160, 278], "readtabl": [160, 278], "variablenam": [160, 278], "usercount": [160, 278], "shameless": [160, 278], "tiob": [160, 164, 184, 278, 286, 313], "outrank": [160, 278], "kotlin": [160, 184, 188, 278, 313, 317], "mathwork": [160, 278], "149": [160, 166, 171, 278, 288, 299], "overnight": [160, 278], "froze": [160, 278], "piecem": [160, 278], "prod_siz": [160, 278], "tensorprod": [160, 278], "disp": [160, 278], "fprintf": [160, 278], "5f": [160, 278], "etim": [160, 278], "tensor_cas": [160, 278], "tensordot": [160, 278], "testpythonmatlab2": [160, 278], "455": [160, 278], "246312": [160, 278], "285": [160, 278], "122052": [160, 278], "547162": [160, 278], "2135averag": [160, 278], "315": [160, 278], "5000": [160, 278], "matrix_cas": [160, 278], "matix": [160, 278], "testpythonmatlaboctave2": [160, 278], "214": [160, 278], "708142": [160, 278], "679952": [160, 278], "692312": [160, 278], "958742": [160, 278], "672012": [160, 278], "827182": [160, 278], "254": [160, 278], "665442": [160, 278], "894962": [160, 278], "64445averag": [160, 278], "264": [160, 278], "732": [160, 278], "eigenvalu": [160, 278], "eig": [160, 278], "eigen_cas": [160, 278], "eigval": [160, 278], "benchmarkspythonmatlaboctave6": [160, 278], "588": [160, 278], "9087211": [160, 278], "175746": [160, 278], "528": [160, 278], "4944610": [160, 278], "413386": [160, 278], "51610": [160, 278], "794496": [160, 278], "448": [160, 278], "3791810": [160, 278], "474836": [160, 278], "688": [160, 278], "3505711": [160, 278], "88499averag": [160, 278], "598": [160, 278], "5310": [160, 278], "pronounc": [160, 278], "code_benchmark": [160, 278], "eleven": [160, 278], "abysm": [160, 278], "proportion": [160, 278], "rear": [160, 278], "r2022b": [160, 278], "shed": [160, 175, 278, 304], "instabl": [160, 278], "textiowrapp": [161, 279], "brag": [161, 279], "not_pres": [161, 279], "acquir": [161, 171, 279, 299], "urllib": [161, 279], "create_connect": [161, 279], "_close": [161, 279], "afterward": [161, 279], "w3": [161, 279], "line_one_length": [161, 279], "setdefaulttimeout": [161, 279], "sendal": [161, 279], "reciev": [161, 279], "recv": [161, 279], "ieee": [161, 279], "754": [161, 279], "getcontext": [161, 279], "localcontext": [161, 279], "decimalcontext": [161, 279], "tset": [161, 279], "tcalcul": [161, 279], "tinsid": [161, 279], "1428571428571428571428571429": [161, 279], "ffrom": [161, 279], "abstractcontextmanag": [161, 279], "democontextmanag": [161, 279], "raise_except": [161, 279], "houston": [161, 279], "ex_typ": [161, 279], "ex_valu": [161, 279], "ex_traceback": [161, 279], "safeti": [161, 279], "dutifulli": [161, 279], "falsi": [161, 279], "dcm": [161, 279], "eat_except": [161, 279], "mcm": [161, 279], "illumin": [161, 279], "wholesal": [161, 279], "__aenter__": [161, 279], "resource_aquir": [161, 279], "__aexit__": [161, 279], "resource_releas": [161, 279], "contextmanag": [161, 279], "asynccontextmanag": [161, 279], "lieu": [161, 169, 279, 297], "managed_resourc": [161, 279], "resource_manag": [161, 279], "resourcemanag": [161, 279], "resource_avail": [161, 279], "tdid": [161, 279], "WITH": [161, 279], "unmanag": [161, 279], "sqlite3": [161, 279], "mang": [161, 279], "putvalu": [161, 279], "getvalu": [161, 279], "db_file": [161, 279], "keyvalu": [161, 279], "do_setup": [161, 279], "varchar": [161, 279], "fetchon": [161, 279], "checker": [161, 175, 279, 304], "urlopen": [161, 279], "getcod": [161, 279], "erro": [161, 279], "needless": [161, 279, 314], "suppressor": [161, 279], "chicken_littl": [161, 279], "systemerror": [161, 279], "sky": [161, 279], "discern": [161, 279], "silent": [161, 279], "shuffl": [162, 280], "slot": [162, 176, 280, 305], "sanit": [162, 280], "cryptograph": [162, 280], "genuin": [162, 280], "cryptographi": [162, 280], "seeded_1": [162, 280], "seeded_2": [162, 280], "randomly_seed": [162, 280], "655": [162, 280], "956": [162, 280], "coincident": [162, 280], "506": [162, 280], "systemrandom": [162, 280], "getstat": [162, 280], "setstat": [162, 280], "urandom": [162, 280], "betewen": [162, 280], "gaussian": [162, 280], "iq": [162, 280], "legitim": [162, 280], "gauss": [162, 280], "102": [162, 280], "121": [162, 280], "94": [162, 280], "106": [162, 280], "ascii_lett": [162, 280], "four_digit": [162, 280], "ten_mixed_cas": [162, 280], "assort": [162, 170, 280, 298], "twenty_assort": [162, 280], "8782": [162, 280], "plzyoxfloq": [162, 280], "mnsksf": [162, 280], "jcg": [162, 280], "token_byt": [162, 280], "x05p": [162, 280], "xc6a": [162, 280], "x87": [162, 280], "xf9": [162, 280], "xa9": [162, 280], "codepoint": [162, 280], "token_hex": [162, 280], "529af33afcc8acab096a": [162, 280], "token_urlsaf": [162, 280], "base64": [162, 280], "shorten": [162, 184, 280, 313], "gfn2ngjo7izmpyxs5tvu": [162, 280], "widespread": [162, 164, 280, 286], "collis": [162, 280], "vanishingli": [162, 280], "967909e3": [162, 280], "7231": [162, 280], "4040": [162, 280], "aae4": [162, 280], "8b6b2fb96a0b": [162, 280], "uuid1": [162, 280], "uuid4": [162, 280], "122": [162, 188, 280, 317], "trillion": [162, 280], "bfc89f3e": [162, 280], "e6ab": [162, 280], "11ec": [162, 280], "abfc": [162, 280], "4a9b744d17b8": [162, 280], "025586c2": [162, 280], "50ed": [162, 280], "41a6": [162, 280], "ae31": [162, 280], "bf96b9d79df2": [162, 280], "dpi": [162, 280], "7jbdhtlpinu": [163, 285], "unpopular": [164, 286], "steeper": [164, 286], "clang": [164, 178, 286, 307], "xcode": [164, 286], "mitig": [164, 286], "clion": [164, 286], "microbit": [164, 286], "gdb": [164, 286], "m2": [164, 286], "gcc_make_tutori": [164, 286], "install_cmak": [164, 286], "cmake_vers": [164, 286], "wget": [164, 286], "kitwar": [164, 286], "ref": [164, 286], "xfvz": [164, 286], "gcc_cmake": [164, 286], "ahem": [164, 286], "AS": [164, 286], "gcc_cmake_tutori": [164, 286], "truncat": [164, 286], "buildx": [164, 286], "larger_log": [164, 286], "buildkit_step_log_max_s": [164, 286], "50000000": [164, 286], "gcc_make_tutorial_sourc": [164, 286], "c3aa841b06c8": [164, 286], "step5": [164, 286], "mathfunct": [164, 286], "tutorialconfig": [164, 286], "cxx": [164, 286], "pallet": [164, 286], "step_2": [164, 286], "cppdbg": [164, 286], "workspaceroot": [164, 286], "step2_build": [164, 286], "stopatentri": [164, 286], "filedirnam": [164, 286], "externalconsol": [164, 286], "mimod": [164, 286], "setupcommand": [164, 286], "ignorefailur": [164, 286], "disassembli": [164, 175, 286, 304], "annoyingli": [164, 286], "flawlessli": [164, 177, 286, 306], "sought": [165, 287], "grief": [165, 287], "fsolv": [165, 287], "f_scipy_difference_of_squar": [165, 287], "f_scipy_quadrat": [165, 287], "quadadrat": [165, 287], "solvabl": [165, 287], "75361538": [165, 287], "75361533": [165, 287], "lm": [165, 287], "1966": [165, 287], "formul": [165, 287], "maslow": [165, 287], "esteem": [165, 287], "intact": [165, 176, 287, 305], "misbegotten": [165, 287], "corollari": [165, 287], "cure": [165, 287], "unequivoc": [165, 287], "sage": [2, 165, 170, 171, 177, 184, 287, 298, 299, 306, 313], "scipy32": [165, 287], "438": [165, 287], "sympy427": [165, 287], "sagemath835": [165, 287], "finer": [165, 287], "gist": [166, 288], "githubusercont": [166, 288], "256c7e3d37f132ff23f9b49b4ea34f71": [166, 288], "4d938fd1f81b8d2a6d44b26f6e0b5563104f5cbf": [166, 288], "145": [166, 288], "146": [166, 288], "148": [166, 288], "petal_length": [166, 288], "petal_width": [166, 288], "selector": [166, 288], "sepal_length": [166, 288], "target_nam": [166, 288], "sepal_width": [166, 288], "mast": [166, 288], "fell": [167, 171, 289, 299], "edutool": [167, 289], "cachet": [167, 289], "fleet": [167, 289], "1970": [168, 296], "backbon": [168, 296], "sixth": [168, 176, 296, 305], "mindshar": [168, 296], "to_sql": [168, 296], "myisam": [168, 296], "innodb": [168, 296], "dialect": [168, 296], "sqldf": [168, 296], "earn": [168, 178, 296, 307], "desc": [168, 178, 296, 307], "top_tip": [168, 296], "oltp": [168, 296], "ipython_sql": [168, 296], "sqlmagic": [168, 296], "autopanda": [168, 296], "displaycon": [168, 296], "somefil": [168, 296], "titan": [168, 296], "disast": [168, 296], "camaraderi": [168, 296], "catastroph": [168, 296], "survivors_by_far": [168, 296], "all_passeng": [168, 296], "percent_surviv": [168, 296], "egalitarian": [168, 296], "resultset": [168, 296], "survivors_by_fare_r": [168, 296], "df_survivor": [168, 296], "reentrant": [168, 296], "shut": [168, 183, 296, 312], "endless": [169, 297], "selfi": [169, 297], "post_tabl": [169, 297], "declarativebas": [169, 297], "mapped_column": [169, 297], "mappedasdataclass": [169, 297], "__tablename__": [169, 297], "primary_kei": [169, 297], "pancak": [169, 297], "flapjack": [169, 297], "foreign": [169, 171, 297, 299], "posts_tabl": [169, 297], "foreignkei": [169, 297], "posts_to_categori": [169, 297], "category_id": [169, 297], "post_id": [169, 297], "back_popul": [169, 297], "create_engin": [169, 297], "sqllite": [169, 297], "pysqlit": [169, 297], "create_t": [169, 297], "__table__": [169, 297], "checkfirst": [169, 297], "get_categories_from_json": [169, 297], "get_posts_from_json": [169, 297], "save_categori": [169, 297], "save_post": [169, 297], "post_categori": [169, 297], "overwrit": [169, 178, 297, 307], "43": [169, 297], "save_categrori": [169, 297], "noteworthi": [170, 298], "appeal": [170, 298], "preconfigur": [170, 298], "delici": [170, 182, 298, 311], "some_express": [170, 298], "mathjax": [170, 298], "print_latex": [170, 177, 298, 306], "discoveri": [170, 298], "tractabl": [170, 183, 298, 312], "liberti": [170, 298], "srepr": [170, 298], "nurtur": [171, 299], "vehicl": [171, 299], "constitut": [171, 299], "ism": [171, 299], "ageism": [171, 299], "loud": [171, 299], "WIth": [171, 299], "ring": [171, 299], "punch": [171, 299], "extravag": [171, 299], "millionair": [171, 299], "kahn": [171, 299], "academi": [171, 299], "sal": [171, 299], "quizz": [171, 299], "gamifi": [171, 299], "overst": [171, 299], "tuition": [171, 299], "frighten": [171, 186, 299, 315], "parenthood": [171, 299], "fourteenth": [171, 299], "ninth": [171, 299], "leaf": [171, 299], "clep": [171, 299], "texa": [171, 299], "ti": [171, 299, 314], "ce": [171, 299], "amusingli": [171, 299], "sympath": [171, 299], "abandon": [171, 299], "troll": [171, 299], "econom": [171, 299], "semest": [171, 299], "deck": [171, 299], "whoever": [171, 299], "woman": [171, 173, 299, 302], "nasa": [171, 299], "katherin": [171, 299], "glenn": [171, 299], "trajectori": [171, 299], "apolo": [171, 299], "apollo": [171, 299], "crew": [171, 299], "women": [171, 299], "repli": [171, 299], "presidenti": [171, 299], "psychologist": [171, 299], "carol": [171, 299], "dweck": [171, 299], "fierc": [171, 299], "chines": [171, 299], "talent": [171, 299], "hardwir": [171, 299], "pew": [171, 299], "malta": [171, 299], "slovenia": [171, 299], "incent": [171, 299], "maltes": [171, 299], "pete": [171, 299], "divers": [171, 299], "wildflow": [171, 299], "wheatfield": [171, 299], "weed": [171, 299], "dispel": [171, 299], "advent": [171, 299], "trait": [171, 299], "karen": [171, 299], "upset": [171, 299], "pimsleur": [171, 299], "158": [171, 299], "bachelor": [171, 299], "680": [171, 299], "statista": [171, 299], "lollygag": [171, 299], "foolish": [171, 299], "masteri": [171, 299], "courag": [171, 299], "ardent": [171, 299], "etsi": [171, 299], "norman": [171, 299], "conquest": [171, 299], "resign": [171, 299], "adventur": [172, 173, 301, 302, 314], "reus": [172, 301], "compartment": [172, 301], "clase": [172, 301], "parameter_1": [172, 301], "parameter_n": [172, 301], "statement_1": [172, 301], "statement_n": [172, 301], "stricter": [172, 301], "log_info": [172, 301], "n1": [172, 301], "log_result": [172, 301], "octal": [172, 301], "int_to_str": [172, 301], "target_bas": [172, 301], "0x": [172, 301], "0d": [172, 301], "0o": [172, 301], "1010": [172, 301], "ff": [172, 301], "innermost": [172, 301], "12345": [172, 301], "number_as_str": [172, 301], "count_sales_over_one_hund": [172, 301], "count_high_dollar": [172, 301], "count_low_dollar": [172, 301], "implicitli": [172, 301], "freecodecamp": [173, 302], "outfit": [173, 302], "beaver": [173, 302], "100daysofcod": [173, 302], "finit": [173, 302], "hype": [173, 302], "imit": [173, 302], "exorbit": [173, 302], "sizzl": [173, 302], "steak": [173, 302], "fat": [173, 302], "sheesh": [174, 303], "parenthesi": [174, 175, 303, 304], "unbalanc": [174, 303], "f7": [174, 303], "infer": [175, 304], "crutch": [175, 304], "reassign": [175, 304], "show_variable_us": [175, 304], "load_const": [175, 304], "store_fast": [175, 304], "load_fast": [175, 304], "return_valu": [175, 304], "elig": [175, 304, 314], "ython": [175, 304], "soapbox": [175, 186, 304, 315], "unfairli": [175, 304], "lstrip": [175, 304], "maketran": [175, 304], "partit": [175, 304], "trim_left": [175, 304], "get_us": [175, 304], "set_shipping_opt": [175, 304], "greet_us": [175, 304], "484": [175, 304], "forbid": [175, 304], "conform": [175, 304], "333": [175, 304], "wavi": [175, 304], "signal": [175, 304], "foolproof": [175, 304], "get_list": [175, 304], "get_blog_info": [175, 304], "list_of_int": [175, 304], "cf": [175, 304], "first_fiv": [175, 304], "2025": [175, 304], "aliasnam": [175, 304], "mapinttoint": [175, 304], "mapstringtoint": [175, 304], "get_ag": [175, 304], "dad": [175, 304], "show_expir": [175, 304], "expir": [175, 304], "2059": [175, 304], "some_funct": [175, 304], "compare_str": [175, 304], "digest": [175, 304], "my_list": [176, 305], "setvalu": [176, 305], "foghorn": [176, 305], "cat_in_the_hat_charact": [176, 305], "thing_1": [176, 305], "thing_2": [176, 305], "frozenset": [176, 305], "underground": [176, 305], "triplet": [176, 305], "middle_initi": [176, 305], "address_line_1": [176, 305], "address_line_2": [176, 305], "necessit": [176, 305], "person1": [176, 305], "person2": [176, 305], "field_nam": [176, 305], "a_point_dict": [176, 305], "p3": [176, 305], "default_factori": [176, 305], "fifo": [176, 305], "lifoqueu": [176, 305], "priorityqueu": [176, 305], "prioriti": [176, 305], "sortabl": [176, 305], "maxsiz": [176, 305], "timeout": [176, 305], "producer_funct": [176, 305], "consumer_funct": [176, 305], "dequ": [176, 305], "hallmark": [176, 305], "bizarr": [176, 305], "breviti": [176, 305], "config_set": [176, 305], "data_cent": [176, 305], "atlanta": [176, 305], "log_level": [176, 305], "app_nam": [176, 305], "command_lin": [176, 305], "hyperglobalmeganet": [176, 305], "config_map": [176, 305], "kindergarten": [176, 305], "venn": [176, 305], "scari": [176, 305], "low_subset": [176, 305], "codeequival": [176, 305], "resulttest": [176, 305], "low2": [176, 305], "high2": [176, 305], "hightruefalsetruefind": [176, 305], "isdisjoint": [176, 305], "falsefind": [176, 305], "amp": [176, 305], "lowlow": [176, 305], "low_subsetlow_subset": [176, 305], "issubset": [176, 305], "issuperset": [176, 305], "truetruecombin": [176, 305], "low_subsethigh": [176, 305], "symmetric_differ": [176, 305], "emptylen": [176, 305], "0len": [176, 305], "0falsetru": [176, 305], "defrost": [176, 305], "microwav": [176, 305], "glossari": [176, 305], "citat": [176, 305], "typeset": [177, 306], "latexifi": [177, 306], "usepackag": [177, 306], "amsmath": [177, 306], "lll": [177, 306], "tex": [177, 306], "pdf": [177, 306], "jupyterlab_latex": [177, 306], "mapto": [177, 306], "x2": [177, 306], "bmatrix": [177, 306], "arraytyp": [177, 306], "one_d_arrai": [177, 306], "as_row": [177, 306], "as_column": [177, 306], "sparksess": [178, 307], "jdk": [178, 307], "jre": [178, 307], "java_hom": [178, 307], "____": [178, 307], "_____": [178, 307], "sparkcontext": [178, 307], "pyspark_parquet": [178, 307], "crossjoin": [178, 307], "getorcr": [178, 307], "current_d": [178, 307], "saniti": [178, 307], "printschema": [178, 307], "commonplac": [178, 307], "sparksql": [178, 307], "cabbi": [178, 307], "top_far": [178, 307], "createorreplaceglobaltempview": [178, 307], "global_temp": [178, 307], "satisfactori": [178, 307], "conf": [178, 307], "eagerev": [178, 307], "taxis_panda": [178, 307], "pandas_api": [178, 307], "emul": [178, 307], "dataframewrit": [178, 307], "sidebar": [178, 307], "topanda": [178, 307], "top_fares_panda": [178, 307], "taxis_by_pickup_borough": [178, 307], "partitionbi": [178, 307], "unpartit": [178, 307], "91": [178, 307], "saveast": [178, 307], "taxis_by_pickup": [178, 307], "rdbm": [178, 307], "total_far": [178, 307], "createt": [178, 307], "pentaho": [180, 309], "provision": [180, 309], "vm": [180, 309], "ami": [180, 309], "virtualbox": [180, 309], "ador": [180, 309], "cento": [180, 309], "vagrantfil": [180, 309], "playbook": [180, 309], "inventori": [180, 309], "vagantfil": [180, 309], "forwarded_port": [180, 309], "private_network": [180, 309], "192": [180, 309], "168": [180, 309], "ansible_loc": [180, 309], "inventory_path": [180, 309], "ansible_connect": [180, 309], "misunderstand": [181, 310], "javac": [181, 184, 310, 313], "cod": [181, 310], "bashrc": [181, 310], "pyclean": [181, 310], "mojo": [181, 310], "rusti": [181, 310], "namespac": [182, 311], "package_demo": [182, 311], "package1": [182, 311], "mymodul": [182, 311], "package2": [182, 311], "package3": [182, 311], "package4": [182, 311], "pathinfo": [182, 184, 311, 313], "pathprint": [182, 311], "package5": [182, 311], "some_crazy_random_nam": [182, 311], "my_project": [182, 311], "status_cod": [182, 311], "reactiv": [182, 311], "affection": [182, 311], "lessen": [182, 311], "python310": [182, 311], "some_depend": [182, 311], "lamba": [182, 311], "conceit": [183, 312], "absent": [183, 312], "fifteen": [183, 312], "podcast": [183, 312], "radioambulant": [183, 312], "insofar": [183, 312], "generalist": [183, 312], "penal": [183, 312], "eschew": [183, 312], "fritter": [183, 312], "unorgan": [183, 312], "primordi": [183, 312], "relentless": [183, 312], "parad": [183, 312], "arcan": [183, 312], "undocu": [183, 312], "voodoo": [183, 312], "mishmash": [183, 312], "wxwidget": [183, 312], "thwart": [183, 312], "ungraci": [183, 312], "slint": [183, 312], "joplin": [183, 312], "conven": [183, 312], "hodg": [183, 312], "podg": [183, 312], "quip": [184, 313], "misl": [184, 313], "unremark": [184, 313], "eclect": [184, 313], "rubbish": [184, 313], "1995": [184, 313], "outgrowth": [184, 313], "quantit": [184, 313], "financi": [184, 313], "spawn": [184, 188, 313, 317], "sagemak": [184, 313], "stretch": [184, 313], "sojourn": [184, 313], "dogfood": [184, 313], "botocor": [184, 313], "tandem": [184, 313], "unglamor": [184, 313], "conduct": [184, 313], "predomin": [184, 313], "eras": [184, 313], "multicor": [184, 313], "applet": [184, 313], "activex": [184, 313], "android": [184, 313], "hinder": [184, 313], "seo": 185, "hasten": [186, 315], "reassur": [186, 315], "ranoutofsometh": [186, 315], "cupboard": [186, 315], "nomoresomethingexcept": [186, 315], "cap": [186, 315], "boat": [186, 315], "inconsider": [186, 315], "ex1": [186, 315], "ex2": [186, 315], "juic": [186, 315], "downstream": [186, 315], "customiz": [186, 315], "systemexit": [186, 315], "keyboardinterrupt": [186, 315], "impli": [186, 315], "chameleon": [186, 315], "dozen": [186, 315], "lucki": [186, 315], "404": [186, 315], "boto3error": [186, 315], "grunt": [186, 315], "felloffsoapboxerror": [186, 315], "heartbreak": [187, 316], "psoriasi": [187, 316], "tape": [187, 316], "shirt": [187, 316], "negoti": [187, 316], "euphem": [187, 316], "amateur": [187, 316], "unpaid": [187, 316], "dumber": [187, 316], "anger": [188, 317], "allegedli": [188, 317], "616": [188, 317], "185": [188, 317], "613": [188, 317], "obvious": [188, 317], "ecmascript": [188, 317], "coffeescript": [188, 317], "consecut": [189, 318], "sweet": [189, 318], "cognitive_sci": [], "socialmedia": [], "directoryinfo": [2, 70], "goroutin": [2, 114], "postgr": [2, 154], "000000000": [2, 156], "pycach": [2, 181], "0x117727450": [], "0x117bc6510": [], "0x10fe2b3d0": [], "0x10ffc9390": [], "0x10fe87650": 212, "0x12c2c9d10": 212, "_index": [], "coop": 2, "heymo": [], "mystnb": [], "testng": 2, "whereabout": 2, "dag": [], "taskflow": [], "sphinx": [], "cookiecutt": [], "jmeter": [], "2m": [], "fibonacci": [], "ipywidet": [], "ipywidget": [], "indiffer": [], "devil": [], "gspread": [], "delm": 2, "prun": [], "lprun": [], "kernprof": [], "memit": [], "mprun": [], "scalen": [], "yappi": [], "maya": [], "curb": [], "hexbin": [], "transcript": [], "twist": [], "inflict": [], "wound": [], "subdomain": [], "disadvanatag": [], "showdown": [], "violin": [], "trap": [], "multidimension": [], "vex": [], "sooth": [], "reconcil": [], "religion": [], "roadblock": [], "configpars": [], "tomllib": [], "mypi": [], "mainten": [], "iso": [], "8601": [], "relativedelta": [], "rrule": [], "recurr": [], "contract": [], "beatl": [], "steroid": [], "to_json": [], "from_json": [], "jsonencod": [], "jsondecod": [], "matmul": [], "walru": [], "pandaspickup": 2, "contextlib": [], "randrang": [], "mask": [], "cheap": [], "weakli": [], "disassembl": [], "gracefulli": [], "chainmap": [], "abstracttestngspringcontexttest": [], "yagni": [], "gonna": [], "oldest": 190, "disclaim": 314, "oldestr": [], "matricul": 314, "mea": [], "culpa": [], "scour": 314, "codger": 314, "codgerli": 314, "medicad": [], "medicar": 314, "slap": [], "traumat": 314, "requisit": 314, "degreeand": [], "shenanigan": 314, "delic": 314, "gpa": 314, "expec": [], "actuari": [], "timelin": [], "ghost": [], "precalculusi": [], "mah": 314, "overindulg": [], "lolli": [], "gag": [], "pussi": [], "luke": [], "skywalk": [], "pantywast": [], "panti": 314, "waist": 314, "wit": 314, "obligatori": [], "lion": [], "hijink": []}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"On": [13, 14, 18, 61, 62, 92, 109, 110, 136, 149, 150, 155, 174, 194, 217, 228, 229, 255, 262, 267, 268, 273, 303, 314], "read": [16, 18, 19, 20, 63, 123, 144, 175, 178, 242, 263, 304, 307], "dennett": 18, "": [4, 5, 8, 18, 37, 39, 52, 53, 56, 77, 79, 91, 95, 103, 110, 123, 128, 130, 133, 134, 141, 157, 160, 164, 175, 178, 182, 193, 197, 205, 229, 242, 247, 249, 252, 253, 260, 275, 278, 286, 304, 307, 311, 314], "conscious": 18, "explain": 18, "cognit": [19, 20, 23], "scienc": [19, 23, 45, 84, 93, 101, 119, 195, 203, 238], "resourc": [19, 137, 153, 160, 161, 171, 177, 256, 271, 278, 279, 299, 306], "book": [5, 19, 45, 53, 84, 150, 171, 268, 299], "next": [11, 19, 59, 128, 209, 247], "other": [16, 19, 24, 26, 30, 40, 41, 44, 63, 65, 67, 71, 80, 81, 85, 91, 93, 94, 120, 121, 134, 151, 152, 156, 161, 177, 184, 193, 195, 196, 239, 240, 253, 269, 270, 274, 279, 306, 313], "cours": [19, 45, 84, 142, 171, 227, 261, 299], "video": [19, 90, 192, 277, 285], "talk": 19, "us": [4, 5, 6, 7, 19, 25, 26, 30, 34, 37, 39, 40, 41, 42, 47, 48, 52, 53, 54, 55, 66, 71, 74, 77, 79, 80, 81, 82, 87, 88, 90, 91, 97, 99, 102, 113, 115, 116, 117, 118, 122, 123, 126, 128, 129, 130, 131, 132, 135, 136, 137, 138, 141, 144, 146, 148, 156, 161, 162, 164, 166, 168, 170, 174, 175, 176, 178, 182, 184, 192, 193, 199, 201, 204, 211, 219, 231, 232, 234, 235, 236, 237, 241, 242, 245, 247, 248, 249, 250, 251, 254, 255, 256, 257, 260, 263, 265, 266, 274, 279, 280, 286, 288, 296, 298, 303, 304, 305, 306, 307, 308, 311, 313], "site": [2, 19], "note": [20, 21, 171, 211, 212, 215, 216, 221, 299], "synaps": [20, 21], "neuron": [20, 21], "brain": [20, 21], "week": 20, "One": [20, 97, 113, 115, 116, 199, 232, 234, 235, 291], "five": [20, 118, 237], "excit": 20, "thing": [20, 35, 36, 100, 202], "connectom": 20, "brainbow": 20, "machin": [20, 42, 92, 93, 136, 194, 195, 255], "interfac": [1, 20, 50, 151, 269], "optogenet": 20, "blue": 20, "project": [11, 20, 37, 39, 59, 77, 79, 128, 153, 230, 247, 269, 271, 273], "simul": 20, "two": [7, 11, 20, 25, 55, 59, 66, 97, 103, 113, 114, 115, 116, 130, 199, 205, 232, 233, 234, 235, 236, 249], "The": [1, 4, 5, 6, 9, 11, 14, 20, 22, 26, 30, 31, 35, 37, 39, 42, 44, 47, 50, 52, 53, 54, 57, 59, 62, 67, 72, 75, 77, 79, 82, 85, 87, 92, 93, 98, 101, 102, 103, 108, 109, 110, 115, 116, 127, 129, 130, 131, 132, 134, 136, 142, 143, 144, 148, 153, 155, 157, 161, 162, 165, 166, 169, 174, 175, 176, 178, 179, 182, 184, 186, 194, 195, 200, 202, 203, 204, 205, 206, 211, 225, 227, 228, 229, 234, 235, 246, 248, 249, 250, 251, 253, 254, 255, 256, 260, 261, 262, 263, 266, 270, 271, 273, 275, 279, 280, 282, 287, 288, 294, 297, 301, 302, 303, 304, 305, 307, 308, 311, 313, 314, 315, 318], "doctrin": 20, "an": [1, 11, 20, 25, 34, 50, 59, 66, 74, 94, 97, 103, 115, 123, 125, 127, 130, 134, 136, 141, 143, 144, 152, 153, 155, 161, 165, 177, 196, 199, 205, 232, 234, 235, 242, 244, 246, 249, 253, 255, 260, 262, 263, 270, 271, 273, 279, 287, 301, 306, 312], "input": 20, "output": [20, 115, 177, 234, 306], "devic": 20, "axon": 20, "dendrit": 20, "type": [20, 31, 40, 80, 100, 129, 133, 137, 138, 147, 175, 202, 212, 248, 252, 256, 257, 264, 304], "part": [11, 20, 59, 90, 97, 103, 116, 191, 192, 199, 205, 235], "2": [1, 20, 50, 117, 126, 168, 182, 191, 209, 236, 245, 296, 311], "three": [20, 115, 209, 234], "electrifi": 20, "passiv": 20, "electr": 20, "signal": 20, "cell": [20, 116, 235], "rc": 20, "circuit": [20, 152, 270], "voltag": 20, "equat": [20, 170, 215, 298], "membran": 20, "time": [20, 39, 41, 79, 81, 100, 116, 130, 202, 235, 249], "constant": [7, 20, 55], "tempor": 20, "summat": 20, "rest": 20, "potenti": 20, "synapt": 20, "i": [4, 5, 11, 12, 20, 30, 34, 37, 39, 40, 41, 47, 52, 53, 59, 71, 74, 77, 79, 80, 81, 87, 92, 94, 95, 97, 102, 103, 114, 115, 117, 119, 120, 125, 129, 135, 136, 141, 142, 148, 152, 154, 155, 157, 165, 171, 172, 175, 178, 182, 184, 194, 195, 196, 197, 199, 204, 205, 211, 233, 234, 236, 237, 238, 239, 240, 244, 248, 254, 255, 260, 261, 266, 270, 272, 273, 275, 287, 289, 299, 301, 304, 307, 311, 312, 313], "conduct": 20, "batteri": 20, "ii": [20, 103, 205], "epsp": 20, "ipsp": 20, "summari": [9, 20, 27, 48, 57, 68, 88, 106, 115, 152, 156, 166, 208, 224, 234, 270, 274, 288], "four": 20, "activ": [20, 39, 79, 182, 311], "spike": 20, "hodgkin": 20, "huxlei": 20, "experi": 20, "current": [20, 130, 134, 218, 249, 253], "underli": 20, "model": 20, "h": 20, "refratori": 20, "period": [20, 220], "plastic": 20, "dynam": [20, 147, 175, 264, 304], "outlin": [20, 28, 69, 140, 259], "introduct": [1, 3, 6, 9, 11, 20, 25, 28, 50, 51, 54, 57, 59, 66, 69, 90, 127, 130, 131, 134, 135, 137, 147, 155, 158, 162, 164, 166, 172, 175, 178, 192, 199, 246, 249, 250, 253, 254, 256, 259, 264, 273, 276, 280, 286, 288, 301, 304, 307], "mechan": 20, "subserv": 20, "learn": [4, 11, 20, 43, 59, 93, 101, 102, 103, 171, 185, 195, 197, 203, 204, 205, 211, 237, 285, 299], "memori": [20, 39, 79, 146, 176, 211, 265, 305], "possibl": 20, "function": [6, 20, 30, 31, 39, 54, 71, 79, 113, 115, 123, 135, 137, 138, 141, 158, 170, 172, 175, 215, 220, 223, 232, 234, 242, 249, 254, 256, 257, 258, 259, 260, 276, 298, 301, 304], "structur": [20, 127, 129, 134, 246, 248, 253], "neurogenesi": 20, "review": [11, 21, 59, 116, 130, 207, 212, 235, 249], "secret": [22, 162, 280], "life": 22, "mind": [22, 138, 257, 292], "johnlockwood": [], "com": [], "deriv": 207, "practic": [7, 34, 44, 45, 55, 74, 84, 85, 135, 186, 207, 232, 248, 254, 257, 269, 273, 276, 315], "For": [7, 26, 55, 67, 135, 141, 143, 146, 207, 212, 216, 254, 260, 262, 265], "fun": 207, "how": [1, 8, 20, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 56, 92, 103, 118, 129, 130, 136, 141, 142, 148, 151, 157, 158, 162, 178, 181, 182, 194, 205, 211, 234, 237, 248, 249, 255, 260, 261, 265, 266, 269, 275, 276, 280, 285, 307, 310, 311], "unit": [154, 211, 219, 272], "circl": [137, 211, 219, 256], "show": [151, 269], "nbsphinx": [], "math": [92, 148, 165, 170, 171, 177, 190, 194, 210, 216, 221, 223, 238, 266, 287, 298, 299, 306, 314], "sin": 209, "45": [], "text": [], "o": [], "frac": [], "sqrt": [], "60": [], "3": [117, 182, 236, 245, 311], "30": 274, "1": [15, 90, 117, 126, 155, 168, 182, 192, 216, 236, 245, 273, 296, 311], "histor": 211, "limit": [164, 170, 212, 286, 298], "syllabu": 212, "goal": 212, "differ": [41, 44, 81, 85, 92, 95, 97, 103, 115, 130, 182, 194, 197, 199, 205, 212, 234, 249, 311], "ration": 212, "polynomi": 212, "weekli": 212, "origin": 212, "exampl": [1, 7, 29, 50, 55, 116, 129, 134, 135, 152, 157, 161, 169, 172, 179, 212, 214, 215, 232, 235, 248, 251, 253, 254, 270, 271, 275, 276, 279, 297, 301, 308, 309], "interest": 213, "linear": [105, 213, 223], "algebra": 213, "stuff": [109, 213, 228], "johnsin": 218, "univers": 218, "overview": [39, 79, 90, 120, 127, 129, 144, 152, 160, 169, 192, 218, 239, 246, 248, 263, 270, 275, 278, 297], "work": [4, 37, 45, 52, 84, 95, 103, 113, 116, 123, 134, 136, 141, 155, 157, 161, 170, 171, 197, 205, 217, 218, 232, 235, 242, 253, 255, 260, 263, 273, 275, 279, 283, 298, 299], "import": [5, 25, 47, 53, 66, 87, 177, 182, 184, 218, 306, 311, 313], "date": [41, 81, 130, 218, 249], "studi": [171, 182, 218, 299, 311], "habit": [44, 85, 218], "journal": 210, "charlott": 281, "secular": 281, "sobrieti": [281, 282], "judgement": 282, "steep": 282, "earli": [20, 172, 282, 301], "hill": 282, "beyond": [136, 156, 255, 274, 282], "what": [7, 8, 11, 20, 26, 30, 34, 40, 41, 55, 56, 59, 67, 71, 74, 80, 81, 90, 97, 102, 103, 108, 110, 115, 117, 128, 129, 135, 136, 141, 142, 152, 155, 158, 171, 172, 178, 182, 192, 199, 204, 205, 227, 229, 234, 236, 247, 248, 254, 255, 260, 261, 270, 273, 276, 283, 299, 301, 307, 310, 311], "program": [4, 39, 43, 52, 79, 101, 114, 157, 190, 203, 233, 238, 275, 283, 289, 317], "fellowship": 283, "recoveri": 284, "first": [11, 26, 34, 35, 42, 47, 59, 67, 74, 82, 87, 101, 102, 118, 121, 137, 147, 164, 170, 174, 203, 204, 209, 237, 240, 256, 264, 286, 290, 298, 303, 317], "principl": 290, "product": [154, 272, 290], "minim": 290, "give": 291, "up": [44, 85, 97, 99, 100, 151, 179, 180, 182, 199, 201, 202, 269, 291, 308, 309, 311], "social": [291, 293, 294, 295], "media": [291, 293, 294, 295], "month": 291, "later": 291, "v": [4, 5, 24, 25, 28, 34, 35, 39, 52, 53, 65, 66, 69, 74, 79, 94, 100, 106, 117, 118, 120, 129, 130, 131, 135, 136, 152, 156, 160, 162, 164, 170, 175, 177, 178, 186, 196, 202, 224, 236, 237, 239, 248, 249, 250, 254, 255, 265, 270, 274, 278, 280, 286, 287, 289, 292, 298, 304, 306, 307, 315], "technologi": 292, "withdraw": 293, "top": [9, 93, 127, 157, 195, 236, 246, 275, 294], "mistak": [148, 154, 266, 272, 294], "peopl": 294, "make": [43, 44, 83, 85, 90, 96, 103, 138, 148, 162, 175, 176, 182, 192, 198, 205, 206, 232, 235, 257, 266, 280, 294, 304, 305, 311, 312], "when": [33, 34, 73, 74, 108, 131, 143, 205, 227, 250, 262, 294], "quit": 294, "recal": 211, "some": [24, 26, 47, 65, 67, 87, 114, 116, 121, 123, 131, 151, 153, 160, 172, 211, 233, 235, 240, 242, 250, 269, 271, 278, 301], "properti": [211, 214, 215], "matplotlib": [26, 67, 105, 106, 211, 223, 224], "background": [24, 65, 102, 204, 211], "method": [30, 39, 71, 79, 131, 136, 147, 158, 166, 178, 211, 234, 250, 255, 264, 276, 288, 307], "jog": 211, "my": [5, 91, 136, 141, 160, 193, 211, 255, 260, 278, 312], "With": [4, 5, 6, 24, 26, 33, 35, 37, 39, 40, 45, 47, 52, 54, 65, 67, 73, 77, 79, 80, 84, 91, 92, 95, 97, 100, 116, 122, 129, 130, 131, 132, 135, 138, 151, 153, 156, 161, 162, 164, 168, 170, 171, 174, 176, 178, 181, 193, 194, 197, 199, 202, 211, 235, 241, 248, 249, 250, 251, 254, 257, 258, 262, 263, 264, 269, 271, 274, 279, 280, 286, 296, 298, 299, 303, 305, 307, 308, 310], "neat": 211, "desmo": 211, "six": 20, "cabl": 20, "theori": [20, 34, 74], "comput": [4, 20, 52, 93, 195], "level": [20, 146, 265], "singl": [20, 39, 79, 134, 138, 253, 257], "fundament": 20, "rall": 20, "transient": 20, "recent": 20, "breakthrough": 20, "person": [20, 91, 193], "trig": 220, "soh": 219, "cah": 219, "toa": 219, "quadrant": 219, "angl": [208, 219], "7": 20, "cortic": 20, "network": 20, "out": [20, 110, 152, 229, 270, 316], "column": [20, 27, 41, 68, 81, 95, 115, 116, 197, 234, 235], "tabl": [7, 55, 152, 156, 169, 178, 270, 274, 297, 307], "test": [6, 9, 11, 46, 54, 57, 59, 93, 118, 121, 151, 153, 154, 178, 179, 195, 216, 237, 240, 269, 271, 272, 300, 307, 308], "delet": [], "me": [5, 53, 142, 261], "x": [], "bar": [48, 88, 106, 224], "reciproc": 220, "domain": 220, "rang": [95, 135, 197, 220, 254], "relat": [1, 28, 50, 69, 130, 220, 249], "ident": [152, 208, 209, 220, 270], "from": [3, 4, 8, 16, 20, 27, 33, 44, 51, 52, 56, 63, 68, 73, 85, 92, 95, 96, 116, 123, 129, 134, 144, 157, 164, 172, 179, 194, 196, 197, 198, 203, 235, 242, 248, 252, 253, 261, 263, 275, 286, 301, 308], "9": [], "precalc": [], "82": [], "mous": 20, "human": 20, "percept": 20, "action": 20, "emot": 20, "trigonometri": 219, "sensori": 20, "transduct": 20, "even": [209, 214, 215], "odd": 209, "pythagorean": 209, "10": 274, "professor": 215, "leonard": 215, "83": [], "divid": 209, "theta": 209, "co": 209, "abov": [], "section": 216, "rememb": 209, "big": [], "ones": 209, "ar": [1, 6, 7, 20, 30, 44, 50, 54, 55, 71, 85, 92, 95, 97, 102, 136, 137, 141, 147, 152, 155, 158, 162, 176, 194, 197, 199, 204, 209, 255, 256, 260, 264, 270, 273, 276, 280, 305, 310], "main": 209, "below": 209, "process": [20, 129, 248], "inform": [3, 20, 26, 51, 67], "guid": [20, 175, 193, 238, 242, 256, 260, 304], "motion": 20, "higher": 20, "order": [20, 33, 73, 129, 147, 248, 264], "free": [20, 45, 84, 171, 195, 299], "Will": [20, 108, 171, 227, 299], "did": 20, "we": [20, 40, 80, 90, 108, 115, 137, 171, 178, 182, 192, 195, 227, 234, 256, 299, 307, 311], "neuro": 20, "ethic": 20, "thought": [1, 3, 6, 11, 20, 24, 26, 28, 37, 39, 42, 44, 45, 47, 50, 51, 54, 59, 65, 67, 69, 77, 79, 82, 84, 85, 87, 93, 98, 100, 104, 105, 118, 120, 121, 123, 130, 134, 136, 138, 144, 156, 160, 161, 162, 169, 170, 174, 178, 182, 184, 186, 195, 200, 202, 206, 223, 237, 239, 240, 242, 249, 253, 255, 257, 263, 274, 278, 279, 280, 297, 298, 303, 307, 311, 313, 315], "interact": [20, 26, 67], "veget": 20, "state": [20, 138, 257], "farewel": 20, "word": 20, "doubl": 208, "half": 208, "summar": [], "new": [9, 13, 14, 17, 37, 61, 62, 64, 77, 109, 110, 149, 150, 208, 227, 228, 229, 267, 268], "formula": 208, "logarithm": [214, 215], "solv": [118, 170, 214, 215, 237, 298], "easi": [1, 44, 85, 95, 161, 170, 176, 197, 200, 214, 215, 279, 280, 298, 305], "weirder": [214, 215], "log": [1, 50, 214, 215], "natur": [214, 215], "more": [7, 39, 47, 55, 79, 87, 91, 102, 131, 136, 162, 185, 193, 204, 214, 215, 250, 255, 269, 280], "expon": [136, 215, 255], "myst": [], "nb": [], "page": [5, 53, 96, 198], "definit": [123, 129, 212, 242, 248], "continu": 212, "python": [1, 3, 6, 7, 9, 10, 15, 17, 24, 26, 28, 30, 31, 33, 34, 37, 39, 40, 41, 44, 45, 46, 47, 48, 54, 55, 57, 64, 65, 67, 69, 71, 74, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 101, 102, 120, 121, 122, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 143, 144, 146, 147, 148, 149, 151, 152, 157, 158, 160, 161, 162, 169, 170, 171, 172, 175, 176, 177, 181, 182, 184, 186, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 223, 227, 229, 231, 236, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 285, 297, 298, 299, 301, 303, 304, 305, 306, 307, 310, 311, 313, 315, 317, 318], "file_format": [], "mystnb": [], "kernelspec": [], "name": [27, 68, 138, 153, 257, 271], "python3": [], "your": [4, 37, 43, 44, 45, 52, 77, 83, 84, 85, 92, 96, 117, 118, 161, 182, 194, 198, 226, 236, 237, 279, 289, 311, 317], "header": 226, "here": 226, "content": [4, 52, 115, 234], "nanci": 215, "pi": 215, "graph": [106, 170, 215, 223, 224, 298], "exponenti": 215, "common": [127, 131, 152, 215, 246, 250, 270], "base": [34, 47, 74, 87, 115, 133, 215, 234, 252], "problem": [104, 118, 171, 206, 216, 217, 237, 299], "teacher": 217, "meet": 217, "independ": [151, 217, 269], "simpl": [7, 8, 28, 47, 55, 56, 69, 87, 113, 121, 129, 143, 152, 179, 206, 232, 240, 248, 262, 270, 308, 309], "complex": [8, 33, 56, 73], "A": [0, 6, 7, 8, 9, 11, 24, 25, 26, 34, 39, 45, 47, 54, 55, 56, 57, 59, 65, 66, 67, 74, 79, 84, 87, 91, 100, 105, 110, 116, 121, 125, 127, 128, 130, 131, 133, 135, 140, 144, 147, 155, 161, 164, 170, 175, 193, 199, 202, 206, 223, 229, 235, 238, 240, 242, 244, 246, 247, 249, 250, 252, 254, 259, 261, 263, 264, 273, 279, 286, 298, 304], "naiv": [8, 56, 130, 249], "approach": [8, 11, 56, 59, 100, 142, 202, 261, 299], "wrong": [8, 56], "To": [5, 8, 34, 39, 40, 42, 43, 44, 46, 47, 53, 56, 74, 83, 95, 102, 131, 136, 144, 151, 171, 178, 185, 197, 204, 205, 206, 250, 255, 263, 269, 273, 299, 307], "fix": [8, 56, 153, 271], "It": [8, 35, 37, 47, 56, 75, 77, 87, 108, 123, 133, 136, 138, 142, 164, 176, 181, 186, 206, 227, 242, 252, 255, 257, 261, 266, 286, 305, 310, 315, 316], "multi": [8, 56, 161, 164, 279, 286], "stage": [8, 39, 56, 79, 164, 286], "build": [8, 11, 26, 44, 45, 47, 56, 59, 67, 84, 85, 87, 96, 132, 135, 153, 164, 198, 251, 254, 270, 271, 286], "271": 216, "thi": [5, 26, 43, 46, 53, 67, 83, 86, 114, 148, 155, 165, 216, 233, 266, 273, 287], "see": [159, 216, 277], "23": [216, 274], "24": 216, "hard": [142, 154, 216, 261, 272], "list": [4, 33, 52, 73, 95, 131, 134, 135, 137, 141, 146, 147, 175, 195, 197, 216, 250, 253, 254, 256, 260, 264, 265, 304], "13": [14, 274], "anoth": [119, 238], "8": [], "dir": [31, 175, 300, 304], "move": [4, 24, 52, 65, 179, 308], "testng": [179, 308], "junit": [179, 308], "set": [4, 44, 45, 52, 84, 85, 91, 98, 99, 100, 116, 151, 176, 179, 182, 193, 200, 201, 202, 235, 269, 305, 308, 311], "maven": [179, 308], "depend": [11, 59, 179, 182, 308, 311], "abstracttestngspringcontexttest": [179, 308], "codesolid": [13, 14, 15, 16, 17, 61, 62, 63, 64, 109, 110, 149, 150, 228, 229, 267, 268], "coop": [0, 108, 125, 227, 244], "code": [0, 11, 12, 25, 28, 35, 36, 39, 41, 46, 59, 66, 69, 79, 81, 86, 89, 95, 101, 103, 104, 120, 125, 130, 151, 161, 164, 175, 177, 181, 182, 191, 197, 203, 205, 206, 239, 244, 249, 269, 270, 279, 286, 289, 302, 304, 306, 310, 311], "bootcamp": [0, 108, 227], "apach": [1, 50], "airflow": [1, 50], "etl": 1, "schedul": [1, 50], "made": [1, 161, 170, 279, 280, 298], "system": [1, 4, 50, 52, 117, 130, 236, 249], "requir": [1, 50, 118, 237], "instal": [1, 24, 42, 47, 50, 65, 87, 89, 90, 91, 92, 117, 118, 121, 128, 153, 156, 170, 174, 178, 182, 191, 192, 193, 194, 236, 237, 240, 247, 271, 274, 298, 303, 307, 311], "web": [1, 6, 9, 13, 14, 17, 50, 57, 61, 62, 64, 93, 109, 110, 150, 155, 195, 228, 229, 268, 273], "understand": [1, 28, 39, 50, 69, 79, 129, 182, 248, 304, 311], "dag": [1, 50], "task": [1, 50, 120, 130, 239, 249], "0": [1, 50], "taskflow": [1, 50], "api": [1, 50, 99, 100, 201, 202], "mix": [1, 50], "style": [1, 50, 93, 136, 195, 255], "legaci": [1, 50], "discuss": [1, 6, 26, 50, 54, 67, 144, 156, 171, 263, 274, 299], "directori": [1, 4, 50, 52, 134, 164, 253, 286], "configur": [1, 4, 28, 37, 47, 50, 52, 69, 77, 87, 96, 123, 127, 153, 176, 198, 200, 242, 246, 271, 305], "revisit": [1, 50, 165, 287], "close": [1, 3, 6, 11, 28, 37, 39, 42, 47, 50, 51, 54, 59, 69, 77, 79, 82, 87, 98, 100, 105, 130, 134, 136, 138, 144, 156, 160, 161, 162, 168, 169, 170, 174, 178, 184, 186, 200, 202, 223, 249, 253, 255, 257, 263, 274, 278, 279, 280, 296, 297, 298, 303, 307, 313, 315], "altern": [3, 100, 170, 202, 298], "panda": [3, 27, 37, 41, 45, 48, 51, 68, 77, 81, 84, 88, 95, 115, 116, 128, 156, 166, 168, 197, 202, 234, 235, 247, 274, 288, 296], "polar": [3, 51, 100, 202], "advantag": [3, 51, 129, 141, 160, 248, 260, 278], "over": [3, 51], "transit": [3, 51], "creat": [3, 4, 5, 24, 25, 26, 37, 51, 52, 53, 65, 66, 77, 96, 106, 113, 115, 116, 118, 123, 130, 131, 132, 134, 147, 153, 158, 164, 169, 182, 186, 198, 224, 232, 234, 235, 237, 242, 249, 250, 251, 253, 264, 271, 276, 286, 297, 311, 315], "displai": [3, 26, 51, 67, 136, 175, 178, 255, 304, 307], "datafram": [3, 27, 51, 68, 95, 100, 115, 116, 156, 168, 178, 197, 202, 234, 235, 274, 296, 307], "load": [3, 51, 100, 116, 134, 169, 202, 235, 253, 297], "data": [3, 9, 26, 27, 37, 45, 48, 51, 57, 67, 68, 77, 84, 88, 93, 95, 100, 101, 115, 116, 128, 129, 131, 166, 169, 195, 197, 202, 203, 234, 235, 247, 248, 250, 288, 297], "file": [3, 4, 28, 47, 51, 52, 69, 87, 100, 113, 115, 117, 134, 144, 177, 178, 181, 202, 232, 234, 236, 253, 263, 306, 307, 310], "convert": [3, 41, 51, 81], "get": [3, 4, 11, 24, 27, 35, 36, 39, 51, 52, 59, 65, 68, 79, 91, 92, 115, 116, 117, 118, 122, 123, 130, 134, 143, 175, 193, 194, 234, 235, 236, 237, 241, 242, 249, 253, 262, 304], "basic": [3, 4, 28, 42, 47, 51, 52, 69, 82, 87, 91, 96, 106, 116, 122, 123, 130, 133, 136, 138, 157, 161, 169, 175, 193, 198, 224, 235, 241, 242, 249, 252, 255, 257, 275, 279, 297, 304], "about": [3, 9, 40, 43, 51, 57, 80, 83, 108, 119, 227, 238], "gener": [3, 51, 93, 101, 120, 130, 136, 141, 160, 162, 195, 203, 239, 249, 255, 260, 278, 280], "comparison": [3, 7, 51, 55, 152, 270], "overlap": [3, 51], "select": [3, 47, 51, 87, 94, 116, 166, 196, 235, 288], "In": [3, 7, 33, 37, 44, 51, 55, 77, 85, 95, 103, 130, 133, 134, 135, 143, 152, 157, 161, 171, 186, 194, 197, 205, 246, 249, 252, 253, 254, 262, 270, 273, 275, 279, 299, 301, 306, 310, 315], "command": [4, 39, 47, 52, 79, 87, 91, 123, 157, 159, 193, 242, 275, 277], "line": [4, 39, 48, 52, 79, 88, 105, 106, 123, 157, 223, 224, 242, 275], "skill": [4, 52], "rock": 4, "workflow": [4, 91, 193], "core": [4, 45, 52, 84], "start": [4, 24, 25, 27, 43, 44, 52, 65, 66, 68, 83, 85, 91, 92, 94, 103, 116, 118, 122, 123, 170, 175, 193, 194, 196, 205, 235, 237, 241, 242, 298, 304], "termin": [4, 52, 90, 192], "session": [4, 52], "open": [4, 52], "prompt": [4, 52], "editor": [4, 52, 120, 160, 239, 278], "id": [4, 52, 93, 97, 120, 174, 195, 199, 239, 303], "navig": [4, 52], "where": [4, 52, 102, 176, 182, 184, 204, 305, 311, 313], "am": [4, 52], "folder": [4, 52, 253, 310], "around": [4, 13, 14, 17, 52, 61, 62, 64, 109, 110, 149, 150, 155, 228, 229, 267, 268, 273], "home": [4, 52, 104, 134, 171, 206, 253, 299], "environ": [4, 24, 25, 44, 52, 65, 85, 93, 95, 100, 118, 122, 151, 153, 159, 182, 191, 192, 195, 197, 202, 237, 241, 269, 271, 277, 311], "variabl": [4, 52, 134, 137, 175, 253, 256, 304], "path": [4, 52, 103, 117, 134, 182, 205, 236, 253, 311], "ad": [4, 11, 26, 37, 52, 59, 67, 77, 95, 96, 117, 130, 153, 161, 197, 198, 236, 249, 271, 279], "user": [4, 26, 40, 52, 67, 80, 133, 134, 184, 186, 252, 253, 313, 315], "window": [4, 52, 89, 90, 117, 159, 191, 192, 236, 277], "mac": [4, 52, 159, 174, 193, 277, 303], "linux": [4, 52, 159, 277], "explor": [4, 31, 34, 48, 52, 74, 88, 129, 134, 148, 175, 248, 253, 266, 304], "Their": [4, 52], "copi": [4, 52, 138, 257], "all": [4, 9, 30, 47, 52, 57, 71, 87], "discov": [4, 52], "shell": [4, 52, 157, 275], "run": [4, 11, 39, 47, 52, 59, 79, 87, 92, 93, 94, 97, 117, 128, 132, 154, 157, 194, 195, 196, 199, 236, 243, 244, 247, 251, 272, 275, 285, 286], "batch": [4, 52], "help": [4, 52, 151, 175, 269, 304], "tool": [4, 24, 39, 45, 52, 65, 79, 84, 93, 95, 101, 118, 127, 128, 148, 157, 195, 197, 203, 236, 237, 246, 247, 266, 275], "most": [4, 52, 176, 303, 305], "journei": 5, "beauti": [5, 30, 71], "document": [5, 53, 138, 175, 257, 304], "jupyterbook": [5, 53], "why": [5, 43, 53, 83, 117, 125, 128, 141, 154, 155, 165, 175, 181, 182, 184, 236, 239, 244, 247, 260, 272, 273, 287, 304, 310, 311, 313], "sphinx": [5, 53], "repositori": [5, 28, 53, 69, 96, 181, 198, 310], "github": [5, 25, 36, 53, 66, 89, 96, 103, 191, 198, 205, 227], "starter": [5, 11, 47, 53, 59, 87, 128, 230, 247], "resolv": [5, 53], "issu": [5, 53, 121, 155, 240, 273], "cookiecutt": [5, 53], "result": [5, 6, 53, 54, 118, 237], "so": [5, 53], "far": [5, 53], "benchmark": [6, 39, 79, 114, 160, 233, 278], "rust": [6, 54], "async": [6, 54], "server": [6, 98, 200], "perform": [6, 94, 121, 146, 160, 196, 240, 265, 278], "jmeter": [6, 54], "brief": [6, 11, 24, 39, 54, 59, 65, 79, 238], "applic": [6, 11, 47, 54, 59, 87], "2m": [6, 54], "delai": [6, 54], "fibonacci": [6, 54], "number": [6, 54, 136, 162, 255, 280], "handler": [6, 54], "That": [6, 54, 157, 275], "lightli": [6, 54], "cpu": [6, 39, 54, 79], "bound": [6, 54], "boolean": [7, 55, 152, 166, 270, 288], "express": [7, 55, 141, 152, 260, 270], "beginn": [7, 93, 101, 103, 120, 136, 137, 147, 155, 158, 175, 195, 203, 205, 239, 242, 250, 252, 255, 256, 264, 273, 276, 303, 304], "expert": [7, 34, 203, 232, 235, 252, 255], "oper": [7, 30, 55, 71, 113, 116, 152, 158, 166, 176, 232, 235, 270, 276, 288, 305], "negat": [7, 55], "Not": [7, 26, 34, 37, 55, 67, 74, 77, 127, 133, 148, 152, 171, 174, 184, 246, 252, 266, 270, 299, 303, 305, 313, 317], "If": [7, 40, 55, 80, 98, 128, 138, 158, 200, 247, 257, 276], "els": [7, 55], "handl": [7, 27, 55, 68, 130, 133, 157, 161, 176, 249, 252, 275, 279, 305], "than": [7, 39, 55, 79, 95, 120, 141, 146, 162, 197, 239, 260, 265, 280], "case": [7, 25, 55, 66, 99, 121, 164, 182, 184, 201, 240, 286, 311, 313], "elif": [7, 55], "equal": [7, 40, 55, 80], "check": [7, 40, 55, 80, 129, 175, 248, 304], "none": [7, 55, 137, 256], "compound": [7, 55, 152, 270], "truth": [7, 55, 152, 270], "preced": [7, 55, 152, 270], "rule": [7, 55, 130, 249], "question": [7, 55, 97, 116, 199, 232, 235], "you": [7, 9, 11, 12, 29, 30, 31, 33, 34, 39, 43, 45, 46, 55, 57, 59, 60, 70, 71, 72, 73, 74, 79, 83, 84, 86, 91, 94, 95, 97, 98, 100, 103, 104, 106, 114, 115, 117, 118, 119, 121, 123, 128, 130, 131, 134, 135, 137, 138, 141, 144, 147, 151, 152, 155, 158, 161, 162, 167, 171, 172, 174, 176, 180, 181, 184, 186, 193, 196, 197, 199, 200, 202, 205, 206, 224, 232, 233, 234, 235, 236, 237, 238, 240, 242, 247, 249, 250, 253, 254, 256, 257, 260, 263, 264, 269, 270, 273, 276, 279, 280, 289, 299, 301, 303, 305, 309, 310, 313, 315], "mai": [7, 9, 12, 29, 30, 31, 33, 34, 45, 55, 57, 60, 70, 71, 72, 73, 74, 84, 94, 95, 100, 104, 114, 115, 121, 123, 130, 131, 134, 135, 137, 138, 141, 144, 146, 147, 152, 155, 158, 161, 162, 167, 172, 174, 176, 180, 181, 184, 196, 197, 202, 206, 233, 234, 240, 242, 249, 250, 253, 254, 256, 257, 260, 263, 264, 265, 270, 273, 276, 279, 280, 289, 301, 303, 305, 309, 310, 313], "also": [7, 9, 12, 29, 30, 31, 33, 34, 45, 55, 57, 60, 70, 71, 72, 73, 74, 84, 94, 95, 97, 100, 104, 106, 114, 115, 121, 123, 130, 131, 134, 135, 137, 138, 141, 144, 147, 152, 155, 158, 159, 161, 162, 167, 172, 174, 176, 180, 181, 184, 196, 197, 199, 202, 206, 224, 233, 234, 240, 242, 249, 250, 253, 254, 256, 257, 260, 263, 264, 270, 273, 276, 277, 279, 280, 289, 301, 303, 305, 309, 310, 313], "like": [7, 9, 31, 40, 45, 55, 57, 72, 80, 84, 94, 95, 100, 106, 121, 123, 131, 141, 147, 167, 176, 181, 184, 196, 197, 202, 224, 240, 242, 250, 260, 264, 289, 305, 310, 313], "docker": [8, 47, 87, 112, 132, 164, 231, 251, 269, 272, 286], "golang": [8, 233], "contain": [8, 25, 47, 66, 87, 132, 147, 151, 164, 251, 264, 269, 286], "best": [9, 12, 127, 135, 186, 195, 246, 248, 254, 257, 315], "career": [9, 57, 261], "research": 9, "reveal": 9, "field": [9, 43, 83, 129, 248], "option": [9, 57, 108, 127, 168, 227, 246, 296], "analyst": [9, 57], "scientist": [9, 57], "engin": [9, 57], "aw": [9, 57, 123, 241, 242], "cloud": [9, 37, 57, 77, 93, 195, 241], "variou": [9, 57, 99, 201], "titl": [9, 26, 57, 67], "develop": [9, 47, 57, 87, 93, 94, 120, 151, 164, 184, 191, 192, 195, 196, 197, 225, 239, 241, 269, 286, 313, 316], "front": [9, 57], "end": [9, 57], "full": [9, 57, 137, 256], "stack": [9, 57], "microservic": [9, 57], "role": [9, 57], "autom": [9, 57, 93, 195, 248], "technic": [9, 57], "support": [9, 42, 57, 82, 97, 120, 161, 199, 239, 279], "do": [9, 57, 90, 91, 133, 138, 141, 152, 171, 182, 192, 193, 252, 257, 260, 270, 299, 311], "statist": [9, 39, 57, 79], "tell": [9, 57], "whole": [9, 57], "stori": [9, 57, 91, 193], "chemist": 10, "strongli": 10, "addict": 10, "cmake": [11, 59, 164, 286], "tutori": [11, 24, 34, 59, 65, 101, 164, 170, 203, 249, 254, 262, 276, 277, 286, 298, 301], "ll": [11, 59, 90, 115, 178, 192, 234, 307], "our": [11, 59, 100, 129, 153, 169, 202, 248, 271, 297], "librari": [11, 26, 41, 59, 67, 81, 94, 130, 196, 246, 249], "step": [11, 26, 47, 59, 67, 87, 91, 101, 117, 128, 164, 170, 174, 193, 203, 236, 247, 286, 298, 303], "pride": 12, "medicin": 12, "enjoi": [12, 29, 30, 33, 34, 60, 70, 71, 73, 74, 97, 104, 114, 115, 130, 134, 135, 137, 138, 144, 152, 155, 158, 161, 162, 172, 174, 180, 199, 206, 233, 234, 249, 253, 254, 256, 257, 263, 270, 273, 276, 279, 280, 301, 303, 309], "newslett": [13, 14, 15, 16, 17, 228, 229, 267, 268], "11": [13, 228, 274], "29": 13, "2022": [13, 14, 15, 16, 17, 227, 228], "12": 14, "novemb": 15, "octob": 16, "25": 16, "hello": [16, 63], "decemb": 17, "28": 17, "featur": [17, 32, 64, 95, 120, 133, 150, 160, 161, 197, 239, 252, 268, 278, 279], "conda": [24, 42, 65, 117, 122, 128, 156, 168, 178, 236, 241, 247, 274, 296, 307], "pip": [24, 42, 65, 82, 91, 117, 118, 128, 153, 156, 168, 178, 182, 193, 236, 237, 247, 271, 274, 296, 307, 311], "venv": [24, 65, 178, 307], "pyenv": [24, 42, 65, 82, 91, 193], "simplic": [24, 43, 83, 289], "win": 24, "pro": [24, 65], "con": [24, 65], "compar": [24, 40, 65, 80, 106, 160, 224, 278], "packag": [24, 39, 45, 65, 79, 84, 93, 95, 118, 153, 176, 177, 182, 195, 197, 236, 237, 271, 305, 306, 311], "save": [24, 65, 115, 130, 176, 234, 249, 305], "share": [24, 65, 151, 269], "re": [24, 65, 119, 205, 238], "final": [24, 26, 44, 45, 65, 67, 84, 85, 93, 104, 118, 120, 121, 123, 182, 195, 206, 237, 239, 240, 242, 311], "c": [25, 66, 102, 151, 164, 204, 269, 286], "dev": [25, 66, 164, 286], "custom": [25, 66, 96, 129, 144, 186, 198, 248, 263, 315], "special": [25, 66, 164, 286], "extens": [25, 66, 102, 164, 204, 286], "quick": [25, 66, 170, 298], "default": [25, 66, 90, 91, 96, 129, 137, 161, 172, 192, 193, 198, 248, 256, 279, 301], "codespac": [25, 66], "plot": [26, 48, 67, 88, 95, 105, 106, 197, 223, 224], "jupyt": [26, 39, 67, 79, 95, 96, 97, 98, 128, 160, 170, 175, 177, 197, 198, 199, 200, 247, 278, 298, 304, 306], "road": [26, 67, 127, 246], "ahead": [26, 67, 103, 205], "articl": [26, 32, 67, 101, 110, 203, 229], "cover": [26, 67, 178, 307], "taken": [26, 67, 127, 246], "choic": [26, 67, 162, 280], "lab": [26, 67, 97, 128, 129, 160, 175, 199, 200, 247, 248, 278, 304], "visual": [26, 28, 36, 48, 67, 69, 88, 89, 191], "control": [26, 67, 181, 182, 310, 311], "ipywidet": [26, 67], "fring": [26, 67], "benefit": [26, 67, 102, 204], "plu": [26, 67], "ipywidget": [26, 67], "clean": [27, 68], "drop": [27, 68], "frame": [27, 68], "row": [27, 68, 95, 100, 116, 197, 202, 235], "renam": [27, 68], "null": [27, 68], "valu": [27, 68, 129, 137, 157, 162, 172, 176, 248, 256, 275, 280, 301, 305], "chang": [27, 68, 96, 158, 161, 182, 198, 276, 279, 311], "index": [2, 27, 68, 113, 143, 166, 232, 262, 288], "find": [27, 33, 43, 68, 73, 83, 113, 115, 130, 134, 182, 232, 234, 249, 253, 311], "duplic": [27, 33, 68, 73], "element": [27, 41, 68, 81, 147, 264], "string": [27, 41, 68, 81, 113, 136, 158, 162, 232, 255, 276, 280], "remov": [27, 33, 68, 73, 98, 181, 200, 310], "unnecessari": [27, 68], "capit": [27, 68], "whitespac": [27, 68], "charact": [27, 68, 158, 276], "debug": [28, 69, 151, 269], "introduc": [28, 69, 126, 175, 194, 245, 304], "companion": [28, 69, 170, 298], "studio": [28, 36, 69, 89, 191], "left": [28, 69, 177, 306], "hand": [28, 69, 148, 174, 262, 266, 303], "panel": [28, 69], "bottom": [28, 69], "directoryinfo": 29, "dunder": [30, 71], "ugliest": 30, "awesom": [30, 125, 244], "sauc": 30, "constructor": [30, 71, 130, 249], "ugli": [30, 71], "__repr__": [30, 71, 129, 248], "__str__": [30, 71], "overload": [30, 71], "integr": [30, 71, 95, 102, 170, 197, 204, 298], "good": [30, 35, 71, 75, 157, 171, 273, 275, 299], "design": [30, 71, 114, 186, 233, 315], "implement": [30, 44, 71, 85, 100, 121, 129, 169, 202, 240, 248, 297], "iter": [30, 71, 115, 131, 135, 141, 147, 158, 234, 250, 254, 260, 264, 276], "avail": [30, 71, 175, 304], "object": [31, 33, 34, 41, 73, 74, 81, 130, 144, 175, 249, 263, 304], "solut": [31, 46, 72, 86, 113, 232, 258], "doesn": [33, 73], "t": [33, 43, 73, 83, 108, 133, 142, 148, 165, 181, 186, 227, 252, 261, 266, 287, 310, 315], "matter": [33, 73], "preserv": [33, 73], "count": [33, 73], "entri": [33, 73], "class": [34, 74, 116, 129, 130, 133, 141, 144, 161, 175, 186, 235, 248, 249, 252, 260, 263, 279, 304, 305, 315], "zero": 34, "exercis": [34, 74, 101, 116, 131, 135, 143, 147, 155, 158, 203, 206, 235, 250, 254, 258, 262, 264, 273, 276], "break": [34, 74], "orient": [34, 74], "inherit": [34, 74], "abstract": [34, 74], "languag": [34, 74, 94, 97, 101, 120, 160, 168, 196, 199, 203, 239, 278, 296, 317], "addit": [34, 74, 153, 160, 177, 271, 278, 306], "topic": [34, 74, 101, 131, 203, 250], "done": [35, 36, 95, 197], "dendron": 35, "look": [35, 130, 249], "bad": [35, 75], "indiffer": [35, 75], "overal": [35, 75], "impress": [35, 75, 121, 240], "try": [35, 43, 75, 83, 133, 252], "yourself": [35, 75, 299], "markdown": [36, 177, 306], "googl": [37, 77], "sheet": [37, 77], "devil": [37, 77], "detail": [37, 39, 77, 79], "setup": [37, 77, 122, 193, 241], "welcom": [37, 77], "servic": [37, 77], "account": [37, 77, 123, 153, 242, 271, 312], "kei": [37, 77], "spreadsheet": [37, 77], "gspread": [37, 77], "credenti": [37, 77], "write": [37, 77, 101, 138, 141, 144, 178, 203, 257, 260, 263, 279, 307, 315], "delm": 38, "profil": [39, 79], "late": [39, 79], "determinist": [39, 79], "wall": [39, 79], "clock": [39, 79], "scenario": [39, 79], "cprofil": [39, 79], "modul": [39, 79, 102, 130, 134, 144, 157, 162, 175, 182, 204, 249, 253, 263, 275, 280, 304, 311], "short": [39, 79, 152, 270], "timeit": [39, 79], "ipython": [39, 79, 168, 296], "notebook": [39, 79, 93, 95, 96, 97, 98, 175, 195, 197, 198, 199, 200, 304], "line_profil": [39, 79], "call": [39, 79, 123, 137, 242, 256], "go": [39, 79, 171, 299], "prun": [39, 79], "magic": [39, 79], "lprun": [39, 79], "conveni": [39, 79], "kernprof": [39, 79], "usag": [39, 79, 193], "memory_profil": [39, 79], "memit": [39, 79], "mprun": [39, 79], "graphic": [39, 79], "scalen": [39, 79], "honor": [39, 79], "mention": [39, 79], "yappi": [39, 79], "dictionari": [40, 80, 127, 131, 135, 144, 246, 250, 254, 263], "consist": [40, 80], "caution": [40, 80], "compat": [40, 80], "need": [40, 80, 161, 171, 186, 279, 299, 315], "stronger": [40, 80], "collect": [40, 80, 175, 176, 304, 305], "defin": [40, 80, 133, 134, 176, 186, 252, 253, 305, 315], "datetim": [41, 81, 130, 249], "format": [41, 81, 115, 130, 136, 156, 158, 234, 249, 255, 274, 276], "access": [41, 81, 146, 158, 164, 265, 276, 286], "zone": [41, 81, 130, 249], "present": [41, 81], "dateutil": [41, 81, 130, 249], "maya": [41, 81], "arrow": [41, 81, 156, 274], "back": [41, 81, 168, 296], "integ": [41, 81], "float": [41, 81], "conclus": [41, 81, 90, 97, 99, 158, 175, 192, 199, 201, 276, 304], "same": [42, 92, 97, 134, 194, 199, 253], "anaconda": [42, 82, 97, 117, 199, 236], "miniconda": [42, 82, 117, 236], "both": [42, 82, 102, 204], "think": [43, 83], "small": [43, 83], "befor": [43, 83], "bui": [43, 83, 142, 261], "mother": [43, 83], "probabl": [43, 83], "alreadi": [43, 83], "told": [43, 83], "kick": [43, 83], "doubt": [43, 83], "curb": [43, 83], "don": [43, 83, 108, 133, 148, 227, 252, 266], "Be": [43, 83, 90, 95, 108, 115, 138, 141, 161, 174, 192, 197, 227, 234, 257, 260, 279, 303], "afraid": [43, 83], "mentor": [43, 83], "friend": [43, 83, 289], "No": [44, 85, 138, 161, 172, 257, 279, 301, 316], "success": [44, 85, 204, 270], "intent": [44, 85, 138, 257], "reward": [44, 85], "onlin": [45, 84, 92, 97, 171, 194, 199, 243, 285, 299], "sampl": [45, 84, 115, 116, 234, 235], "can": [45, 84, 95, 141, 142, 147, 157, 197, 260, 261, 264, 275], "own": [45, 84], "dataset": [45, 48, 84, 88, 99, 201], "separ": [46, 196], "sourc": [46, 47, 87, 164, 170, 177, 182, 286, 298, 306, 311], "have": [46, 86, 128, 138, 171, 247, 257, 299], "seen": [46, 86, 155, 273], "puzzl": [46, 86], "imag": [47, 87, 132, 251], "compos": [47, 87], "concept": [47, 87], "flask": [47, 87], "dockerfil": [47, 87], "django": [47, 87, 151, 269], "postgr": [47, 87, 112, 151, 231, 269, 272], "And": [47, 87, 92, 129, 160, 162, 194, 202, 248, 278, 280], "yaml": [47, 87, 127, 246], "util": [47, 87, 161, 279], "script": [47, 87, 93, 157, 195, 275], "put": [47, 87], "togeth": [47, 87], "scatter": [48, 88, 106, 224], "area": [48, 88, 184, 313], "box": [48, 88, 106, 224], "pie": [48, 88], "chart": [48, 88], "densiti": [48, 88], "hexbin": [48, 88], "git": [90, 103, 191, 192, 205, 227], "cli": [89, 123, 191, 242], "transcript": [90, 192], "valid": [90, 117, 192, 236], "bash": [90, 157, 192, 275], "By": [90, 115, 148, 192, 234, 266], "tip": [146, 193, 265], "cleaner": [91, 193], "team": [91, 103, 193, 205], "enough": [91, 193], "motiv": [91, 193], "let": [91, 193, 287], "begin": [91, 193], "version": [91, 93, 114, 181, 182, 193, 195, 233, 240, 310, 311], "global": [91, 193], "should": [91, 103, 117, 118, 129, 193, 205, 236, 237, 248, 317], "cleanup": [91, 193], "sage": [92, 132, 194, 251], "symbol": [165, 194, 287], "softwar": [171, 194, 225, 299], "twist": [92, 194], "ye": [134, 195, 253], "answer": [93, 97, 195, 199], "manag": [93, 95, 161, 195, 197, 236, 279], "scientif": [93, 136, 184, 195, 255, 313], "virtual": [93, 118, 122, 153, 159, 182, 195, 237, 241, 271, 277, 311], "slow": 196, "myth": 196, "fact": 196, "java": [94, 196], "long": [94, 196], "speed": [94, 100, 196, 202], "cold": [94, 196], "runtim": [94, 196], "interpret": [94, 181, 196, 310], "gil": [94, 196], "self": [94, 196], "inflict": [94, 196], "wound": [94, 196], "futur": [94, 130, 196, 249], "improv": [94, 178, 196, 307], "julia": [95, 197], "easili": [95, 197, 248, 263], "comprehens": [95, 131, 135, 147, 197, 250, 254, 264], "better": [95, 102, 120, 197, 204, 237, 239], "subset": [95, 197], "similar": [95, 197], "queri": [95, 166, 168, 178, 197, 288, 296, 307], "simplifi": [95, 197], "slice": [95, 113, 143, 147, 158, 197, 232, 262, 264, 276], "grasp": [95, 197], "transform": [95, 115, 197, 234], "straightforward": [95, 197], "faster": [95, 141, 197, 240, 260], "increment": [95, 197], "lite": 198, "browser": 198, "serverless": [151, 198, 269], "add": [96, 130, 136, 198, 249, 255], "ani": [96, 147, 171, 198, 264, 299], "websit": [96, 198], "jupyterlit": [96, 198], "serv": [96, 198], "subdomain": [96, 198], "dn": [96, 198], "local": [96, 97, 161, 164, 198, 199, 279, 286, 309], "acknowledg": [96, 198], "complet": [199, 249, 250, 253, 254, 256, 260, 262, 264], "colab": [97, 199], "who": [97, 199], "disadvanatag": [97, 199], "doe": [97, 134, 141, 152, 171, 181, 199, 253, 260, 270, 299, 310], "As": [97, 103, 115, 134, 148, 168, 199, 205, 234, 244, 253, 266, 296], "between": [97, 130, 176, 182, 199, 249, 265, 305, 311], "pycharm": [97, 199, 239, 289], "might": [97, 106, 199, 224], "password": [98, 200], "forget": [98, 200], "kaggl": [99, 201], "intro": [99, 201], "its": [99, 102, 201, 204], "download": [99, 201], "multipl": [99, 133, 148, 172, 201, 252, 266, 301], "onc": [99, 137, 141, 201, 256, 260], "larg": [100, 202], "optim": [100, 202], "fast": [100, 202, 233, 272], "slick": [100, 202], "lazi": [100, 202], "mode": [100, 202], "dask": [100, 202], "showdown": [100, 202], "intermedi": [101, 155, 203, 273], "experienc": [101, 203], "programm": [101, 203], "perfect": 204, "duo": 204, "challeng": [102, 204], "which": [102, 120, 134, 204, 237, 239, 253], "cython": [102, 204], "numpi": [102, 113, 146, 148, 184, 204, 232, 265, 266, 313], "6": [102, 204], "know": [108, 151, 205, 227, 269, 305], "public": [103, 205], "individu": [103, 205], "master": 206, "take": [104, 171, 206, 299], "checklist": [104, 206], "shine": 206, "coordin": 223, "non": [105, 223], "seaborn": [106, 116, 224, 235], "histogram": [106, 224], "violin": [106, 224], "legend": [106, 224], "middl": 225, "wai": [131, 144, 182, 225, 250, 263, 311], "great": [108, 227], "introductori": [108, 227, 301], "price": [108, 227, 278], "readi": [108, 227], "15": 228, "cool": [109, 228], "trick": [109, 228], "trap": [109, 152, 228, 270], "come": [109, 137, 228, 256], "soon": [109, 228], "januari": [229, 268], "17": [229, 274], "2023": [229, 267, 268], "shout": [110, 229], "popular": [110, 160, 184, 229, 278, 313], "node": 230, "client": [112, 231], "host": [112, 164, 231, 286], "dimension": [113, 232], "arrai": [113, 146, 232, 265], "multidimension": [113, 232], "vector": [113, 119, 232, 238], "s3": 233, "updat": 233, "goroutin": 233, "trip": [114, 233], "necessari": [114, 233], "preliminari": [114, 233], "groupbi": [115, 234], "split": [115, 234], "group": [115, 234], "specif": [115, 234], "through": [115, 135, 158, 234, 254, 276], "percentag": [115, 234], "built": [115, 127, 133, 158, 186, 234, 246, 252, 276, 315], "aggreg": [115, 234], "filter": [115, 234], "appli": [115, 166, 185, 234, 288], "csv": [115, 116, 234, 235], "excel": [115, 234], "seri": [116, 128, 155, 235, 247, 259, 273], "prerequisit": [117, 236], "pc": [117, 236], "py": [117, 236], "4": [117, 182, 236, 311], "virtualenv": [117, 236], "pipenv": [118, 237], "under": [118, 237], "minut": [118, 237], "Into": [118, 237], "txt": [118, 237], "pin": [118, 237], "freez": [118, 237], "tri": [118, 237], "translat": 238, "vex": [119, 238], "sooth": [119, 238], "scalar": [119, 238], "enter": [119, 238], "dimens": [119, 148, 238, 266], "bonu": [119, 238], "prize": [119, 238], "wherein": [119, 238, 312], "reconcil": [119, 238], "religion": [119, 238], "edit": [120, 239], "remot": [120, 151, 239, 269], "ha": [120, 239], "advanc": [120, 123, 131, 155, 175, 239, 242, 250, 273, 304], "heavyweight": [120, 239], "pypi": [121, 153, 240, 271], "evalu": [121, 137, 240, 256], "kit": 241, "cdk": [122, 241], "lambda": [123, 242], "spoiler": [123, 242], "just": [123, 242], "publish": [123, 153, 182, 242, 271, 311], "consol": [123, 242], "boto3": [123, 242], "further": [123, 138, 186, 242, 257, 315], "react": 243, "app": 243, "clear": [124, 243], "roadblock": [124, 243], "boot": [125, 244], "camp": [125, 244], "cooper": 244, "idea": [125, 244, 269], "chemistri": [126, 245], "sympi": [126, 148, 165, 170, 177, 245, 266, 287, 298, 306], "chempi": [126, 245], "ch4": [126, 245], "o2": [126, 245], "co2": [126, 245], "h2o": [126, 245], "ca": 245, "oh": [160, 245, 278], "h3": 245, "po4": 245, "third": [130, 246, 249], "parti": [130, 246, 249], "configpars": [127, 246], "pick": [127, 142, 246, 261], "tomllib": [127, 246], "toml": [127, 153, 246, 271], "json": [127, 144, 246, 263], "analysi": [128, 247], "recommend": [128, 247], "includ": [128, 247], "dataclass": [129, 169, 248, 297], "decor": [129, 248], "__eq__": [129, 248], "static": [129, 175, 248, 304], "mypi": [129, 175, 248, 304], "pattern": [129, 248], "match": [129, 248], "namedtupl": [129, 176, 248, 305], "overrid": [129, 176, 248, 305], "post": [129, 165, 248, 287], "init": [129, 248], "exclud": [129, 248], "mainten": [129, 248], "closer": [130, 249], "awar": [130, 249], "instanc": [130, 249], "arbitrari": [130, 249], "zoneinfo": [130, 249], "past": [130, 249], "manipul": [130, 249], "timedelta": [130, 249], "dai": [130, 249, 302, 318], "subtract": [130, 249], "calcul": [130, 170, 171, 249, 298, 299], "remain": [130, 249], "until": [130, 249], "christma": [130, 249], "pars": [130, 249], "strftime": [130, 249], "strptime": [130, 249], "iso": [130, 249], "8601": [130, 249], "standard": [130, 249], "calendar": [130, 249], "parser": [130, 249], "smart": [130, 249], "rel": [130, 249], "offset": [130, 249], "relativedelta": [130, 249], "recur": [130, 249], "event": [130, 249], "rrule": [130, 249], "recurr": [130, 249], "lesson": [250, 264], "append": [131, 250], "less": [131, 146, 250, 265], "deal": [131, 181, 250, 310], "miss": [131, 176, 250, 305], "slightli": [131, 250], "defaultdict": [131, 176, 250, 305], "sagemath": [170, 177, 251, 298, 306], "rational": [132, 251], "jupyterlab": [132, 177, 178, 251, 306, 307], "error": [133, 157, 252, 275], "except": [133, 161, 186, 252, 279, 315], "syntax": [133, 135, 175, 252, 254, 304], "indent": [133, 252], "bug": [133, 252], "block": [133, 161, 177, 252, 270, 279, 306], "caveat": [133, 170, 177, 252, 298, 306], "rais": [133, 186, 252, 315], "cookbook": 253, "search": [134, 253], "pathlib": [134, 253], "recurs": [134, 181, 253, 310], "absolut": [134, 253], "execut": [134, 253], "But": [134, 171, 253, 299], "exist": [134, 181, 253, 310], "pythonpath": [134, 253], "sy": [134, 253], "filenam": [134, 253], "wa": [134, 253], "loop": [135, 143, 146, 147, 254, 262, 264, 265], "while": [135, 254], "enumer": [135, 254], "f": [136, 158, 255, 276], "str": [136, 255], "specifi": [136, 255], "mani": [136, 169, 255, 297], "decim": [136, 255], "octal": [136, 255], "hexadecim": [136, 255], "binari": [136, 255], "notat": [136, 255], "automat": [136, 255], "comma": [136, 255], "align": [136, 177, 255, 306], "sign": [136, 255], "old": [136, 255], "argument": [137, 172, 256, 301], "paramet": [137, 138, 172, 256, 257, 301], "keyword": [137, 172, 256, 301], "instead": [137, 256], "posit": [137, 143, 172, 256, 262, 301], "hint": [137, 138, 175, 256, 257, 304], "onli": [137, 141, 256, 260], "mutabl": [137, 176, 256, 305], "arg": [137, 256], "kwarg": [137, 256], "still": [137, 256], "without": [137, 256], "ve": [137, 256], "respons": [138, 257], "clarifi": [138, 257], "choos": [138, 257, 265], "carefulli": [138, 257], "docstr": [138, 257], "prefer": [138, 257], "accept": [138, 257], "side": [138, 257], "effect": [138, 257], "return": [138, 157, 172, 257, 275, 301], "mutat": [138, 257], "obviou": [138, 257], "assert": [138, 257], "contract": [138, 257], "draft": [140, 259], "equival": [141, 260], "asynchron": [141, 161, 260, 279], "tech": 261, "hobbyist": 261, "profession": 261, "suggest": [142, 261], "right": [142, 182, 261, 311], "beatl": [142, 261], "song": [142, 261], "monei": [142, 261], "love": [142, 261], "anywai": [142, 261], "neg": [143, 262], "steroid": [143, 262], "assign": [143, 152, 175, 262, 270, 304], "behavior": [143, 186, 262, 315], "easiest": [144, 263], "serial": [144, 263], "directli": [144, 263], "to_json": [144, 263], "from_json": [144, 263], "jsonencod": [144, 263], "jsondecod": [144, 263], "item": [147, 264], "modifi": [147, 153, 158, 264, 271, 276], "them": 265, "101": [146, 265], "timer": [146, 265], "low": [146, 171, 265, 299], "buffer": [146, 265], "matrix": [148, 266], "behind": [148, 175, 266, 304], "matmul": [148, 266], "multipli": [148, 266], "matric": [148, 266], "commut": [148, 266], "februari": 267, "22": 267, "interweb": [149, 267], "31": 268, "want": [151, 269], "arithmet": [152, 270], "logic": [152, 270], "combin": [152, 270], "watch": [152, 270, 285], "These": [152, 270], "membership": [152, 270], "bitwis": [152, 270], "AND": [152, 270], "OR": [152, 270], "walru": [152, 270], "setuptool": [153, 271], "pyproject": [153, 271], "org": [153, 271], "meaning": 272, "databas": [154, 168, 272, 296], "appl": [154, 272], "plan": [155, 273], "parquet": [156, 178, 274, 307], "pyarrow": [156, 274], "pickup": [156, 274], "timestamp": [156, 274], "n": [156, 274], "dropoff": [156, 274], "pandaspickup": 274, "2019": 274, "03": 274, "20": 274, "21": 274, "09": 274, "000000000": 274, "04": 274, "16": 274, "55": 274, "27": 274, "53": 274, "01": 274, "59": 274, "42": 274, "storag": [156, 168, 274, 296], "strength": [157, 275], "nineteen": [157, 275], "subprocess": [157, 275], "extern": [157, 275], "statement": [158, 161, 182, 276, 279, 311], "matlab": [160, 278], "octav": [160, 278], "cost": [160, 171, 278, 299], "live": [160, 278], "context": [161, 279], "lock": [161, 279], "thread": [161, 176, 279, 305], "temporarili": [161, 279], "fulli": [161, 279], "contextlib": [161, 279], "random": [162, 280], "pseudo": [162, 280], "alik": [162, 280], "thei": [162, 280], "seem": [162, 280], "randint": [162, 280], "randrang": [162, 280], "distribut": [162, 280], "secur": [162, 280], "uuid": [162, 280], "uniqu": [162, 280], "cross": [164, 286], "platform": [164, 286], "isol": [164, 286], "volum": [164, 286], "mount": [164, 286], "scipi": [165, 170, 287, 298], "u": 287, "never": 287, "speak": 287, "again": 287, "superior": [165, 287], "law": [165, 287], "instrument": [165, 287], "isn": [165, 181, 287, 310], "anti": [165, 287], "iloc": [166, 288], "loc": [166, 288], "iat": [166, 288], "mask": [166, 288], "teach": [289, 299], "sql": [168, 178, 296, 307], "pandassql": [168, 296], "medium": [168, 296], "duckdb": [168, 296], "persist": [168, 296], "connect": [168, 296], "sqlalchemi": [169, 297], "relationship": [169, 297], "latex": [170, 177, 298, 306], "calculu": [170, 298], "almost": [170, 298], "differenti": [170, 298], "techniqu": 299, "cheap": [171, 299], "mathemat": [171, 299], "At": [171, 299], "ag": [171, 299], "well": [171, 299], "anyth": [171, 299], "m": [171, 299], "particular": [171, 299], "market": 302, "geniu": 302, "100": [302, 318], "thonni": [174, 303], "friendli": 303, "could": [174, 303], "simpler": [174, 303], "debugg": [174, 303], "weakli": [175, 304], "scene": [175, 304], "disassembl": [175, 304], "explicit": [175, 304], "alias": [175, 304], "union": [175, 304], "liter": [175, 304], "gracefulli": [176, 305], "queue": [176, 305], "pass": [176, 305], "chainmap": [176, 305], "immut": [176, 305], "sequenc": [176, 305], "center": [177, 306], "inlin": [177, 306], "mathjax": [177, 306], "pyspark": [178, 307], "eleg": 307, "spark": [178, 307], "partit": [178, 307], "spring": 308, "vagrant": [180, 309], "ansibl": 309, "pyc": 310, "pycach": 310, "compil": [181, 310], "ignor": [181, 310], "cach": [181, 310], "modulenotfounderror": [182, 311], "sure": [182, 311], "correct": [182, 311], "deactiv": [182, 311], "hell": [182, 311], "whereabout": 312, "eas": [184, 313], "Of": [184, 313], "readabl": [184, 313], "influenc": [184, 313], "commun": [184, 313], "__init__": [186, 315], "yagni": [186, 315], "ain": [186, 315], "gonna": [186, 315], "decis": [186, 315], "stop": 316, "Being": [314, 316], "junior": 316, "serious": 316, "cut": 316, "javascript": 317, "strang": 318, "zen": 318, "world": 314, "oldest": 314, "major": 314}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"A Coop Coding Bootcamp": [[0, "a-coop-coding-bootcamp"]], "Apache Airflow:  Python ETL and Scheduling Made Easy": [[1, "apache-airflow-python-etl-and-scheduling-made-easy"]], "Introduction": [[1, "introduction"], [3, "introduction"], [9, "introduction"], [11, "introduction"], [28, "introduction"], [50, "introduction"], [51, "introduction"], [57, "introduction"], [59, "introduction"], [69, "introduction"], [127, "introduction"], [130, "introduction"], [131, "introduction"], [134, "introduction"], [137, "introduction"], [147, "introduction"], [158, "introduction"], [162, "introduction"], [164, "introduction"], [172, "introduction"], [175, "introduction"], [178, "introduction"], [246, "introduction"], [249, "introduction"], [250, "introduction"], [253, "introduction"], [256, "introduction"], [264, "introduction"], [276, "introduction"], [280, "introduction"], [286, "introduction"], [301, "introduction"], [304, "introduction"], [307, "introduction"]], "System Requirements and Installing Airflow": [[1, "system-requirements-and-installing-airflow"], [50, "system-requirements-and-installing-airflow"]], "The Airflow Web Interface": [[1, "the-airflow-web-interface"], [50, "the-airflow-web-interface"]], "Understanding How DAG Tasks Are Related": [[1, "understanding-how-dag-tasks-are-related"], [50, "understanding-how-dag-tasks-are-related"]], "Apache Airflow 2.0 and the TaskFlow API": [[1, "apache-airflow-2-0-and-the-taskflow-api"], [50, "apache-airflow-2-0-and-the-taskflow-api"]], "Mixing Apache Airflow 2.0 Style Tasks with Legacy Tasks - An Example": [[1, "mixing-apache-airflow-2-0-style-tasks-with-legacy-tasks-an-example"], [50, "mixing-apache-airflow-2-0-style-tasks-with-legacy-tasks-an-example"]], "Discussion": [[1, "discussion"], [6, "discussion"], [26, "discussion"], [50, "discussion"], [54, "discussion"], [67, "discussion"], [156, "discussion"], [274, "discussion"]], "Scheduling, The Dags Directory, and Configuration": [[1, "scheduling-the-dags-directory-and-configuration"], [50, "scheduling-the-dags-directory-and-configuration"]], "Revisiting Airflow Logging": [[1, "revisiting-airflow-logging"], [50, "revisiting-airflow-logging"]], "Closing Thoughts": [[1, "closing-thoughts"], [3, "closing-thoughts"], [6, "closing-thoughts"], [28, "closing-thoughts"], [37, "closing-thoughts"], [39, "closing-thoughts"], [47, "closing-thoughts"], [50, "closing-thoughts"], [51, "closing-thoughts"], [54, "closing-thoughts"], [69, "closing-thoughts"], [77, "closing-thoughts"], [79, "closing-thoughts"], [87, "closing-thoughts"], [98, "closing-thoughts"], [100, "closing-thoughts"], [105, "closing-thoughts"], [130, "closing-thoughts"], [134, "closing-thoughts"], [136, "closing-thoughts"], [144, "closing-thoughts"], [161, "closing-thoughts"], [162, "closing-thoughts"], [169, "closing-thoughts"], [170, "closing-thoughts"], [174, "closing-thoughts"], [178, "closing-thoughts"], [184, "closing-thoughts"], [186, "closing-thoughts"], [200, "closing-thoughts"], [202, "closing-thoughts"], [223, "closing-thoughts"], [249, "closing-thoughts"], [253, "closing-thoughts"], [255, "closing-thoughts"], [263, "closing-thoughts"], [279, "closing-thoughts"], [280, "closing-thoughts"], [297, "closing-thoughts"], [298, "closing-thoughts"], [303, "closing-thoughts"], [307, "closing-thoughts"], [313, "closing-thoughts"], [315, "closing-thoughts"]], "Alternatives to Pandas:  Python Polars": [[3, "alternatives-to-pandas-python-polars"]], "Polars Advantages Over Pandas": [[3, "polars-advantages-over-pandas"], [51, "polars-advantages-over-pandas"]], "Pandas Advantages Over Polars": [[3, "pandas-advantages-over-polars"], [51, "pandas-advantages-over-polars"]], "Transitioning from Pandas to Polars": [[3, "transitioning-from-pandas-to-polars"], [51, "transitioning-from-pandas-to-polars"]], "Creating and Displaying DataFrames and Loading Data from Files": [[3, "creating-and-displaying-dataframes-and-loading-data-from-files"], [51, "creating-and-displaying-dataframes-and-loading-data-from-files"]], "Converting DataFrames": [[3, "converting-dataframes"], [51, "converting-dataframes"]], "Getting Basic Information About a DataFrame": [[3, "getting-basic-information-about-a-dataframe"], [51, "getting-basic-information-about-a-dataframe"]], "General Comparison and Overlap": [[3, "general-comparison-and-overlap"], [51, "general-comparison-and-overlap"]], "Selecting Data In Polars": [[3, "selecting-data-in-polars"], [51, "selecting-data-in-polars"]], "Learn Basic Command Line Skills and Rock Your Workflow": [[4, "learn-basic-command-line-skills-and-rock-your-workflow"]], "The Core Command Line Skills": [[4, "the-core-command-line-skills"], [52, "the-core-command-line-skills"]], "Starting a Terminal Session": [[4, "starting-a-terminal-session"], [52, "starting-a-terminal-session"]], "Opening a Command Prompt From Your Computer": [[4, "opening-a-command-prompt-from-your-computer"], [52, "opening-a-command-prompt-from-your-computer"]], "Opening a Command Prompt From Your Editor or IDE": [[4, "opening-a-command-prompt-from-your-editor-or-ide"], [52, "opening-a-command-prompt-from-your-editor-or-ide"]], "Navigating the File System from the Command Line": [[4, "navigating-the-file-system-from-the-command-line"], [52, "navigating-the-file-system-from-the-command-line"]], "Where Am I?": [[4, "where-am-i"], [52, "where-am-i"]], "Creating Folders and Moving Around": [[4, "creating-folders-and-moving-around"], [52, "creating-folders-and-moving-around"]], "Navigating to Your Home Directory from the Command Line": [[4, "navigating-to-your-home-directory-from-the-command-line"], [52, "navigating-to-your-home-directory-from-the-command-line"]], "Working With Environment Variables and Setting the Path": [[4, "working-with-environment-variables-and-setting-the-path"], [52, "working-with-environment-variables-and-setting-the-path"]], "Adding a Path to the User Path on Windows": [[4, "adding-a-path-to-the-user-path-on-windows"], [52, "adding-a-path-to-the-user-path-on-windows"]], "Adding a Path to the User\u2019s Path on Mac or Linux": [[4, "adding-a-path-to-the-user-s-path-on-mac-or-linux"], [52, "adding-a-path-to-the-user-s-path-on-mac-or-linux"]], "Exploring Folders and Files and Their Contents": [[4, "exploring-folders-and-files-and-their-contents"], [52, "exploring-folders-and-files-and-their-contents"]], "Copying and Moving Files and Directories": [[4, "copying-and-moving-files-and-directories"], [52, "copying-and-moving-files-and-directories"]], "Listing All Files and Discovering Shell Configuration Files": [[4, "listing-all-files-and-discovering-shell-configuration-files"], [52, "listing-all-files-and-discovering-shell-configuration-files"]], "Creating and Running Basic Command Line Programs": [[4, "creating-and-running-basic-command-line-programs"], [52, "creating-and-running-basic-command-line-programs"]], "Windows Batch Files": [[4, "windows-batch-files"], [52, "windows-batch-files"]], "Getting Help for Command Line Tools": [[4, "getting-help-for-command-line-tools"], [52, "getting-help-for-command-line-tools"]], "Most Useful Shell Commands: Windows vs. Mac and Linux": [[4, "most-useful-shell-commands-windows-vs-mac-and-linux"], [52, "most-useful-shell-commands-windows-vs-mac-and-linux"]], "My Journey to Beautiful Documentation With JupyterBook": [[5, "my-journey-to-beautiful-documentation-with-jupyterbook"]], "Why This Is Important To Me": [[5, "why-this-is-important-to-me"], [53, "why-this-is-important-to-me"]], "JupyterBook vs Sphinx": [[5, "jupyterbook-vs-sphinx"], [53, "jupyterbook-vs-sphinx"]], "Creating the Repository for GitHub Pages": [[5, "creating-the-repository-for-github-pages"], [53, "creating-the-repository-for-github-pages"]], "Using JupyterBook to Create the Starter Pages": [[5, "using-jupyterbook-to-create-the-starter-pages"], [53, "using-jupyterbook-to-create-the-starter-pages"]], "Resolving Issues with JupyterBook\u2019s Documentation and Cookiecutter Book": [[5, "resolving-issues-with-jupyterbook-s-documentation-and-cookiecutter-book"], [53, "resolving-issues-with-jupyterbook-s-documentation-and-cookiecutter-book"]], "The Results So Far": [[5, "the-results-so-far"], [53, "the-results-so-far"]], "Benchmarking Python and Rust Async Web Server Performance": [[6, "benchmarking-python-and-rust-async-web-server-performance"]], "Using JMeter (A Brief Introduction)": [[6, "using-jmeter-a-brief-introduction"], [54, "using-jmeter-a-brief-introduction"]], "The Rust Application": [[6, "the-rust-application"], [54, "the-rust-application"]], "The Python Application": [[6, "the-python-application"], [54, "the-python-application"]], "Test Results": [[6, "test-results"], [54, "test-results"]], "Async Function With 2ms Delay": [[6, "async-function-with-2ms-delay"], [54, "async-function-with-2ms-delay"]], "Fibonacci Numbers \u2013 Async Handlers That Are (Lightly) CPU-Bound": [[6, "fibonacci-numbers-async-handlers-that-are-lightly-cpu-bound"], [54, "fibonacci-numbers-async-handlers-that-are-lightly-cpu-bound"]], "Boolean Expressions in Python: Beginner to Expert": [[7, "boolean-expressions-in-python-beginner-to-expert"]], "A Simple Boolean Example in Python": [[7, "a-simple-boolean-example-in-python"], [55, "a-simple-boolean-example-in-python"]], "Boolean Constants and Expressions in Python": [[7, "boolean-constants-and-expressions-in-python"], [55, "boolean-constants-and-expressions-in-python"]], "Python Comparison Operators": [[7, "python-comparison-operators"], [55, "python-comparison-operators"], [152, "python-comparison-operators"], [270, "python-comparison-operators"]], "Negation Using Not": [[7, "negation-using-not"], [55, "negation-using-not"]], "If and Else In Python": [[7, "if-and-else-in-python"], [55, "if-and-else-in-python"]], "Handling More Than Two Cases in Python: Elif": [[7, "handling-more-than-two-cases-in-python-elif"], [55, "handling-more-than-two-cases-in-python-elif"]], "Equality Checks and Checking for None": [[7, "equality-checks-and-checking-for-none"], [55, "equality-checks-and-checking-for-none"]], "What Are Compound Boolean Expressions in Python?": [[7, "what-are-compound-boolean-expressions-in-python"], [55, "what-are-compound-boolean-expressions-in-python"]], "A Truth Table for Python Boolean Expressions": [[7, "a-truth-table-for-python-boolean-expressions"], [55, "a-truth-table-for-python-boolean-expressions"]], "What Are the Precedence Rules For Python Boolean Expressions?": [[7, "what-are-the-precedence-rules-for-python-boolean-expressions"], [55, "what-are-the-precedence-rules-for-python-boolean-expressions"]], "Python If/Else and Booleans: Examples and Practice Questions": [[7, "python-if-else-and-booleans-examples-and-practice-questions"], [55, "python-if-else-and-booleans-examples-and-practice-questions"]], "You May Also Like": [[7, "you-may-also-like"], [9, "you-may-also-like"], [31, "you-may-also-like"], [45, "you-may-also-like"], [55, "you-may-also-like"], [57, "you-may-also-like"], [72, "you-may-also-like"], [84, "you-may-also-like"], [94, "you-may-also-like"], [95, "you-may-also-like"], [100, "you-may-also-like"], [121, "you-may-also-like"], [123, "you-may-also-like"], [131, "you-may-also-like"], [141, "you-may-also-like"], [147, "you-may-also-like"], [167, "you-may-also-like"], [176, "you-may-also-like"], [181, "you-may-also-like"], [184, "you-may-also-like"], [196, "you-may-also-like"], [197, "you-may-also-like"], [202, "you-may-also-like"], [240, "you-may-also-like"], [242, "you-may-also-like"], [250, "you-may-also-like"], [260, "you-may-also-like"], [264, "you-may-also-like"], [289, "you-may-also-like"], [305, "you-may-also-like"], [310, "you-may-also-like"], [313, "you-may-also-like"]], "Building a Docker Golang Container": [[8, "building-a-docker-golang-container"]], "From Simple to Complex": [[8, "from-simple-to-complex"], [56, "from-simple-to-complex"]], "A Naive Approach": [[8, "a-naive-approach"], [56, "a-naive-approach"]], "What\u2019s Wrong with the Naive Approach, and How To Fix It": [[8, "whats-wrong-with-the-naive-approach-and-how-to-fix-it"], [56, "whats-wrong-with-the-naive-approach-and-how-to-fix-it"]], "Multi-stage Builds": [[8, "multi-stage-builds"], [56, "multi-stage-builds"]], "Best Python Careers: New Research Reveals Top Fields": [[9, "best-python-careers-new-research-reveals-top-fields"]], "About The Data": [[9, "about-the-data"], [57, "about-the-data"]], "A Summary of Python Career Options": [[9, "a-summary-of-python-career-options"], [57, "a-summary-of-python-career-options"]], "The Careers": [[9, "the-careers"], [57, "the-careers"]], "Data Analyst / Data Scientist": [[9, "data-analyst-data-scientist"], [57, "data-analyst-data-scientist"]], "Data Engineer": [[9, "data-engineer"], [57, "data-engineer"]], "AWS Cloud (Various Titles)": [[9, "aws-cloud-various-titles"], [57, "aws-cloud-various-titles"]], "Web Developer: Front End Developer, Full Stack Developer, Microservices (All Roles)": [[9, "web-developer-front-end-developer-full-stack-developer-microservices-all-roles"], [57, "web-developer-front-end-developer-full-stack-developer-microservices-all-roles"]], "Test Automation (All Roles)": [[9, "test-automation-all-roles"], [57, "test-automation-all-roles"]], "Technical Support (All Roles)": [[9, "technical-support-all-roles"], [57, "technical-support-all-roles"]], "Do Statistics Tell the Whole Story About Python Careers?": [[9, "do-statistics-tell-the-whole-story-about-python-careers"], [57, "do-statistics-tell-the-whole-story-about-python-careers"]], "Chemists Strongly Addicted to Python!": [[10, "chemists-strongly-addicted-to-python"]], "A CMake Starter Project": [[11, "a-cmake-starter-project"]], "Part I: A Brief Review of the CMake Tutorial": [[11, "part-i-a-brief-review-of-the-cmake-tutorial"], [59, "part-i-a-brief-review-of-the-cmake-tutorial"]], "What You\u2019ll Learn in Part Two": [[11, "what-you-ll-learn-in-part-two"], [59, "what-you-ll-learn-in-part-two"]], "The CMake Starter Project: A Test First Approach": [[11, "the-cmake-starter-project-a-test-first-approach"], [59, "the-cmake-starter-project-a-test-first-approach"]], "Building and Running Our Tests": [[11, "building-and-running-our-tests"], [59, "building-and-running-our-tests"]], "Adding a Library": [[11, "adding-a-library"], [59, "adding-a-library"]], "Adding an Application with a Library Dependency": [[11, "adding-an-application-with-a-library-dependency"], [59, "adding-an-application-with-a-library-dependency"]], "Closing Thoughts and Next Steps": [[11, "closing-thoughts-and-next-steps"], [59, "closing-thoughts-and-next-steps"]], "Get the Code": [[11, "get-the-code"], [59, "get-the-code"]], "Code Pride is the Best Medicine": [[12, "code-pride-is-the-best-medicine"]], "You May Also Enjoy": [[12, "you-may-also-enjoy"], [29, "you-may-also-enjoy"], [30, "you-may-also-enjoy"], [33, "you-may-also-enjoy"], [34, "you-may-also-enjoy"], [60, "you-may-also-enjoy"], [70, "you-may-also-enjoy"], [71, "you-may-also-enjoy"], [73, "you-may-also-enjoy"], [74, "you-may-also-enjoy"], [104, "you-may-also-enjoy"], [114, "you-may-also-enjoy"], [115, "you-may-also-enjoy"], [130, "you-may-also-enjoy"], [134, "you-may-also-enjoy"], [135, "you-may-also-enjoy"], [137, "you-may-also-enjoy"], [138, "you-may-also-enjoy"], [144, "you-may-also-enjoy"], [152, "you-may-also-enjoy"], [155, "you-may-also-enjoy"], [158, "you-may-also-enjoy"], [161, "you-may-also-enjoy"], [162, "you-may-also-enjoy"], [172, "you-may-also-enjoy"], [174, "you-may-also-enjoy"], [180, "you-may-also-enjoy"], [206, "you-may-also-enjoy"], [233, "you-may-also-enjoy"], [234, "you-may-also-enjoy"], [249, "you-may-also-enjoy"], [253, "you-may-also-enjoy"], [254, "you-may-also-enjoy"], [256, "you-may-also-enjoy"], [257, "you-may-also-enjoy"], [263, "you-may-also-enjoy"], [270, "you-may-also-enjoy"], [273, "you-may-also-enjoy"], [276, "you-may-also-enjoy"], [279, "you-may-also-enjoy"], [280, "you-may-also-enjoy"], [301, "you-may-also-enjoy"], [303, "you-may-also-enjoy"], [309, "you-may-also-enjoy"]], "CodeSolid Newsletter, 11/29/2022": [[13, "codesolid-newsletter-11-29-2022"]], "New On CodeSolid": [[13, "new-on-codesolid"], [14, "new-on-codesolid"], [61, "new-on-codesolid"], [62, "new-on-codesolid"], [109, "new-on-codesolid"], [149, "new-on-codesolid"], [228, "new-on-codesolid"], [267, "new-on-codesolid"]], "New Around the Web": [[13, "new-around-the-web"], [61, "new-around-the-web"]], "CodeSolid Newsletter 12/13/2022": [[14, "codesolid-newsletter-12-13-2022"]], "Around The Web": [[14, "around-the-web"], [62, "around-the-web"], [110, "around-the-web"], [229, "around-the-web"]], "CodeSolid Python Newsletter:  November 1, 2022": [[15, "codesolid-python-newsletter-november-1-2022"]], "": [[15, "id1"], [15, "id2"], [16, "id1"], [16, "id2"], [39, "id1"], [46, "id1"], [63, "id1"], [63, "id2"], [79, "id1"], [86, "id1"], [94, "id1"], [116, "id1"], [146, "id1"], [196, "id1"], [235, "id1"], [265, "id1"]], "CodeSolid Newsletter:  October 25, 2022": [[16, "codesolid-newsletter-october-25-2022"]], "Hello from CodeSolid,": [[16, "hello-from-codesolid"], [63, "hello-from-codesolid"]], "Other Reading": [[16, "other-reading"], [63, "other-reading"]], "CodeSolid Python Newsletter:  December 28, 2022": [[17, "codesolid-python-newsletter-december-28-2022"]], "New and Featured on CodeSolid": [[17, "new-and-featured-on-codesolid"], [64, "new-and-featured-on-codesolid"]], "Python Around the Web": [[17, "python-around-the-web"], [64, "python-around-the-web"]], "On Reading Dennett\u2019s Consciousness Explained": [[18, "on-reading-dennett-s-consciousness-explained"]], "Cognitive Science Resources": [[19, "cognitive-science-resources"]], "Books": [[19, "books"], [150, "books"], [268, "books"]], "Reading / Read": [[19, "reading-read"]], "Read Next?": [[19, "read-next"]], "Other": [[19, "other"], [19, "id1"]], "Courses": [[19, "courses"]], "Video Talks": [[19, "video-talks"]], "Useful Sites": [[19, "useful-sites"]], "Notes on Synapses, Neurons, and Brains": [[20, "notes-on-synapses-neurons-and-brains"]], "Week One": [[20, "week-one"]], "Five exciting things:": [[20, "five-exciting-things"]], "Connectomics": [[20, "connectomics"]], "BrainBow": [[20, "brainbow"]], "Brain Machine Interface": [[20, "brain-machine-interface"]], "Optogenetics": [[20, "optogenetics"]], "Blue Brain Project - Brain Simulation": [[20, "blue-brain-project-brain-simulation"]], "Week Two": [[20, "week-two"]], "The Neuron": [[20, "the-neuron"]], "The Neuron Doctrine": [[20, "the-neuron-doctrine"]], "The neuron as an input / output device": [[20, "the-neuron-as-an-input-output-device"]], "The Axon": [[20, "the-axon"]], "The Dendrite": [[20, "the-dendrite"]], "Neuron Types": [[20, "neuron-types"]], "The Synapse": [[20, "the-synapse"]], "The Neuron as Output Device: Part 2": [[20, "the-neuron-as-output-device-part-2"]], "Week Three - Electrifying Brains \u2013 Passive Electrical SIgnals": [[20, "week-three-electrifying-brains-passive-electrical-signals"]], "The Cell as an RC Circuit": [[20, "the-cell-as-an-rc-circuit"]], "The voltage equation for the passive cell": [[20, "the-voltage-equation-for-the-passive-cell"]], "The Membrane Time Constant": [[20, "the-membrane-time-constant"]], "Temporal Summation": [[20, "temporal-summation"]], "The Resting Potential": [[20, "the-resting-potential"]], "The Synaptic Potential, Part I": [[20, "the-synaptic-potential-part-i"]], "The Synaptic Conductance": [[20, "the-synaptic-conductance"]], "The Synaptic Battery": [[20, "the-synaptic-battery"]], "The Synaptic Potential, Part II": [[20, "the-synaptic-potential-part-ii"]], "The Voltage Equation for the Synapse and EPSP and IPSP": [[20, "the-voltage-equation-for-the-synapse-and-epsp-and-ipsp"]], "Summary": [[20, "summary"], [27, "summary"], [48, "summary"], [68, "summary"], [88, "summary"], [106, "summary"], [115, "summary"], [156, "summary"], [166, "summary"], [224, "summary"], [234, "summary"], [274, "summary"], [288, "summary"]], "Week Four:  Electrifying Brains - Active Electrical Spikes": [[20, "week-four-electrifying-brains-active-electrical-spikes"]], "The Hodgkin Huxley Experiments": [[20, "the-hodgkin-huxley-experiments"]], "Membrane Currents Underlying the Spike": [[20, "membrane-currents-underlying-the-spike"]], "Modeling the Membrane Currents": [[20, "modeling-the-membrane-currents"]], "The H&H Spike Model": [[20, "the-h-h-spike-model"]], "The Refratory period:": [[20, "the-refratory-period"]], "Week Five - Neurons as Plastic/Dynamic Devices": [[20, "week-five-neurons-as-plastic-dynamic-devices"]], "Outline and Introduction": [[20, "outline-and-introduction"]], "Mechanisms Subserving Learning and Memory": [[20, "mechanisms-subserving-learning-and-memory"]], "Possible neuronal mechanisms underlying learning & memory:": [[20, "possible-neuronal-mechanisms-underlying-learning-memory"]], "Functional Plasticity": [[20, "functional-plasticity"]], "Structural Plasticity": [[20, "structural-plasticity"]], "Neurogenesis and Learning": [[20, "neurogenesis-and-learning"]], "Week Six: Cable Theory and Dendritic Computations": [[20, "week-six-cable-theory-and-dendritic-computations"]], "The Brain Computes": [[20, "the-brain-computes"]], "Computation at the level of Single Neuron": [[20, "computation-at-the-level-of-single-neuron"]], "Fundamentals of Dendritic Cable Theory": [[20, "fundamentals-of-dendritic-cable-theory"]], "Rall Cable Theory for Dendrites": [[20, "rall-cable-theory-for-dendrites"]], "Transient synapses": [[20, "transient-synapses"]], "Dendritic Computation": [[20, "dendritic-computation"]], "Recent Breakthroughs": [[20, "recent-breakthroughs"]], "Personal note": [[20, "personal-note"]], "Week 7 Cortical Networks - Out of the Blue Project": [[20, "week-7-cortical-networks-out-of-the-blue-project"]], "Cortical networks - out of the blue project.": [[20, "cortical-networks-out-of-the-blue-project"]], "The Blue Brain Project": [[20, "the-blue-brain-project"]], "The Cortical Column": [[20, "the-cortical-column"]], "The Cortical Column Network": [[20, "the-cortical-column-network"]], "Blue Brain Project": [[20, "blue-brain-project"]], "Blue Brain Simulations": [[20, "blue-brain-simulations"]], "From Mouse to Human": [[20, "from-mouse-to-human"]], "The Human Brain Project": [[20, "the-human-brain-project"]], "Perception, action, cognition, emotion": [[20, "perception-action-cognition-emotion"]], "Sensory Transduction": [[20, "sensory-transduction"], [20, "id1"]], "Early Processing of Sensory Information": [[20, "early-processing-of-sensory-information"]], "How Sensory Information Guides Motion": [[20, "how-sensory-information-guides-motion"]], "Higher Order Processes of Sensory Information": [[20, "higher-order-processes-of-sensory-information"]], "Emotions": [[20, "emotions"]], "From Synapses to Free Will": [[20, "from-synapses-to-free-will"]], "What Did We Learn?": [[20, "what-did-we-learn"]], "What Did We Learn": [[20, "id2"]], "Free will and neuro-ethics": [[20, "free-will-and-neuro-ethics"]], "Reading Thoughts": [[20, "reading-thoughts"]], "Brain Reading Part 2": [[20, "brain-reading-part-2"]], "Interacting with the Brain in Vegetative States": [[20, "interacting-with-the-brain-in-vegetative-states"]], "Free Will": [[20, "free-will"]], "How Free Are We?": [[20, "how-free-are-we"]], "Farewell Words": [[20, "farewell-words"]], "Review Notes for Synapses, Neurons, and Brains": [[21, "review-notes-for-synapses-neurons-and-brains"]], "The Secret Life of the Mind": [[22, "the-secret-life-of-the-mind"]], "Cognitive Science": [[23, "cognitive-science"]], "Conda vs. Pip, Venv, and Pyenv \u2013 Simplicity Wins": [[24, "conda-vs-pip-venv-and-pyenv-simplicity-wins"]], "Moving to Conda": [[24, "moving-to-conda"], [65, "moving-to-conda"]], "Getting Started With Conda": [[24, "getting-started-with-conda"], [65, "getting-started-with-conda"]], "Conda vs. Other Tools": [[24, "conda-vs-other-tools"], [65, "conda-vs-other-tools"]], "Conda vs. PyEnv": [[24, "conda-vs-pyenv"], [65, "conda-vs-pyenv"]], "Some Background": [[24, "some-background"], [65, "some-background"], [211, "some-background"]], "Conda vs Pyenv: Pros and Cons": [[24, "conda-vs-pyenv-pros-and-cons"], [65, "conda-vs-pyenv-pros-and-cons"]], "Pros of Pyenv Compared to Conda": [[24, "pros-of-pyenv-compared-to-conda"], [65, "pros-of-pyenv-compared-to-conda"]], "Pros of Conda Compared to Pyenv": [[24, "pros-of-conda-compared-to-pyenv"], [65, "pros-of-conda-compared-to-pyenv"]], "Conda vs. Venv": [[24, "conda-vs-venv"], [65, "conda-vs-venv"]], "Pros and Cons of Conda vs Venv": [[24, "pros-and-cons-of-conda-vs-venv"], [65, "pros-and-cons-of-conda-vs-venv"]], "Installing Python Packages: Conda and Pip": [[24, "installing-python-packages-conda-and-pip"], [65, "installing-python-packages-conda-and-pip"]], "A Brief Conda Tutorial": [[24, "a-brief-conda-tutorial"], [65, "a-brief-conda-tutorial"]], "Creating Environments and Installing Packages": [[24, "creating-environments-and-installing-packages"], [65, "creating-environments-and-installing-packages"]], "Saving, Sharing, and Re-Creating Saved Environments": [[24, "saving-sharing-and-re-creating-saved-environments"], [65, "saving-sharing-and-re-creating-saved-environments"]], "Final Thoughts": [[24, "final-thoughts"], [44, "final-thoughts"], [45, "final-thoughts"], [65, "final-thoughts"], [84, "final-thoughts"], [85, "final-thoughts"], [93, "final-thoughts"], [104, "final-thoughts"], [118, "final-thoughts"], [120, "final-thoughts"], [123, "final-thoughts"], [195, "final-thoughts"], [206, "final-thoughts"], [237, "final-thoughts"], [239, "final-thoughts"], [242, "final-thoughts"]], "C++ Dev Containers:  Custom Environments for VS Code": [[25, "c-dev-containers-custom-environments-for-vs-code"]], "Dev Containers in VS Code: An Introduction": [[25, "dev-containers-in-vs-code-an-introduction"], [66, "dev-containers-in-vs-code-an-introduction"]], "Dev Containers for C++: A Special Case": [[25, "dev-containers-for-c-a-special-case"], [66, "dev-containers-for-c-a-special-case"]], "Two important dev container extensions in VS Code": [[25, "two-important-dev-container-extensions-in-vs-code"], [66, "two-important-dev-container-extensions-in-vs-code"]], "Quick Start: A \u201cDefault\u201d C++ Dev Container": [[25, "quick-start-a-default-c-dev-container"], [66, "quick-start-a-default-c-dev-container"]], "Creating a Custom Dev Container": [[25, "creating-a-custom-dev-container"], [66, "creating-a-custom-dev-container"]], "Using a Dev Container in GitHub CodeSpaces": [[25, "using-a-dev-container-in-github-codespaces"], [66, "using-a-dev-container-in-github-codespaces"]], "Creating a Python Interactive Plot Using Matplotlib in Jupyter": [[26, "creating-a-python-interactive-plot-using-matplotlib-in-jupyter"]], "Python Libraries For Interactive Plots": [[26, "python-libraries-for-interactive-plots"], [67, "python-libraries-for-interactive-plots"]], "The Road Ahead: What This Article Covers": [[26, "the-road-ahead-what-this-article-covers"], [67, "the-road-ahead-what-this-article-covers"]], "The Road Not Taken: Other Choices for Interactive Plots": [[26, "the-road-not-taken-other-choices-for-interactive-plots"], [67, "the-road-not-taken-other-choices-for-interactive-plots"]], "Matplotlib and in Jupyter Lab: First Steps": [[26, "matplotlib-and-in-jupyter-lab-first-steps"], [67, "matplotlib-and-in-jupyter-lab-first-steps"]], "Building the Plot": [[26, "building-the-plot"], [67, "building-the-plot"]], "Displaying Information in the Title": [[26, "displaying-information-in-the-title"], [67, "displaying-information-in-the-title"]], "Interactive Data Visualization: Adding User Controls With Ipywidets": [[26, "interactive-data-visualization-adding-user-controls-with-ipywidets"], [67, "interactive-data-visualization-adding-user-controls-with-ipywidets"]], "Interactive Plots: A Fringe Benefit": [[26, "interactive-plots-a-fringe-benefit"], [67, "interactive-plots-a-fringe-benefit"]], "Matplotlib Plus IPywidgets: Some Final Thoughts": [[26, "matplotlib-plus-ipywidgets-some-final-thoughts"], [67, "matplotlib-plus-ipywidgets-some-final-thoughts"]], "Data cleaning in Pandas": [[27, "data-cleaning-in-pandas"]], "Getting Started with Data cleaning in Pandas": [[27, "getting-started-with-data-cleaning-in-pandas"], [68, "getting-started-with-data-cleaning-in-pandas"]], "Dropping column from data frame in Pandas": [[27, "dropping-column-from-data-frame-in-pandas"], [68, "dropping-column-from-data-frame-in-pandas"]], "Dropping rows from the data frame in pandas": [[27, "dropping-rows-from-the-data-frame-in-pandas"], [68, "dropping-rows-from-the-data-frame-in-pandas"]], "Renaming column names in Pandas": [[27, "renaming-column-names-in-pandas"], [68, "renaming-column-names-in-pandas"]], "Handling NULL values in Pandas": [[27, "handling-null-values-in-pandas"], [68, "handling-null-values-in-pandas"]], "Changing the indexing of the data frame": [[27, "changing-the-indexing-of-the-data-frame"], [68, "changing-the-indexing-of-the-data-frame"]], "Finding duplicate elements in the data frame": [[27, "finding-duplicate-elements-in-the-data-frame"], [68, "finding-duplicate-elements-in-the-data-frame"]], "Cleaning strings in Pandas data frame": [[27, "cleaning-strings-in-pandas-data-frame"], [68, "cleaning-strings-in-pandas-data-frame"]], "Removing unnecessary capitalization": [[27, "removing-unnecessary-capitalization"], [68, "removing-unnecessary-capitalization"]], "Remove Whitespace in a DataFrame": [[27, "remove-whitespace-in-a-dataframe"], [68, "remove-whitespace-in-a-dataframe"]], "Removing characters from the columns": [[27, "removing-characters-from-the-columns"], [68, "removing-characters-from-the-columns"]], "Debugging Python in VS Code": [[28, "debugging-python-in-vs-code"]], "Outline and Introducing the Companion Repository": [[28, "outline-and-introducing-the-companion-repository"], [69, "outline-and-introducing-the-companion-repository"]], "Basic Python Debugging in VS Code": [[28, "basic-python-debugging-in-vs-code"], [69, "basic-python-debugging-in-vs-code"]], "Debugging a Simple Python File": [[28, "debugging-a-simple-python-file"], [69, "debugging-a-simple-python-file"]], "Visual Studio Code: Understanding the Left-Hand Debugging Panel": [[28, "visual-studio-code-understanding-the-left-hand-debugging-panel"], [69, "visual-studio-code-understanding-the-left-hand-debugging-panel"]], "VS Code: Bottom Debugging Related Panels": [[28, "vs-code-bottom-debugging-related-panels"], [69, "vs-code-bottom-debugging-related-panels"]], "Visual Studio Code Debug Configuration Files": [[28, "visual-studio-code-debug-configuration-files"], [69, "visual-studio-code-debug-configuration-files"]], "DirectoryInfo Example": [[29, "directoryinfo-example"]], "Python Dunder Methods:  The Ugliest Awesome Sauce": [[30, "python-dunder-methods-the-ugliest-awesome-sauce"]], "Python Constructors are Dunder Methods": [[30, "python-constructors-are-dunder-methods"], [71, "python-constructors-are-dunder-methods"]], "Ugly is Beautiful: __repr__ and __str__": [[30, "ugly-is-beautiful-repr-and-str"], [71, "ugly-is-beautiful-repr-and-str"]], "Operator Overloading and Dunder Methods": [[30, "operator-overloading-and-dunder-methods"], [71, "operator-overloading-and-dunder-methods"]], "Dunder Methods to Integrate Other Python Functions": [[30, "dunder-methods-to-integrate-other-python-functions"], [71, "dunder-methods-to-integrate-other-python-functions"]], "Are Dunder Methods in Python a Good Design?": [[30, "are-dunder-methods-in-python-a-good-design"], [71, "are-dunder-methods-in-python-a-good-design"]], "Implementing Python Iterators Using Dunder Methods": [[30, "implementing-python-iterators-using-dunder-methods"], [71, "implementing-python-iterators-using-dunder-methods"]], "What Are All the Available Dunder Methods?": [[30, "what-are-all-the-available-dunder-methods"], [71, "what-are-all-the-available-dunder-methods"]], "Exploring Python Objects with the dir and type functions": [[31, "exploring-python-objects-with-the-dir-and-type-functions"]], "The Solution": [[31, "the-solution"], [72, "the-solution"]], "How to Find Duplicates In a List in Python": [[33, "how-to-find-duplicates-in-a-list-in-python"]], "Finding Duplicates in a List When Order Doesn\u2019t Matter": [[33, "finding-duplicates-in-a-list-when-order-doesn-t-matter"], [73, "finding-duplicates-in-a-list-when-order-doesn-t-matter"]], "Removing Duplicates from a List With Order Preserved": [[33, "removing-duplicates-from-a-list-with-order-preserved"], [73, "removing-duplicates-from-a-list-with-order-preserved"]], "Removing Duplicates in a List of Complex Objects": [[33, "removing-duplicates-in-a-list-of-complex-objects"], [73, "removing-duplicates-in-a-list-of-complex-objects"]], "Find Duplicates in a List to Count the Entries": [[33, "find-duplicates-in-a-list-to-count-the-entries"], [73, "find-duplicates-in-a-list-to-count-the-entries"]], "Python Classes Zero to Expert: A Tutorial with Exercises": [[34, "python-classes-zero-to-expert-a-tutorial-with-exercises"]], "Classes vs. Objects": [[34, "classes-vs-objects"], [74, "classes-vs-objects"]], "A First Python Class": [[34, "a-first-python-class"], [74, "a-first-python-class"]], "Theory Break: What Is Object Orientation?": [[34, "theory-break-what-is-object-orientation"], [74, "theory-break-what-is-object-orientation"]], "Inheritance in Python Classes": [[34, "inheritance-in-python-classes"], [74, "inheritance-in-python-classes"]], "When To Use Inheritance in Python, and When Not To": [[34, "when-to-use-inheritance-in-python-and-when-not-to"], [74, "when-to-use-inheritance-in-python-and-when-not-to"]], "Python Abstract Base Classes": [[34, "python-abstract-base-classes"], [74, "python-abstract-base-classes"]], "Is Python an Object-Oriented Language?": [[34, "is-python-an-object-oriented-language"], [74, "is-python-an-object-oriented-language"]], "Practice Exercises for Python Classes and Objects": [[34, "practice-exercises-for-python-classes-and-objects"], [74, "practice-exercises-for-python-classes-and-objects"]], "Additional Topics to Explore": [[34, "additional-topics-to-explore"], [74, "additional-topics-to-explore"]], "Getting Things Done With Dendron and VS Code \u2013 First Look": [[35, "getting-things-done-with-dendron-and-vs-code-first-look"]], "The Good": [[35, "the-good"], [75, "the-good"]], "The Bad": [[35, "the-bad"], [75, "the-bad"]], "The Indifferent": [[35, "the-indifferent"], [75, "the-indifferent"]], "Overall Impressions": [[35, "overall-impressions"], [75, "overall-impressions"]], "Try It Yourself": [[35, "try-it-yourself"], [75, "try-it-yourself"]], "Getting Things Done with GitHub, Markdown, and Visual Studio Code": [[36, "getting-things-done-with-github-markdown-and-visual-studio-code"]], "How to Work With Google Sheets In Python and Pandas": [[37, "how-to-work-with-google-sheets-in-python-and-pandas"]], "The Devil is Not in the Details, It\u2019s In the Setup.": [[37, "the-devil-is-not-in-the-details-it-s-in-the-setup"], [77, "the-devil-is-not-in-the-details-it-s-in-the-setup"]], "Welcome to the Google Cloud": [[37, "welcome-to-the-google-cloud"], [77, "welcome-to-the-google-cloud"]], "Configuring a Project": [[37, "configuring-a-project"], [77, "configuring-a-project"]], "Creating a Service Account": [[37, "creating-a-service-account"], [77, "creating-a-service-account"]], "Adding a Key": [[37, "adding-a-key"], [77, "adding-a-key"]], "Configure Your Spreadsheet and Gspread to Use The New Credentials": [[37, "configure-your-spreadsheet-and-gspread-to-use-the-new-credentials"], [77, "configure-your-spreadsheet-and-gspread-to-use-the-new-credentials"]], "Writing Data": [[37, "writing-data"], [77, "writing-data"]], "Using Google Sheets With Pandas": [[37, "using-google-sheets-with-pandas"], [77, "using-google-sheets-with-pandas"]], "Delme": [[38, "delme"]], "How To Profile Python Code": [[39, "how-to-profile-python-code"]], "Python Profiling Tool Overview": [[39, "python-profiling-tool-overview"], [79, "python-profiling-tool-overview"]], "Profiling is a Late-Stage Activity": [[39, "profiling-is-a-late-stage-activity"], [79, "profiling-is-a-late-stage-activity"]], "Profiling vs. Benchmarking": [[39, "profiling-vs-benchmarking"], [79, "profiling-vs-benchmarking"]], "Deterministic Profiling vs. Statistical Profiling": [[39, "deterministic-profiling-vs-statistical-profiling"], [79, "deterministic-profiling-vs-statistical-profiling"]], "Wall clock time vs. CPU Time": [[39, "wall-clock-time-vs-cpu-time"], [79, "wall-clock-time-vs-cpu-time"]], "A Profiling Scenario": [[39, "a-profiling-scenario"], [79, "a-profiling-scenario"]], "Profiling using Python\u2019s cProfile Module": [[39, "profiling-using-python-s-cprofile-module"], [79, "profiling-using-python-s-cprofile-module"]], "Running the cProfile Python profiler at the command line": [[39, "running-the-cprofile-python-profiler-at-the-command-line"], [79, "running-the-cprofile-python-profiler-at-the-command-line"]], "Running cProfile Python profiler in a short program": [[39, "running-cprofile-python-profiler-in-a-short-program"], [79, "running-cprofile-python-profiler-in-a-short-program"]], "Benchmarking in Python using timeit": [[39, "benchmarking-in-python-using-timeit"], [79, "benchmarking-in-python-using-timeit"]], "Running Timeit as a Command": [[39, "running-timeit-as-a-command"], [79, "running-timeit-as-a-command"]], "Using the Timeit Module in a Program": [[39, "using-the-timeit-module-in-a-program"], [79, "using-the-timeit-module-in-a-program"]], "Benchmarking in IPython and Jupyter Notebook: %time and %timeit": [[39, "benchmarking-in-ipython-and-jupyter-notebook-time-and-timeit"], [79, "benchmarking-in-ipython-and-jupyter-notebook-time-and-timeit"]], "Getting More Detail than cProfile: The line_profiler Project": [[39, "getting-more-detail-than-cprofile-the-line-profiler-project"], [79, "getting-more-detail-than-cprofile-the-line-profiler-project"]], "Line Profiling in Jupyter": [[39, "line-profiling-in-jupyter"], [79, "line-profiling-in-jupyter"]], "Profile Python Function Calls as You Go: Using the %prun magic method": [[39, "profile-python-function-calls-as-you-go-using-the-prun-magic-method"], [79, "profile-python-function-calls-as-you-go-using-the-prun-magic-method"]], "Using %lprun: More Convenient than Kernprof": [[39, "using-lprun-more-convenient-than-kernprof"], [79, "using-lprun-more-convenient-than-kernprof"]], "Understanding Memory Usage with the memory_profiler Package": [[39, "understanding-memory-usage-with-the-memory-profiler-package"], [79, "understanding-memory-usage-with-the-memory-profiler-package"]], "Memory Profiling for Single Lines of Python Code with %memit": [[39, "memory-profiling-for-single-lines-of-python-code-with-memit"], [79, "memory-profiling-for-single-lines-of-python-code-with-memit"]], "Memory Profiling Functions %mprun": [[39, "memory-profiling-functions-mprun"], [79, "memory-profiling-functions-mprun"]], "Profiling CPU and Memory Graphically With Scalene": [[39, "profiling-cpu-and-memory-graphically-with-scalene"], [79, "profiling-cpu-and-memory-graphically-with-scalene"]], "A Brief Honorable Mention: Yappi": [[39, "a-brief-honorable-mention-yappi"], [79, "a-brief-honorable-mention-yappi"]], "How To Compare Python Dictionaries": [[40, "how-to-compare-python-dictionaries"]], "Python Is Consistent": [[40, "python-is-consistent"], [80, "python-is-consistent"]], "Compare Dictionaries Like Other Types": [[40, "compare-dictionaries-like-other-types"], [80, "compare-dictionaries-like-other-types"]], "Use Caution With Equality-Compatible Types": [[40, "use-caution-with-equality-compatible-types"], [80, "use-caution-with-equality-compatible-types"]], "What If We Need a Stronger Check for Equality?": [[40, "what-if-we-need-a-stronger-check-for-equality"], [80, "what-if-we-need-a-stronger-check-for-equality"]], "Using \u201c==\u201d for Other Python Collections": [[40, "using-for-other-python-collections"], [80, "using-for-other-python-collections"]], "What About User-Defined Types?": [[40, "what-about-user-defined-types"], [80, "what-about-user-defined-types"]], "How to Convert a String to Datetime in Python?": [[41, "how-to-convert-a-string-to-datetime-in-python"]], "What is Python Datetime?": [[41, "what-is-python-datetime"], [81, "what-is-python-datetime"]], "Converting Strings to Datetime Objects": [[41, "converting-strings-to-datetime-objects"], [81, "converting-strings-to-datetime-objects"]], "Python Datetime Format Codes": [[41, "python-datetime-format-codes"], [81, "python-datetime-format-codes"]], "String to Datetime Object": [[41, "string-to-datetime-object"], [81, "string-to-datetime-object"]], "Accessing Datetime Objects\u2019 Elements": [[41, "accessing-datetime-objects-elements"], [81, "accessing-datetime-objects-elements"]], "Datetime and Time Zones": [[41, "datetime-and-time-zones"], [81, "datetime-and-time-zones"]], "String to Date Object": [[41, "string-to-date-object"], [81, "string-to-date-object"]], "Presenting Date Objects in Different Formats": [[41, "presenting-date-objects-in-different-formats"], [81, "presenting-date-objects-in-different-formats"]], "String to Time Object": [[41, "string-to-time-object"], [81, "string-to-time-object"]], "Presenting Time Objects in Different Formats": [[41, "presenting-time-objects-in-different-formats"], [81, "presenting-time-objects-in-different-formats"]], "Converting a Pandas Column to Datetime": [[41, "converting-a-pandas-column-to-datetime"], [81, "converting-a-pandas-column-to-datetime"]], "Converting a String to Datetime Using Other Python Libraries": [[41, "converting-a-string-to-datetime-using-other-python-libraries"], [81, "converting-a-string-to-datetime-using-other-python-libraries"]], "String to Datetime with Dateutil": [[41, "string-to-datetime-with-dateutil"], [81, "string-to-datetime-with-dateutil"]], "String to Datetime with Maya": [[41, "string-to-datetime-with-maya"], [81, "string-to-datetime-with-maya"]], "String to Datetime with Arrow": [[41, "string-to-datetime-with-arrow"], [81, "string-to-datetime-with-arrow"]], "Converting Datetime Back into Integer, Float, or Strings": [[41, "converting-datetime-back-into-integer-float-or-strings"], [81, "converting-datetime-back-into-integer-float-or-strings"]], "Conclusion": [[41, "conclusion"], [81, "conclusion"], [97, "conclusion"], [99, "conclusion"], [158, "conclusion"], [175, "conclusion"], [199, "conclusion"], [201, "conclusion"], [276, "conclusion"], [304, "conclusion"]], "How To Install Pip and Conda on the Same Machine": [[42, "how-to-install-pip-and-conda-on-the-same-machine"]], "The Basics First: Pip, Pyenv, Anaconda and Miniconda": [[42, "the-basics-first-pip-pyenv-anaconda-and-miniconda"], [82, "the-basics-first-pip-pyenv-anaconda-and-miniconda"]], "Using Pyenv to Support Both Pip and Miniconda": [[42, "using-pyenv-to-support-both-pip-and-miniconda"], [82, "using-pyenv-to-support-both-pip-and-miniconda"]], "Closing Thoughts on Pyenv": [[42, "closing-thoughts-on-pyenv"], [82, "closing-thoughts-on-pyenv"]], "How to Learn To Program": [[43, "how-to-learn-to-program"]], "Think About Your \u201cWhy\u201d": [[43, "think-about-your-why"], [83, "think-about-your-why"]], "Start Small and Try Before You Buy": [[43, "start-small-and-try-before-you-buy"], [83, "start-small-and-try-before-you-buy"]], "Your Mother Probably Already Told You This": [[43, "your-mother-probably-already-told-you-this"], [83, "your-mother-probably-already-told-you-this"]], "Kick Your Doubt To the Curb": [[43, "kick-your-doubt-to-the-curb"], [83, "kick-your-doubt-to-the-curb"]], "Don\u2019t Be Afraid of Simplicity": [[43, "don-t-be-afraid-of-simplicity"], [83, "don-t-be-afraid-of-simplicity"]], "Find a Mentor / Make a Friend in the Field": [[43, "find-a-mentor-make-a-friend-in-the-field"], [83, "find-a-mentor-make-a-friend-in-the-field"]], "How To Practice Python": [[44, "how-to-practice-python"]], "Python Habits Are No Different From Other Habits": [[44, "python-habits-are-no-different-from-other-habits"], [85, "python-habits-are-no-different-from-other-habits"]], "Setting Up Your Environment for Success": [[44, "setting-up-your-environment-for-success"], [85, "setting-up-your-environment-for-success"]], "The Python Practice Implementation Intention": [[44, "the-python-practice-implementation-intention"], [85, "the-python-practice-implementation-intention"]], "START!": [[44, "start"], [85, "start"]], "Making Your Python Practice Easy": [[44, "making-your-python-practice-easy"], [85, "making-your-python-practice-easy"]], "Build In a Reward for Your Practice": [[44, "build-in-a-reward-for-your-practice"], [85, "build-in-a-reward-for-your-practice"]], "Other Rewards": [[44, "other-rewards"], [85, "other-rewards"]], "How to Practice Python: Data Science and Pandas": [[45, "how-to-practice-python-data-science-and-pandas"]], "Core Packages for Python Data Science": [[45, "core-packages-for-python-data-science"], [84, "core-packages-for-python-data-science"]], "Online Tools for Practicing Python Data Science": [[45, "online-tools-for-practicing-python-data-science"], [84, "online-tools-for-practicing-python-data-science"]], "Books for Python Data Science": [[45, "books-for-python-data-science"], [84, "books-for-python-data-science"]], "A Free Online Pandas Course": [[45, "a-free-online-pandas-course"], [84, "a-free-online-pandas-course"]], "Sample Data Sets You Can Work With": [[45, "sample-data-sets-you-can-work-with"], [84, "sample-data-sets-you-can-work-with"]], "Build Your Own Dataset": [[45, "build-your-own-dataset"], [84, "build-your-own-dataset"]], "How To Separate Source and Tests in Python": [[46, "how-to-separate-source-and-tests-in-python"]], "Solution? Code Python in Python.": [[46, "solution-code-python-in-python"], [86, "solution-code-python-in-python"]], "Have You Seen This Puzzle?": [[46, "have-you-seen-this-puzzle"], [86, "have-you-seen-this-puzzle"]], "How To Use Docker Python Images and Docker Compose With Python": [[47, "how-to-use-docker-python-images-and-docker-compose-with-python"]], "Is Docker Important for Python Development": [[47, "is-docker-important-for-python-development"], [87, "is-docker-important-for-python-development"]], "First Steps: Installing and Configuring Docker": [[47, "first-steps-installing-and-configuring-docker"], [87, "first-steps-installing-and-configuring-docker"]], "Basic Docker Concepts": [[47, "basic-docker-concepts"], [87, "basic-docker-concepts"]], "Running Python Flask in a Docker Container": [[47, "running-python-flask-in-a-docker-container"], [87, "running-python-flask-in-a-docker-container"]], "Selecting a Base Docker Image for Python": [[47, "selecting-a-base-docker-image-for-python"], [87, "selecting-a-base-docker-image-for-python"]], "A Simple Flask Dockerfile": [[47, "a-simple-flask-dockerfile"], [87, "a-simple-flask-dockerfile"]], "Building and Running the Flask Image and Python Docker Container": [[47, "building-and-running-the-flask-image-and-python-docker-container"], [87, "building-and-running-the-flask-image-and-python-docker-container"]], "Running Django and Postgres Using Docker Compose": [[47, "running-django-and-postgres-using-docker-compose"], [87, "running-django-and-postgres-using-docker-compose"]], "A Django And Docker-Compose Starter Application": [[47, "a-django-and-docker-compose-starter-application"], [87, "a-django-and-docker-compose-starter-application"]], "A docker-compose.yaml file for Postgres and Django": [[47, "a-docker-compose-yaml-file-for-postgres-and-django"], [87, "a-docker-compose-yaml-file-for-postgres-and-django"]], "The Django Dockerfile and Source": [[47, "the-django-dockerfile-and-source"], [87, "the-django-dockerfile-and-source"]], "Some Django Utility Scripts for Docker": [[47, "some-django-utility-scripts-for-docker"], [87, "some-django-utility-scripts-for-docker"]], "A Simple Django Dockerfile": [[47, "a-simple-django-dockerfile"], [87, "a-simple-django-dockerfile"]], "Putting It All Together": [[47, "putting-it-all-together"], [87, "putting-it-all-together"]], "More Useful Docker Commands": [[47, "more-useful-docker-commands"], [87, "more-useful-docker-commands"]], "How to Visualize Data Using Pandas": [[48, "how-to-visualize-data-using-pandas"]], "Exploring the Dataset": [[48, "exploring-the-dataset"], [88, "exploring-the-dataset"]], "Visualize Data Using Pandas": [[48, "visualize-data-using-pandas"], [88, "visualize-data-using-pandas"]], "Line plots in Pandas": [[48, "line-plots-in-pandas"], [88, "line-plots-in-pandas"]], "Scatter plots in Python": [[48, "scatter-plots-in-python"], [88, "scatter-plots-in-python"]], "Bar plots in Pandas": [[48, "bar-plots-in-pandas"], [88, "bar-plots-in-pandas"]], "Area plots in Pandas": [[48, "area-plots-in-pandas"], [88, "area-plots-in-pandas"]], "Box plots in Pandas": [[48, "box-plots-in-pandas"], [88, "box-plots-in-pandas"]], "Pie charts in Pandas": [[48, "pie-charts-in-pandas"], [88, "pie-charts-in-pandas"]], "Density plots in Pandas": [[48, "density-plots-in-pandas"], [88, "density-plots-in-pandas"]], "Hexbin plots in Pandas": [[48, "hexbin-plots-in-pandas"], [88, "hexbin-plots-in-pandas"]], "Installing Visual Studio Code": [[89, "installing-visual-studio-code"], [191, "installing-visual-studio-code"]], "Installing the GitHub CLI for Windows": [[89, "installing-the-github-cli-for-windows"], [191, "installing-the-github-cli-for-windows"]], "Video": [[90, "video"], [192, "video"]], "Transcript Introduction": [[90, "transcript-introduction"], [192, "transcript-introduction"]], "Overview of What We\u2019ll Be Doing": [[90, "overview-of-what-we-ll-be-doing"], [192, "overview-of-what-we-ll-be-doing"]], "Installing Windows Terminal": [[90, "installing-windows-terminal"], [192, "installing-windows-terminal"]], "Installing Python for Windows": [[90, "installing-python-for-windows"], [192, "installing-python-for-windows"]], "Validating the Python Install": [[90, "validating-the-python-install"], [192, "validating-the-python-install"]], "Installing Git for Windows": [[90, "installing-git-for-windows"], [192, "installing-git-for-windows"]], "Making Windows Terminal Use Git Bash By Default": [[90, "making-windows-terminal-use-git-bash-by-default"], [192, "making-windows-terminal-use-git-bash-by-default"]], "Conclusion of Part 1": [[90, "conclusion-of-part-1"], [192, "conclusion-of-part-1"]], "My Pyenv Story - A Cleaner Personal Workflow": [[91, "my-pyenv-story-a-cleaner-personal-workflow"], [193, "my-pyenv-story-a-cleaner-personal-workflow"]], "Using Pyenv on a Team": [[91, "using-pyenv-on-a-team"], [193, "using-pyenv-on-a-team"]], "Enough Motivation \u2013 Let\u2019s Begin the Installation": [[91, "enough-motivation-let-s-begin-the-installation"], [193, "enough-motivation-let-s-begin-the-installation"]], "Getting Started With Pyenv": [[91, "getting-started-with-pyenv"], [193, "getting-started-with-pyenv"]], "Setting a Python Version Using Pyenv": [[91, "setting-a-python-version-using-pyenv"], [193, "setting-a-python-version-using-pyenv"]], "Setting a Global Default": [[91, "setting-a-global-default"], [193, "setting-a-global-default"]], "Using Pyenv With Pip": [[91, "using-pyenv-with-pip"], [193, "using-pyenv-with-pip"]], "More Basic Pyenv Commands": [[91, "more-basic-pyenv-commands"], [193, "more-basic-pyenv-commands"]], "Should You Do Other \u201cCleanup\u201d Steps?": [[91, "should-you-do-other-cleanup-steps"], [193, "should-you-do-other-cleanup-steps"]], "Getting Started With Sage": [[92, "getting-started-with-sage"], [194, "getting-started-with-sage"]], "Running Sage Online": [[92, "running-sage-online"], [194, "running-sage-online"]], "Installing Sage Math On Your Machine": [[92, "installing-sage-math-on-your-machine"], [194, "installing-sage-math-on-your-machine"]], "Sage Is \u201cPython With a Twist\u201d": [[92, "sage-is-python-with-a-twist"], [194, "sage-is-python-with-a-twist"]], "How Sage Is Different From Python": [[92, "how-sage-is-different-from-python"], [194, "how-sage-is-different-from-python"]], "How Sage And Python Are The Same": [[92, "how-sage-and-python-are-the-same"], [194, "how-sage-and-python-are-the-same"]], "The Answers": [[93, "the-answers"], [195, "the-answers"]], "Python IDEs and Managing Python Versions": [[93, "python-ides-and-managing-python-versions"], [195, "python-ides-and-managing-python-versions"]], "Top IDEs for Beginners": [[93, "top-ides-for-beginners"], [195, "top-ides-for-beginners"]], "Other Tools for Running and Developing in Python": [[93, "other-tools-for-running-and-developing-in-python"], [195, "other-tools-for-running-and-developing-in-python"]], "Notebook Style Tools for Data Science": [[93, "notebook-style-tools-for-data-science"], [195, "notebook-style-tools-for-data-science"]], "Python Testing Tools": [[93, "python-testing-tools"], [195, "python-testing-tools"]], "Python Tools for Data Science": [[93, "python-tools-for-data-science"], [195, "python-tools-for-data-science"]], "Python Scientific and Machine Learning Tools": [[93, "python-scientific-and-machine-learning-tools"], [195, "python-scientific-and-machine-learning-tools"]], "Tools for Cloud Computing": [[93, "tools-for-cloud-computing"], [195, "tools-for-cloud-computing"]], "Tools for Web Development": [[93, "tools-for-web-development"], [195, "tools-for-web-development"]], "Package Tools and Virtual Environments": [[93, "package-tools-and-virtual-environments"], [195, "package-tools-and-virtual-environments"]], "Python Tools for General Scripting and Automation": [[93, "python-tools-for-general-scripting-and-automation"], [195, "python-tools-for-general-scripting-and-automation"]], "Python vs. Java Performance: Long Running Speed vs Cold Start": [[94, "python-vs-java-performance-long-running-speed-vs-cold-start"], [196, "python-vs-java-performance-long-running-speed-vs-cold-start"]], "Development Speed vs Runtime Speed": [[94, "development-speed-vs-runtime-speed"], [196, "development-speed-vs-runtime-speed"]], "Python Is an \u201cInterpreted\u201d Language": [[94, "python-is-an-interpreted-language"], [196, "python-is-an-interpreted-language"]], "Python and the GIL": [[94, "python-and-the-gil"], [196, "python-and-the-gil"]], "Library Selection and Other Self-Inflicted Wounds": [[94, "library-selection-and-other-self-inflicted-wounds"], [196, "library-selection-and-other-self-inflicted-wounds"]], "Future Improvements": [[94, "future-improvements"], [196, "future-improvements"]], "Julia Easily Integrates With Jupyter Notebook": [[95, "julia-easily-integrates-with-jupyter-notebook"], [197, "julia-easily-integrates-with-jupyter-notebook"]], "Julia List Comprehensions Work Like Python\u2019s": [[95, "julia-list-comprehensions-work-like-python-s"], [197, "julia-list-comprehensions-work-like-python-s"]], "Julia Manages Packages and Environments Better": [[95, "julia-manages-packages-and-environments-better"], [197, "julia-manages-packages-and-environments-better"]], "Like Python, Julia Features DataFrames": [[95, "like-python-julia-features-dataframes"], [197, "like-python-julia-features-dataframes"]], "Subsets of Data in Julia Are Similar To Pandas": [[95, "subsets-of-data-in-julia-are-similar-to-pandas"], [197, "subsets-of-data-in-julia-are-similar-to-pandas"]], "Julia Packages Can Be Added in Code": [[95, "julia-packages-can-be-added-in-code"], [197, "julia-packages-can-be-added-in-code"]], "Julia\u2019s Query Tool Simplifies Querying DataFrames": [[95, "julia-s-query-tool-simplifies-querying-dataframes"], [197, "julia-s-query-tool-simplifies-querying-dataframes"]], "Julia Slicing Ranges Differ from Python\u2019s": [[95, "julia-slicing-ranges-differ-from-python-s"], [197, "julia-slicing-ranges-differ-from-python-s"]], "Julia\u2019s Query Package is Easy to Grasp": [[95, "julia-s-query-package-is-easy-to-grasp"], [197, "julia-s-query-package-is-easy-to-grasp"]], "Transforming Rows into Columns in Julia": [[95, "transforming-rows-into-columns-in-julia"], [197, "transforming-rows-into-columns-in-julia"]], "Plotting Data In Julia is Straightforward": [[95, "plotting-data-in-julia-is-straightforward"], [197, "plotting-data-in-julia-is-straightforward"]], "Julia Is Faster Than Python": [[95, "julia-is-faster-than-python"], [197, "julia-is-faster-than-python"]], "Julia From Python Can Be Done Incrementally": [[95, "julia-from-python-can-be-done-incrementally"], [197, "julia-from-python-can-be-done-incrementally"]], "Add Jupyter Notebook to Any Website": [[96, "add-jupyter-notebook-to-any-website"], [198, "add-jupyter-notebook-to-any-website"]], "Creating the JupyterLite Repository": [[96, "creating-the-jupyterlite-repository"], [198, "creating-the-jupyterlite-repository"]], "Serving JupyterLite from a Subdomain of Your Website": [[96, "serving-jupyterlite-from-a-subdomain-of-your-website"], [198, "serving-jupyterlite-from-a-subdomain-of-your-website"]], "Create the Subdomain in DNS": [[96, "create-the-subdomain-in-dns"], [198, "create-the-subdomain-in-dns"]], "Configuring Your Subdomain in GitHub Pages": [[96, "configuring-your-subdomain-in-github-pages"], [198, "configuring-your-subdomain-in-github-pages"]], "Making Changes and Basic Customizations": [[96, "making-changes-and-basic-customizations"], [198, "making-changes-and-basic-customizations"]], "Building and Serving JupyterLite Notebooks Locally": [[96, "building-and-serving-jupyterlite-notebooks-locally"], [198, "building-and-serving-jupyterlite-notebooks-locally"]], "Adding a Default Page": [[96, "adding-a-default-page"], [198, "adding-a-default-page"]], "Acknowledgments": [[96, "acknowledgments"], [198, "acknowledgments"]], "Part One: Up and Running": [[97, "part-one-up-and-running"], [199, "part-one-up-and-running"]], "Running Online With Colab": [[97, "running-online-with-colab"], [199, "running-online-with-colab"]], "Running Jupyter Lab Locally": [[97, "running-jupyter-lab-locally"], [199, "running-jupyter-lab-locally"]], "Part Two: Jupyter Notebook Questions and Answers": [[97, "part-two-jupyter-notebook-questions-and-answers"], [199, "part-two-jupyter-notebook-questions-and-answers"]], "Who Uses Jupyter Notebook?": [[97, "who-uses-jupyter-notebook"], [199, "who-uses-jupyter-notebook"]], "What are the Disadvanatages of Jupyter Notebooks": [[97, "what-are-the-disadvanatages-of-jupyter-notebooks"], [199, "what-are-the-disadvanatages-of-jupyter-notebooks"]], "What Languages Does Jupyter Support?": [[97, "what-languages-does-jupyter-support"], [199, "what-languages-does-jupyter-support"]], "Is Jupyter Notebook the Same As Anaconda?": [[97, "is-jupyter-notebook-the-same-as-anaconda"], [199, "is-jupyter-notebook-the-same-as-anaconda"]], "Is Jupyter Notebook an IDE?": [[97, "is-jupyter-notebook-an-ide"], [199, "is-jupyter-notebook-an-ide"]], "What is the Difference Between PyCharm and Jupyter?": [[97, "what-is-the-difference-between-pycharm-and-jupyter"], [199, "what-is-the-difference-between-pycharm-and-jupyter"]], "You Might Also Enjoy": [[97, "you-might-also-enjoy"], [199, "you-might-also-enjoy"]], "Jupyter Notebook Password or Jupyter Server Password?": [[98, "jupyter-notebook-password-or-jupyter-server-password"], [200, "jupyter-notebook-password-or-jupyter-server-password"]], "Setting the Password": [[98, "setting-the-password"], [200, "setting-the-password"]], "If You Forget The Password": [[98, "if-you-forget-the-password"], [200, "if-you-forget-the-password"]], "Removing The Password": [[98, "removing-the-password"], [200, "removing-the-password"]], "Intro to Kaggle and its Datasets": [[99, "intro-to-kaggle-and-its-datasets"], [201, "intro-to-kaggle-and-its-datasets"]], "Setting up the Kaggle API": [[99, "setting-up-the-kaggle-api"], [201, "setting-up-the-kaggle-api"]], "Downloading Kaggle Datasets Using the API": [[99, "downloading-kaggle-datasets-using-the-api"], [201, "downloading-kaggle-datasets-using-the-api"]], "Downloading Multiple Datasets at Once": [[99, "downloading-multiple-datasets-at-once"], [201, "downloading-multiple-datasets-at-once"]], "Using Kaggle Datasets in Various Cases": [[99, "using-kaggle-datasets-in-various-cases"], [201, "using-kaggle-datasets-in-various-cases"]], "Approaches to Optimizing DataFrame Load Times": [[100, "approaches-to-optimizing-dataframe-load-times"], [202, "approaches-to-optimizing-dataframe-load-times"]], "Setting Up Our Environment": [[100, "setting-up-our-environment"], [202, "setting-up-our-environment"]], "Polars: A Fast DataFrame implementation with a Slick API": [[100, "polars-a-fast-dataframe-implementation-with-a-slick-api"], [202, "polars-a-fast-dataframe-implementation-with-a-slick-api"]], "Large Data Sets With Alternate File Types": [[100, "large-data-sets-with-alternate-file-types"], [202, "large-data-sets-with-alternate-file-types"]], "Speeding Things Up With Lazy Mode": [[100, "speeding-things-up-with-lazy-mode"], [202, "speeding-things-up-with-lazy-mode"]], "Dask vs. Polars: Lazy Mode Showdown": [[100, "dask-vs-polars-lazy-mode-showdown"], [202, "dask-vs-polars-lazy-mode-showdown"]], "Lazy Loading of Rows in Dask": [[100, "lazy-loading-of-rows-in-dask"], [202, "lazy-loading-of-rows-in-dask"]], "Lazy Mode in Polars": [[100, "lazy-mode-in-polars"], [202, "lazy-mode-in-polars"]], "Python Programming for Beginners": [[101, "python-programming-for-beginners"], [203, "python-programming-for-beginners"]], "Tools and First Steps for Writing Python Code": [[101, "tools-and-first-steps-for-writing-python-code"], [203, "tools-and-first-steps-for-writing-python-code"]], "Python Beginner Tutorials and Exercises": [[101, "python-beginner-tutorials-and-exercises"], [203, "python-beginner-tutorials-and-exercises"]], "General Beginner Programming Topics": [[101, "general-beginner-programming-topics"], [203, "general-beginner-programming-topics"]], "Learn Python Data Science": [[101, "learn-python-data-science"], [203, "learn-python-data-science"]], "The Python Programming Language: Articles for The Intermediate and Experienced Programmer": [[101, "the-python-programming-language-articles-for-the-intermediate-and-experienced-programmer"], [203, "the-python-programming-language-articles-for-the-intermediate-and-experienced-programmer"]], "What is C++ and what are its uses": [[102, "what-is-c-and-what-are-its-uses"], [204, "what-is-c-and-what-are-its-uses"]], "What is Python and what are its uses": [[102, "what-is-python-and-what-are-its-uses"], [204, "what-is-python-and-what-are-its-uses"]], "What are the benefits of learning both C++ and Python": [[102, "what-are-the-benefits-of-learning-both-c-and-python"], [204, "what-are-the-benefits-of-learning-both-c-and-python"]], "The challenges of learning both C++ and Python": [[102, "the-challenges-of-learning-both-c-and-python"], [204, "the-challenges-of-learning-both-c-and-python"]], "Python or C++ First?": [[102, "python-or-c-first"], [204, "python-or-c-first"]], "Which Is Better To Learn C++ or Python?": [[102, "which-is-better-to-learn-c-or-python"], [204, "which-is-better-to-learn-c-or-python"]], "Integrating C++ and Python": [[102, "integrating-c-and-python"], [204, "integrating-c-and-python"]], "Background": [[102, "background"], [204, "background"]], "C Extension Modules": [[102, "c-extension-modules"], [204, "c-extension-modules"]], "Cython": [[102, "cython"], [204, "cython"]], "NumPy": [[102, "numpy"], [204, "numpy"]], "6. Where to learn more": [[102, "where-to-learn-more"], [204, "where-to-learn-more"]], "Git and GitHub: What\u2019s The Difference?": [[103, "git-and-github-what-s-the-difference"], [205, "git-and-github-what-s-the-difference"]], "Should You Learn Git As a Beginner?": [[103, "should-you-learn-git-as-a-beginner"], [205, "should-you-learn-git-as-a-beginner"]], "The Path Ahead: Learn Git In Two Parts": [[103, "the-path-ahead-learn-git-in-two-parts"], [205, "the-path-ahead-learn-git-in-two-parts"]], "Part I: Coding in Public as an Individual": [[103, "part-i-coding-in-public-as-an-individual"], [205, "part-i-coding-in-public-as-an-individual"]], "Part II: Working in Git as Part of a Team": [[103, "part-ii-working-in-git-as-part-of-a-team"], [205, "part-ii-working-in-git-as-part-of-a-team"]], "How to Make a Start": [[103, "how-to-make-a-start"], [205, "how-to-make-a-start"]], "Take Home Coding Problem Checklist": [[104, "take-home-coding-problem-checklist"], [206, "take-home-coding-problem-checklist"]], "Plotting a Line in Matplotlib": [[105, "plotting-a-line-in-matplotlib"], [223, "plotting-a-line-in-matplotlib"]], "A Non-Linear Plot in Matplotlib": [[105, "a-non-linear-plot-in-matplotlib"], [223, "a-non-linear-plot-in-matplotlib"]], "Comparing Matplotlib and Seaborn": [[106, "comparing-matplotlib-and-seaborn"], [224, "comparing-matplotlib-and-seaborn"]], "Basic Plots in Matplotlib vs. Seaborn": [[106, "basic-plots-in-matplotlib-vs-seaborn"], [224, "basic-plots-in-matplotlib-vs-seaborn"]], "Scatter Plots": [[106, "scatter-plots"], [224, "scatter-plots"]], "Line Graphs": [[106, "line-graphs"], [224, "line-graphs"]], "Histogram Plots": [[106, "histogram-plots"], [224, "histogram-plots"]], "Box Plots": [[106, "box-plots"], [224, "box-plots"]], "Violin Plots": [[106, "violin-plots"], [224, "violin-plots"]], "Bar Plots": [[106, "bar-plots"], [224, "bar-plots"]], "Creating Legends": [[106, "creating-legends"], [224, "creating-legends"]], "You Might Also Like": [[106, "you-might-also-like"], [224, "you-might-also-like"]], "What We Know": [[108, "what-we-know"], [227, "what-we-know"]], "What Will It Be About?": [[108, "what-will-it-be-about"], [227, "what-will-it-be-about"]], "Great Introductory Pricing": [[108, "great-introductory-pricing"], [227, "great-introductory-pricing"]], "When Will It Be Ready?": [[108, "when-will-it-be-ready"], [227, "when-will-it-be-ready"]], "The Coop Bootcamp option": [[108, "the-coop-bootcamp-option"], [227, "the-coop-bootcamp-option"]], "What We Don\u2019t Know": [[108, "what-we-don-t-know"], [227, "what-we-don-t-know"]], "Cool Stuff Around The Web": [[109, "cool-stuff-around-the-web"], [228, "cool-stuff-around-the-web"]], "New Tricks, New Traps, and Coming Soon": [[109, "new-tricks-new-traps-and-coming-soon"], [228, "new-tricks-new-traps-and-coming-soon"]], "What\u2019s New On CodeSolid": [[110, "whats-new-on-codesolid"], [229, "whats-new-on-codesolid"]], "A Shout-Out to a Popular Article": [[110, "a-shout-out-to-a-popular-article"], [229, "a-shout-out-to-a-popular-article"]], "Postgres Docker / Client on the Host": [[112, "postgres-docker-client-on-the-host"], [231, "postgres-docker-client-on-the-host"]], "Finding the Solutions": [[113, "finding-the-solutions"], [232, "finding-the-solutions"]], "Creating Simple One-Dimensional NumPy Arrays": [[113, "creating-simple-one-dimensional-numpy-arrays"], [232, "creating-simple-one-dimensional-numpy-arrays"]], "Creating and Using Multidimensional Arrays": [[113, "creating-and-using-multidimensional-arrays"], [232, "creating-and-using-multidimensional-arrays"]], "Indexing and Slicing Two-Dimensional Arrays": [[113, "indexing-and-slicing-two-dimensional-arrays"], [232, "indexing-and-slicing-two-dimensional-arrays"]], "Vectorized Operations": [[113, "vectorized-operations"], [232, "vectorized-operations"]], "Working with Files": [[113, "working-with-files"], [232, "working-with-files"]], "NumPy String Functions": [[113, "numpy-string-functions"], [232, "numpy-string-functions"]], "Is This Trip Necessary?": [[114, "is-this-trip-necessary"], [233, "is-this-trip-necessary"]], "Some Preliminaries": [[114, "some-preliminaries"], [233, "some-preliminaries"]], "Program Design": [[114, "program-design"], [233, "program-design"]], "Benchmarking the Two Versions": [[114, "benchmarking-the-two-versions"], [233, "benchmarking-the-two-versions"]], "Contents": [[115, "contents"], [234, "contents"]], "What is The Pandas Groupby Function?": [[115, "what-is-the-pandas-groupby-function"], [234, "what-is-the-pandas-groupby-function"]], "Sample Data We\u2019ll Be Using": [[115, "sample-data-we-ll-be-using"], [234, "sample-data-we-ll-be-using"]], "Splitting Data into Groups Using Pandas Groupby": [[115, "splitting-data-into-groups-using-pandas-groupby"], [234, "splitting-data-into-groups-using-pandas-groupby"]], "Creating a Group Based on One Column": [[115, "creating-a-group-based-on-one-column"], [234, "creating-a-group-based-on-one-column"]], "Creating Groups Based on Two Columns": [[115, "creating-groups-based-on-two-columns"], [234, "creating-groups-based-on-two-columns"]], "Grouping By Three Columns": [[115, "grouping-by-three-columns"], [234, "grouping-by-three-columns"]], "Getting a Specific Group": [[115, "getting-a-specific-group"], [234, "getting-a-specific-group"]], "Pandas Groupby Output Format": [[115, "pandas-groupby-output-format"], [234, "pandas-groupby-output-format"]], "Iterating Through Groups in Pandas Groupby": [[115, "iterating-through-groups-in-pandas-groupby"], [234, "iterating-through-groups-in-pandas-groupby"]], "Finding the Percentage of Grouped Data": [[115, "finding-the-percentage-of-grouped-data"], [234, "finding-the-percentage-of-grouped-data"]], "Different Built-in Functions": [[115, "different-built-in-functions"], [234, "different-built-in-functions"]], "Aggregation": [[115, "aggregation"], [234, "aggregation"]], "Filtering": [[115, "filtering"], [234, "filtering"]], "Transformation": [[115, "transformation"], [234, "transformation"]], "Apply": [[115, "apply"], [234, "apply"]], "Saving Grouped Pandas DataFrame in Different Formats": [[115, "saving-grouped-pandas-dataframe-in-different-formats"], [234, "saving-grouped-pandas-dataframe-in-different-formats"]], "Saving a Pandas DataFrame As a CSV File": [[115, "saving-a-pandas-dataframe-as-a-csv-file"], [234, "saving-a-pandas-dataframe-as-a-csv-file"]], "Saving Pandas DataFrame as an Excel file": [[115, "saving-pandas-dataframe-as-an-excel-file"], [234, "saving-pandas-dataframe-as-an-excel-file"]], "Part One: Examples": [[116, "part-one-examples"], [235, "part-one-examples"]], "Getting Started": [[116, "getting-started"], [175, "getting-started"], [235, "getting-started"], [304, "getting-started"]], "The Series Class": [[116, "the-series-class"], [235, "the-series-class"]], "The DataFrame Class": [[116, "the-dataframe-class"], [235, "the-dataframe-class"]], "Working With Sample Seaborn Data Sets": [[116, "working-with-sample-seaborn-data-sets"], [235, "working-with-sample-seaborn-data-sets"]], "Selecting Rows and Columns": [[116, "selecting-rows-and-columns"], [235, "selecting-rows-and-columns"]], "Part Two: Pandas Review Questions": [[116, "part-two-pandas-review-questions"], [235, "part-two-pandas-review-questions"]], "Creating A Pandas DataFrame and Using Sample Data Sets": [[116, "creating-a-pandas-dataframe-and-using-sample-data-sets"], [235, "creating-a-pandas-dataframe-and-using-sample-data-sets"]], "Loading Data From CSV": [[116, "loading-data-from-csv"], [235, "loading-data-from-csv"]], "Basic Operations on Data": [[116, "basic-operations-on-data"], [235, "basic-operations-on-data"]], "Selecting Rows, Columns, and Cells": [[116, "selecting-rows-columns-and-cells"], [235, "selecting-rows-columns-and-cells"]], "Some Exercises Using Time Series": [[116, "some-exercises-using-time-series"], [235, "some-exercises-using-time-series"]], "What is pip?": [[117, "what-is-pip"], [236, "what-is-pip"]], "Installing pip on Windows": [[117, "installing-pip-on-windows"], [236, "installing-pip-on-windows"]], "Prerequisites:": [[117, "prerequisites"], [236, "prerequisites"]], "Install pip on your PC:": [[117, "install-pip-on-your-pc"], [236, "install-pip-on-your-pc"]], "Step 1. Getting the get-pip.py file": [[117, "step-1-getting-the-get-pip-py-file"], [236, "step-1-getting-the-get-pip-py-file"]], "Step 2: Running get-pip.py": [[117, "step-2-running-get-pip-py"], [236, "step-2-running-get-pip-py"]], "Step-3: Validating the Installation": [[117, "step-3-validating-the-installation"], [236, "step-3-validating-the-installation"]], "Step 4: Adding pip to the system PATH": [[117, "step-4-adding-pip-to-the-system-path"], [236, "step-4-adding-pip-to-the-system-path"]], "What is Virtualenv?": [[117, "what-is-virtualenv"], [236, "what-is-virtualenv"]], "What is conda?": [[117, "what-is-conda"], [236, "what-is-conda"]], "Why Should You Use Conda?": [[117, "why-should-you-use-conda"], [236, "why-should-you-use-conda"]], "What is miniconda?": [[117, "what-is-miniconda"], [236, "what-is-miniconda"]], "What is Anaconda?": [[117, "what-is-anaconda"], [236, "what-is-anaconda"]], "Conda vs. Miniconda vs. Anaconda": [[117, "conda-vs-miniconda-vs-anaconda"], [236, "conda-vs-miniconda-vs-anaconda"]], "Conda vs Pip": [[117, "conda-vs-pip"], [236, "conda-vs-pip"]], "Getting Started with Pip and Virtual Environments": [[118, "getting-started-with-pip-and-virtual-environments"], [237, "getting-started-with-pip-and-virtual-environments"]], "Your First Virtual Environment in Under Five Minutes": [[118, "your-first-virtual-environment-in-under-five-minutes"], [237, "your-first-virtual-environment-in-under-five-minutes"]], "Using Pip to Install Packages Into a Virtual Environment": [[118, "using-pip-to-install-packages-into-a-virtual-environment"], [237, "using-pip-to-install-packages-into-a-virtual-environment"]], "Testing the Pip Install Results": [[118, "testing-the-pip-install-results"], [237, "testing-the-pip-install-results"]], "How to Use \u201crequirements.txt\u201d": [[118, "how-to-use-requirements-txt"], [237, "how-to-use-requirements-txt"]], "Creating requirements.txt and Using Pinned Requirements": [[118, "creating-requirements-txt-and-using-pinned-requirements"], [237, "creating-requirements-txt-and-using-pinned-requirements"]], "Should You Create requirements.txt Using Pip Freeze?": [[118, "should-you-create-requirements-txt-using-pip-freeze"], [237, "should-you-create-requirements-txt-using-pip-freeze"]], "Problems that Pipenv Tries to Solve": [[118, "problems-that-pipenv-tries-to-solve"], [237, "problems-that-pipenv-tries-to-solve"]], "Pip-tools vs Pipenv": [[118, "pip-tools-vs-pipenv"], [237, "pip-tools-vs-pipenv"]], "Vexed by Vectors": [[119, "vexed-by-vectors"], [238, "vexed-by-vectors"]], "Soothed by Scalars": [[119, "soothed-by-scalars"], [238, "soothed-by-scalars"]], "You\u2019re About to Enter Another Dimension": [[119, "you-re-about-to-enter-another-dimension"], [238, "you-re-about-to-enter-another-dimension"]], "Bonus Prize, Wherein I Reconcile Science and Religion": [[119, "bonus-prize-wherein-i-reconcile-science-and-religion"], [238, "bonus-prize-wherein-i-reconcile-science-and-religion"]], "Overview": [[120, "overview"], [218, "overview"], [239, "overview"]], "Which Is the Better Beginner IDE for Python?": [[120, "which-is-the-better-beginner-ide-for-python"], [239, "which-is-the-better-beginner-ide-for-python"]], "Which is Better for General Editing Tasks?": [[120, "which-is-better-for-general-editing-tasks"], [239, "which-is-better-for-general-editing-tasks"]], "Which is Better for Remote Development?": [[120, "which-is-better-for-remote-development"], [239, "which-is-better-for-remote-development"]], "Which Has Better Support for Advanced Python Features?": [[120, "which-has-better-support-for-advanced-python-features"], [239, "which-has-better-support-for-advanced-python-features"]], "Which Has Better Support for Languages Other Than Python?": [[120, "which-has-better-support-for-languages-other-than-python"], [239, "which-has-better-support-for-languages-other-than-python"]], "Code Editors vs Heavyweight IDEs for Python": [[120, "code-editors-vs-heavyweight-ides-for-python"], [239, "code-editors-vs-heavyweight-ides-for-python"]], "Other Python Implementations": [[121, "other-python-implementations"], [240, "other-python-implementations"]], "A Simple Test Case": [[121, "a-simple-test-case"], [240, "a-simple-test-case"]], "PyPy First Impressions: Some Installation Issues": [[121, "pypy-first-impressions-some-installation-issues"], [240, "pypy-first-impressions-some-installation-issues"]], "Evaluating PyPy Performance": [[121, "evaluating-pypy-performance"], [240, "evaluating-pypy-performance"]], "Some Final Thoughts": [[121, "some-final-thoughts"], [240, "some-final-thoughts"]], "Getting Started: Basic Setup for the CDK for Python": [[122, "getting-started-basic-setup-for-the-cdk-for-python"], [241, "getting-started-basic-setup-for-the-cdk-for-python"]], "Using the Python CDK With Conda": [[122, "using-the-python-cdk-with-conda"], [241, "using-the-python-cdk-with-conda"]], "Using the CDK in a Python Virtual Environment": [[122, "using-the-cdk-in-a-python-virtual-environment"], [241, "using-the-cdk-in-a-python-virtual-environment"]], "Some Basic Definitions": [[123, "some-basic-definitions"], [242, "some-basic-definitions"]], "Creating a Lambda Function (Spoiler: It\u2019s Just a Function)": [[123, "creating-a-lambda-function-spoiler-it-s-just-a-function"], [242, "creating-a-lambda-function-spoiler-it-s-just-a-function"]], "Getting An AWS Account and Configuring the AWS CLI": [[123, "getting-an-aws-account-and-configuring-the-aws-cli"], [242, "getting-an-aws-account-and-configuring-the-aws-cli"]], "Publishing a Lambda Function from the AWS Console": [[123, "publishing-a-lambda-function-from-the-aws-console"], [242, "publishing-a-lambda-function-from-the-aws-console"]], "Publishing a Lambda Function Using the AWS CLI": [[123, "publishing-a-lambda-function-using-the-aws-cli"], [242, "publishing-a-lambda-function-using-the-aws-cli"]], "Calling a Lambda Function from the Command Line": [[123, "calling-a-lambda-function-from-the-command-line"], [242, "calling-a-lambda-function-from-the-command-line"]], "Getting Started with Boto3": [[123, "getting-started-with-boto3"], [242, "getting-started-with-boto3"]], "Using Boto3 in a Lambda Function": [[123, "using-boto3-in-a-lambda-function"], [242, "using-boto3-in-a-lambda-function"]], "Further Reading and Advanced Work": [[123, "further-reading-and-advanced-work"], [242, "further-reading-and-advanced-work"]], "Clearing a Roadblock": [[124, "clearing-a-roadblock"], [243, "clearing-a-roadblock"]], "Why A Coop Coding Boot Camp Is an Awesome Idea": [[125, "why-a-coop-coding-boot-camp-is-an-awesome-idea"], [244, "why-a-coop-coding-boot-camp-is-an-awesome-idea"]], "Using SymPy for Chemistry in Python": [[126, "using-sympy-for-chemistry-in-python"], [245, "using-sympy-for-chemistry-in-python"]], "Introducing ChemPy": [[126, "introducing-chempy"], [245, "introducing-chempy"]], "{\u2018CH4\u2019: 1, \u2018O2\u2019: 2}\n{\u2018CO2\u2019: 1, \u2018H2O\u2019: 2}": [[126, "ch4-1-o2-2-co2-1-h2o-2"], [245, "ch4-1-o2-2-co2-1-h2o-2"]], "Best Python Configuration Tools: An Overview": [[127, "best-python-configuration-tools-an-overview"], [246, "best-python-configuration-tools-an-overview"]], "Python Dictionaries: A Common Structure": [[127, "python-dictionaries-a-common-structure"], [246, "python-dictionaries-a-common-structure"]], "The Python Dictionary as a Configuration Option": [[127, "the-python-dictionary-as-a-configuration-option"], [246, "the-python-dictionary-as-a-configuration-option"]], "Python Built-in Configuration: ConfigParser": [[127, "python-built-in-configuration-configparser"], [246, "python-built-in-configuration-configparser"]], "Top Picks: Tomllib and Toml": [[127, "top-picks-tomllib-and-toml"], [246, "top-picks-tomllib-and-toml"]], "The Road Not Taken: JSON and YAML": [[127, "the-road-not-taken-json-and-yaml"], [246, "the-road-not-taken-json-and-yaml"]], "Installing the Tools for the Pandas Series": [[128, "installing-the-tools-for-the-pandas-series"], [247, "installing-the-tools-for-the-pandas-series"]], "Why A Data Analysis Starter Project?": [[128, "why-a-data-analysis-starter-project"], [247, "why-a-data-analysis-starter-project"]], "Installing the Project Tools": [[128, "installing-the-project-tools"], [247, "installing-the-project-tools"]], "Using Pip: (Recommended If You Have Python Installed)": [[128, "using-pip-recommended-if-you-have-python-installed"], [247, "using-pip-recommended-if-you-have-python-installed"]], "Using Conda": [[128, "using-conda"], [247, "using-conda"]], "Running and Using Jupyter Lab": [[128, "running-and-using-jupyter-lab"], [247, "running-and-using-jupyter-lab"]], "What\u2019s Included in the Starter Project": [[128, "what-s-included-in-the-starter-project"], [247, "what-s-included-in-the-starter-project"]], "Next Steps": [[128, "next-steps"], [247, "next-steps"]], "What is the Python Dataclass Decorator?": [[129, "what-is-the-python-dataclass-decorator"], [248, "what-is-the-python-dataclass-decorator"]], "Dataclass Example and Exploration Lab": [[129, "dataclass-example-and-exploration-lab"], [248, "dataclass-example-and-exploration-lab"]], "The Advantages of Dataclasses": [[129, "the-advantages-of-dataclasses"], [248, "the-advantages-of-dataclasses"]], "Python Dataclass Example: Class Definition": [[129, "python-dataclass-example-class-definition"], [248, "python-dataclass-example-class-definition"]], "Exploring Our Dataclass": [[129, "exploring-our-dataclass"], [248, "exploring-our-dataclass"]], "__repr__": [[129, "repr"], [248, "repr"]], "__eq__": [[129, "eq"], [248, "eq"]], "Dataclass Static Type Checking With MyPy": [[129, "dataclass-static-type-checking-with-mypy"], [248, "dataclass-static-type-checking-with-mypy"]], "Dataclasses And Python Structural Pattern Matching": [[129, "dataclasses-and-python-structural-pattern-matching"], [248, "dataclasses-and-python-structural-pattern-matching"]], "Overview and Example": [[129, "overview-and-example"], [248, "overview-and-example"]], "How Dataclasses Implement Pattern Matching": [[129, "how-dataclasses-implement-pattern-matching"], [248, "how-dataclasses-implement-pattern-matching"]], "Understanding and Using Data Class Default Values": [[129, "understanding-and-using-data-class-default-values"], [248, "understanding-and-using-data-class-default-values"]], "Dataclass vs. Namedtuple": [[129, "dataclass-vs-namedtuple"], [248, "dataclass-vs-namedtuple"]], "Dataclass Fields": [[129, "dataclass-fields"], [248, "dataclass-fields"]], "Simple Field Customization: Overriding a Default Value": [[129, "simple-field-customization-overriding-a-default-value"], [248, "simple-field-customization-overriding-a-default-value"]], "Post Init Processing": [[129, "post-init-processing"], [248, "post-init-processing"]], "Excluding Fields from Ordering": [[129, "excluding-fields-from-ordering"], [248, "excluding-fields-from-ordering"]], "Should I Use a Python Dataclass: Maintenance": [[129, "should-i-use-a-python-dataclass-maintenance"], [248, "should-i-use-a-python-dataclass-maintenance"]], "The DateTime Module: Basic Tasks": [[130, "the-datetime-module-basic-tasks"], [249, "the-datetime-module-basic-tasks"]], "How to Get the Current Time in Python": [[130, "how-to-get-the-current-time-in-python"], [249, "how-to-get-the-current-time-in-python"]], "How to Get the Current Date in Python": [[130, "how-to-get-the-current-date-in-python"], [249, "how-to-get-the-current-date-in-python"]], "The Python Datetime Module: A Closer Look": [[130, "the-python-datetime-module-a-closer-look"], [249, "the-python-datetime-module-a-closer-look"]], "Aware vs. Naive Datetimes": [[130, "aware-vs-naive-datetimes"], [249, "aware-vs-naive-datetimes"]], "How to Create Time Zone Aware Datetime and Time Instances": [[130, "how-to-create-time-zone-aware-datetime-and-time-instances"], [249, "how-to-create-time-zone-aware-datetime-and-time-instances"]], "Getting the System Time Zone": [[130, "getting-the-system-time-zone"], [249, "getting-the-system-time-zone"]], "Creating an Arbitrary Time Zone: The Zoneinfo Module": [[130, "creating-an-arbitrary-time-zone-the-zoneinfo-module"], [249, "creating-an-arbitrary-time-zone-the-zoneinfo-module"]], "Getting a Future Date or Past Date in Python": [[130, "getting-a-future-date-or-past-date-in-python"], [249, "getting-a-future-date-or-past-date-in-python"]], "Using a Date or Datetime Constructor": [[130, "using-a-date-or-datetime-constructor"], [249, "using-a-date-or-datetime-constructor"]], "Manipulating Dates and Times With Timedelta": [[130, "manipulating-dates-and-times-with-timedelta"], [249, "manipulating-dates-and-times-with-timedelta"]], "How to Add Days to a Date Object In Python": [[130, "how-to-add-days-to-a-date-object-in-python"], [249, "how-to-add-days-to-a-date-object-in-python"]], "Adding or Subtracting Time": [[130, "adding-or-subtracting-time"], [249, "adding-or-subtracting-time"]], "Finding the Difference Between Two Dates": [[130, "finding-the-difference-between-two-dates"], [249, "finding-the-difference-between-two-dates"]], "Calculate Remaining Days Until Christmas in Python": [[130, "calculate-remaining-days-until-christmas-in-python"], [249, "calculate-remaining-days-until-christmas-in-python"]], "Formatting and Parsing Dates and Times in Python": [[130, "formatting-and-parsing-dates-and-times-in-python"], [249, "formatting-and-parsing-dates-and-times-in-python"]], "Formatting Dates and Times with Strftime": [[130, "formatting-dates-and-times-with-strftime"], [249, "formatting-dates-and-times-with-strftime"]], "Strftime Formatting Codes Review": [[130, "strftime-formatting-codes-review"], [249, "strftime-formatting-codes-review"]], "Parsing Dates and Times with Strptime": [[130, "parsing-dates-and-times-with-strptime"], [249, "parsing-dates-and-times-with-strptime"]], "Saving and Parsing Dates in ISO 8601 Format": [[130, "saving-and-parsing-dates-in-iso-8601-format"], [249, "saving-and-parsing-dates-in-iso-8601-format"]], "Date and Time Related Standard Library Modules": [[130, "date-and-time-related-standard-library-modules"], [249, "date-and-time-related-standard-library-modules"]], "The Python Calendar Module": [[130, "the-python-calendar-module"], [249, "the-python-calendar-module"]], "The Python Time Module": [[130, "the-python-time-module"], [249, "the-python-time-module"]], "Dateutil: A Python Third-Party DateTime Library": [[130, "dateutil-a-python-third-party-datetime-library"], [249, "dateutil-a-python-third-party-datetime-library"]], "Dateutil\u2019s General Date and Time Parser Class": [[130, "dateutil-s-general-date-and-time-parser-class"], [249, "dateutil-s-general-date-and-time-parser-class"]], "Smart Relative Date/Time Offsets with Dateutil\u2019s Relativedelta": [[130, "smart-relative-date-time-offsets-with-dateutil-s-relativedelta"], [249, "smart-relative-date-time-offsets-with-dateutil-s-relativedelta"]], "Handling Recurring Events With Dateutil\u2019s Rrule (Recurrence Rule)": [[130, "handling-recurring-events-with-dateutil-s-rrule-recurrence-rule"], [249, "handling-recurring-events-with-dateutil-s-rrule-recurrence-rule"]], "Creating Python Dictionaries": [[131, "creating-python-dictionaries"], [250, "creating-python-dictionaries"]], "The Append Method in Python Dictionaries?": [[131, "the-append-method-in-python-dictionaries"], [250, "the-append-method-in-python-dictionaries"]], "A Less Common Way to Create a Dictionary": [[131, "a-less-common-way-to-create-a-dictionary"], [250, "a-less-common-way-to-create-a-dictionary"]], "Python Dictionaries vs. Python Lists": [[131, "python-dictionaries-vs-python-lists"], [250, "python-dictionaries-vs-python-lists"]], "Dealing With Missing Data": [[131, "dealing-with-missing-data"], [250, "dealing-with-missing-data"]], "Iterating Dictionaries": [[131, "iterating-dictionaries"], [250, "iterating-dictionaries"]], "Some Slightly More Advanced Dictionary Topics": [[131, "some-slightly-more-advanced-dictionary-topics"], [250, "some-slightly-more-advanced-dictionary-topics"]], "When To Use Python Defaultdict": [[131, "when-to-use-python-defaultdict"], [250, "when-to-use-python-defaultdict"]], "Dictionary Comprehensions": [[131, "dictionary-comprehensions"], [250, "dictionary-comprehensions"]], "Python Dictionary Exercises": [[131, "python-dictionary-exercises"], [250, "python-dictionary-exercises"]], "The Rationale: Using Sage With JupyterLab": [[132, "the-rationale-using-sage-with-jupyterlab"], [251, "the-rationale-using-sage-with-jupyterlab"]], "Creating and Building the Docker Image": [[132, "creating-and-building-the-docker-image"], [251, "creating-and-building-the-docker-image"]], "Running the Container": [[132, "running-the-container"], [251, "running-the-container"]], "Syntax Errors in Python": [[133, "syntax-errors-in-python"], [252, "syntax-errors-in-python"]], "Indentation Errors": [[133, "indentation-errors"], [252, "indentation-errors"]], "Exceptions, Errors, and Bugs": [[133, "exceptions-errors-and-bugs"], [252, "exceptions-errors-and-bugs"]], "Exceptions and Errors": [[133, "exceptions-and-errors"], [252, "exceptions-and-errors"]], "It\u2019s Not a Feature; It\u2019s a Bug": [[133, "it-s-not-a-feature-it-s-a-bug"], [252, "it-s-not-a-feature-it-s-a-bug"]], "Try Block Basics: Handling Exceptions in Python": [[133, "try-block-basics-handling-exceptions-in-python"], [252, "try-block-basics-handling-exceptions-in-python"]], "Handling Built-In Exceptions": [[133, "handling-built-in-exceptions"], [252, "handling-built-in-exceptions"]], "Handling Base Class Exception Types": [[133, "handling-base-class-exception-types"], [252, "handling-base-class-exception-types"]], "Handling Multiple Exception Types": [[133, "handling-multiple-exception-types"], [252, "handling-multiple-exception-types"]], "Handling Base Class Exceptions: A Caveat": [[133, "handling-base-class-exceptions-a-caveat"], [252, "handling-base-class-exceptions-a-caveat"]], "Raising Built-In and User-Defined Exceptions": [[133, "raising-built-in-and-user-defined-exceptions"], [252, "raising-built-in-and-user-defined-exceptions"]], "Python Error Handling: Do\u2019s and Don\u2019ts": [[133, "python-error-handling-do-s-and-don-ts"], [252, "python-error-handling-do-s-and-don-ts"]], "The PathLib Module: Defining the Path Structure": [[134, "the-pathlib-module-defining-the-path-structure"], [253, "the-pathlib-module-defining-the-path-structure"]], "Finding Files in the Current Directory": [[134, "finding-files-in-the-current-directory"], [253, "finding-files-in-the-current-directory"]], "Searching for Files Recursively in Python": [[134, "searching-for-files-recursively-in-python"], [253, "searching-for-files-recursively-in-python"]], "Finding a Single File Recursively": [[134, "finding-a-single-file-recursively"], [253, "finding-a-single-file-recursively"]], "Finding an Absolute Path": [[134, "finding-an-absolute-path"], [253, "finding-an-absolute-path"]], "Getting the Directory of the Currently Executing File": [[134, "getting-the-directory-of-the-currently-executing-file"], [253, "getting-the-directory-of-the-currently-executing-file"]], "Creating a File In the Same Directory As a Python File": [[134, "creating-a-file-in-the-same-directory-as-a-python-file"], [253, "creating-a-file-in-the-same-directory-as-a-python-file"]], "Yes, But Does the File Exist?": [[134, "yes-but-does-the-file-exist"], [253, "yes-but-does-the-file-exist"]], "Working with Files and Directories": [[134, "working-with-files-and-directories"], [253, "working-with-files-and-directories"]], "Example: Recursively Listing Files and Directories in Python:": [[134, "example-recursively-listing-files-and-directories-in-python"], [253, "example-recursively-listing-files-and-directories-in-python"]], "Finding Other Files and Directories": [[134, "finding-other-files-and-directories"], [253, "finding-other-files-and-directories"]], "Get the User\u2019s Home Directory in Python": [[134, "get-the-user-s-home-directory-in-python"], [253, "get-the-user-s-home-directory-in-python"]], "Getting the Current Working Directory": [[134, "getting-the-current-working-directory"], [253, "getting-the-current-working-directory"]], "Example: Creating a Directory in the User Home Directory in Python": [[134, "example-creating-a-directory-in-the-user-home-directory-in-python"], [253, "example-creating-a-directory-in-the-user-home-directory-in-python"]], "Finding Python Module Paths and Files": [[134, "finding-python-module-paths-and-files"], [253, "finding-python-module-paths-and-files"]], "Exploring the PYTHONPATH and sys.path Variables": [[134, "exploring-the-pythonpath-and-sys-path-variables"], [253, "exploring-the-pythonpath-and-sys-path-variables"]], "Finding the Filename from Which a Python Module Was Loaded": [[134, "finding-the-filename-from-which-a-python-module-was-loaded"], [253, "finding-the-filename-from-which-a-python-module-was-loaded"]], "Introduction: What is a For Loop In Python": [[135, "introduction-what-is-a-for-loop-in-python"], [254, "introduction-what-is-a-for-loop-in-python"]], "Python For Loop Syntax: Iterating Through a List": [[135, "python-for-loop-syntax-iterating-through-a-list"], [254, "python-for-loop-syntax-iterating-through-a-list"]], "A For Loop Best Practice": [[135, "a-for-loop-best-practice"], [254, "a-for-loop-best-practice"]], "Python For Loop Example: Building a List Using the Range Function": [[135, "python-for-loop-example-building-a-list-using-the-range-function"], [254, "python-for-loop-example-building-a-list-using-the-range-function"]], "For Loops vs. Comprehensions": [[135, "for-loops-vs-comprehensions"], [254, "for-loops-vs-comprehensions"]], "Using a For Loop With a Python Dictionary": [[135, "using-a-for-loop-with-a-python-dictionary"], [254, "using-a-for-loop-with-a-python-dictionary"]], "For Loops vs. While Loops": [[135, "for-loops-vs-while-loops"], [254, "for-loops-vs-while-loops"]], "Using the Enumerate Function": [[135, "using-the-enumerate-function"], [254, "using-the-enumerate-function"]], "For Loop Practice Exercises": [[135, "for-loop-practice-exercises"], [254, "for-loop-practice-exercises"]], "String Formatting for Beginners": [[136, "string-formatting-for-beginners"], [255, "string-formatting-for-beginners"]], "Beyond the Basics: The Format Method vs. F Strings": [[136, "beyond-the-basics-the-format-method-vs-f-strings"], [255, "beyond-the-basics-the-format-method-vs-f-strings"]], "Python F Strings": [[136, "python-f-strings"], [255, "python-f-strings"]], "str.format": [[136, "str-format"], [255, "str-format"]], "How to Format a String Using F-Strings": [[136, "how-to-format-a-string-using-f-strings"], [255, "how-to-format-a-string-using-f-strings"]], "Specifying How Many Decimals Are Displayed": [[136, "specifying-how-many-decimals-are-displayed"], [255, "specifying-how-many-decimals-are-displayed"]], "More Numbers Formatting: Octal, Hexadecimal, Binary": [[136, "more-numbers-formatting-octal-hexadecimal-binary"], [255, "more-numbers-formatting-octal-hexadecimal-binary"]], "Scientific Notation in Python: General Format vs. Exponent Format": [[136, "scientific-notation-in-python-general-format-vs-exponent-format"], [255, "scientific-notation-in-python-general-format-vs-exponent-format"]], "How to Automatically Add Commas To a Number": [[136, "how-to-automatically-add-commas-to-a-number"], [255, "how-to-automatically-add-commas-to-a-number"]], "\u201cIt Works On My Machine?\u201d": [[136, "it-works-on-my-machine"], [255, "it-works-on-my-machine"]], "How to Align Signed Numbers in Python": [[136, "how-to-align-signed-numbers-in-python"], [255, "how-to-align-signed-numbers-in-python"]], "Python String Alignment": [[136, "python-string-alignment"], [255, "python-string-alignment"]], "How to Format a String Using the Format Method": [[136, "how-to-format-a-string-using-the-format-method"], [255, "how-to-format-a-string-using-the-format-method"]], "Using an F String vs. the String Format Method": [[136, "using-an-f-string-vs-the-string-format-method"], [255, "using-an-f-string-vs-the-string-format-method"]], "What Is Old-Style String Formatting?": [[136, "what-is-old-style-string-formatting"], [255, "what-is-old-style-string-formatting"]], "Function Parameters and Arguments for Beginners": [[137, "function-parameters-and-arguments-for-beginners"], [256, "function-parameters-and-arguments-for-beginners"]], "Using Keyword Arguments Instead of Positional Arguments": [[137, "using-keyword-arguments-instead-of-positional-arguments"], [256, "using-keyword-arguments-instead-of-positional-arguments"]], "Type Hints": [[137, "type-hints"], [256, "type-hints"]], "Default Parameters": [[137, "default-parameters"], [172, "default-parameters"], [256, "default-parameters"], [301, "default-parameters"]], "Default Parameters Are Only Evaluated Once": [[137, "default-parameters-are-only-evaluated-once"], [256, "default-parameters-are-only-evaluated-once"]], "Using None as a Default Argument for Mutable Values": [[137, "using-none-as-a-default-argument-for-mutable-values"], [256, "using-none-as-a-default-argument-for-mutable-values"]], "Variable Parameters in Python: *args and **kwargs": [[137, "variable-parameters-in-python-args-and-kwargs"], [256, "variable-parameters-in-python-args-and-kwargs"]], "Variable Positional Arguments Only": [[137, "variable-positional-arguments-only"], [256, "variable-positional-arguments-only"]], "Calling Variable Positional Arguments with a List": [[137, "calling-variable-positional-arguments-with-a-list"], [256, "calling-variable-positional-arguments-with-a-list"]], "Variable Keyword Arguments": [[137, "variable-keyword-arguments"], [256, "variable-keyword-arguments"]], "Positional Arguments Still Come First": [[137, "positional-arguments-still-come-first"], [256, "positional-arguments-still-come-first"]], "Keyword-Only Parameters": [[137, "keyword-only-parameters"], [256, "keyword-only-parameters"]], "Keyword-Only Parameters Without Variable Positional Arguments": [[137, "keyword-only-parameters-without-variable-positional-arguments"], [256, "keyword-only-parameters-without-variable-positional-arguments"]], "Positional-only Parameters": [[137, "positional-only-parameters"], [256, "positional-only-parameters"]], "We\u2019ve Come Full Circle": [[137, "we-ve-come-full-circle"], [256, "we-ve-come-full-circle"]], "Resources": [[137, "resources"], [256, "resources"]], "Write Functions that Have a Single Responsibility": [[138, "write-functions-that-have-a-single-responsibility"], [257, "write-functions-that-have-a-single-responsibility"]], "Use Functions to Clarify Intent": [[138, "use-functions-to-clarify-intent"], [257, "use-functions-to-clarify-intent"]], "Choose Function and Parameter Names Carefully": [[138, "choose-function-and-parameter-names-carefully"], [257, "choose-function-and-parameter-names-carefully"]], "Document Function Parameters With Type Hints": [[138, "document-function-parameters-with-type-hints"], [257, "document-function-parameters-with-type-hints"]], "Use Docstrings to Further Document Functions": [[138, "use-docstrings-to-further-document-functions"], [257, "use-docstrings-to-further-document-functions"]], "Prefer Functions that Accept Basic Python Types": [[138, "prefer-functions-that-accept-basic-python-types"], [257, "prefer-functions-that-accept-basic-python-types"]], "Prefer Functions with No Side Effects": [[138, "prefer-functions-with-no-side-effects"], [257, "prefer-functions-with-no-side-effects"]], "Prefer Returning a Copy to Mutating a Parameter": [[138, "prefer-returning-a-copy-to-mutating-a-parameter"], [257, "prefer-returning-a-copy-to-mutating-a-parameter"]], "If You Do Mutate a Parameter, Make It Obvious": [[138, "if-you-do-mutate-a-parameter-make-it-obvious"], [257, "if-you-do-mutate-a-parameter-make-it-obvious"]], "Use Asserts to Document the Function Contract": [[138, "use-asserts-to-document-the-function-contract"], [257, "use-asserts-to-document-the-function-contract"]], "Closing Thoughts: Be Mindful of State": [[138, "closing-thoughts-be-mindful-of-state"], [257, "closing-thoughts-be-mindful-of-state"]], "A Draft Outline": [[140, "a-draft-outline"], [259, "a-draft-outline"]], "What are Python Generators?": [[141, "what-are-python-generators"], [260, "what-are-python-generators"]], "What are Python Generators Used For?": [[141, "what-are-python-generators-used-for"], [260, "what-are-python-generators-used-for"]], "Are Generators Faster Than Lists in Python?": [[141, "are-generators-faster-than-lists-in-python"], [260, "are-generators-faster-than-lists-in-python"]], "How Do I Write a Python Generator?": [[141, "how-do-i-write-a-python-generator"], [260, "how-do-i-write-a-python-generator"]], "What Is a Generator Function?": [[141, "what-is-a-generator-function"], [260, "what-is-a-generator-function"]], "How do Python Generators Work?": [[141, "how-do-python-generators-work"], [260, "how-do-python-generators-work"]], "What Is a Generator Expression?": [[141, "what-is-a-generator-expression"], [260, "what-is-a-generator-expression"]], "Can a Python Class Be a Generator?": [[141, "can-a-python-class-be-a-generator"], [260, "can-a-python-class-be-a-generator"]], "Why Does My Generator Only Work Once?": [[141, "why-does-my-generator-only-work-once"], [260, "why-does-my-generator-only-work-once"]], "What\u2019s the Equivalent of Iterable in Python?": [[141, "what-s-the-equivalent-of-iterable-in-python"], [260, "what-s-the-equivalent-of-iterable-in-python"]], "What Are the Advantages of Generators in Python?": [[141, "what-are-the-advantages-of-generators-in-python"], [260, "what-are-the-advantages-of-generators-in-python"]], "What Is an Asynchronous Generator?": [[141, "what-is-an-asynchronous-generator"], [260, "what-is-an-asynchronous-generator"]], "Approach: What The Course Suggests": [[142, "approach-what-the-course-suggests"], [261, "approach-what-the-course-suggests"]], "Picking the Right Beatles Song: Money Can\u2019t Buy Me Love": [[142, "picking-the-right-beatles-song-money-can-t-buy-me-love"], [261, "picking-the-right-beatles-song-money-can-t-buy-me-love"]], "How Hard Is It Anyway": [[142, "how-hard-is-it-anyway"], [261, "how-hard-is-it-anyway"]], "Simple Positive Indexing": [[143, "simple-positive-indexing"], [262, "simple-positive-indexing"]], "Negative Indexing In Python": [[143, "negative-indexing-in-python"], [262, "negative-indexing-in-python"]], "Getting an Index in a Python For Loop": [[143, "getting-an-index-in-a-python-for-loop"], [262, "getting-an-index-in-a-python-for-loop"]], "Python Slices: The Index on Steroids": [[143, "python-slices-the-index-on-steroids"], [262, "python-slices-the-index-on-steroids"]], "Assignment Behavior When Slicing": [[143, "assignment-behavior-when-slicing"], [262, "assignment-behavior-when-slicing"]], "Python Indexing and Slicing Exercises": [[143, "python-indexing-and-slicing-exercises"], [262, "python-indexing-and-slicing-exercises"]], "An Overview of the Python JSON Module": [[144, "an-overview-of-the-python-json-module"], [263, "an-overview-of-the-python-json-module"]], "The Easiest Way To Use JSON: The Python Dictionary Object": [[144, "the-easiest-way-to-use-json-the-python-dictionary-object"], [263, "the-easiest-way-to-use-json-the-python-dictionary-object"]], "Reading and Writing JSON files in Python": [[144, "reading-and-writing-json-files-in-python"], [263, "reading-and-writing-json-files-in-python"]], "Writing A Python Dictionary to a JSON File": [[144, "writing-a-python-dictionary-to-a-json-file"], [263, "writing-a-python-dictionary-to-a-json-file"]], "Reading A JSON File to a Python Dictionary": [[144, "reading-a-json-file-to-a-python-dictionary"], [263, "reading-a-json-file-to-a-python-dictionary"]], "Reading and Writing Custom Python Classes to JSON": [[144, "reading-and-writing-custom-python-classes-to-json"], [263, "reading-and-writing-custom-python-classes-to-json"]], "Serializing Python Classes To and From JSON Directly": [[144, "serializing-python-classes-to-and-from-json-directly"], [263, "serializing-python-classes-to-and-from-json-directly"]], "Discussion: to_json": [[144, "discussion-to-json"], [263, "discussion-to-json"]], "Discussion: from_json": [[144, "discussion-from-json"], [263, "discussion-from-json"]], "Using JSONEncoder and JSONDecoder to Serialize Python Classes": [[144, "using-jsonencoder-and-jsondecoder-to-serialize-python-classes"], [263, "using-jsonencoder-and-jsondecoder-to-serialize-python-classes"]], "Custom JSONEncoder and JSONDecoder Discussion": [[144, "custom-jsonencoder-and-jsondecoder-discussion"], [263, "custom-jsonencoder-and-jsondecoder-discussion"]], "Python Lists 101": [[146, "python-lists-101"], [265, "python-lists-101"]], "Python Arrays": [[146, "python-arrays"], [265, "python-arrays"]], "Arrays May Use Less Memory Than Lists": [[146, "arrays-may-use-less-memory-than-lists"], [265, "arrays-may-use-less-memory-than-lists"]], "Performance Timers: Array and List Loop Performance": [[146, "performance-timers-array-and-list-loop-performance"], [265, "performance-timers-array-and-list-loop-performance"]], "Tip: Use Arrays For Low Level Buffer Access": [[146, "tip-use-arrays-for-low-level-buffer-access"], [265, "tip-use-arrays-for-low-level-buffer-access"]], "NumPy Arrays and Performance": [[146, "numpy-arrays-and-performance"], [265, "numpy-arrays-and-performance"]], "Creating a list in Python": [[147, "creating-a-list-in-python"], [264, "creating-a-list-in-python"]], "Lists can contain items of any Python type": [[147, "lists-can-contain-items-of-any-python-type"], [264, "lists-can-contain-items-of-any-python-type"]], "Python Lists are Ordered": [[147, "python-lists-are-ordered"], [264, "python-lists-are-ordered"]], "Iterating a list with a for loop": [[147, "iterating-a-list-with-a-for-loop"], [264, "iterating-a-list-with-a-for-loop"]], "Modifying the List Elements": [[147, "modifying-the-list-elements"], [264, "modifying-the-list-elements"]], "Creating a List Dynamically - First Method (Loops)": [[147, "creating-a-list-dynamically-first-method-loops"], [264, "creating-a-list-dynamically-first-method-loops"]], "Creating A List Dynamically (List Comprehensions)": [[147, "creating-a-list-dynamically-list-comprehensions"], [264, "creating-a-list-dynamically-list-comprehensions"]], "Slicing": [[147, "slicing"], [264, "slicing"]], "Python List Exercises for Beginners": [[147, "python-list-exercises-for-beginners"], [264, "python-list-exercises-for-beginners"]], "NumPy Matrix Multiplication: Use @ or Matmul": [[148, "numpy-matrix-multiplication-use-or-matmul"], [266, "numpy-matrix-multiplication-use-or-matmul"]], "How to Multiply Matrices in SymPy": [[148, "how-to-multiply-matrices-in-sympy"], [266, "how-to-multiply-matrices-in-sympy"]], "The Math Behind Matrix Multiplication": [[148, "the-math-behind-matrix-multiplication"], [266, "the-math-behind-matrix-multiplication"]], "Matrix Multiplication is Not Commutative": [[148, "matrix-multiplication-is-not-commutative"], [266, "matrix-multiplication-is-not-commutative"]], "Matrix Dimensions": [[148, "matrix-dimensions"], [266, "matrix-dimensions"]], "Matrix Multiplication By Hand": [[148, "matrix-multiplication-by-hand"], [266, "matrix-multiplication-by-hand"]], "Don\u2019t Make This Mistake": [[148, "don-t-make-this-mistake"], [266, "don-t-make-this-mistake"]], "Python As a Matrix Exploration Tool": [[148, "python-as-a-matrix-exploration-tool"], [266, "python-as-a-matrix-exploration-tool"]], "Around the Python Interwebs": [[149, "around-the-python-interwebs"], [267, "around-the-python-interwebs"]], "New and Featured On CodeSolid": [[150, "new-and-featured-on-codesolid"], [268, "new-and-featured-on-codesolid"]], "Around the Web": [[150, "around-the-web"], [268, "around-the-web"]], "Setting Up Python Tests Independently of Code": [[151, "setting-up-python-tests-independently-of-code"], [269, "setting-up-python-tests-independently-of-code"]], "Showing How To Debug Python Containers": [[151, "showing-how-to-debug-python-containers"], [269, "showing-how-to-debug-python-containers"]], "Other Containers to Help With Postgres and Django Development": [[151, "other-containers-to-help-with-postgres-and-django-development"], [269, "other-containers-to-help-with-postgres-and-django-development"]], "Containers for Remote Shared Python Development Environments": [[151, "containers-for-remote-shared-python-development-environments"], [269, "containers-for-remote-shared-python-development-environments"]], "Interfacing Python and C++ or C": [[151, "interfacing-python-and-c-or-c"], [269, "interfacing-python-and-c-or-c"]], "Serverless C++? You Know You Want Some": [[151, "serverless-c-you-know-you-want-some"], [269, "serverless-c-you-know-you-want-some"]], "Operators in Python: An Overview": [[152, "operators-in-python-an-overview"], [270, "operators-in-python-an-overview"]], "Arithmetic Operators": [[152, "arithmetic-operators"], [270, "arithmetic-operators"]], "Python Arithmetic Operators Example": [[152, "python-arithmetic-operators-example"], [270, "python-arithmetic-operators-example"]], "What Does % Do in Python?": [[152, "what-does-do-in-python"], [270, "what-does-do-in-python"]], "Assignment Operators": [[152, "assignment-operators"], [270, "assignment-operators"]], "Simple Assignment": [[152, "simple-assignment"], [270, "simple-assignment"]], "Operator Precedence": [[152, "operator-precedence"], [270, "operator-precedence"]], "What Are Compound Assignment Operators in Python": [[152, "what-are-compound-assignment-operators-in-python"], [270, "what-are-compound-assignment-operators-in-python"]], "Assignment vs. Comparison: = vs. == in Python": [[152, "assignment-vs-comparison-vs-in-python"], [270, "assignment-vs-comparison-vs-in-python"]], "Python Identity Operators: Is and Is Not": [[152, "python-identity-operators-is-and-is-not"], [270, "python-identity-operators-is-and-is-not"]], "Logical Operators: Combining Boolean Expressions": [[152, "logical-operators-combining-boolean-expressions"], [270, "logical-operators-combining-boolean-expressions"]], "Python Operators that Short Circuit": [[152, "python-operators-that-short-circuit"], [270, "python-operators-that-short-circuit"]], "Logical Operators: Summary Truth Table": [[152, "logical-operators-summary-truth-table"], [270, "logical-operators-summary-truth-table"]], "Watch Out for These Common Short Circuit Traps": [[152, "watch-out-for-these-common-short-circuit-traps"], [270, "watch-out-for-these-common-short-circuit-traps"]], "Membership Operators": [[152, "membership-operators"], [270, "membership-operators"]], "What Does the In Operator Do In Python?": [[152, "what-does-the-in-operator-do-in-python"], [270, "what-does-the-in-operator-do-in-python"]], "Bitwise Operators": [[152, "bitwise-operators"], [270, "bitwise-operators"]], "Bitwise AND and OR": [[152, "bitwise-and-and-or"], [270, "bitwise-and-and-or"]], "Other Bitwise Operators": [[152, "other-bitwise-operators"], [270, "other-bitwise-operators"]], "Compound Bitwise Assignment Operators": [[152, "compound-bitwise-assignment-operators"], [270, "compound-bitwise-assignment-operators"]], "What Is the Python Walrus Operator?": [[152, "what-is-the-python-walrus-operator"], [270, "what-is-the-python-walrus-operator"]], "Creating a Virtual Environment": [[153, "creating-a-virtual-environment"], [271, "creating-a-virtual-environment"]], "Pyproject.toml": [[153, "pyproject-toml"], [271, "pyproject-toml"]], "Creating the Package": [[153, "creating-the-package"], [271, "creating-the-package"]], "Adding Some Tests": [[153, "adding-some-tests"], [271, "adding-some-tests"]], "Fixing Package Names": [[153, "fixing-package-names"], [271, "fixing-package-names"]], "Setuptools Configuration": [[153, "setuptools-configuration"], [271, "setuptools-configuration"]], "Building The Project": [[153, "building-the-project"], [271, "building-the-project"]], "Installing Our Setuptools Package With Pip": [[153, "installing-our-setuptools-package-with-pip"], [271, "installing-our-setuptools-package-with-pip"]], "Creating an Account on Pypi.org": [[153, "creating-an-account-on-pypi-org"], [271, "creating-an-account-on-pypi-org"]], "Publishing a Package to Pypi.org": [[153, "publishing-a-package-to-pypi-org"], [271, "publishing-a-package-to-pypi-org"]], "Modifying the Setuptools Configuration": [[153, "modifying-the-setuptools-configuration"], [271, "modifying-the-setuptools-configuration"]], "Additional Resources": [[153, "additional-resources"], [271, "additional-resources"]], "Why Testing Databases Is Hard": [[154, "why-testing-databases-is-hard"], [272, "why-testing-databases-is-hard"]], "Database Testing Mistakes": [[154, "database-testing-mistakes"], [272, "database-testing-mistakes"]], "Unit Testing Apples, Running Apples in Production": [[154, "unit-testing-apples-running-apples-in-production"], [272, "unit-testing-apples-running-apples-in-production"]], "Introduction: Why Is This a Series?": [[155, "introduction-why-is-this-a-series"], [273, "introduction-why-is-this-a-series"]], "The Plan": [[155, "the-plan"], [273, "the-plan"]], "Issue #1": [[155, "issue-1"], [273, "issue-1"]], "A Beginner Exercise": [[155, "a-beginner-exercise"], [273, "a-beginner-exercise"]], "An Intermediate / Advanced Exercise": [[155, "an-intermediate-advanced-exercise"], [273, "an-intermediate-advanced-exercise"]], "Seen Around The Web": [[155, "seen-around-the-web"], [273, "seen-around-the-web"]], "What Are You Working On?": [[155, "what-are-you-working-on"], [273, "what-are-you-working-on"]], "Arrow Tables vs. Pandas DataFrames": [[156, "arrow-tables-vs-pandas-dataframes"], [156, "id1"], [274, "arrow-tables-vs-pandas-dataframes"], [274, "id1"]], "Installing Using Pip or Conda": [[156, "installing-using-pip-or-conda"], [274, "installing-using-pip-or-conda"]], "Using Arrow With Pandas": [[156, "using-arrow-with-pandas"], [274, "using-arrow-with-pandas"]], "pyarrow.Table\npickup: timestamp[ns]\ndropoff: timestamp[ns]": [[156, "pyarrow-table-pickup-timestamp-ns-dropoff-timestamp-ns"], [274, "pyarrow-table-pickup-timestamp-ns-dropoff-timestamp-ns"]], "Parquet vs. Other Storage Formats for Pandas": [[156, "parquet-vs-other-storage-formats-for-pandas"], [274, "parquet-vs-other-storage-formats-for-pandas"]], "Closing Thoughts: PyArrow Beyond Pandas": [[156, "closing-thoughts-pyarrow-beyond-pandas"], [274, "closing-thoughts-pyarrow-beyond-pandas"]], "Is Python Good for Shell Scripting?": [[157, "is-python-good-for-shell-scripting"], [275, "is-python-good-for-shell-scripting"]], "The Strengths of Shell Scripts": [[157, "the-strengths-of-shell-scripts"], [275, "the-strengths-of-shell-scripts"]], "Python as a Shell Scripting Tool": [[157, "python-as-a-shell-scripting-tool"], [275, "python-as-a-shell-scripting-tool"]], "How can I Run Shell Commands from Python?": [[157, "how-can-i-run-shell-commands-from-python"], [275, "how-can-i-run-shell-commands-from-python"]], "The Top Nineteen Modules for Python Shell Programming": [[157, "the-top-nineteen-modules-for-python-shell-programming"], [275, "the-top-nineteen-modules-for-python-shell-programming"]], "The Subprocess Module: Run External Programs In Python": [[157, "the-subprocess-module-run-external-programs-in-python"], [275, "the-subprocess-module-run-external-programs-in-python"]], "Python\u2019s Subprocess Module: Basic Example": [[157, "python-s-subprocess-module-basic-example"], [275, "python-s-subprocess-module-basic-example"]], "Subprocess Run: Return Values and Error Handling": [[157, "subprocess-run-return-values-and-error-handling"], [275, "subprocess-run-return-values-and-error-handling"]], "Python Command-Line Tools That Work with Bash": [[157, "python-command-line-tools-that-work-with-bash"], [275, "python-command-line-tools-that-work-with-bash"]], "What Are Python Strings?": [[158, "what-are-python-strings"], [276, "what-are-python-strings"]], "How to Create Strings in Python?": [[158, "how-to-create-strings-in-python"], [276, "how-to-create-strings-in-python"]], "How to Access Characters in Python Strings?": [[158, "how-to-access-characters-in-python-strings"], [276, "how-to-access-characters-in-python-strings"]], "String Slicing": [[158, "string-slicing"], [276, "string-slicing"]], "How to Modify or Change a String in Python?": [[158, "how-to-modify-or-change-a-string-in-python"], [276, "how-to-modify-or-change-a-string-in-python"]], "String Operators in Python": [[158, "string-operators-in-python"], [276, "string-operators-in-python"]], "String formatting in Python": [[158, "string-formatting-in-python"], [276, "string-formatting-in-python"]], "f-strings": [[158, "f-strings"], [276, "f-strings"]], "Built-in Python String Functions": [[158, "built-in-python-string-functions"], [276, "built-in-python-string-functions"]], "Built-in Python String Methods": [[158, "built-in-python-string-methods"], [276, "built-in-python-string-methods"]], "If-Statements with Strings in Python": [[158, "if-statements-with-strings-in-python"], [276, "if-statements-with-strings-in-python"]], "Iterating Through Strings in Python": [[158, "iterating-through-strings-in-python"], [276, "iterating-through-strings-in-python"]], "Python String Exercises for Beginners": [[158, "python-string-exercises-for-beginners"], [276, "python-string-exercises-for-beginners"]], "Virtual Environment Commands (Mac and Linux)": [[159, "virtual-environment-commands-mac-and-linux"], [277, "virtual-environment-commands-mac-and-linux"]], "Virtual Environment Commands (Windows)": [[159, "virtual-environment-commands-windows"], [277, "virtual-environment-commands-windows"]], "See Also:": [[159, "see-also"], [277, "see-also"]], "Python and MATLAB (And Octave, Oh My!)": [[160, "python-and-matlab-and-octave-oh-my"], [278, "python-and-matlab-and-octave-oh-my"]], "MATLAB vs. Python Language Overview": [[160, "matlab-vs-python-language-overview"], [278, "matlab-vs-python-language-overview"]], "General Language Features": [[160, "general-language-features"], [278, "general-language-features"]], "MATLAB\u2019s Advantages Compared to Python": [[160, "matlab-s-advantages-compared-to-python"], [278, "matlab-s-advantages-compared-to-python"]], "Python\u2019s Advantages Compared to MATLAB": [[160, "python-s-advantages-compared-to-matlab"], [278, "python-s-advantages-compared-to-matlab"]], "Popularity": [[160, "popularity"], [278, "popularity"]], "Cost": [[160, "cost"], [278, "cost"]], "MATLAB\u2019s Live Editor vs. Python\u2019s Jupyter Lab": [[160, "matlab-s-live-editor-vs-python-s-jupyter-lab"], [278, "matlab-s-live-editor-vs-python-s-jupyter-lab"]], "MATLAB, Python, and Octave: Some Performance Benchmarks": [[160, "matlab-python-and-octave-some-performance-benchmarks"], [278, "matlab-python-and-octave-some-performance-benchmarks"]], "Closing Thoughts and Additional Resources": [[160, "closing-thoughts-and-additional-resources"], [278, "closing-thoughts-and-additional-resources"]], "Basic Features of The With Statement in Python": [[161, "basic-features-of-the-with-statement-in-python"], [279, "basic-features-of-the-with-statement-in-python"]], "Handling Exceptions In a With Statement Code Block": [[161, "handling-exceptions-in-a-with-statement-code-block"], [279, "handling-exceptions-in-a-with-statement-code-block"]], "Other Uses of the Context Manager in Python": [[161, "other-uses-of-the-context-manager-in-python"], [279, "other-uses-of-the-context-manager-in-python"]], "Managing Resources that Need to Be Closed": [[161, "managing-resources-that-need-to-be-closed"], [279, "managing-resources-that-need-to-be-closed"]], "Managing Locks in Multi-Threaded Code": [[161, "managing-locks-in-multi-threaded-code"], [279, "managing-locks-in-multi-threaded-code"]], "Temporarily Change a Thread-Local Context": [[161, "temporarily-change-a-thread-local-context"], [279, "temporarily-change-a-thread-local-context"]], "Adding Support for With to Your Classes With a Context Manager": [[161, "adding-support-for-with-to-your-classes-with-a-context-manager"], [279, "adding-support-for-with-to-your-classes-with-a-context-manager"]], "A Fully Worked Python Context Manager Example": [[161, "a-fully-worked-python-context-manager-example"], [279, "a-fully-worked-python-context-manager-example"]], "Using the Defaults With No Exceptions": [[161, "using-the-defaults-with-no-exceptions"], [279, "using-the-defaults-with-no-exceptions"]], "Python Context Managers Made Easy With Contextlib": [[161, "python-context-managers-made-easy-with-contextlib"], [279, "python-context-managers-made-easy-with-contextlib"]], "An Asynchronous Context Manager Example": [[161, "an-asynchronous-context-manager-example"], [279, "an-asynchronous-context-manager-example"]], "Other Contextlib Utilities": [[161, "other-contextlib-utilities"], [279, "other-contextlib-utilities"]], "Random vs. Pseudo-Random Values": [[162, "random-vs-pseudo-random-values"], [280, "random-vs-pseudo-random-values"]], "Random and Secrets: More Alike Than They Seem!": [[162, "random-and-secrets-more-alike-than-they-seem"], [280, "random-and-secrets-more-alike-than-they-seem"]], "The Random Module": [[162, "the-random-module"], [280, "the-random-module"]], "The Secrets Module": [[162, "the-secrets-module"], [280, "the-secrets-module"]], "Generating Random Numbers": [[162, "generating-random-numbers"], [280, "generating-random-numbers"]], "Randint and Randrange": [[162, "randint-and-randrange"], [280, "randint-and-randrange"]], "Generating Random Distributions": [[162, "generating-random-distributions"], [280, "generating-random-distributions"]], "Making Random Choices in Python": [[162, "making-random-choices-in-python"], [280, "making-random-choices-in-python"]], "How to Generate Random Strings With Python": [[162, "how-to-generate-random-strings-with-python"], [280, "how-to-generate-random-strings-with-python"]], "Secure Random Strings Using the Secrets Module": [[162, "secure-random-strings-using-the-secrets-module"], [280, "secure-random-strings-using-the-secrets-module"]], "Using UUIDs: Generating Values that are Random And Unique in Python": [[162, "using-uuids-generating-values-that-are-random-and-unique-in-python"], [280, "using-uuids-generating-values-that-are-random-and-unique-in-python"]], "Limits of C/C++ for Cross-Platform Development": [[164, "limits-of-c-c-for-cross-platform-development"], [286, "limits-of-c-c-for-cross-platform-development"]], "A Special Use Case": [[164, "a-special-use-case"], [286, "a-special-use-case"]], "First Steps: Building CMake from Source in Docker": [[164, "first-steps-building-cmake-from-source-in-docker"], [286, "first-steps-building-cmake-from-source-in-docker"]], "Isolating the Tutorial Source With a Multi-Stage Build": [[164, "isolating-the-tutorial-source-with-a-multi-stage-build"], [286, "isolating-the-tutorial-source-with-a-multi-stage-build"]], "Accessing the Tutorial from the Container and the Host": [[164, "accessing-the-tutorial-from-the-container-and-the-host"], [286, "accessing-the-tutorial-from-the-container-and-the-host"]], "Creating a Volume in a Local Directory and Mounting It": [[164, "creating-a-volume-in-a-local-directory-and-mounting-it"], [286, "creating-a-volume-in-a-local-directory-and-mounting-it"]], "Using VS Code\u2019s Dev Container Extension": [[164, "using-vs-code-s-dev-container-extension"], [286, "using-vs-code-s-dev-container-extension"]], "Why SymPy is Superior for Symbolic Math": [[165, "why-sympy-is-superior-for-symbolic-math"], [287, "why-sympy-is-superior-for-symbolic-math"]], "The Law of the Instrument, Revisited": [[165, "the-law-of-the-instrument-revisited"], [287, "the-law-of-the-instrument-revisited"]], "Why This Isn\u2019t An Anti-SciPy Post": [[165, "why-this-isn-t-an-anti-scipy-post"], [287, "why-this-isn-t-an-anti-scipy-post"]], "Introduction to Selecting Data in Pandas": [[166, "introduction-to-selecting-data-in-pandas"], [288, "introduction-to-selecting-data-in-pandas"]], "Using the [] Operator": [[166, "using-the-operator"], [288, "using-the-operator"]], "The iloc[] and loc[] methods": [[166, "the-iloc-and-loc-methods"], [288, "the-iloc-and-loc-methods"]], "Using boolean indexing": [[166, "using-boolean-indexing"], [288, "using-boolean-indexing"]], "The query() method for selecting data": [[166, "the-query-method-for-selecting-data"], [288, "the-query-method-for-selecting-data"]], "Using the at() and iat() methods for data selection": [[166, "using-the-at-and-iat-methods-for-data-selection"], [288, "using-the-at-and-iat-methods-for-data-selection"]], "Using the apply() method to select data": [[166, "using-the-apply-method-to-select-data"], [288, "using-the-apply-method-to-select-data"]], "Using the mask() method to select data": [[166, "using-the-mask-method-to-select-data"], [288, "using-the-mask-method-to-select-data"]], "SQL Databases as a \u201cStorage Medium\u201d": [[168, "sql-databases-as-a-storage-medium"], [296, "sql-databases-as-a-storage-medium"]], "SQL As a Query Language": [[168, "sql-as-a-query-language"], [296, "sql-as-a-query-language"]], "Pandas With SQL Option 1: PandasSQL": [[168, "pandas-with-sql-option-1-pandassql"], [296, "pandas-with-sql-option-1-pandassql"]], "Pandas With SQL Option 2: Using IPython-SQL and DuckDB": [[168, "pandas-with-sql-option-2-using-ipython-sql-and-duckdb"], [296, "pandas-with-sql-option-2-using-ipython-sql-and-duckdb"]], "Using DuckDB and Pandas: Conda or Pip": [[168, "using-duckdb-and-pandas-conda-or-pip"], [296, "using-duckdb-and-pandas-conda-or-pip"]], "Querying a Pandas DataFrame Using SQL with IPython-SQL and DuckDB": [[168, "querying-a-pandas-dataframe-using-sql-with-ipython-sql-and-duckdb"], [296, "querying-a-pandas-dataframe-using-sql-with-ipython-sql-and-duckdb"]], "Persisting DataFrames back to DuckDB.": [[168, "persisting-dataframes-back-to-duckdb"], [296, "persisting-dataframes-back-to-duckdb"]], "Closing Database Connections": [[168, "closing-database-connections"], [296, "closing-database-connections"]], "Python Dataclasses Overview": [[169, "python-dataclasses-overview"], [297, "python-dataclasses-overview"]], "SQLAlchemy Overview": [[169, "sqlalchemy-overview"], [297, "sqlalchemy-overview"]], "The Data for Our Example": [[169, "the-data-for-our-example"], [297, "the-data-for-our-example"]], "Creating the Basic SQLAlchemy Dataclasses": [[169, "creating-the-basic-sqlalchemy-dataclasses"], [297, "creating-the-basic-sqlalchemy-dataclasses"]], "Implementing a Many-to-Many Relationship": [[169, "implementing-a-many-to-many-relationship"], [297, "implementing-a-many-to-many-relationship"]], "Creating the Tables and Loading the Data": [[169, "creating-the-tables-and-loading-the-data"], [297, "creating-the-tables-and-loading-the-data"]], "SymPy Alternatives": [[170, "sympy-alternatives"], [298, "sympy-alternatives"]], "SymPy vs. SciPy": [[170, "sympy-vs-scipy"], [298, "sympy-vs-scipy"]], "SymPy vs. SageMath": [[170, "sympy-vs-sagemath"], [298, "sympy-vs-sagemath"]], "Using SymPy and Jupyter: A Quick Start Tutorial": [[170, "using-sympy-and-jupyter-a-quick-start-tutorial"], [298, "using-sympy-and-jupyter-a-quick-start-tutorial"]], "Installing SymPy": [[170, "installing-sympy"], [298, "installing-sympy"]], "SymPy First Steps": [[170, "sympy-first-steps"], [298, "sympy-first-steps"]], "Solving Equations and Working With Math Functions": [[170, "solving-equations-and-working-with-math-functions"], [298, "solving-equations-and-working-with-math-functions"]], "SymPy as a Python Graphing Calculator": [[170, "sympy-as-a-python-graphing-calculator"], [298, "sympy-as-a-python-graphing-calculator"]], "SymPy and LaTeX": [[170, "sympy-and-latex"], [298, "sympy-and-latex"]], "SymPy and LaTeX: A Caveat": [[170, "sympy-and-latex-a-caveat"], [298, "sympy-and-latex-a-caveat"]], "Python Calculus Made (Almost) Easy": [[170, "python-calculus-made-almost-easy"], [298, "python-calculus-made-almost-easy"]], "Limits": [[170, "limits"], [212, "limits"], [298, "limits"]], "Differentiation and Integration": [[170, "differentiation-and-integration"], [298, "differentiation-and-integration"]], "Companion Source": [[170, "companion-source"], [298, "companion-source"]], "What We Will Discuss": [[171, "what-we-will-discuss"], [299, "what-we-will-discuss"]], "Go Cheap or Go Home": [[171, "go-cheap-or-go-home"], [299, "go-cheap-or-go-home"]], "Taking Notes and Working Problems": [[171, "taking-notes-and-working-problems"], [299, "taking-notes-and-working-problems"]], "Free Online Math Courses and Resources": [[171, "free-online-math-courses-and-resources"], [299, "free-online-math-courses-and-resources"]], "Low-Cost Books for Mathematics Study": [[171, "low-cost-books-for-mathematics-study"], [299, "low-cost-books-for-mathematics-study"]], "Calculators and Software": [[171, "calculators-and-software"], [299, "calculators-and-software"]], "Learning Math At Any Age": [[171, "learning-math-at-any-age"], [299, "learning-math-at-any-age"]], "Learn Math At Any, Well, Anything": [[171, "learn-math-at-any-well-anything"], [299, "learn-math-at-any-well-anything"]], "\u201cBut I\u2019m Not Good At Math\u201d": [[171, "but-i-m-not-good-at-math"], [299, "but-i-m-not-good-at-math"]], "What Does Math Have To Do With Python?": [[171, "what-does-math-have-to-do-with-python"], [299, "what-does-math-have-to-do-with-python"]], "What You Need to Learn Anything": [[171, "what-you-need-to-learn-anything"], [299, "what-you-need-to-learn-anything"]], "What You Need To Learn Mathematics In Particular": [[171, "what-you-need-to-learn-mathematics-in-particular"], [299, "what-you-need-to-learn-mathematics-in-particular"]], "What Is a Function in Python?": [[172, "what-is-a-function-in-python"], [301, "what-is-a-function-in-python"]], "Python Functions: Some Examples": [[172, "python-functions-some-examples"], [301, "python-functions-some-examples"]], "Keyword Arguments and Positional Arguments": [[172, "keyword-arguments-and-positional-arguments"], [301, "keyword-arguments-and-positional-arguments"]], "Return Values": [[172, "return-values"], [301, "return-values"]], "Early Returns from a Function": [[172, "early-returns-from-a-function"], [301, "early-returns-from-a-function"]], "Multiple Return Values from a Python Function": [[172, "multiple-return-values-from-a-python-function"], [301, "multiple-return-values-from-a-python-function"]], "Functions with No Return Value": [[172, "functions-with-no-return-value"], [301, "functions-with-no-return-value"]], "Installing Thonny Could Not Be Simpler": [[174, "installing-thonny-could-not-be-simpler"], [303, "installing-thonny-could-not-be-simpler"]], "Installing Thonny on the Mac": [[174, "installing-thonny-on-the-mac"], [303, "installing-thonny-on-the-mac"]], "First Steps in the Thonny IDE": [[174, "first-steps-in-the-thonny-ide"], [303, "first-steps-in-the-thonny-ide"]], "Using The Thonny Debugger": [[174, "using-the-thonny-debugger"], [303, "using-the-thonny-debugger"]], "Hands-On With the Thonny Debugger": [[174, "hands-on-with-the-thonny-debugger"], [303, "hands-on-with-the-thonny-debugger"]], "Is Python Weakly-Typed?": [[175, "is-python-weakly-typed"], [304, "is-python-weakly-typed"]], "Weakly Typed vs. Dynamically Typed": [[175, "weakly-typed-vs-dynamically-typed"], [304, "weakly-typed-vs-dynamically-typed"]], "Behind the Scenes of Variable Assignment Using Python\u2019s Disassembler": [[175, "behind-the-scenes-of-variable-assignment-using-python-s-disassembler"], [304, "behind-the-scenes-of-variable-assignment-using-python-s-disassembler"]], "Exploring Python Variables and Types: A Guide for Beginners": [[175, "exploring-python-variables-and-types-a-guide-for-beginners"], [304, "exploring-python-variables-and-types-a-guide-for-beginners"]], "The Python Type Function: Displaying the Object Class of a Variable": [[175, "the-python-type-function-displaying-the-object-class-of-a-variable"], [304, "the-python-type-function-displaying-the-object-class-of-a-variable"]], "Listing the Available Functions in Python with Dir": [[175, "listing-the-available-functions-in-python-with-dir"], [304, "listing-the-available-functions-in-python-with-dir"]], "Getting Help: Reading the Function Documentation": [[175, "getting-help-reading-the-function-documentation"], [304, "getting-help-reading-the-function-documentation"]], "Python Type Hints: Making Types Explicit": [[175, "python-type-hints-making-types-explicit"], [304, "python-type-hints-making-types-explicit"]], "Why Python Introduced Type Hints": [[175, "why-python-introduced-type-hints"], [304, "why-python-introduced-type-hints"]], "Type Hint Typing Module and Basic Syntax": [[175, "type-hint-typing-module-and-basic-syntax"], [304, "type-hint-typing-module-and-basic-syntax"]], "Static Type Checking in Python": [[175, "static-type-checking-in-python"], [304, "static-type-checking-in-python"]], "Using MyPy for Static Type Checking": [[175, "using-mypy-for-static-type-checking"], [304, "using-mypy-for-static-type-checking"]], "Using MyPy with VS Code": [[175, "using-mypy-with-vs-code"], [304, "using-mypy-with-vs-code"]], "Using MyPy with Jupyter Notebook / Jupyter Lab": [[175, "using-mypy-with-jupyter-notebook-jupyter-lab"], [304, "using-mypy-with-jupyter-notebook-jupyter-lab"]], "Advanced Type Hints and the Python Typing Module": [[175, "advanced-type-hints-and-the-python-typing-module"], [304, "advanced-type-hints-and-the-python-typing-module"]], "Collections Types and Type Aliases": [[175, "collections-types-and-type-aliases"], [304, "collections-types-and-type-aliases"]], "Union Types": [[175, "union-types"], [304, "union-types"]], "Literal Types": [[175, "literal-types"], [304, "literal-types"]], "Where Are Python Collections Defined": [[176, "where-are-python-collections-defined"], [305, "where-are-python-collections-defined"]], "Saving Memory with Namedtuple": [[176, "saving-memory-with-namedtuple"], [305, "saving-memory-with-namedtuple"]], "Using Defaultdict to Gracefully Handle Missing Values": [[176, "using-defaultdict-to-gracefully-handle-missing-values"], [305, "using-defaultdict-to-gracefully-handle-missing-values"]], "The Python Queue Package Makes It Easy to Pass Values Between Threads": [[176, "the-python-queue-package-makes-it-easy-to-pass-values-between-threads"], [305, "the-python-queue-package-makes-it-easy-to-pass-values-between-threads"]], "Overridable Python Configuration With ChainMap": [[176, "overridable-python-configuration-with-chainmap"], [305, "overridable-python-configuration-with-chainmap"]], "Python Sets and Set Operations": [[176, "python-sets-and-set-operations"], [305, "python-sets-and-set-operations"]], "Most Useful Operations on Python Sets": [[176, "most-useful-operations-on-python-sets"], [305, "most-useful-operations-on-python-sets"]], "Mutable and Immutable Collections and Sequences in Python": [[176, "mutable-and-immutable-collections-and-sequences-in-python"], [305, "mutable-and-immutable-collections-and-sequences-in-python"]], "LaTeX in Jupyter Markdown": [[177, "latex-in-jupyter-markdown"], [306, "latex-in-jupyter-markdown"]], "Centering Math Output": [[177, "centering-math-output"], [306, "centering-math-output"]], "Left-Aligning and Inline LaTeX Blocks": [[177, "left-aligning-and-inline-latex-blocks"], [306, "left-aligning-and-inline-latex-blocks"]], "An Important Caveat: MathJax vs. LaTeX": [[177, "an-important-caveat-mathjax-vs-latex"], [306, "an-important-caveat-mathjax-vs-latex"]], "LaTeX Files in JupyterLab": [[177, "latex-files-in-jupyterlab"], [306, "latex-files-in-jupyterlab"]], "LaTeX in SageMath and SymPy": [[177, "latex-in-sagemath-and-sympy"], [306, "latex-in-sagemath-and-sympy"]], "Other Packages in Python": [[177, "other-packages-in-python"], [306, "other-packages-in-python"]], "Source Code and Additional Resources": [[177, "source-code-and-additional-resources"], [306, "source-code-and-additional-resources"]], "What We\u2019ll Cover": [[178, "what-we-ll-cover"], [307, "what-we-ll-cover"]], "What Is PySpark?": [[178, "what-is-pyspark"], [307, "what-is-pyspark"]], "Installing PySpark and JupyterLab": [[178, "installing-pyspark-and-jupyterlab"], [307, "installing-pyspark-and-jupyterlab"]], "Installing With Pip and Venv": [[178, "installing-with-pip-and-venv"], [307, "installing-with-pip-and-venv"]], "Installing with Conda": [[178, "installing-with-conda"], [307, "installing-with-conda"]], "Testing The Installation": [[178, "testing-the-installation"], [307, "testing-the-installation"]], "Reading Parquet Files in PySpark": [[178, "reading-parquet-files-in-pyspark"], [307, "reading-parquet-files-in-pyspark"]], "Using Spark\u2019s Read Method": [[178, "using-spark-s-read-method"], [307, "using-spark-s-read-method"]], "Querying a File with Spark SQL": [[178, "querying-a-file-with-spark-sql"], [307, "querying-a-file-with-spark-sql"]], "How To Improve PySpark\u2019s DataFrames Display": [[178, "how-to-improve-pyspark-s-dataframes-display"], [307, "how-to-improve-pyspark-s-dataframes-display"]], "Writing Parquet Files": [[178, "writing-parquet-files"], [307, "writing-parquet-files"]], "Partitioning Parquet Files": [[178, "partitioning-parquet-files"], [307, "partitioning-parquet-files"]], "Parquet vs. PySpark Tables": [[178, "parquet-vs-pyspark-tables"], [307, "parquet-vs-pyspark-tables"]], "Moving to TestNG from JUnit": [[179, "moving-to-testng-from-junit"], [308, "moving-to-testng-from-junit"]], "Setting Up The Maven Dependency for TestNG": [[179, "setting-up-the-maven-dependency-for-testng"], [308, "setting-up-the-maven-dependency-for-testng"]], "Simple AbstractTestNGSpringContextTests Test Examples": [[179, "simple-abstracttestngspringcontexttests-test-examples"], [308, "simple-abstracttestngspringcontexttests-test-examples"]], "Vagrant Up": [[180, "vagrant-up"], [309, "vagrant-up"]], "Why does Python Compile Files? Isn\u2019t It Interpreted?": [[181, "why-does-python-compile-files-isn-t-it-interpreted"], [310, "why-does-python-compile-files-isn-t-it-interpreted"]], "Ignoring Python Cache Files in Version Control": [[181, "ignoring-python-cache-files-in-version-control"], [310, "ignoring-python-cache-files-in-version-control"]], "Dealing With Existing Code Repositories": [[181, "dealing-with-existing-code-repositories"], [310, "dealing-with-existing-code-repositories"]], "How to Remove Cached Python Files Recursively": [[181, "how-to-remove-cached-python-files-recursively"], [310, "how-to-remove-cached-python-files-recursively"]], "What\u2019s the Difference Between a Python Package and a Module?": [[182, "what-s-the-difference-between-a-python-package-and-a-module"], [311, "what-s-the-difference-between-a-python-package-and-a-module"]], "How do I use the Import Statement in Python?": [[182, "how-do-i-use-the-import-statement-in-python"], [311, "how-do-i-use-the-import-statement-in-python"]], "Understanding ModuleNotFoundError": [[182, "understanding-modulenotfounderror"], [311, "understanding-modulenotfounderror"]], "How to Install Python Packages": [[182, "how-to-install-python-packages"], [311, "how-to-install-python-packages"]], "Making Sure Your Pip Version Is Correct": [[182, "making-sure-your-pip-version-is-correct"], [311, "making-sure-your-pip-version-is-correct"]], "How to Install Packages (The Right Way)": [[182, "how-to-install-packages-the-right-way"], [311, "how-to-install-packages-the-right-way"]], "1. Creating the Virtual Environment:": [[182, "creating-the-virtual-environment"], [311, "creating-the-virtual-environment"]], "2. Activating the Virtual Environment:": [[182, "activating-the-virtual-environment"], [311, "activating-the-virtual-environment"]], "3. Using the Virtual Environment:": [[182, "using-the-virtual-environment"], [311, "using-the-virtual-environment"]], "4. Deactivating the Virtual Environment:": [[182, "deactivating-the-virtual-environment"], [311, "deactivating-the-virtual-environment"]], "Dependency Hell \u2013 Why We Set Up Virtual Environments": [[182, "dependency-hell-why-we-set-up-virtual-environments"], [311, "dependency-hell-why-we-set-up-virtual-environments"]], "How Python Finds Packages": [[182, "how-python-finds-packages"], [311, "how-python-finds-packages"]], "Changing the Python Path and Controlling Where Pip Installs Packages (Case Study)": [[182, "changing-the-python-path-and-controlling-where-pip-installs-packages-case-study"], [311, "changing-the-python-path-and-controlling-where-pip-installs-packages-case-study"]], "How Do I Publish a Package in Python?": [[182, "how-do-i-publish-a-package-in-python"], [311, "how-do-i-publish-a-package-in-python"]], "Final Thoughts and Source Code": [[182, "final-thoughts-and-source-code"], [311, "final-thoughts-and-source-code"]], "Why Is Python Popular": [[184, "why-is-python-popular"]], "Ease Of Use: The Developer Is the User": [[184, "ease-of-use-the-developer-is-the-user"], [313, "ease-of-use-the-developer-is-the-user"]], "Readability": [[184, "readability"], [313, "readability"]], "NumPy and the Influence of the Scientific Community": [[184, "numpy-and-the-influence-of-the-scientific-community"], [313, "numpy-and-the-influence-of-the-scientific-community"]], "Other Important Use Cases": [[184, "other-important-use-cases"], [313, "other-important-use-cases"]], "Areas Where Python Is Not Popular": [[184, "areas-where-python-is-not-popular"], [313, "areas-where-python-is-not-popular"]], "To Apply / Learn More": [[185, "to-apply-learn-more"]], "Creating Custom Exceptions": [[186, "creating-custom-exceptions"], [315, "creating-custom-exceptions"]], "The Custom Exception Class": [[186, "the-custom-exception-class"], [315, "the-custom-exception-class"]], "Raising Custom Exceptions": [[186, "raising-custom-exceptions"], [315, "raising-custom-exceptions"]], "Further Customizing Exception Behavior with __init__:": [[186, "further-customizing-exception-behavior-with-init"], [315, "further-customizing-exception-behavior-with-init"]], "Python Custom Exception Best Practices": [[186, "python-custom-exception-best-practices"], [315, "python-custom-exception-best-practices"]], "User Defined Exceptions vs. Built-In Exceptions": [[186, "user-defined-exceptions-vs-built-in-exceptions"], [315, "user-defined-exceptions-vs-built-in-exceptions"]], "YAGNI: You Ain\u2019t Gonna Need It": [[186, "yagni-you-ain-t-gonna-need-it"], [315, "yagni-you-ain-t-gonna-need-it"]], "Design Decisions": [[186, "design-decisions"], [315, "design-decisions"]], "Installing a Python and Git Development Environment on Windows, Part 2": [[191, "installing-a-python-and-git-development-environment-on-windows-part-2"]], "Installing a Python and Git Development Environment on Windows": [[192, "installing-a-python-and-git-development-environment-on-windows"]], "Installing Pyenv on a Mac (A Setup Guide With Usage Tips)": [[193, "installing-pyenv-on-a-mac-a-setup-guide-with-usage-tips"]], "Introducing Sage Math:  Symbolic Math Software In Python": [[194, "introducing-sage-math-symbolic-math-software-in-python"]], "Is Python Free?  Yes!  We List the Best Free Tools": [[195, "is-python-free-yes-we-list-the-best-free-tools"]], "Is Python Slow?  Separating the Myths from the Facts": [[196, "is-python-slow-separating-the-myths-from-the-facts"]], "Is Julia Easy to Learn for Python Developers?": [[197, "is-julia-easy-to-learn-for-python-developers"]], "Jupyter Lite:  Python in the Browser with Serverless Jupyter": [[198, "jupyter-lite-python-in-the-browser-with-serverless-jupyter"]], "Jupyter Notebook: A Complete Introduction": [[199, "jupyter-notebook-a-complete-introduction"]], "Jupyter Password: Easy Notebook and Lab Configuration": [[200, "jupyter-password-easy-notebook-and-lab-configuration"]], "Using the Kaggle Datasets API in Python": [[201, "using-the-kaggle-datasets-api-in-python"]], "Large Data Sets in Python:  Pandas And The Alternatives": [[202, "large-data-sets-in-python-pandas-and-the-alternatives"]], "Learn Python: Tutorials from Beginner to Expert": [[203, "learn-python-tutorials-from-beginner-to-expert"]], "Learning C++ and Python: The Perfect Duo for Success": [[204, "learning-c-and-python-the-perfect-duo-for-success"]], "Learning Git: What To Know When You\u2019re a Beginner": [[205, "learning-git-what-to-know-when-you-re-a-beginner"]], "Mastering The Take-Home Coding Exercise: A Simple Checklist To Make It Shine": [[206, "mastering-the-take-home-coding-exercise-a-simple-checklist-to-make-it-shine"]], "Derivatives Review and Practice": [[207, "derivatives-review-and-practice"]], "Review:": [[207, "review"]], "For fun": [[207, "for-fun"]], "Double and Half Angle Formulas (Summary)": [[208, "double-and-half-angle-formulas-summary"]], "Double Angle": [[208, "double-angle"]], "Half Angle": [[208, "half-angle"]], "New Identities": [[208, "new-identities"]], "Even and Odd and Pythagorean Identities": [[209, "even-and-odd-and-pythagorean-identities"]], "Even and Odd Identities": [[209, "even-and-odd-identities"]], "Pythagorean Identities": [[209, "pythagorean-identities"]], "First divide by sin^2\\theta": [[209, "first-divide-by-sin-2-theta"]], "Next divide by cos^2\\theta": [[209, "next-divide-by-cos-2-theta"]], "Three main ones to remember are below:": [[209, "three-main-ones-to-remember-are-below"]], "Math Journal": [[210, "math-journal"]], "How I Learned the Unit Circle": [[211, "how-i-learned-the-unit-circle"]], "The Method": [[211, "the-method"]], "Jogging My Memory With a Neat Desmos Unit Circle": [[211, "jogging-my-memory-with-a-neat-desmos-unit-circle"]], "Recalling Some Properties Using Matplotlib": [[211, "recalling-some-properties-using-matplotlib"]], "Historical Note": [[211, "historical-note"]], "Syllabus Goals": [[212, "syllabus-goals"]], "Different Types of Limits:": [[212, "different-types-of-limits"]], "For rational polynomials:": [[212, "for-rational-polynomials"]], "Definition of continuity": [[212, "definition-of-continuity"]], "Weekly review": [[212, "weekly-review"]], "Limits Notes (Original)": [[212, "limits-notes-original"]], "Example": [[212, "example"]], "Interesting Linear Algebra Stuff": [[213, "interesting-linear-algebra-stuff"]], "Logarithms": [[214, "logarithms"]], "Easy examples": [[214, "easy-examples"], [214, "id1"], [215, "easy-examples"]], "Weirder logs": [[214, "weirder-logs"], [215, "weirder-logs"]], "Natural logs": [[214, "natural-logs"], [215, "natural-logs"]], "Even weirder": [[214, "even-weirder"], [215, "even-weirder"]], "Log Properties": [[214, "log-properties"], [215, "log-properties"]], "More solving": [[214, "more-solving"], [215, "more-solving"]], "Logarithms and Exponents": [[215, "logarithms-and-exponents"]], "Nancy Pi Notes": [[215, "nancy-pi-notes"]], "Professor Leonard": [[215, "professor-leonard"]], "Graphs of Exponential Functions": [[215, "graphs-of-exponential-functions"]], "Solving Exponential Equations with Common Bases": [[215, "solving-exponential-equations-with-common-bases"]], "Math 271 Test 1 Problems": [[216, "math-271-test-1-problems"]], "HARD LIST": [[216, "hard-list"]], "For this section see notes 1/23/24": [[216, "for-this-section-see-notes-1-23-24"]], "For this section see notes 1/24/24": [[216, "for-this-section-see-notes-1-24-24"]], "Problems to Work On": [[217, "problems-to-work-on"]], "Teacher Meeting": [[217, "teacher-meeting"]], "Independently": [[217, "independently"]], "Johnsin University": [[218, "johnsin-university"]], "Current Work and Important Dates": [[218, "current-work-and-important-dates"]], "Study Habits": [[218, "study-habits"]], "Using the Unit Circle in Trigonometry": [[219, "using-the-unit-circle-in-trigonometry"]], "SOH CAH TOA": [[219, "soh-cah-toa"]], "Quadrant Angles": [[219, "quadrant-angles"]], "Trig functions": [[220, "trig-functions"]], "Domain and Range": [[220, "domain-and-range"]], "Periods and Related Identities": [[220, "periods-and-related-identities"]], "Reciprocal Identities": [[220, "reciprocal-identities"]], "Math Notes": [[221, "math-notes"]], "Matplotlib Coordinates:  Graphing Math Functions in Python": [[223, "matplotlib-coordinates-graphing-math-functions-in-python"]], "Matplotlib vs. Seaborn": [[224, "matplotlib-vs-seaborn"]], "The Middle Way of Software Development": [[225, "the-middle-way-of-software-development"]], "Your Header here": [[226, "your-header-here"]], "New for 2022:  Python, Git, GitHub BootCamp Course": [[227, "new-for-2022-python-git-github-bootcamp-course"]], "Newsletter, 11/15/2022": [[228, "newsletter-11-15-2022"]], "Python Newsletter, January 17, 2023": [[229, "python-newsletter-january-17-2023"]], "Node Starter Projects": [[230, "node-starter-projects"]], "Using Postgres, Python, and Docker": [[231, "using-postgres-python-and-docker"]], "NumPy Examples \u2013  Practice Questions Make You an Expert": [[232, "numpy-examples-practice-questions-make-you-an-expert"]], "Fast S3 Updates with Golang and Goroutines": [[233, "fast-s3-updates-with-golang-and-goroutines"]], "How to Use the Pandas Groupby Method?": [[234, "how-to-use-the-pandas-groupby-method"]], "Pandas Examples and Review Questions to Make You an Expert": [[235, "pandas-examples-and-review-questions-to-make-you-an-expert"]], "Pip vs. Conda: Two Top Tools for Managing Python Packages": [[236, "pip-vs-conda-two-top-tools-for-managing-python-packages"]], "Pip vs Pipenv: Which is better and which to learn first?": [[237, "pip-vs-pipenv-which-is-better-and-which-to-learn-first"]], "Programming and Math:  A Brief Translation Guide": [[238, "programming-and-math-a-brief-translation-guide"]], "PyCharm vs. VS Code: Which Is Better and Why?": [[239, "pycharm-vs-vs-code-which-is-better-and-why"]], "Is PyPy a Faster Version of Python?": [[240, "is-pypy-a-faster-version-of-python"]], "Python and AWS:  Getting Started with the Cloud Development Kit (CDK)": [[241, "python-and-aws-getting-started-with-the-cloud-development-kit-cdk"]], "Python for AWS Lambda Functions: A Beginner\u2019s Guide": [[242, "python-for-aws-lambda-functions-a-beginner-s-guide"]], "Python and React:  Running Python Online in a React App": [[243, "python-and-react-running-python-online-in-a-react-app"]], "A Coding Boot Camp Run As a Cooperative": [[244, "a-coding-boot-camp-run-as-a-cooperative"]], "Python Chemistry:  SymPy and ChemPy": [[245, "python-chemistry-sympy-and-chempy"]], "Python Chemistry:  SymPy and ChemPy{\u2018Ca(OH)2\u2019: 3, \u2018H3(PO4)\u2019: 2}": [[245, "python-chemistry-sympy-and-chempy-ca-oh-2-3-h3-po4-2"]], "Python Configuration: Top Built-In and Third-Party Libraries": [[246, "python-configuration-top-built-in-and-third-party-libraries"]], "Python Data Analysis Starter Project": [[247, "python-data-analysis-starter-project"]], "Python Dataclass:  Easily Automate Class Best Practices": [[248, "python-dataclass-easily-automate-class-best-practices"]], "Python Date and Time Functions: The Complete Tutorial": [[249, "python-date-and-time-functions-the-complete-tutorial"]], "Python Dictionaries for Beginners:  A Complete Lesson With Exercises": [[250, "python-dictionaries-for-beginners-a-complete-lesson-with-exercises"]], "Python Docker Examples:  SageMath in a Container": [[251, "python-docker-examples-sagemath-in-a-container"]], "Python Errors: Exception Handling from Beginner to Expert": [[252, "python-errors-exception-handling-from-beginner-to-expert"]], "Find Files in Python:  Complete Cookbook for Searching Files and Folders": [[253, "find-files-in-python-complete-cookbook-for-searching-files-and-folders"]], "The Python For Loop:  Complete Tutorial and Practice Exercises": [[254, "the-python-for-loop-complete-tutorial-and-practice-exercises"]], "Python Format Strings: Beginner to Expert": [[255, "python-format-strings-beginner-to-expert"]], "Python Function Arguments: The Complete Guide": [[256, "python-function-arguments-the-complete-guide"]], "Python Function Best Practices": [[257, "python-function-best-practices"]], "Python Function Exercises With Solutions": [[258, "python-function-exercises-with-solutions"]], "Python Functions: Introduction to the Series": [[259, "python-functions-introduction-to-the-series"]], "Python Generator Functions: The Complete Guide": [[260, "python-generator-functions-the-complete-guide"]], "A Tech Career in Python:  From Hobbyist to Professional": [[261, "a-tech-career-in-python-from-hobbyist-to-professional"]], "Python Indexing and Slicing: Complete Tutorial With Hands-On Exercises": [[262, "python-indexing-and-slicing-complete-tutorial-with-hands-on-exercises"]], "Python JSON: Easily Work With  Dictionaries, Files, and Custom Objects": [[263, "python-json-easily-work-with-dictionaries-files-and-custom-objects"]], "Python Lists for Beginners: A Complete Lesson With Exercises": [[264, "python-lists-for-beginners-a-complete-lesson-with-exercises"]], "Python Lists vs. Arrays:  How to Choose Between Them": [[265, "python-lists-vs-arrays-how-to-choose-between-them"]], "Python Matrix Multiplication: NumPy, SymPy, and the Math Behind It": [[266, "python-matrix-multiplication-numpy-sympy-and-the-math-behind-it"]], "Python Newsletter February 22, 2023": [[267, "python-newsletter-february-22-2023"]], "Python Newsletter, January 31, 2023": [[268, "python-newsletter-january-31-2023"]], "Python Practice:  More Python on Docker Project Ideas": [[269, "python-practice-more-python-on-docker-project-ideas"]], "Python Operators:  The Building Blocks of Successful Code": [[270, "python-operators-the-building-blocks-of-successful-code"]], "Python Package Example: Setuptools": [[271, "python-package-example-setuptools"]], "Python, Postgres, and Docker:  Running Fast, Meaningful Unit Tests": [[272, "python-postgres-and-docker-running-fast-meaningful-unit-tests"]], "What Are Good Projects To Practice In Python?": [[273, "what-are-good-projects-to-practice-in-python"]], "Python Parquet and Arrow:  Using PyArrow with Pandas": [[274, "python-parquet-and-arrow-using-pyarrow-with-pandas"]], "Python Parquet and Arrow:  Using PyArrow with Pandaspickup: [[2019-03-23 20:21:09.000000000,2019-03-04 16:11:55.000000000,2019-03-27 17:53:01.000000000,2019-03-10 01:23:59.000000000,2019-03-30 13:27:42.000000000]]": [[274, "python-parquet-and-arrow-using-pyarrow-with-pandaspickup-2019-03-23-20-21-09-000000000-2019-03-04-16-11-55-000000000-2019-03-27-17-53-01-000000000-2019-03-10-01-23-59-000000000-2019-03-30-13-27-42-000000000"]], "Python Shell Programming: Overview and Top Tools": [[275, "python-shell-programming-overview-and-top-tools"]], "Python String Examples:  Tutorial and Practice Exercises": [[276, "python-string-examples-tutorial-and-practice-exercises"]], "Python Virtual Environments: Video Tutorial": [[277, "python-virtual-environments-video-tutorial"]], "Python vs. MATLAB: Price, Performance, Features": [[278, "python-vs-matlab-price-performance-features"]], "Python With: Using and Writing Context Managers in Python": [[279, "python-with-using-and-writing-context-managers-in-python"]], "Random Python:  Secrets and Random Values Made Easy": [[280, "random-python-secrets-and-random-values-made-easy"]], "Charlotte Secular Sobriety": [[281, "charlotte-secular-sobriety"]], "Judgements in Sobriety": [[282, "judgements-in-sobriety"]], "The Steep Early Hill and Beyond": [[282, "the-steep-early-hill-and-beyond"]], "What Works: Program or Fellowship?": [[283, "what-works-program-or-fellowship"]], "Recovery": [[284, "recovery"]], "Run Python Online: Watch the Video to Learn How": [[285, "run-python-online-watch-the-video-to-learn-how"]], "Running the CMake Tutorial in a VS Code Dev Container": [[286, "running-the-cmake-tutorial-in-a-vs-code-dev-container"]], "SciPy vs. SymPy for Symbolic Math:  Let Us Never Speak of This Again": [[287, "scipy-vs-sympy-for-symbolic-math-let-us-never-speak-of-this-again"]], "Selecting Data in Pandas": [[288, "selecting-data-in-pandas"]], "Simplicity is your Friend:  PyCharm vs. VS Code for Teaching Programming": [[289, "simplicity-is-your-friend-pycharm-vs-vs-code-for-teaching-programming"]], "First Principles of Productive Minimalism": [[290, "first-principles-of-productive-minimalism"]], "Giving Up Social Media, One Month Later": [[291, "giving-up-social-media-one-month-later"]], "Mindfulness vs. Technology": [[292, "mindfulness-vs-technology"]], "Social Media Withdrawal": [[293, "social-media-withdrawal"]], "The Top Mistakes People Make When Quitting Social Media": [[294, "the-top-mistakes-people-make-when-quitting-social-media"]], "Social Media": [[295, "social-media"]], "Using SQL With Pandas:  PandasSQL and IPython-SQL": [[296, "using-sql-with-pandas-pandassql-and-ipython-sql"]], "SQLAlchemy DataClass Example": [[297, "sqlalchemy-dataclass-example"]], "SymPy:  Solving Math Equations in Python and Jupyter": [[298, "sympy-solving-math-equations-in-python-and-jupyter"]], "Teach Yourself Math: Resources, Techniques, and Approach": [[299, "teach-yourself-math-resources-techniques-and-approach"]], "Test Dir": [[300, "test-dir"]], "The Function In Python: An Introductory Tutorial": [[301, "the-function-in-python-an-introductory-tutorial"]], "The Marketing Genius of 100 Days of Code": [[302, "the-marketing-genius-of-100-days-of-code"]], "Thonny: The Most Beginner Friendly Python IDE": [[303, "thonny-the-most-beginner-friendly-python-ide"]], "Understanding Python Types and Type Hints": [[304, "understanding-python-types-and-type-hints"]], "Useful Collection Classes in Python You May Not Know": [[305, "useful-collection-classes-in-python-you-may-not-know"]], "Using LaTeX In Python": [[306, "using-latex-in-python"]], "PySpark and Parquet: Elegant Python DataFrames and SQL": [[307, "pyspark-and-parquet-elegant-python-dataframes-and-sql"]], "Using TestNG With Spring": [[308, "using-testng-with-spring"]], "Simple Vagrant Ansible Local Example": [[309, "simple-vagrant-ansible-local-example"]], "What Are pyc Files and pycache folders In Python ?": [[310, "what-are-pyc-files-and-pycache-folders-in-python"]], "What Is a Python Package?": [[311, "what-is-a-python-package"]], "Wherein I Make an Account of My Whereabouts": [[312, "wherein-i-make-an-account-of-my-whereabouts"]], "Why Is Python Popular?# Why Is Python Popular": [[313, "why-is-python-popular-why-is-python-popular"]], "Writing a Python Custom Exception": [[315, "writing-a-python-custom-exception"]], "Stop Being a Junior Developer.  No, Seriously, Cut It Out.": [[316, "stop-being-a-junior-developer-no-seriously-cut-it-out"]], "Your First Programming Language Should be Python, Not JavaScript": [[317, "your-first-programming-language-should-be-python-not-javascript"]], "The Strange Zen of 100 Days of Python": [[318, "the-strange-zen-of-100-days-of-python"]], "Site Index": [[2, "site-index"]], "Site Index:": [[2, null]], "Featured Articles": [[32, "featured-articles"]], "Math \u2229 Programming": [[190, "math-programming"]], "On Being The World\u2019s Oldest Math Major": [[314, "on-being-the-world-s-oldest-math-major"]]}, "indexentries": {}})